<?xml version="1.0" encoding="UTF-8" standalone="no"?><!--
  ~ Copyright 2011 the original author or authors.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~      http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  --><book id="dsl">
    <bookinfo>
        <title>Gradle Build Language Reference</title>
        <titleabbrev>Gradle DSL</titleabbrev>
    </bookinfo>

    <section>
        <title>Introduction</title>
        <para>This reference guide describes the various types which make up the Gradle build language, or DSL.</para>
    </section>

    <section>
        <title>Some basics</title>
        <para>There are a few basic concepts that you should understand, which will help you write Gradle scripts.</para>

        <para>First, Gradle scripts are <firstterm>configuration scripts</firstterm>. As the script executes, it
            configures an object of a particular type. For example, as a build script executes, it configures an
            object of type <apilink class="org.gradle.api.Project"/>. This object is called the <firstterm>delegate object</firstterm>
            of the script. The following table shows the delegate for each type of Gradle script.
        </para>

        <table>
            <title>Script delegates</title>
            <thead>
                <tr>
                    <td>Type of script</td>
                    <td>Delegates to instance of</td>
                </tr>
            </thead>
            <tr>
                <td>Build script</td>
                <td>
                    <apilink class="org.gradle.api.Project"/>
                </td>
            </tr>
            <tr>
                <td>Init script</td>
                <td>
                    <apilink class="org.gradle.api.invocation.Gradle"/>
                </td>
            </tr>
            <tr>
                <td>Settings script</td>
                <td>
                    <apilink class="org.gradle.api.initialization.Settings"/>
                </td>
            </tr>
        </table>

        <para>The properties and methods of the delegate object are available for you to use in the script.</para>

        <para>Second, each Gradle script implements the <apilink class="org.gradle.api.Script"/> interface. This
            interface defines a number of properties and methods which you can use in the script.
        </para>
    </section>

    <!--
      -
      - 1. Adding new types:
      - There are 2 ways to include a new types to this guide:
      -     * Types referenced by a property are automatically included, if there is a corresponding ${typename}.xml in the DSL source directory.
      -     * Types listed in one of the following tables are included. There must be a corresponding ${typename}.xml in the DSL source directory.
      -
      - 2. Adding new sections:
      - The section title should end with 'types' (see AssembleDslDocTask.mergeContent)
      -
      - Add attribute condition='noNavBar' to the section element if the section should not appear in the nav bar.
      -->

    <section>
        <title>Build script structure</title>
        <para>A build script is made up of zero or more statements and script blocks. Statements can include method calls,
            property assignments, and local variable definitions. A script block is a method call which takes a closure
            as a parameter. The closure is treated as a <firstterm>configuration closure</firstterm> which configures
            some delegate object as it executes. The top level script blocks are listed below.</para>
        <table role="dslTypes"><thead><tr><td>Block</td><td>Description</td></tr></thead>
            <title>Build script blocks</title>
            <tr><td><link linkend="org.gradle.api.Project:allprojects(groovy.lang.Closure)"><literal>allprojects { }</literal></link></td><td><para>Configures this project and each of its sub-projects.</para></td></tr>
            <tr><td><link linkend="org.gradle.api.Project:artifacts(groovy.lang.Closure)"><literal>artifacts { }</literal></link></td><td><para>Configures the published artifacts for this project.

</para></td></tr>
            <tr><td><link linkend="org.gradle.api.Project:buildscript(groovy.lang.Closure)"><literal>buildscript { }</literal></link></td><td><para>Configures the build script classpath for this project.

</para></td></tr>
            <tr><td><link linkend="org.gradle.api.Project:configurations(groovy.lang.Closure)"><literal>configurations { }</literal></link></td><td><para>Configures the dependency configurations for this project.

</para></td></tr>
            <tr><td><link linkend="org.gradle.api.Project:dependencies(groovy.lang.Closure)"><literal>dependencies { }</literal></link></td><td><para>Configures the dependencies for this project.

</para></td></tr>
            <tr><td><link linkend="org.gradle.api.Project:repositories(groovy.lang.Closure)"><literal>repositories { }</literal></link></td><td><para>Configures the repositories for this project.

</para></td></tr>
            <tr><td><link linkend="org.gradle.api.Project:subprojects(groovy.lang.Closure)"><literal>subprojects { }</literal></link></td><td><para>Configures the sub-projects of this project.</para></td></tr>
            <tr><td><link linkend="org.gradle.api.Project:publishing(groovy.lang.Closure)"><literal>publishing { }</literal></link></td><td><para>Configures the <apilink class="org.gradle.api.publish.PublishingExtension"/> added by the publishing plugin.</para></td></tr>
        </table>
        <para>A build script is also a Groovy script, and so can contain those elements allowed in a Groovy script,
            such as method definitions and class definitions.
        </para>
    </section>

    <section>
        <title>Core types</title>
        <para>Listed below are some of the central types which are used in Gradle scripts:</para>
        <table role="dslTypes"><thead><tr><td>Type</td><td>Description</td></tr></thead>
            <title>Core types</title>
            <tr><td><link linkend="org.gradle.api.Project"><literal>Project</literal></link></td><td><para>This interface is the main API you use to interact with Gradle from your build file. From a <literal>Project</literal>,
you have programmatic access to all of Gradle's features.</para></td></tr>
            <tr><td><link linkend="org.gradle.api.Task"><literal>Task</literal></link></td><td><para>A <literal>Task</literal> represents a single atomic piece of work for a build, such as compiling classes or generating
javadoc.</para></td></tr>
            <tr><td><link linkend="org.gradle.api.invocation.Gradle"><literal>Gradle</literal></link></td><td><para>Represents an invocation of Gradle.

</para></td></tr>
            <tr><td><link linkend="org.gradle.api.initialization.Settings"><literal>Settings</literal></link></td><td><para>Declares the configuration required to instantiate and configure the hierarchy of <apilink class="org.gradle.api.Project"/> instances which are to participate in a build.</para></td></tr>
            <tr><td><link linkend="org.gradle.api.initialization.IncludedBuild"><literal>IncludedBuild</literal></link></td><td><para>A build that is included in the composite.</para></td></tr>
            <tr><td><link linkend="org.gradle.api.file.ProjectLayout"><literal>ProjectLayout</literal></link></td><td><para>Provides access to several important locations for a project.

</para></td></tr>
            <tr><td><link linkend="org.gradle.api.file.BuildLayout"><literal>BuildLayout</literal></link></td><td><para>Provides access to important locations for a Gradle build.
</para></td></tr>
            <tr><td><link linkend="org.gradle.api.Script"><literal>Script</literal></link></td><td><para>This interface is implemented by all Gradle Groovy DSL scripts to add in some Gradle-specific methods. As your compiled
script class will implement this interface, you can use the methods and properties declared by this interface
directly in your script.</para></td></tr>
            <tr><td><link linkend="org.gradle.api.tasks.SourceSet"><literal>SourceSet</literal></link></td><td><para>A <literal>SourceSet</literal> represents a logical group of Java source and resource files. They
are covered in more detail in the
<ulink url="https://docs.gradle.org/current/userguide/building_java_projects.html#sec:java_source_sets">user manual</ulink>.
</para></td></tr>
            <tr><td><link linkend="org.gradle.api.tasks.SourceSetOutput"><literal>SourceSetOutput</literal></link></td><td><para>A collection of all output directories (compiled classes, processed resources, etc.) - notice that <apilink class="org.gradle.api.tasks.SourceSetOutput"/> extends <apilink class="org.gradle.api.file.FileCollection"/>.
</para></td></tr>
            <tr><td><link linkend="org.gradle.api.file.SourceDirectorySet"><literal>SourceDirectorySet</literal></link></td><td><para>A <literal>SourceDirectorySet</literal> represents a set of source files composed from a set of source directories, along
with associated include and exclude patterns.
</para></td></tr>
            <tr><td><link linkend="org.gradle.api.artifacts.Configuration"><literal>Configuration</literal></link></td><td><para>A <literal>Configuration</literal> represents a group of artifacts and their dependencies.
Find more information about declaring dependencies to a configuration
or about managing configurations in docs for <apilink class="org.gradle.api.artifacts.ConfigurationContainer"/>
</para></td></tr>
            <tr><td><link linkend="org.gradle.api.artifacts.ConsumableConfiguration"><literal>ConsumableConfiguration</literal></link></td><td><para>A <apilink class="org.gradle.api.artifacts.Configuration"/> which can be consumed via Publishing and Dependency Management.</para></td></tr>
            <tr><td><link linkend="org.gradle.api.artifacts.ResolvableConfiguration"><literal>ResolvableConfiguration</literal></link></td><td><para>A <apilink class="org.gradle.api.artifacts.Configuration"/> which performs dependency resolution to build dependency graphs
and resolve artifacts.</para></td></tr>
            <tr><td><link linkend="org.gradle.api.artifacts.DependencyScopeConfiguration"><literal>DependencyScopeConfiguration</literal></link></td><td><para>A <apilink class="org.gradle.api.artifacts.Configuration"/> which collects dependencies, dependency constraints, and exclude rules.</para></td></tr>
            <tr><td><link linkend="org.gradle.api.artifacts.ResolutionStrategy"><literal>ResolutionStrategy</literal></link></td><td><para>Defines the strategies around dependency resolution.
For example, forcing certain dependency versions, substitutions, conflict resolutions or snapshot timeouts.
</para></td></tr>
            <tr><td><link linkend="org.gradle.api.artifacts.query.ArtifactResolutionQuery"><literal>ArtifactResolutionQuery</literal></link></td><td><para>A builder to construct a query that can resolve selected software artifacts of the specified components.
</para></td></tr>
            <tr><td><link linkend="org.gradle.api.artifacts.ComponentSelection"><literal>ComponentSelection</literal></link></td><td><para>Represents a tuple of the component selector of a module and a candidate version
to be evaluated in a component selection rule.</para></td></tr>
            <tr><td><link linkend="org.gradle.api.artifacts.ComponentSelectionRules"><literal>ComponentSelectionRules</literal></link></td><td><para>Represents a container for component selection rules.  Rules can be applied as part of the
resolutionStrategy of a configuration and individual components can be explicitly accepted
or rejected by rule.  Components that are neither accepted or rejected will be subject to
the default version matching strategies.

</para></td></tr>
            <tr><td><link linkend="org.gradle.api.artifacts.dsl.DependencyCollector"><literal>DependencyCollector</literal></link></td><td><para>A <literal>DependencyCollector</literal> is used as part of a dependencies block in the DSL. A collector implements
a single dependency scope and exposes the declared dependencies on <apilink class="org.gradle.api.artifacts.dsl.DependencyCollector" method="getDependencies()"/>.</para></td></tr>
            <tr><td><link linkend="org.gradle.api.plugins.ExtensionAware"><literal>ExtensionAware</literal></link></td><td><para>Objects that can be extended at runtime with other objects.

</para></td></tr>
            <tr><td><link linkend="org.gradle.api.plugins.ExtraPropertiesExtension"><literal>ExtraPropertiesExtension</literal></link></td><td><para>Additional, ad-hoc, properties for Gradle domain objects.
</para></td></tr>
            <tr><td><link linkend="org.gradle.plugin.use.PluginDependenciesSpec"><literal>PluginDependenciesSpec</literal></link></td><td><para>The DSL for declaring plugins to use in a script.
</para></td></tr>
            <tr><td><link linkend="org.gradle.plugin.use.PluginDependencySpec"><literal>PluginDependencySpec</literal></link></td><td><para>A mutable specification of a dependency on a plugin.
</para></td></tr>
            <tr><td><link linkend="org.gradle.plugin.management.PluginManagementSpec"><literal>PluginManagementSpec</literal></link></td><td><para>Configures how plugins are resolved.</para></td></tr>
            <tr><td><link linkend="org.gradle.api.provider.ProviderFactory"><literal>ProviderFactory</literal></link></td><td><para>A factory for creating instances of <apilink class="org.gradle.api.provider.Provider"/>.

</para></td></tr>
            <tr><td><link linkend="org.gradle.api.resources.ResourceHandler"><literal>ResourceHandler</literal></link></td><td><para>Provides access to resource-specific utility methods, for example factory methods that create various resources.</para></td></tr>
            <tr><td><link linkend="org.gradle.api.resources.TextResourceFactory"><literal>TextResourceFactory</literal></link></td><td><para>Creates <literal>TextResource</literal>s backed by sources such as strings, files, and archive entries.

</para></td></tr>
            <tr><td><link linkend="org.gradle.work.InputChanges"><literal>InputChanges</literal></link></td><td><para>Provides access to any input files that need to be processed by an incremental work action.

</para></td></tr>
            <tr><td><link linkend="org.gradle.api.distribution.Distribution"><literal>Distribution</literal></link></td><td><para>A distribution allows to bundle an application or a library including dependencies, sources...</para></td></tr>
        </table>
    </section>

    <section>
        <title>Publishing types</title>
        <para>Listed below are the types used to configure publishing:</para>
        <table role="dslTypes"><thead><tr><td>Type</td><td>Description</td></tr></thead>
            <title>Publishing types</title>
            <tr><td><link linkend="org.gradle.api.publish.PublishingExtension"><literal>PublishingExtension</literal></link></td><td><para>The configuration of how to "publish" the different components of a project.</para></td></tr>
            <tr><td><link linkend="org.gradle.api.publish.ivy.IvyPublication"><literal>IvyPublication</literal></link></td><td><para>An <literal>IvyPublication</literal> is the representation/configuration of how Gradle should publish something in Ivy format, to an Ivy repository.

You directly add a named Ivy publication the project's <literal>publishing.publications</literal> container by providing <apilink class="org.gradle.api.publish.ivy.IvyPublication"/> as the type.
</para></td></tr>
            <tr><td><link linkend="org.gradle.api.publish.ivy.IvyArtifact"><literal>IvyArtifact</literal></link></td><td><para>An artifact published as part of a <apilink class="org.gradle.api.publish.ivy.IvyPublication"/>.</para></td></tr>
            <tr><td><link linkend="org.gradle.api.publish.ivy.IvyArtifactSet"><literal>IvyArtifactSet</literal></link></td><td><para>A Collection of <apilink class="org.gradle.api.publish.ivy.IvyArtifact"/>s to be included in an <apilink class="org.gradle.api.publish.ivy.IvyPublication"/>.

Being a <apilink class="org.gradle.api.DomainObjectSet"/>, an <literal>IvyArtifactSet</literal> provides convenient methods for querying, filtering, and applying actions to the set of <apilink class="org.gradle.api.publish.ivy.IvyArtifact"/>s.

</para></td></tr>
            <tr><td><link linkend="org.gradle.api.publish.ivy.IvyModuleDescriptorSpec"><literal>IvyModuleDescriptorSpec</literal></link></td><td><para>The descriptor of any Ivy publication.
</para></td></tr>
            <tr><td><link linkend="org.gradle.api.publish.ivy.IvyModuleDescriptorAuthor"><literal>IvyModuleDescriptorAuthor</literal></link></td><td><para>An author of an Ivy publication.</para></td></tr>
            <tr><td><link linkend="org.gradle.api.publish.ivy.IvyModuleDescriptorLicense"><literal>IvyModuleDescriptorLicense</literal></link></td><td><para>A license of an Ivy publication.</para></td></tr>
            <tr><td><link linkend="org.gradle.api.publish.ivy.IvyModuleDescriptorDescription"><literal>IvyModuleDescriptorDescription</literal></link></td><td><para>The description of an Ivy publication.</para></td></tr>
            <tr><td><link linkend="org.gradle.api.publish.maven.MavenPublication"><literal>MavenPublication</literal></link></td><td><para>A <literal>MavenPublication</literal> is the representation/configuration of how Gradle should publish something in Maven format.

You directly add a named Maven publication the project's <literal>publishing.publications</literal> container by providing <apilink class="org.gradle.api.publish.maven.MavenPublication"/> as the type.
</para></td></tr>
            <tr><td><link linkend="org.gradle.api.publish.maven.MavenArtifact"><literal>MavenArtifact</literal></link></td><td><para>An artifact published as part of a <apilink class="org.gradle.api.publish.maven.MavenPublication"/>.</para></td></tr>
            <tr><td><link linkend="org.gradle.api.publish.maven.MavenArtifactSet"><literal>MavenArtifactSet</literal></link></td><td><para>A Collection of <apilink class="org.gradle.api.publish.maven.MavenArtifact"/>s to be included in a <apilink class="org.gradle.api.publish.maven.MavenPublication"/>.

Being a <apilink class="org.gradle.api.DomainObjectSet"/>, a <literal>MavenArtifactSet</literal> provides convenient methods for querying, filtering, and applying actions to the set of <apilink class="org.gradle.api.publish.maven.MavenArtifact"/>s.

</para></td></tr>
            <tr><td><link linkend="org.gradle.api.publish.maven.MavenPom"><literal>MavenPom</literal></link></td><td><para>The POM for a Maven publication.

</para></td></tr>
            <tr><td><link linkend="org.gradle.api.publish.maven.MavenPomCiManagement"><literal>MavenPomCiManagement</literal></link></td><td><para>The CI management system of a Maven publication.</para></td></tr>
            <tr><td><link linkend="org.gradle.api.publish.maven.MavenPomContributor"><literal>MavenPomContributor</literal></link></td><td><para>A contributor of a Maven publication.</para></td></tr>
            <tr><td><link linkend="org.gradle.api.publish.maven.MavenPomContributorSpec"><literal>MavenPomContributorSpec</literal></link></td><td><para>Allows to add contributors of a Maven publication.</para></td></tr>
            <tr><td><link linkend="org.gradle.api.publish.maven.MavenPomDeveloper"><literal>MavenPomDeveloper</literal></link></td><td><para>A developer of a Maven publication.</para></td></tr>
            <tr><td><link linkend="org.gradle.api.publish.maven.MavenPomDeveloperSpec"><literal>MavenPomDeveloperSpec</literal></link></td><td><para>Allows to add developers to a Maven publication.</para></td></tr>
            <tr><td><link linkend="org.gradle.api.publish.maven.MavenPomDistributionManagement"><literal>MavenPomDistributionManagement</literal></link></td><td><para>The distribution management configuration of a Maven publication.</para></td></tr>
            <tr><td><link linkend="org.gradle.api.publish.maven.MavenPomIssueManagement"><literal>MavenPomIssueManagement</literal></link></td><td><para>The issue management system of a Maven publication.</para></td></tr>
            <tr><td><link linkend="org.gradle.api.publish.maven.MavenPomLicense"><literal>MavenPomLicense</literal></link></td><td><para>A license of a Maven publication.</para></td></tr>
            <tr><td><link linkend="org.gradle.api.publish.maven.MavenPomLicenseSpec"><literal>MavenPomLicenseSpec</literal></link></td><td><para>Allows to add licenses to a Maven publication.</para></td></tr>
            <tr><td><link linkend="org.gradle.api.publish.maven.MavenPomMailingList"><literal>MavenPomMailingList</literal></link></td><td><para>A mailing list of a Maven publication.</para></td></tr>
            <tr><td><link linkend="org.gradle.api.publish.maven.MavenPomMailingListSpec"><literal>MavenPomMailingListSpec</literal></link></td><td><para>Allows to add mailing lists to a Maven publication.</para></td></tr>
            <tr><td><link linkend="org.gradle.api.publish.maven.MavenPomOrganization"><literal>MavenPomOrganization</literal></link></td><td><para>The organization of a Maven publication.</para></td></tr>
            <tr><td><link linkend="org.gradle.api.publish.maven.MavenPomRelocation"><literal>MavenPomRelocation</literal></link></td><td><para>The relocation information of a Maven publication that has been moved
to a new group and/or artifact ID.</para></td></tr>
            <tr><td><link linkend="org.gradle.api.publish.maven.MavenPomScm"><literal>MavenPomScm</literal></link></td><td><para>The SCM (source control management) of a Maven publication.</para></td></tr>
        </table>
    </section>

    <section>
        <title>Container types</title>
        <para>Container types that handle various declarative elements (e.g. dependencies, configurations, artifacts, tasks, etc.):</para>
        <table role="dslTypes"><thead><tr><td>Type</td><td>Description</td></tr></thead>
            <title>Container types</title>
            <tr><td><link linkend="org.gradle.api.tasks.TaskContainer"><literal>TaskContainer</literal></link></td><td><para>A <literal>TaskContainer</literal> is responsible for managing a set of <apilink class="org.gradle.api.Task"/> instances.</para></td></tr>
            <tr><td><link linkend="org.gradle.api.artifacts.ConfigurationContainer"><literal>ConfigurationContainer</literal></link></td><td><para>A <literal>ConfigurationContainer</literal> is responsible for declaring and managing configurations. See also <apilink class="org.gradle.api.artifacts.Configuration"/>.</para></td></tr>
            <tr><td><link linkend="org.gradle.api.artifacts.dsl.RepositoryHandler"><literal>RepositoryHandler</literal></link></td><td><para>A <literal>RepositoryHandler</literal> manages a set of repositories, allowing repositories to be defined and queried.</para></td></tr>
            <tr><td><link linkend="org.gradle.api.artifacts.dsl.DependencyHandler"><literal>DependencyHandler</literal></link></td><td><para>A <literal>DependencyHandler</literal> is used to declare dependencies. Dependencies are grouped into
configurations (see <apilink class="org.gradle.api.artifacts.Configuration"/>).</para></td></tr>
            <tr><td><link linkend="org.gradle.api.artifacts.dsl.ComponentMetadataHandler"><literal>ComponentMetadataHandler</literal></link></td><td><para>Allows the build to provide rules that modify the metadata of depended-on software components.

Component metadata rules are applied in the components section of the dependencies block
<apilink class="org.gradle.api.artifacts.dsl.DependencyHandler"/> of a build script. The rules can be defined in two different ways:
</para></td></tr>
            <tr><td><link linkend="org.gradle.api.artifacts.dsl.ArtifactHandler"><literal>ArtifactHandler</literal></link></td><td><para>This class is for defining artifacts to be published and adding them to configurations. Creating publish artifacts
does not mean to create an archive. What is created is a domain object which represents a file to be published
and information on how it should be published (e.g. the name).

</para></td></tr>
        </table>
    </section>

    <section condition="noNavBar">
        <title>Authentication types</title>
        <para>Credentials and Authentication types for connecting to repositories:</para>
        <table role="dslTypes"><thead><tr><td>Type</td><td>Description</td></tr></thead>
            <title>Credential and Authentication types</title>
            <tr><td><link linkend="org.gradle.api.artifacts.repositories.AuthenticationSupported"><literal>AuthenticationSupported</literal></link></td><td><para>An artifact repository which supports username/password authentication.</para></td></tr>
            <tr><td><link linkend="org.gradle.api.credentials.Credentials"><literal>Credentials</literal></link></td><td><para>Base interface for credentials used for different authentication purposes.
(e.g authenticated <apilink class="org.gradle.api.artifacts.dsl.RepositoryHandler"/>)</para></td></tr>
            <tr><td><link linkend="org.gradle.api.artifacts.repositories.PasswordCredentials"><literal>PasswordCredentials</literal></link></td><td><para>A username/password credentials that can be used to login to password-protected remote repository.</para></td></tr>
            <tr><td><link linkend="org.gradle.api.credentials.AwsCredentials"><literal>AwsCredentials</literal></link></td><td><para>Represents credentials used to authenticate with Amazon Web Services.</para></td></tr>
            <tr><td><link linkend="org.gradle.api.credentials.HttpHeaderCredentials"><literal>HttpHeaderCredentials</literal></link></td><td><para>Credentials that can be used to login to a protected server, e.g. a remote repository by using HTTP header.

The properties used for creating credentials from a property are <literal>repoAuthHeaderName</literal> and <literal>repoAuthHeaderValue</literal>, where <literal>repo</literal> is the identity of the repository.</para></td></tr>
            <tr><td><link linkend="org.gradle.api.artifacts.repositories.AuthenticationContainer"><literal>AuthenticationContainer</literal></link></td><td><para>Container for configuring repository authentication schemes of type <apilink class="org.gradle.authentication.Authentication"/>.</para></td></tr>
            <tr><td><link linkend="org.gradle.authentication.Authentication"><literal>Authentication</literal></link></td><td><para>Base interface for transport authentication schemes.</para></td></tr>
            <tr><td><link linkend="org.gradle.authentication.http.BasicAuthentication"><literal>BasicAuthentication</literal></link></td><td><para>Authentication scheme for basic access authentication over HTTP. When using this scheme, credentials are sent preemptively.</para></td></tr>
            <tr><td><link linkend="org.gradle.authentication.http.HttpHeaderAuthentication"><literal>HttpHeaderAuthentication</literal></link></td><td><para>Authentication scheme for HTTP header authentication over HTTP.</para></td></tr>
            <tr><td><link linkend="org.gradle.authentication.http.DigestAuthentication"><literal>DigestAuthentication</literal></link></td><td><para>Authentication scheme for digest access authentication over HTTP.</para></td></tr>
        </table>
    </section>

    <section>
        <title>Build Cache types</title>
        <para>Types used to connect to and configure the build cache:</para>
        <table role="dslTypes"><thead><tr><td>Type</td><td>Description</td></tr></thead>
            <title>Build Cache types</title>
            <tr><td><link linkend="org.gradle.caching.configuration.BuildCacheConfiguration"><literal>BuildCacheConfiguration</literal></link></td><td><para>Configuration for the <ulink url="https://docs.gradle.org/current/userguide/build_cache.html">build cache</ulink> for an entire Gradle build.</para></td></tr>
            <tr><td><link linkend="org.gradle.caching.local.DirectoryBuildCache"><literal>DirectoryBuildCache</literal></link></td><td><para>Configuration object for the local directory build cache.</para></td></tr>
            <tr><td><link linkend="org.gradle.caching.http.HttpBuildCache"><literal>HttpBuildCache</literal></link></td><td><para>Configuration object for the HTTP build cache.

Cache entries are loaded via GET and stored via PUT requests.
</para></td></tr>
        </table>
    </section>

    <section>
        <title>Input Normalization types</title>
        <para>Types used to configure input normalization</para>
        <table role="dslTypes"><thead><tr><td>Type</td><td>Description</td></tr></thead>
            <title>Input Normalization types</title>
            <tr><td><link linkend="org.gradle.normalization.InputNormalizationHandler"><literal>InputNormalizationHandler</literal></link></td><td><para>Used to configure input normalization.

Currently, it is only possible to configure runtime classpath normalization.</para></td></tr>
            <tr><td><link linkend="org.gradle.normalization.InputNormalization"><literal>InputNormalization</literal></link></td><td><para>Input normalization configuration.

Input normalization is used when Gradle tries to determine if two task inputs are different.
Gradle normalizes both inputs and the inputs are considered different if and only if the normalizations are different.</para></td></tr>
            <tr><td><link linkend="org.gradle.normalization.RuntimeClasspathNormalization"><literal>RuntimeClasspathNormalization</literal></link></td><td><para>Configuration of runtime classpath normalization.

</para></td></tr>
        </table>
    </section>

    <section>
        <title>Help Task types</title>
        <para>Below are the task types that are available for every Gradle project.
            Those task types can also be declared and configured directly in the build script.
        </para>
        <table role="dslTypes"><thead><tr><td>Type</td><td>Description</td></tr></thead>
            <title>Help Task types</title>
            <tr><td><link linkend="org.gradle.api.tasks.diagnostics.TaskReportTask"><literal>TaskReportTask</literal></link></td><td><para>Displays a list of tasks in the project. An instance of this type is used when you execute the <literal>tasks</literal> task
from the command-line.</para></td></tr>
            <tr><td><link linkend="org.gradle.api.tasks.diagnostics.ProjectReportTask"><literal>ProjectReportTask</literal></link></td><td><para>Displays a list of projects in the build. An instance of this type is used when you execute the <literal>projects</literal>
task from the command-line.</para></td></tr>
            <tr><td><link linkend="org.gradle.api.tasks.diagnostics.DependencyReportTask"><literal>DependencyReportTask</literal></link></td><td><para>Displays the dependency tree for a project. An instance of this type is used when you
execute the <literal>dependencies</literal> task from the command-line.</para></td></tr>
            <tr><td><link linkend="org.gradle.api.tasks.diagnostics.DependencyInsightReportTask"><literal>DependencyInsightReportTask</literal></link></td><td><para>Generates a report that attempts to answer questions like:
</para></td></tr>
            <tr><td><link linkend="org.gradle.api.tasks.diagnostics.PropertyReportTask"><literal>PropertyReportTask</literal></link></td><td><para>Displays the properties of a project. An instance of this type is used when you execute the <literal>properties</literal> task
from the command-line.</para></td></tr>
            <tr><td><link linkend="org.gradle.api.reporting.components.ComponentReport"><literal>ComponentReport</literal></link></td><td><para>Displays some details about the software components produced by the project.</para></td></tr>
            <tr><td><link linkend="org.gradle.api.reporting.dependents.DependentComponentsReport"><literal>DependentComponentsReport</literal></link></td><td><para>Displays dependent components.</para></td></tr>
            <tr><td><link linkend="org.gradle.api.reporting.model.ModelReport"><literal>ModelReport</literal></link></td><td><para>Displays some details about the configuration model of the project.
An instance of this type is used when you execute the <literal>model</literal> task from the command-line.</para></td></tr>
            <tr><td><link linkend="org.gradle.api.tasks.diagnostics.OutgoingVariantsReportTask"><literal>OutgoingVariantsReportTask</literal></link></td><td><para>A task which reports the outgoing variants of a project on the command line.

This is useful for listing what a project produces in terms of variants and
what artifacts are attached to each variant.

Variants, in this context, must be understood as "things produced by a project
which can safely be consumed by another project".</para></td></tr>
            <tr><td><link linkend="org.gradle.api.tasks.diagnostics.ResolvableConfigurationsReportTask"><literal>ResolvableConfigurationsReportTask</literal></link></td><td><para>A task which reports the configurations of a project which can be resolved on the command line.

This is useful for determining which attributes are associated with the resolvable
configurations being used to resolve a project's dependencies.  The output can help predict which variant of
each dependency will be resolved.</para></td></tr>
            <tr><td><link linkend="org.gradle.api.tasks.diagnostics.ArtifactTransformsReportTask"><literal>ArtifactTransformsReportTask</literal></link></td><td><para>A task which reports information about the Artifact Transforms (implemented by <apilink class="org.gradle.api.artifacts.transform.TransformAction"/>) used by a project.

This is useful for investigating ambiguous transformation scenarios.  The output can help predict which transforms will need
to be modified to remove ambiguity.</para></td></tr>
        </table>
    </section>

    <section>
        <title>Task types</title>
        <para>Listed below are the various task types which are available for use in your build script:</para>
        <table role="dslTypes"><thead><tr><td>Type</td><td>Description</td></tr></thead>
            <title>Task types</title>
            <tr><td><link linkend="org.gradle.api.plugins.antlr.AntlrTask"><literal>AntlrTask</literal></link></td><td><para>Generates parsers from Antlr grammars.</para></td></tr>
            <tr><td><link linkend="org.gradle.api.tasks.diagnostics.BuildEnvironmentReportTask"><literal>BuildEnvironmentReportTask</literal></link></td><td><para>Provides information about the build environment for the project that the task is associated with.
</para></td></tr>
            <tr><td><link linkend="org.gradle.api.plugins.quality.Checkstyle"><literal>Checkstyle</literal></link></td><td><para>Runs Checkstyle against some source files.</para></td></tr>
            <tr><td><link linkend="org.gradle.api.plugins.quality.CodeNarc"><literal>CodeNarc</literal></link></td><td><para>Runs CodeNarc against some source files.</para></td></tr>
            <tr><td><link linkend="org.gradle.api.tasks.Copy"><literal>Copy</literal></link></td><td><para>Copies files into a destination directory. This task can also rename and filter files as it copies. The task
implements <apilink class="org.gradle.api.file.CopySpec"/> for specifying what to copy.

</para></td></tr>
            <tr><td><link linkend="org.gradle.jvm.application.tasks.CreateStartScripts"><literal>CreateStartScripts</literal></link></td><td><para>Creates start scripts for launching JVM applications.
</para></td></tr>
            <tr><td><link linkend="org.gradle.api.tasks.Delete"><literal>Delete</literal></link></td><td><para>Deletes files or directories. Example:</para></td></tr>
            <tr><td><link linkend="org.gradle.plugins.ear.Ear"><literal>Ear</literal></link></td><td><para>Assembles an EAR archive.</para></td></tr>
            <tr><td><link linkend="org.gradle.api.tasks.Exec"><literal>Exec</literal></link></td><td><para>Executes a command line process. Example:
</para></td></tr>
            <tr><td><link linkend="org.gradle.api.publish.ivy.tasks.GenerateIvyDescriptor"><literal>GenerateIvyDescriptor</literal></link></td><td><para>Generates an Ivy XML Module Descriptor file.</para></td></tr>
            <tr><td><link linkend="org.gradle.api.publish.maven.tasks.GenerateMavenPom"><literal>GenerateMavenPom</literal></link></td><td><para>Generates a Maven module descriptor (POM) file.</para></td></tr>
            <tr><td><link linkend="org.gradle.api.reporting.GenerateBuildDashboard"><literal>GenerateBuildDashboard</literal></link></td><td><para>Generates build dashboard report.</para></td></tr>
            <tr><td><link linkend="org.gradle.api.tasks.GradleBuild"><literal>GradleBuild</literal></link></td><td><para>Executes a Gradle build.</para></td></tr>
            <tr><td><link linkend="org.gradle.api.tasks.compile.GroovyCompile"><literal>GroovyCompile</literal></link></td><td><para>Compiles Groovy source files, and optionally, Java source files.</para></td></tr>
            <tr><td><link linkend="org.gradle.api.tasks.javadoc.Groovydoc"><literal>Groovydoc</literal></link></td><td><para>Generates HTML API documentation for Groovy source, and optionally, Java source.

</para></td></tr>
            <tr><td><link linkend="org.gradle.api.reporting.dependencies.HtmlDependencyReportTask"><literal>HtmlDependencyReportTask</literal></link></td><td><para>Generates an HTML dependency report. This report
combines the features of the ASCII dependency report and those of the ASCII
dependency insight report. For a given project, it generates a tree of the dependencies
of every configuration, and each dependency can be clicked to show the insight of
this dependency.
</para></td></tr>
            <tr><td><link linkend="org.gradle.testing.jacoco.tasks.JacocoReport"><literal>JacocoReport</literal></link></td><td><para>Task to generate HTML, Xml and CSV reports of Jacoco coverage data.</para></td></tr>
            <tr><td><link linkend="org.gradle.testing.jacoco.tasks.JacocoCoverageVerification"><literal>JacocoCoverageVerification</literal></link></td><td><para>Task for verifying code coverage metrics. Fails the task if violations are detected based on specified rules.
</para></td></tr>
            <tr><td><link linkend="org.gradle.api.tasks.bundling.Jar"><literal>Jar</literal></link></td><td><para>Assembles a JAR archive.</para></td></tr>
            <tr><td><link linkend="org.gradle.api.tasks.compile.JavaCompile"><literal>JavaCompile</literal></link></td><td><para>Compiles Java source files.

</para></td></tr>
            <tr><td><link linkend="org.gradle.api.tasks.javadoc.Javadoc"><literal>Javadoc</literal></link></td><td><para>Generates HTML API documentation for Java classes.</para></td></tr>
            <tr><td><link linkend="org.gradle.api.tasks.JavaExec"><literal>JavaExec</literal></link></td><td><para>Executes a Java application in a child process.
</para></td></tr>
            <tr><td><link linkend="org.gradle.api.plugins.quality.Pmd"><literal>Pmd</literal></link></td><td><para>Runs a set of static code analysis rules on Java source code files and generates a report of problems found.</para></td></tr>
            <tr><td><link linkend="org.gradle.language.jvm.tasks.ProcessResources"><literal>ProcessResources</literal></link></td><td><para>Copies resources from their source to their target directory, potentially processing them.
Makes sure no stale resources remain in the target directory.</para></td></tr>
            <tr><td><link linkend="org.gradle.api.publish.ivy.tasks.PublishToIvyRepository"><literal>PublishToIvyRepository</literal></link></td><td><para>Publishes an IvyPublication to an IvyArtifactRepository.</para></td></tr>
            <tr><td><link linkend="org.gradle.api.publish.maven.tasks.PublishToMavenRepository"><literal>PublishToMavenRepository</literal></link></td><td><para>Publishes a <apilink class="org.gradle.api.publish.maven.MavenPublication"/> to a <apilink class="org.gradle.api.artifacts.repositories.MavenArtifactRepository"/>.</para></td></tr>
            <tr><td><link linkend="org.gradle.api.tasks.scala.ScalaCompile"><literal>ScalaCompile</literal></link></td><td><para>Compiles Scala source files, and optionally, Java source files.</para></td></tr>
            <tr><td><link linkend="org.gradle.api.tasks.scala.ScalaDoc"><literal>ScalaDoc</literal></link></td><td><para>Generates HTML API documentation for Scala source files.</para></td></tr>
            <tr><td><link linkend="org.gradle.buildconfiguration.tasks.UpdateDaemonJvm"><literal>UpdateDaemonJvm</literal></link></td><td><para>Generates or updates the Gradle Daemon JVM criteria.

This controls the version of the JVM required to run the Gradle Daemon.</para></td></tr>
            <tr><td><link linkend="org.gradle.buildinit.tasks.InitBuild"><literal>InitBuild</literal></link></td><td><para>Generates a Gradle project structure.</para></td></tr>
            <tr><td><link linkend="org.gradle.plugins.signing.Sign"><literal>Sign</literal></link></td><td><para>A task for creating digital signature files for one or more; tasks, files, publishable artifacts or configurations.

</para></td></tr>
            <tr><td><link linkend="org.gradle.api.tasks.Sync"><literal>Sync</literal></link></td><td><para>Synchronizes the contents of a destination directory with some source directories and files.

</para></td></tr>
            <tr><td><link linkend="org.gradle.api.tasks.bundling.Tar"><literal>Tar</literal></link></td><td><para>Assembles a TAR archive.</para></td></tr>
            <tr><td><link linkend="org.gradle.api.tasks.testing.AbstractTestTask"><literal>AbstractTestTask</literal></link></td><td><para>Abstract class for all test tasks.

</para></td></tr>
            <tr><td><link linkend="org.gradle.api.tasks.testing.Test"><literal>Test</literal></link></td><td><para>Executes JUnit (3.8.x, 4.x or 5.x) or TestNG tests. Test are always run in (one or more) separate JVMs.

</para></td></tr>
            <tr><td><link linkend="org.gradle.api.tasks.testing.TestReport"><literal>TestReport</literal></link></td><td><para>Generates an HTML test report from the results of one or more <apilink class="org.gradle.api.tasks.testing.Test"/> tasks.</para></td></tr>
            <tr><td><link linkend="org.gradle.api.tasks.bundling.War"><literal>War</literal></link></td><td><para>Assembles a WAR archive.</para></td></tr>
            <tr><td><link linkend="org.gradle.api.tasks.wrapper.Wrapper"><literal>Wrapper</literal></link></td><td><para>Generates scripts (for *nix and windows) which allow you to build your project with Gradle, without having to
install Gradle.

</para></td></tr>
            <tr><td><link linkend="org.gradle.api.tasks.WriteProperties"><literal>WriteProperties</literal></link></td><td><para>Writes a <ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Properties.html"><classname>Properties</classname></ulink> in a way that the results can be expected to be reproducible.

</para></td></tr>
            <tr><td><link linkend="org.gradle.api.tasks.bundling.Zip"><literal>Zip</literal></link></td><td><para>Assembles a ZIP archive.

The default is to compress the contents of the zip.</para></td></tr>
        </table>
    </section>

    <section>
        <title>Test types</title>
        <para>Listed below are the tasks and configurable objects related to modeled Test Suites:</para>
        <table role="dslTypes"><thead><tr><td>Type</td><td>Description</td></tr></thead>
            <title>Test types</title>
            <tr><td><link linkend="org.gradle.testing.base.TestingExtension"><literal>TestingExtension</literal></link></td><td><para>This DSL element exists to contain a collection of <apilink class="org.gradle.testing.base.TestSuite"/>s.</para></td></tr>
            <tr><td><link linkend="org.gradle.testing.base.TestSuite"><literal>TestSuite</literal></link></td><td><para>Base test suite component. A test suite is a collection of tests.</para></td></tr>
            <tr><td><link linkend="org.gradle.api.plugins.jvm.JvmTestSuite"><literal>JvmTestSuite</literal></link></td><td><para>A test suite is a collection of JVM-based tests.
</para></td></tr>
            <tr><td><link linkend="org.gradle.testing.base.TestSuiteTarget"><literal>TestSuiteTarget</literal></link></td><td><para>Base test suite target.

A test suite target is a collection of tests that run in a particular context (operating system, Java runtime, etc).</para></td></tr>
            <tr><td><link linkend="org.gradle.api.plugins.jvm.JvmTestSuiteTarget"><literal>JvmTestSuiteTarget</literal></link></td><td><para>Defines the target environment against which a <apilink class="org.gradle.api.plugins.jvm.JvmTestSuite"/> will be run.</para></td></tr>
            <tr><td><link linkend="org.gradle.api.tasks.testing.Test"><literal>Test</literal></link></td><td><para>Executes JUnit (3.8.x, 4.x or 5.x) or TestNG tests. Test are always run in (one or more) separate JVMs.

</para></td></tr>
            <tr><td><link linkend="org.gradle.api.artifacts.dsl.Dependencies"><literal>Dependencies</literal></link></td><td><para>Universal APIs that are available for all <literal>dependencies</literal> blocks.</para></td></tr>
            <tr><td><link linkend="org.gradle.api.artifacts.dsl.GradleDependencies"><literal>GradleDependencies</literal></link></td><td><para>Dependency APIs available for <literal>dependencies</literal> blocks that can build software that relies on Gradle APIs.</para></td></tr>
            <tr><td><link linkend="org.gradle.api.plugins.jvm.TestFixturesDependencyModifiers"><literal>TestFixturesDependencyModifiers</literal></link></td><td><para>Dependency modifier APIs that can find test fixtures in other modules for <literal>dependencies</literal> blocks.</para></td></tr>
            <tr><td><link linkend="org.gradle.api.plugins.jvm.PlatformDependencyModifiers"><literal>PlatformDependencyModifiers</literal></link></td><td><para>Dependency modifier APIs that can find platform and enforced platforms in other modules for <literal>dependencies</literal> blocks.</para></td></tr>
            <tr><td><link linkend="org.gradle.api.plugins.jvm.JvmComponentDependencies"><literal>JvmComponentDependencies</literal></link></td><td><para>This DSL element is used to add dependencies to a component, for instance a <apilink class="org.gradle.testing.base.TestSuite"/>

</para></td></tr>
        </table>
    </section>

    <section>
        <title>Reporting types</title>
        <para>Listed below are some of the types which are used when generating reports:</para>
        <table role="dslTypes"><thead><tr><td>Type</td><td>Description</td></tr></thead>
            <title>Reporting types</title>
            <tr><td><link linkend="org.gradle.api.reporting.CustomizableHtmlReport"><literal>CustomizableHtmlReport</literal></link></td><td><para>A HTML Report whose generation can be customized with a XSLT stylesheet.</para></td></tr>
            <tr><td><link linkend="org.gradle.api.reporting.SingleFileReport"><literal>SingleFileReport</literal></link></td><td><para>A report that is a single file.</para></td></tr>
            <tr><td><link linkend="org.gradle.api.reporting.DirectoryReport"><literal>DirectoryReport</literal></link></td><td><para>A directory based report to be created.</para></td></tr>
            <tr><td><link linkend="org.gradle.api.reporting.Report"><literal>Report</literal></link></td><td><para>A file based report to be created.
</para></td></tr>
            <tr><td><link linkend="org.gradle.api.reporting.Reporting"><literal>Reporting</literal></link></td><td><para>An object that provides reporting options.
</para></td></tr>
            <tr><td><link linkend="org.gradle.api.reporting.ReportContainer"><literal>ReportContainer</literal></link></td><td><para>A container of <apilink class="org.gradle.api.reporting.Report"/> objects, that represent potential reports.
</para></td></tr>
            <tr><td><link linkend="org.gradle.api.reporting.ReportingExtension"><literal>ReportingExtension</literal></link></td><td><para>A project extension named "reporting" that provides basic reporting settings and utilities.
</para></td></tr>
            <tr><td><link linkend="org.gradle.api.tasks.testing.AggregateTestReport"><literal>AggregateTestReport</literal></link></td><td><para>A container for the inputs of an aggregated test report.</para></td></tr>
            <tr><td><link linkend="org.gradle.testing.jacoco.plugins.JacocoCoverageReport"><literal>JacocoCoverageReport</literal></link></td><td><para>A container for the inputs of an aggregated JaCoCo code coverage report.</para></td></tr>
        </table>
    </section>

    <section>
        <title>Eclipse/IDEA model types</title>
        <para>Used to configure Eclipse or IDEA plugins</para>
        <table role="dslTypes"><thead><tr><td>Type</td><td>Description</td></tr></thead>
            <title>Eclipse/IDEA model types</title>
            <tr><td><link linkend="org.gradle.plugins.ide.eclipse.model.EclipseModel"><literal>EclipseModel</literal></link></td><td><para>DSL-friendly model of the Eclipse project information.
First point of entry for customizing Eclipse project generation.

</para></td></tr>
            <tr><td><link linkend="org.gradle.plugins.ide.eclipse.model.EclipseProject"><literal>EclipseProject</literal></link></td><td><para>Enables fine-tuning project details (.project file) of the Eclipse plugin
</para></td></tr>
            <tr><td><link linkend="org.gradle.plugins.ide.eclipse.model.EclipseClasspath"><literal>EclipseClasspath</literal></link></td><td><para>The build path settings for the generated Eclipse project. Used by the
<apilink class="org.gradle.plugins.ide.eclipse.GenerateEclipseClasspath"/> task to generate an Eclipse .classpath file.
</para></td></tr>
            <tr><td><link linkend="org.gradle.plugins.ide.eclipse.model.EclipseJdt"><literal>EclipseJdt</literal></link></td><td><para>Enables fine-tuning jdt details of the Eclipse plugin

</para></td></tr>
            <tr><td><link linkend="org.gradle.plugins.ide.eclipse.model.EclipseWtp"><literal>EclipseWtp</literal></link></td><td><para>Enables fine-tuning wtp/wst details of the Eclipse plugin
</para></td></tr>
            <tr><td><link linkend="org.gradle.plugins.ide.eclipse.model.EclipseWtpComponent"><literal>EclipseWtpComponent</literal></link></td><td><para>Enables fine-tuning wtp component details of the Eclipse plugin
</para></td></tr>
            <tr><td><link linkend="org.gradle.plugins.ide.eclipse.model.EclipseWtpFacet"><literal>EclipseWtpFacet</literal></link></td><td><para>Enables fine-tuning wtp facet details of the Eclipse plugin
</para></td></tr>
            <tr><td><link linkend="org.gradle.plugins.ide.idea.model.IdeaModel"><literal>IdeaModel</literal></link></td><td><para>DSL-friendly model of the IDEA project information.
First point of entry when it comes to customizing the IDEA generation.
</para></td></tr>
            <tr><td><link linkend="org.gradle.plugins.ide.idea.model.IdeaProject"><literal>IdeaProject</literal></link></td><td><para>Enables fine-tuning project details (*.ipr file) of the IDEA plugin.
</para></td></tr>
            <tr><td><link linkend="org.gradle.plugins.ide.idea.model.IdeaModule"><literal>IdeaModule</literal></link></td><td><para>Enables fine-tuning module details (*.iml file) of the IDEA plugin.
</para></td></tr>
            <tr><td><link linkend="org.gradle.plugins.ide.idea.model.IdeaWorkspace"><literal>IdeaWorkspace</literal></link></td><td><para>Enables fine-tuning workspace details (*.iws file) of the IDEA plugin.
</para></td></tr>
            <tr><td><link linkend="org.gradle.plugins.ide.api.XmlFileContentMerger"><literal>XmlFileContentMerger</literal></link></td><td><para>Models the generation/parsing/merging capabilities.
Adds XML-related hooks.
</para></td></tr>
            <tr><td><link linkend="org.gradle.plugins.ide.api.FileContentMerger"><literal>FileContentMerger</literal></link></td><td><para>Models the generation/parsing/merging capabilities.
</para></td></tr>
        </table>
    </section>

    <section>
        <title>Eclipse/IDEA task types</title>
        <para>Tasks contributed by IDE plugins. To configure IDE plugins please use IDE model types.</para>
        <table role="dslTypes"><thead><tr><td>Type</td><td>Description</td></tr></thead>
            <title>Eclipse/IDEA task types</title>
            <tr><td><link linkend="org.gradle.plugins.ide.eclipse.GenerateEclipseProject"><literal>GenerateEclipseProject</literal></link></td><td><para>Generates an Eclipse <literal>.project</literal> file. If you want to fine tune the eclipse configuration
</para></td></tr>
            <tr><td><link linkend="org.gradle.plugins.ide.eclipse.GenerateEclipseClasspath"><literal>GenerateEclipseClasspath</literal></link></td><td><para>Generates an Eclipse <literal>.classpath</literal> file. If you want to fine tune the eclipse configuration
</para></td></tr>
            <tr><td><link linkend="org.gradle.plugins.ide.eclipse.GenerateEclipseJdt"><literal>GenerateEclipseJdt</literal></link></td><td><para>Generates the Eclipse JDT configuration file. If you want to fine tune the eclipse configuration
</para></td></tr>
            <tr><td><link linkend="org.gradle.plugins.ide.eclipse.GenerateEclipseWtpComponent"><literal>GenerateEclipseWtpComponent</literal></link></td><td><para>Generates the org.eclipse.wst.common.component settings file for Eclipse WTP.
If you want to fine tune the eclipse configuration
</para></td></tr>
            <tr><td><link linkend="org.gradle.plugins.ide.eclipse.GenerateEclipseWtpFacet"><literal>GenerateEclipseWtpFacet</literal></link></td><td><para>Generates the org.eclipse.wst.common.project.facet.core settings file for Eclipse WTP.
If you want to fine tune the eclipse configuration
</para></td></tr>
            <tr><td><link linkend="org.gradle.plugins.ide.idea.GenerateIdeaModule"><literal>GenerateIdeaModule</literal></link></td><td><para>Generates an IDEA module file. If you want to fine tune the idea configuration
</para></td></tr>
            <tr><td><link linkend="org.gradle.plugins.ide.idea.GenerateIdeaProject"><literal>GenerateIdeaProject</literal></link></td><td><para>Generates an IDEA project file for root project *only*. If you want to fine tune the idea configuration </para></td></tr>
            <tr><td><link linkend="org.gradle.plugins.ide.idea.GenerateIdeaWorkspace"><literal>GenerateIdeaWorkspace</literal></link></td><td><para>Generates an IDEA workspace file *only* for root project. There's little you can configure about workspace generation at the moment.</para></td></tr>
        </table>
    </section>

    <section>
        <title>Xcode task types</title>
        <para>Tasks contributed by Xcode IDE plugins. To configure IDE plugins please use IDE model types.</para>
        <table role="dslTypes"><thead><tr><td>Type</td><td>Description</td></tr></thead>
            <title>Xcode task types</title>
            <tr><td><link linkend="org.gradle.ide.xcode.tasks.GenerateSchemeFileTask"><literal>GenerateSchemeFileTask</literal></link></td><td><para>Task for generating a Xcode scheme file (e.g. <literal>Foo.xcodeproj/xcshareddata/xcschemes/Foo.xcscheme</literal>). An Xcode scheme defines a collection of targets to build, a configuration to use when building, and a collection of tests to execute.

</para></td></tr>
            <tr><td><link linkend="org.gradle.ide.xcode.tasks.GenerateWorkspaceSettingsFileTask"><literal>GenerateWorkspaceSettingsFileTask</literal></link></td><td><para>Task for generating a Xcode workspace settings file (e.g. <literal>Foo.xcodeproj/project.xcworkspace/xcshareddata/WorkspaceSettings.xcsettings</literal>).

</para></td></tr>
            <tr><td><link linkend="org.gradle.ide.xcode.tasks.GenerateXcodeProjectFileTask"><literal>GenerateXcodeProjectFileTask</literal></link></td><td><para>Task for generating a Xcode project file (e.g. <literal>Foo.xcodeproj/project.pbxproj</literal>). A project contains all the elements used to build your products and maintains the relationships between those elements. It contains one or more targets, which specify how to build products. A project defines default build settings for all the targets in the project (each target can also specify its own build settings, which override the project build settings).</para></td></tr>
            <tr><td><link linkend="org.gradle.ide.xcode.tasks.GenerateXcodeWorkspaceFileTask"><literal>GenerateXcodeWorkspaceFileTask</literal></link></td><td><para>Task for generating a Xcode workspace file (e.g. <literal>Foo.xcworkspace/contents.xcworkspacedata</literal>). A workspace can contain any number of Xcode projects.</para></td></tr>
        </table>
    </section>

    <section>
        <title>Visual Studio task types</title>
        <para>Tasks contributed by Visual Studio IDE plugins. To configure IDE plugins please use IDE model types.</para>
        <table role="dslTypes"><thead><tr><td>Type</td><td>Description</td></tr></thead>
            <title>Visual Studio task types</title>
            <tr><td><link linkend="org.gradle.ide.visualstudio.tasks.GenerateSolutionFileTask"><literal>GenerateSolutionFileTask</literal></link></td><td><para>Task for generating a Visual Studio solution file (e.g. <literal>foo.sln</literal>).</para></td></tr>
            <tr><td><link linkend="org.gradle.ide.visualstudio.tasks.GenerateProjectFileTask"><literal>GenerateProjectFileTask</literal></link></td><td><para>Task for generating a Visual Studio project file (e.g. <literal>foo.vcxproj</literal>).</para></td></tr>
            <tr><td><link linkend="org.gradle.ide.visualstudio.tasks.GenerateFiltersFileTask"><literal>GenerateFiltersFileTask</literal></link></td><td><para>Task for generating a Visual Studio filters file (e.g. <literal>foo.vcxproj.filters</literal>).</para></td></tr>
        </table>
    </section>

    <section>
        <title>Artifact transform types</title>
        <para>Used to define artifact transforms.</para>
        <table role="dslTypes"><thead><tr><td>Type</td><td>Description</td></tr></thead>
            <title>Artifact transform types</title>
            <tr><td><link linkend="org.gradle.api.artifacts.transform.TransformAction"><literal>TransformAction</literal></link></td><td><para>Interface for artifact transform actions.

</para></td></tr>
            <tr><td><link linkend="org.gradle.api.artifacts.transform.TransformOutputs"><literal>TransformOutputs</literal></link></td><td><para>The outputs of the artifact transform.

</para></td></tr>
            <tr><td><link linkend="org.gradle.api.artifacts.transform.TransformSpec"><literal>TransformSpec</literal></link></td><td><para>Base configuration for artifact transform registrations.</para></td></tr>
        </table>
    </section>

    <section>
        <title>Native tool chains model types</title>
        <para>Used to configure tool chains for building C++ and Swift components.</para>
        <table role="dslTypes"><thead><tr><td>Type</td><td>Description</td></tr></thead>
            <title>Native tool chain types</title>
            <tr><td><link linkend="org.gradle.nativeplatform.toolchain.Gcc"><literal>Gcc</literal></link></td><td><para>The <ulink url="http://gcc.gnu.org/">GNU GCC</ulink> tool chain.</para></td></tr>
            <tr><td><link linkend="org.gradle.nativeplatform.toolchain.Clang"><literal>Clang</literal></link></td><td><para>The <ulink url="http://clang.llvm.org">Clang</ulink> tool chain.</para></td></tr>
            <tr><td><link linkend="org.gradle.nativeplatform.toolchain.VisualCpp"><literal>VisualCpp</literal></link></td><td><para>The Visual C++ tool chain.</para></td></tr>
            <tr><td><link linkend="org.gradle.nativeplatform.toolchain.Swiftc"><literal>Swiftc</literal></link></td><td><para>The <ulink url="https://swift.org/">Swift Compiler</ulink> tool chain.</para></td></tr>
        </table>
    </section>

    <section condition="noNavBar">
        <title>Native software model types</title>
        <para>Used to configure software components developed with native code.</para>
        <table role="dslTypes"><thead><tr><td>Type</td><td>Description</td></tr></thead>
            <title>Native software types</title>
            <tr><td><link linkend="org.gradle.nativeplatform.PrebuiltLibrary"><literal>PrebuiltLibrary</literal></link></td><td><para>A library component that is not built by gradle.</para></td></tr>
            <tr><td><link linkend="org.gradle.nativeplatform.PrebuiltSharedLibraryBinary"><literal>PrebuiltSharedLibraryBinary</literal></link></td><td><para>A shared library that exists at a known location on the filesystem.</para></td></tr>
            <tr><td><link linkend="org.gradle.nativeplatform.PrebuiltStaticLibraryBinary"><literal>PrebuiltStaticLibraryBinary</literal></link></td><td><para>A static library that exists at a known location on the filesystem.</para></td></tr>
            <tr><td><link linkend="org.gradle.nativeplatform.NativeComponentSpec"><literal>NativeComponentSpec</literal></link></td><td><para>Definition of a software component that is to be built by Gradle to run a on JVM platform.</para></td></tr>
            <tr><td><link linkend="org.gradle.nativeplatform.NativeExecutableSpec"><literal>NativeExecutableSpec</literal></link></td><td><para>Definition of a native executable component that is to be built by Gradle.</para></td></tr>
            <tr><td><link linkend="org.gradle.nativeplatform.NativeLibrarySpec"><literal>NativeLibrarySpec</literal></link></td><td><para>Definition of a native library component that is to be built by Gradle.</para></td></tr>
            <tr><td><link linkend="org.gradle.nativeplatform.test.NativeTestSuiteSpec"><literal>NativeTestSuiteSpec</literal></link></td><td><para>A component representing a suite of tests that will be executed together.</para></td></tr>
            <tr><td><link linkend="org.gradle.nativeplatform.test.cunit.CUnitTestSuiteSpec"><literal>CUnitTestSuiteSpec</literal></link></td><td><para>Test suite of CUnit tests.</para></td></tr>
            <tr><td><link linkend="org.gradle.nativeplatform.test.googletest.GoogleTestTestSuiteSpec"><literal>GoogleTestTestSuiteSpec</literal></link></td><td><para>Test suite of Google Test tests.</para></td></tr>
            <tr><td><link linkend="org.gradle.nativeplatform.NativeBinarySpec"><literal>NativeBinarySpec</literal></link></td><td><para>Represents a binary artifact that is the result of building a native component.</para></td></tr>
            <tr><td><link linkend="org.gradle.nativeplatform.NativeExecutableBinarySpec"><literal>NativeExecutableBinarySpec</literal></link></td><td><para>An binary built by Gradle for a native application.</para></td></tr>
            <tr><td><link linkend="org.gradle.nativeplatform.NativeLibraryBinarySpec"><literal>NativeLibraryBinarySpec</literal></link></td><td><para>Represents a binary artifact that is the result of building a native library component.</para></td></tr>
            <tr><td><link linkend="org.gradle.nativeplatform.SharedLibraryBinarySpec"><literal>SharedLibraryBinarySpec</literal></link></td><td><para>A shared library binary built by Gradle for a native library.</para></td></tr>
            <tr><td><link linkend="org.gradle.nativeplatform.StaticLibraryBinarySpec"><literal>StaticLibraryBinarySpec</literal></link></td><td><para>A static library binary built by Gradle for a native library.</para></td></tr>
            <tr><td><link linkend="org.gradle.nativeplatform.test.NativeTestSuiteBinarySpec"><literal>NativeTestSuiteBinarySpec</literal></link></td><td><para>An executable which runs a suite of tests.</para></td></tr>
            <tr><td><link linkend="org.gradle.nativeplatform.test.cunit.CUnitTestSuiteBinarySpec"><literal>CUnitTestSuiteBinarySpec</literal></link></td><td><para>An executable which run a CUnit test suite.</para></td></tr>
            <tr><td><link linkend="org.gradle.nativeplatform.test.googletest.GoogleTestTestSuiteBinarySpec"><literal>GoogleTestTestSuiteBinarySpec</literal></link></td><td><para>An executable which run a Google Test test suite.</para></td></tr>
            <tr><td><link linkend="org.gradle.nativeplatform.platform.NativePlatform"><literal>NativePlatform</literal></link></td><td><para>A target platform for building native binaries. Each target platform is given a name, and may optionally be given
a specific <apilink class="org.gradle.nativeplatform.platform.Architecture"/> and/or <apilink class="org.gradle.nativeplatform.platform.OperatingSystem"/> to target.

</para></td></tr>
            <tr><td><link linkend="org.gradle.nativeplatform.BuildType"><literal>BuildType</literal></link></td><td><para>Specifies a build-type for a native binary. Common build types are 'debug' and 'release', but others may be defined.</para></td></tr>
            <tr><td><link linkend="org.gradle.nativeplatform.Flavor"><literal>Flavor</literal></link></td><td><para>Defines a custom variant that differentiate a <apilink class="org.gradle.nativeplatform.NativeBinary"/>.</para></td></tr>
            <tr><td><link linkend="org.gradle.language.assembler.AssemblerSourceSet"><literal>AssemblerSourceSet</literal></link></td><td><para>A set of assembly language sources.

</para></td></tr>
            <tr><td><link linkend="org.gradle.language.c.CSourceSet"><literal>CSourceSet</literal></link></td><td><para>A set of C source files.

</para></td></tr>
            <tr><td><link linkend="org.gradle.language.cpp.CppSourceSet"><literal>CppSourceSet</literal></link></td><td><para>A set of C++ source files.

</para></td></tr>
            <tr><td><link linkend="org.gradle.language.objectivec.ObjectiveCSourceSet"><literal>ObjectiveCSourceSet</literal></link></td><td><para>A set of Objective-C source files.

</para></td></tr>
            <tr><td><link linkend="org.gradle.language.objectivecpp.ObjectiveCppSourceSet"><literal>ObjectiveCppSourceSet</literal></link></td><td><para>A set of Objective-C++ source files.

</para></td></tr>
            <tr><td><link linkend="org.gradle.language.rc.WindowsResourceSet"><literal>WindowsResourceSet</literal></link></td><td><para>A set of Windows Resource definition files.

</para></td></tr>
            <tr><td><link linkend="org.gradle.ide.visualstudio.VisualStudioProject"><literal>VisualStudioProject</literal></link></td><td><para>A visual studio project, created from one or more native binaries.

</para></td></tr>
            <tr><td><link linkend="org.gradle.ide.visualstudio.VisualStudioSolution"><literal>VisualStudioSolution</literal></link></td><td><para>A visual studio solution, representing one or more native binaries in a build.
</para></td></tr>
            <tr><td><link linkend="org.gradle.nativeplatform.NativeExecutable"><literal>NativeExecutable</literal></link></td><td><para>An executable native component that is built by Gradle.</para></td></tr>
            <tr><td><link linkend="org.gradle.nativeplatform.NativeLibrary"><literal>NativeLibrary</literal></link></td><td><para>A library component that is built by a gradle project.</para></td></tr>
            <tr><td><link linkend="org.gradle.nativeplatform.NativeBinary"><literal>NativeBinary</literal></link></td><td><para>Represents a particular binary artifact.</para></td></tr>
            <tr><td><link linkend="org.gradle.nativeplatform.NativeExecutableBinary"><literal>NativeExecutableBinary</literal></link></td><td><para>A binary artifact for a <apilink class="org.gradle.nativeplatform.NativeExecutable"/>, targeted at a particular platform with specific configuration.</para></td></tr>
            <tr><td><link linkend="org.gradle.nativeplatform.SharedLibraryBinary"><literal>SharedLibraryBinary</literal></link></td><td><para>A <apilink class="org.gradle.nativeplatform.NativeLibrary"/> that has been compiled and linked as a shared library.</para></td></tr>
            <tr><td><link linkend="org.gradle.nativeplatform.StaticLibraryBinary"><literal>StaticLibraryBinary</literal></link></td><td><para>A <apilink class="org.gradle.nativeplatform.NativeLibrary"/> that has been compiled and archived into a static library.</para></td></tr>
        </table>
    </section>

    <section>
        <title>C++ component model types</title>
        <para>Used to configure C++ components.</para>
        <table role="dslTypes"><thead><tr><td>Type</td><td>Description</td></tr></thead>
            <title>C++ component types</title>
            <tr><td><link linkend="org.gradle.language.cpp.CppApplication"><literal>CppApplication</literal></link></td><td><para>Configuration for a C++ application, defining the source files that make up the application plus other settings.

</para></td></tr>
            <tr><td><link linkend="org.gradle.language.cpp.CppLibrary"><literal>CppLibrary</literal></link></td><td><para>Configuration for a C++ library, defining the source files and header directories that make up the library plus other settings.

</para></td></tr>
            <tr><td><link linkend="org.gradle.nativeplatform.test.cpp.CppTestSuite"><literal>CppTestSuite</literal></link></td><td><para>A C++ test suite.</para></td></tr>
        </table>
    </section>

    <section>
        <title>Swift component model types</title>
        <para>Used to configure Swift components.</para>
        <table role="dslTypes"><thead><tr><td>Type</td><td>Description</td></tr></thead>
            <title>Swift component types</title>
            <tr><td><link linkend="org.gradle.language.swift.SwiftApplication"><literal>SwiftApplication</literal></link></td><td><para>Configuration for a Swift application, defining the source files that make up the application plus other settings.

</para></td></tr>
            <tr><td><link linkend="org.gradle.language.swift.SwiftLibrary"><literal>SwiftLibrary</literal></link></td><td><para>Configuration for a Swift library, defining the source files that make up the library plus other settings.

</para></td></tr>
            <tr><td><link linkend="org.gradle.nativeplatform.test.xctest.SwiftXCTestSuite"><literal>SwiftXCTestSuite</literal></link></td><td><para>A XCTest suite, implemented in Swift.</para></td></tr>
        </table>
    </section>

    <section>
        <title>Native binary task types</title>
        <para>Tasks used to build native binaries.</para>
        <table role="dslTypes"><thead><tr><td>Type</td><td>Description</td></tr></thead>
            <title>Native component task types</title>
            <tr><td><link linkend="org.gradle.language.cpp.tasks.CppCompile"><literal>CppCompile</literal></link></td><td><para>Compiles C++ source files into object files.</para></td></tr>
            <tr><td><link linkend="org.gradle.language.swift.tasks.SwiftCompile"><literal>SwiftCompile</literal></link></td><td><para>Compiles Swift source files into object files.</para></td></tr>
            <tr><td><link linkend="org.gradle.nativeplatform.tasks.LinkExecutable"><literal>LinkExecutable</literal></link></td><td><para>Links a binary executable from object files and libraries.</para></td></tr>
            <tr><td><link linkend="org.gradle.nativeplatform.tasks.LinkSharedLibrary"><literal>LinkSharedLibrary</literal></link></td><td><para>Links a binary shared library from object files and imported libraries.</para></td></tr>
            <tr><td><link linkend="org.gradle.nativeplatform.tasks.CreateStaticLibrary"><literal>CreateStaticLibrary</literal></link></td><td><para>Assembles a static library from object files.</para></td></tr>
            <tr><td><link linkend="org.gradle.nativeplatform.tasks.LinkMachOBundle"><literal>LinkMachOBundle</literal></link></td><td><para>Links a binary bundle from object files and imported libraries.</para></td></tr>
            <tr><td><link linkend="org.gradle.nativeplatform.tasks.InstallExecutable"><literal>InstallExecutable</literal></link></td><td><para>Installs an executable with it's dependent libraries so it can be easily executed.</para></td></tr>
            <tr><td><link linkend="org.gradle.nativeplatform.test.xctest.tasks.InstallXCTestBundle"><literal>InstallXCTestBundle</literal></link></td><td><para>Creates a XCTest bundle with a run script so it can be easily executed.</para></td></tr>
            <tr><td><link linkend="org.gradle.nativeplatform.test.tasks.RunTestExecutable"><literal>RunTestExecutable</literal></link></td><td><para>Runs a compiled and installed test executable.</para></td></tr>
            <tr><td><link linkend="org.gradle.nativeplatform.test.xctest.tasks.XCTest"><literal>XCTest</literal></link></td><td><para>Executes XCTest tests. Test are always run in a single execution.</para></td></tr>
        </table>
    </section>

    <section condition="noNavBar">
        <title>Native binary task types</title>
        <para>Tasks used to build native binaries.</para>
        <table role="dslTypes"><thead><tr><td>Type</td><td>Description</td></tr></thead>
            <title>Native component task types</title>
            <tr><td><link linkend="org.gradle.language.c.tasks.CCompile"><literal>CCompile</literal></link></td><td><para>Compiles C source files into object files.</para></td></tr>
            <tr><td><link linkend="org.gradle.language.assembler.tasks.Assemble"><literal>Assemble</literal></link></td><td><para>Translates Assembly language source files into object files.</para></td></tr>
            <tr><td><link linkend="org.gradle.language.objectivec.tasks.ObjectiveCCompile"><literal>ObjectiveCCompile</literal></link></td><td><para>Compiles Objective-C source files into object files.</para></td></tr>
            <tr><td><link linkend="org.gradle.language.objectivecpp.tasks.ObjectiveCppCompile"><literal>ObjectiveCppCompile</literal></link></td><td><para>Compiles Objective-C++ source files into object files.</para></td></tr>
            <tr><td><link linkend="org.gradle.language.rc.tasks.WindowsResourceCompile"><literal>WindowsResourceCompile</literal></link></td><td><para>Compiles Windows Resource scripts into .res files.</para></td></tr>
        </table>
    </section>

<chapter id="org.gradle.api.plugins.ExtensionAware"><title>ExtensionAware</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.plugins.ExtensionAware" style="javadoc"/></seg></seglistitem></segmentedlist><segmentedlist><segtitle>Known Subtypes</segtitle><seglistitem><seg><simplelist columns="3" type="vert"><member><apilink class="org.gradle.api.Project"/></member><member><apilink class="org.gradle.api.artifacts.dsl.DependencyHandler"/></member><member><apilink class="org.gradle.api.invocation.Gradle"/></member><member><apilink class="org.gradle.api.Task"/></member><member><apilink class="org.gradle.api.initialization.Settings"/></member><member><apilink class="org.gradle.api.tasks.SourceSet"/></member></simplelist></seg></seglistitem></segmentedlist><para>Objects that can be extended at runtime with other objects.

</para><programlisting language="java">
// Extensions are just plain objects, there is no interface/type
class MyExtension {
  String foo

  MyExtension(String foo) {
    this.foo = foo
  }
}

// Add new extensions via the extension container
project.extensions.create('custom', MyExtension, "bar")
//                       («name»,   «type»,       «constructor args», …)

// extensions appear as properties on the target object by the given name
assert project.custom instanceof MyExtension
assert project.custom.foo == "bar"

// also via a namespace method
project.custom {
  assert foo == "bar"
  foo = "other"
}
assert project.custom.foo == "other"

// Extensions added with the extension container's create method are themselves extensible
assert project.custom instanceof ExtensionAware
project.custom.extensions.create("nested", MyExtension, "baz")
assert project.custom.nested.foo == "baz"

// All extension aware objects have a special "ext" extension of type ExtraPropertiesExtension
assert project.hasProperty("myProperty") == false
project.ext.myProperty = "myValue"

// Properties added to the "ext" extension are promoted to the owning object
assert project.myProperty == "myValue"
</programlisting><para>

Many Gradle objects are extension aware. This includes; projects, tasks, configurations, dependencies etc.
</para><para>
For more on adding &amp; creating extensions, see <apilink class="org.gradle.api.plugins.ExtensionContainer"/>.
</para><para>
For more on extra properties, see <apilink class="org.gradle.api.plugins.ExtraPropertiesExtension"/>.
</para><para>
An <literal>ExtensionAware</literal> object has several 'scopes' that Gradle searches for properties. These scopes are:</para><itemizedlist><listitem>The object itself. This scope includes any property getters and setters declared by the
implementation class. The properties of this scope are readable or writable depending on the presence
of the corresponding getter or setter method.</listitem><listitem>Groovy Meta-programming methods implemented by the object's class, like <literal>propertyMissing()</literal>. Care must be taken by plugin authors to
ensure <literal>propertyMissing()</literal> is implemented such that if a property is not found a MissingPropertyException(String, Class) exception is thrown.
If <literal>propertyMissing()</literal> always returns a value for any property, <emphasis>Gradle will not search the rest of the scopes below.</emphasis></listitem><listitem>The <emphasis>extra</emphasis> properties of the object.  Each object maintains a map of extra properties, which
can contain any arbitrary name -&gt; value pair.  Once defined, the properties of this scope are readable and writable.</listitem><listitem>The <emphasis>extensions</emphasis> added to the object by plugins. Each extension is available as a read-only property with the same name as the extension.</listitem></itemizedlist><section><title>Properties</title><table><title>Properties - ExtensionAware</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.plugins.ExtensionAware:extensions"><literal>extensions</literal></link></td><td><para>The container of extensions.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.plugins.ExtensionAware:extensions" role="detail"><title><apilink class="org.gradle.api.plugins.ExtensionContainer"/> <literal>extensions</literal> (read-only)</title><para>The container of extensions.</para></section></section></chapter><chapter id="org.gradle.api.plugins.PluginAware"><title>PluginAware</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.plugins.PluginAware" style="javadoc"/></seg></seglistitem></segmentedlist><segmentedlist><segtitle>Known Subtypes</segtitle><seglistitem><seg><simplelist columns="1" type="vert"><member><apilink class="org.gradle.api.Project"/></member><member><apilink class="org.gradle.api.invocation.Gradle"/></member><member><apilink class="org.gradle.api.initialization.Settings"/></member></simplelist></seg></seglistitem></segmentedlist><para>Something that can have plugins applied to it.
</para><para>
The <apilink class="org.gradle.api.plugins.PluginAware" method="getPluginManager()"/> can be used for applying and detecting whether plugins have been applied.
</para><para>
For more on writing and applying plugins, see <apilink class="org.gradle.api.Plugin"/>.</para><section><title>Properties</title><table><title>Properties - PluginAware</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.plugins.PluginAware:pluginManager"><literal>pluginManager</literal></link></td><td><para>The plugin manager for this plugin aware object.</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.PluginAware:plugins"><literal>plugins</literal></link></td><td><para>The container of plugins that have been applied to this object.
</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - PluginAware</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.plugins.PluginAware:apply(groovy.lang.Closure)">apply</link>(closure)</literal></td><td><para>Applies zero or more plugins or scripts.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.plugins.PluginAware:apply(java.util.Map)">apply</link>(options)</literal></td><td><para>Applies a plugin or script, using the given options provided as a map. Does nothing if the plugin has already been applied.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.plugins.PluginAware:apply(org.gradle.api.Action)">apply</link>(action)</literal></td><td><para>Applies zero or more plugins or scripts.
</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.plugins.PluginAware:pluginManager" role="detail"><title><apilink class="org.gradle.api.plugins.PluginManager"/> <literal>pluginManager</literal> (read-only)</title><para>The plugin manager for this plugin aware object.</para></section><section id="org.gradle.api.plugins.PluginAware:plugins" role="detail"><title><apilink class="org.gradle.api.plugins.PluginContainer"/> <literal>plugins</literal> (read-only)</title><para>The container of plugins that have been applied to this object.
</para><para>
While not deprecated, it is preferred to use the methods of this interface or the <apilink class="org.gradle.api.plugins.PluginAware" method="getPluginManager()"/> than use the plugin container.
</para><para>
Use one of the 'apply' methods on this interface or on the <apilink class="org.gradle.api.plugins.PluginAware" method="getPluginManager()"/> to apply plugins instead of applying via the plugin container.
</para><para>
Use <apilink class="org.gradle.api.plugins.PluginManager" method="hasPlugin(java.lang.String)"/> or similar to query for the application of plugins instead of doing so via the plugin container.</para></section></section><section><title>Method details</title><section id="org.gradle.api.plugins.PluginAware:apply(groovy.lang.Closure)" role="detail"><title><classname>void</classname> <literal>apply</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> closure)</title><para>Applies zero or more plugins or scripts.
</para><para>
The given closure is used to configure an <apilink class="org.gradle.api.plugins.ObjectConfigurationAction"/>, which "builds" the plugin application.
</para><para>
This method differs from <apilink class="org.gradle.api.plugins.PluginAware" method="apply(java.util.Map)"/> in that it allows methods of the configuration action to be invoked more than once.</para></section><section id="org.gradle.api.plugins.PluginAware:apply(java.util.Map)" role="detail"><title><classname>void</classname> <literal>apply</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, ?&gt;</classname> options)</title><para>Applies a plugin or script, using the given options provided as a map. Does nothing if the plugin has already been applied.
</para><para>
The given map is applied as a series of method calls to a newly created <apilink class="org.gradle.api.plugins.ObjectConfigurationAction"/>.
That is, each key in the map is expected to be the name of a method <apilink class="org.gradle.api.plugins.ObjectConfigurationAction"/> and the value to be compatible arguments to that method.

</para><para>The following options are available:</para><itemizedlist><listitem><literal>from</literal>: A script to apply. Accepts any path supported by <apilink class="org.gradle.api.Project" method="uri(java.lang.Object)"/>.</listitem><listitem><literal>plugin</literal>: The id or implementation class of the plugin to apply.</listitem><listitem><literal>to</literal>: The target delegate object or objects. The default is this plugin aware object. Use this to configure objects other than this object.</listitem></itemizedlist></section><section id="org.gradle.api.plugins.PluginAware:apply(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>apply</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.plugins.ObjectConfigurationAction"/>&gt;</classname> action)</title><para>Applies zero or more plugins or scripts.
</para><para>
The given closure is used to configure an <apilink class="org.gradle.api.plugins.ObjectConfigurationAction"/>, which "builds" the plugin application.
</para><para>
This method differs from <apilink class="org.gradle.api.plugins.PluginAware" method="apply(java.util.Map)"/> in that it allows methods of the configuration action to be invoked more than once.</para></section></section></chapter><chapter id="org.gradle.api.plugins.PluginManager"><title>PluginManager</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.plugins.PluginManager" style="javadoc"/></seg></seglistitem></segmentedlist><para>Facilitates applying plugins and determining which plugins have been applied to a <apilink class="org.gradle.api.plugins.PluginAware"/> object.</para><section><title>Properties</title><para>No properties</para></section><section><title>Methods</title><table><title>Methods - PluginManager</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.plugins.PluginManager:apply(java.lang.Class)">apply</link>(type)</literal></td><td><para>Applies the given plugin. Does nothing if the plugin has already been applied.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.plugins.PluginManager:apply(java.lang.String)">apply</link>(pluginId)</literal></td><td><para>Applies the plugin with the given ID. Does nothing if the plugin has already been applied.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.plugins.PluginManager:findPlugin(java.lang.String)">findPlugin</link>(id)</literal></td><td><para>Returns the information about the plugin that has been applied with the given ID, or null if no plugin has been applied with the given ID.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.plugins.PluginManager:hasPlugin(java.lang.String)">hasPlugin</link>(id)</literal></td><td><para>Returns <literal>true</literal> if a plugin with the given ID has already been applied, otherwise <literal>false</literal>.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.plugins.PluginManager:withPlugin(java.lang.String, org.gradle.api.Action)">withPlugin</link>(id, action)</literal></td><td><para>Executes the given action when the specified plugin is applied.
</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Method details</title><section id="org.gradle.api.plugins.PluginManager:apply(java.lang.Class)" role="detail"><title><classname>void</classname> <literal>apply</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html"><classname>Class</classname></ulink>&lt;?&gt;</classname> type)</title><para>Applies the given plugin. Does nothing if the plugin has already been applied.
</para><para>
The given class should implement the <apilink class="org.gradle.api.Plugin"/> interface, and be parameterized for a compatible type of <literal>this</literal>.
</para><para>
The following two lines are equivalent…
</para><programlisting language="java">
pluginManager.apply org.gradle.api.plugins.JavaPlugin
pluginManager.apply "org.gradle.java"
</programlisting></section><section id="org.gradle.api.plugins.PluginManager:apply(java.lang.String)" role="detail"><title><classname>void</classname> <literal>apply</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> pluginId)</title><para>Applies the plugin with the given ID. Does nothing if the plugin has already been applied.
</para><para>
Plugins in the <literal>"org.gradle"</literal> namespace can be applied directly via name.
That is, the following two lines are equivalent…
</para><programlisting language="java">
pluginManager.apply "org.gradle.java"
pluginManager.apply "java"
</programlisting></section><section id="org.gradle.api.plugins.PluginManager:findPlugin(java.lang.String)" role="detail"><title><apilink class="org.gradle.api.plugins.AppliedPlugin"/> <literal>findPlugin</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> id)</title><para>Returns the information about the plugin that has been applied with the given ID, or null if no plugin has been applied with the given ID.
</para><para>
Plugins in the <literal>"org.gradle"</literal> namespace (that is, core Gradle plugins) can be specified by either name (e.g. <literal>"java"</literal>) or ID <literal>"org.gradle.java"</literal>.
All other plugins must be queried for by their full ID (e.g. <literal>"org.company.some-plugin"</literal>).
</para><para>
Some Gradle plugins have not yet migrated to fully qualified plugin IDs.
Such plugins can be detected with this method by simply using the unqualified ID (e.g. <literal>"some-third-party-plugin"</literal>.</para></section><section id="org.gradle.api.plugins.PluginManager:hasPlugin(java.lang.String)" role="detail"><title><classname>boolean</classname> <literal>hasPlugin</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> id)</title><para>Returns <literal>true</literal> if a plugin with the given ID has already been applied, otherwise <literal>false</literal>.</para></section><section id="org.gradle.api.plugins.PluginManager:withPlugin(java.lang.String, org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>withPlugin</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> id, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.plugins.AppliedPlugin"/>&gt;</classname> action)</title><para>Executes the given action when the specified plugin is applied.
</para><para>
If a plugin with the specified ID has already been applied, the supplied action will be executed immediately.
Otherwise, the action will executed immediately after a plugin with the specified ID is applied.
</para><para>
The given action is always executed after the plugin has been applied.</para></section></section></chapter><chapter id="org.gradle.api.plugins.BasePluginExtension"><title>BasePluginExtension</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.plugins.BasePluginExtension" style="javadoc"/></seg></seglistitem></segmentedlist><para>An extension used for <apilink class="org.gradle.api.plugins.BasePlugin"/>.</para><section><title>Properties</title><table><title>Properties - BasePluginExtension</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.plugins.BasePluginExtension:archivesName"><literal>archivesName</literal></link></td><td><para>The base name to use for archive files.</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.BasePluginExtension:distsDirectory"><literal>distsDirectory</literal></link></td><td><para>The directory to generate TAR and ZIP archives into.</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.BasePluginExtension:libsDirectory"><literal>libsDirectory</literal></link></td><td><para>The directory to generate JAR and WAR archives into.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.plugins.BasePluginExtension:archivesName" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>archivesName</literal></title><para>The base name to use for archive files.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>project.name</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.plugins.BasePluginExtension:distsDirectory" role="detail"><title><apilink class="org.gradle.api.file.DirectoryProperty"/> <literal>distsDirectory</literal></title><para>The directory to generate TAR and ZIP archives into.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal><replaceable>${project.layout.buildDirectory}</replaceable>/distributions</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.plugins.BasePluginExtension:libsDirectory" role="detail"><title><apilink class="org.gradle.api.file.DirectoryProperty"/> <literal>libsDirectory</literal></title><para>The directory to generate JAR and WAR archives into.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal><replaceable>${project.layout.buildDirectory}</replaceable>/libs</literal></seg></seglistitem></segmentedlist></section></section></chapter><chapter id="org.gradle.api.plugins.JavaPluginExtension"><title>JavaPluginExtension</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.plugins.JavaPluginExtension" style="javadoc"/></seg></seglistitem></segmentedlist><para>Common configuration for JVM (Java) based projects.

This extension is added by the <apilink class="org.gradle.api.plugins.JavaBasePlugin"/> and would be more appropriately named
the <literal>JvmPluginExtension</literal> extension.  It is used to configure many of the project's
JVM-related settings and behavior.</para><section><title>Properties</title><table><title>Properties - JavaPluginExtension</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.plugins.JavaPluginExtension:docsDir"><literal>docsDir</literal></link></td><td><para>Returns a file pointing to the root directory supposed to be used for all docs.</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.JavaPluginExtension:sourceCompatibility"><literal>sourceCompatibility</literal></link></td><td><para>The source compatibility used for compiling Java sources.</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.JavaPluginExtension:sourceSets"><literal>sourceSets</literal></link></td><td><para>The source sets container.</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.JavaPluginExtension:targetCompatibility"><literal>targetCompatibility</literal></link></td><td><para>The target compatibility used for compiling Java sources.</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.JavaPluginExtension:testReportDir"><literal>testReportDir</literal></link></td><td><para>Returns a file pointing to the root directory to be used for reports.</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.JavaPluginExtension:testResultsDir"><literal>testResultsDir</literal></link></td><td><para>Returns a file pointing to the root directory of the test results.</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.JavaPluginExtension:toolchain"><literal>toolchain</literal></link></td><td><para>Gets the project wide toolchain requirements that will be used for tasks requiring a tool from the toolchain (e.g. <apilink class="org.gradle.api.tasks.compile.JavaCompile"/>).
</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - JavaPluginExtension</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.plugins.JavaPluginExtension:disableAutoTargetJvm()">disableAutoTargetJvm</link>()</literal></td><td><para>If this method is called, Gradle will not automatically try to fetch
dependencies which have a JVM version compatible with the target compatibility
of this module.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.plugins.JavaPluginExtension:manifest()">manifest</link>()</literal></td><td><para>Creates a new instance of a <apilink class="org.gradle.api.java.archives.Manifest"/>.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.plugins.JavaPluginExtension:manifest(groovy.lang.Closure)">manifest</link>(closure)</literal></td><td><para>Creates and configures a new instance of a <apilink class="org.gradle.api.java.archives.Manifest"/>. The given closure configures
the new manifest instance before it is returned.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.plugins.JavaPluginExtension:manifest(org.gradle.api.Action)">manifest</link>(action)</literal></td><td><para>Creates and configures a new instance of a <apilink class="org.gradle.api.java.archives.Manifest"/>.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.plugins.JavaPluginExtension:registerFeature(java.lang.String, org.gradle.api.Action)">registerFeature</link>(name, configureAction)</literal></td><td><para>Registers a feature.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.plugins.JavaPluginExtension:toolchain(org.gradle.api.Action)">toolchain</link>(action)</literal></td><td><para>Configures the project wide toolchain requirements for tasks that require a tool from the toolchain (e.g. <apilink class="org.gradle.api.tasks.compile.JavaCompile"/>).
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.plugins.JavaPluginExtension:withJavadocJar()">withJavadocJar</link>()</literal></td><td><para>Enables generating a Javadoc artifact for the main feature of this project. If no components with a main feature are defined for this project, this has no effect.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.plugins.JavaPluginExtension:withSourcesJar()">withSourcesJar</link>()</literal></td><td><para>Enables generating a sources artifact for the main feature of this project. If no components with a main feature are defined for this project, this has no effect.
</para></td></tr></table></section><section><title>Script blocks</title><table><title>Script blocks - JavaPluginExtension</title><thead><tr><td>Block</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.plugins.JavaPluginExtension:sourceSets(groovy.lang.Closure)"><literal>sourceSets</literal></link></td><td><para>Configures the source sets of this project.

</para></td></tr></table></section><section><title>Property details</title><section id="org.gradle.api.plugins.JavaPluginExtension:docsDir" role="detail"><title><apilink class="org.gradle.api.file.DirectoryProperty"/> <literal>docsDir</literal></title><para>Returns a file pointing to the root directory supposed to be used for all docs.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal><replaceable>${project.layout.buildDirectory}</replaceable>/docs</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.plugins.JavaPluginExtension:sourceCompatibility" role="detail"><title><apilink class="org.gradle.api.JavaVersion"/> <literal>sourceCompatibility</literal></title><para>The source compatibility used for compiling Java sources.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg>Value of the current used JVM (e.g. <literal>JavaVersion.JAVA_1_6</literal> on a 1.6 JVM).</seg></seglistitem></segmentedlist></section><section id="org.gradle.api.plugins.JavaPluginExtension:sourceSets" role="detail"><title><apilink class="org.gradle.api.tasks.SourceSetContainer"/> <literal>sourceSets</literal> (read-only)</title><para>The source sets container.</para></section><section id="org.gradle.api.plugins.JavaPluginExtension:targetCompatibility" role="detail"><title><apilink class="org.gradle.api.JavaVersion"/> <literal>targetCompatibility</literal></title><para>The target compatibility used for compiling Java sources.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>project.sourceCompatibility</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.plugins.JavaPluginExtension:testReportDir" role="detail"><title><apilink class="org.gradle.api.file.DirectoryProperty"/> <literal>testReportDir</literal></title><para>Returns a file pointing to the root directory to be used for reports.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg>
                    <literal><replaceable>${project.reporting.baseDirectory}</replaceable>/tests
                    </literal>
                </seg></seglistitem></segmentedlist></section><section id="org.gradle.api.plugins.JavaPluginExtension:testResultsDir" role="detail"><title><apilink class="org.gradle.api.file.DirectoryProperty"/> <literal>testResultsDir</literal></title><para>Returns a file pointing to the root directory of the test results.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal><replaceable>${project.layout.buildDirectory}</replaceable>/test-results</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.plugins.JavaPluginExtension:toolchain" role="detail"><title><apilink class="org.gradle.jvm.toolchain.JavaToolchainSpec"/> <literal>toolchain</literal> (read-only)</title><para>Gets the project wide toolchain requirements that will be used for tasks requiring a tool from the toolchain (e.g. <apilink class="org.gradle.api.tasks.compile.JavaCompile"/>).
</para><para>
Configuring a toolchain cannot be used together with <literal>sourceCompatibility</literal> or <literal>targetCompatibility</literal> on this extension.
Both values will be sourced from the toolchain.</para></section></section><section><title>Method details</title><section id="org.gradle.api.plugins.JavaPluginExtension:disableAutoTargetJvm()" role="detail"><title><classname>void</classname> <literal>disableAutoTargetJvm</literal>()</title><para>If this method is called, Gradle will not automatically try to fetch
dependencies which have a JVM version compatible with the target compatibility
of this module.
</para><para>
This should be used whenever the default behavior is not
applicable, in particular when for some reason it's not possible to split
a module and that this module only has some classes which require dependencies
on higher versions.</para></section><section id="org.gradle.api.plugins.JavaPluginExtension:manifest()" role="detail"><title><apilink class="org.gradle.api.java.archives.Manifest"/> <literal>manifest</literal>()</title><para>Creates a new instance of a <apilink class="org.gradle.api.java.archives.Manifest"/>.</para></section><section id="org.gradle.api.plugins.JavaPluginExtension:manifest(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.java.archives.Manifest"/> <literal>manifest</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> closure)</title><para>Creates and configures a new instance of a <apilink class="org.gradle.api.java.archives.Manifest"/>. The given closure configures
the new manifest instance before it is returned.</para></section><section id="org.gradle.api.plugins.JavaPluginExtension:manifest(org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.java.archives.Manifest"/> <literal>manifest</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.java.archives.Manifest"/>&gt;</classname> action)</title><para>Creates and configures a new instance of a <apilink class="org.gradle.api.java.archives.Manifest"/>.</para></section><section id="org.gradle.api.plugins.JavaPluginExtension:registerFeature(java.lang.String, org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>registerFeature</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.plugins.FeatureSpec"/>&gt;</classname> configureAction)</title><para>Registers a feature.
</para><para>
The new feature will have a default capability corresponding to the
"group", "name" + feature name and version of this project. For example,
if the group of the component is "org", that the project name is "lib"
the version is "1.0" and the feature name is "myFeature", then a
capability named "org:lib-my-feature:1.0" is automatically added.
</para><para>
In order to consume this feature in another module add a dependency like
the following:

</para><programlisting language="java">
 dependencies {
     implementation(project(":lib")) {
         capabilities {
             requireCapability("org:lib-my-feature:1.0")
         }
     }
 }
</programlisting><para>

The <apilink class="org.gradle.api.plugins.FeatureSpec" method="capability(java.lang.String, java.lang.String, java.lang.String)"/> method can be
used to refine the capabilities of this feature.</para></section><section id="org.gradle.api.plugins.JavaPluginExtension:toolchain(org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.jvm.toolchain.JavaToolchainSpec"/> <literal>toolchain</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.jvm.toolchain.JavaToolchainSpec"/>&gt;</classname> action)</title><para>Configures the project wide toolchain requirements for tasks that require a tool from the toolchain (e.g. <apilink class="org.gradle.api.tasks.compile.JavaCompile"/>).
</para><para>
Configuring a toolchain cannot be used together with <literal>sourceCompatibility</literal> or <literal>targetCompatibility</literal> on this extension.
Both values will be sourced from the toolchain.</para></section><section id="org.gradle.api.plugins.JavaPluginExtension:withJavadocJar()" role="detail"><title><classname>void</classname> <literal>withJavadocJar</literal>()</title><para>Enables generating a Javadoc artifact for the main feature of this project. If no components with a main feature are defined for this project, this has no effect.
</para><para>
Adds a task <literal>javadocJar</literal> that will package the output of the <literal>javadoc</literal> task in a JAR with classifier <literal>javadoc</literal>.
</para><para>
The produced artifact is registered as a documentation variant on the <literal>java</literal> component and added as a dependency on the <literal>assemble</literal> task.
This means that if <literal>maven-publish</literal> or <literal>ivy-publish</literal> is also applied, the javadoc JAR will be published.
</para><para>
If the project already has a task named <literal>javadocJar</literal> then no task is created.
</para><para>
The publishing of the Javadoc variant can also be disabled using <apilink class="org.gradle.api.component.ConfigurationVariantDetails" method="skip()"/>
through <apilink class="org.gradle.api.component.AdhocComponentWithVariants" method="withVariantsFromConfiguration(org.gradle.api.artifacts.Configuration, org.gradle.api.Action)"/>,
if it should only be built locally by calling or wiring the ':javadocJar' task.</para></section><section id="org.gradle.api.plugins.JavaPluginExtension:withSourcesJar()" role="detail"><title><classname>void</classname> <literal>withSourcesJar</literal>()</title><para>Enables generating a sources artifact for the main feature of this project. If no components with a main feature are defined for this project, this has no effect.
</para><para>
Adds a task <literal>sourcesJar</literal> that will package the Java sources of the main <apilink class="org.gradle.api.tasks.SourceSet"/> in a JAR with classifier <literal>sources</literal>.
</para><para>
The produced artifact is registered as a documentation variant on the <literal>java</literal> component and added as a dependency on the <literal>assemble</literal> task.
This means that if <literal>maven-publish</literal> or <literal>ivy-publish</literal> is also applied, the sources JAR will be published.
</para><para>
If the project already has a task named <literal>sourcesJar</literal> then no task is created.
</para><para>
The publishing of the sources variant can be disabled using <apilink class="org.gradle.api.component.ConfigurationVariantDetails" method="skip()"/>
through <apilink class="org.gradle.api.component.AdhocComponentWithVariants" method="withVariantsFromConfiguration(org.gradle.api.artifacts.Configuration, org.gradle.api.Action)"/>,
if it should only be built locally by calling or wiring the ':sourcesJar' task.</para></section></section><section><title>Script block details</title><section id="org.gradle.api.plugins.JavaPluginExtension:sourceSets(groovy.lang.Closure)" role="detail"><title><literal>sourceSets</literal> { }</title><para>Configures the source sets of this project.

</para><para>The given closure is executed to configure the <apilink class="org.gradle.api.tasks.SourceSetContainer"/>. The <apilink class="org.gradle.api.tasks.SourceSetContainer"/>
is passed to the closure as its delegate.
</para><para>
See the example below how <apilink class="org.gradle.api.tasks.SourceSet"/> 'main' is accessed and how the <apilink class="org.gradle.api.file.SourceDirectorySet"/> 'java'
is configured to exclude some package from compilation.

</para><programlisting language="java">
plugins {
    id 'java'
}

sourceSets {
  main {
    java {
      exclude 'some/unwanted/package/**'
    }
  }
}
</programlisting><segmentedlist><segtitle>Delegates to</segtitle><seglistitem><seg><apilink class="org.gradle.api.tasks.SourceSetContainer"/> from <link linkend="org.gradle.api.plugins.JavaPluginExtension:sourceSets"><literal>sourceSets</literal></link></seg></seglistitem></segmentedlist></section></section></chapter><chapter id="org.gradle.api.reporting.ReportingExtension"><title>ReportingExtension</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.reporting.ReportingExtension" style="javadoc"/></seg></seglistitem></segmentedlist><para>A project extension named "reporting" that provides basic reporting settings and utilities.
</para><para>
Example usage:
</para><programlisting language="java">
reporting {
    baseDirectory = layout.buildDirectory.dir("our-reports")
}
</programlisting><para>
When implementing a task that produces reports, the location of where to generate reports should be obtained
via the <apilink class="org.gradle.api.reporting.ReportingExtension" method="file(java.lang.String)"/> method of this extension.</para><section><title>Properties</title><table><title>Properties - ReportingExtension</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.reporting.ReportingExtension:baseDirectory"><literal>baseDirectory</literal></link></td><td><para>Returns base directory property to use for all reports.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - ReportingExtension</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.reporting.ReportingExtension:file(java.lang.String)">file</link>(path)</literal></td><td><para>Creates a file object for the given path, relative to <apilink class="org.gradle.api.reporting.ReportingExtension" method="getBaseDirectory()"/>.
</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.reporting.ReportingExtension:baseDirectory" role="detail"><title><apilink class="org.gradle.api.file.DirectoryProperty"/> <literal>baseDirectory</literal></title><para>Returns base directory property to use for all reports.</para></section></section><section><title>Method details</title><section id="org.gradle.api.reporting.ReportingExtension:file(java.lang.String)" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>file</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> path)</title><para>Creates a file object for the given path, relative to <apilink class="org.gradle.api.reporting.ReportingExtension" method="getBaseDirectory()"/>.
</para><para>
The reporting base dir can be changed, so users of this method should use it on demand where appropriate.</para></section></section></chapter><chapter id="org.gradle.api.publish.PublishingExtension"><title>PublishingExtension</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.publish.PublishingExtension" style="javadoc"/></seg></seglistitem></segmentedlist><para>The configuration of how to "publish" the different components of a project.</para><section><title>Properties</title><table><title>Properties - PublishingExtension</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.publish.PublishingExtension:publications"><literal>publications</literal></link></td><td><para>The publications of the project.
</para></td></tr><tr><td><link linkend="org.gradle.api.publish.PublishingExtension:repositories"><literal>repositories</literal></link></td><td><para>The container of possible repositories to publish to.
</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - PublishingExtension</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.publish.PublishingExtension:publications(org.gradle.api.Action)">publications</link>(configure)</literal></td><td><para>Configures the publications of this project.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.publish.PublishingExtension:repositories(org.gradle.api.Action)">repositories</link>(configure)</literal></td><td><para>Configures the container of possible repositories to publish to.

</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.publish.PublishingExtension:publications" role="detail"><title><apilink class="org.gradle.api.publish.PublicationContainer"/> <literal>publications</literal> (read-only)</title><para>The publications of the project.
</para><para>
See <apilink class="org.gradle.api.publish.PublishingExtension" method="publications(org.gradle.api.Action)"/> for more information.</para></section><section id="org.gradle.api.publish.PublishingExtension:repositories" role="detail"><title><apilink class="org.gradle.api.artifacts.dsl.RepositoryHandler"/> <literal>repositories</literal> (read-only)</title><para>The container of possible repositories to publish to.
</para><para>
See <apilink class="org.gradle.api.publish.PublishingExtension" method="repositories(org.gradle.api.Action)"/> for more information.</para></section></section><section><title>Method details</title><section id="org.gradle.api.publish.PublishingExtension:publications(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>publications</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.publish.PublicationContainer"/>&gt;</classname> configure)</title><para>Configures the publications of this project.
</para><para>
The publications container defines the outgoing publications of the project. That is, the consumable representations of things produced
by building the project. An example of a publication would be an Ivy Module (i.e. <literal>ivy.xml</literal> and artifacts), or
Maven Project (i.e. <literal>pom.xml</literal> and artifacts).
</para><para>
Actual publication implementations and the ability to create them are provided by different plugins. The "publishing" plugin itself does not provide any publication types.
For example, given that the 'maven-publish' plugin provides a <apilink class="org.gradle.api.publish.maven.MavenPublication"/> type, you can create a publication like:
</para><programlisting language="java">
plugins {
    id 'maven-publish'
}

publishing {
  publications {
    myPublicationName(MavenPublication) {
      // Configure the publication here
    }
  }
}
</programlisting><para>
Please see <apilink class="org.gradle.api.publish.ivy.IvyPublication"/> and <apilink class="org.gradle.api.publish.maven.MavenPublication"/> for more information on publishing in these specific formats.</para></section><section id="org.gradle.api.publish.PublishingExtension:repositories(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>repositories</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.artifacts.dsl.RepositoryHandler"/>&gt;</classname> configure)</title><para>Configures the container of possible repositories to publish to.

</para><programlisting language="java">
plugins {
    id 'publishing'
}

publishing {
  repositories {
    // Create an ivy publication destination named "releases"
    ivy {
      name = "releases"
      url = "http://my.org/ivy-repos/releases"
    }
  }
}
</programlisting><para>

The <literal>repositories</literal> block is backed by a <apilink class="org.gradle.api.artifacts.dsl.RepositoryHandler"/>, which is the same DSL as that that is used for declaring repositories to consume dependencies from. However,
certain types of repositories that can be created by the repository handler are not valid for publishing, such as <apilink class="org.gradle.api.artifacts.dsl.RepositoryHandler" method="mavenCentral()"/>.
</para><para>
At this time, only repositories created by the <literal>ivy()</literal> factory method have any effect. Please see <apilink class="org.gradle.api.publish.ivy.IvyPublication"/>
for information on how this can be used for publishing to Ivy repositories.</para></section></section></chapter><chapter id="org.gradle.api.publish.PublicationContainer"><title>PublicationContainer</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.publish.PublicationContainer" style="javadoc"/></seg></seglistitem></segmentedlist><para>A <literal>PublicationContainer</literal> is responsible for creating and managing <apilink class="org.gradle.api.publish.Publication"/> instances.

The set of available publication types is dependent on the application of particular plugins:
</para><itemizedlist><listitem>The <apilink class="org.gradle.api.publish.maven.plugins.MavenPublishPlugin"/> makes it possible to create <apilink class="org.gradle.api.publish.maven.MavenPublication"/> instances.</listitem><listitem>The <apilink class="org.gradle.api.publish.ivy.plugins.IvyPublishPlugin"/> makes it possible to create <apilink class="org.gradle.api.publish.ivy.IvyPublication"/> instances.</listitem></itemizedlist><programlisting language="java">
plugins {
    id 'ivy-publish'
}

publishing.publications.create('publication-name', IvyPublication) {
    // Configure the ivy publication here
}
</programlisting><para>

The usual way to add publications is via a configuration block.
See the documentation for <apilink class="org.gradle.api.publish.PublishingExtension" method="publications(org.gradle.api.Action)"/> for examples of how to create and configure publications.</para><section><title>Properties</title><para>No properties</para></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section></chapter><chapter id="org.gradle.api.artifacts.dsl.RepositoryHandler"><title>RepositoryHandler</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.artifacts.dsl.RepositoryHandler" style="javadoc"/></seg></seglistitem></segmentedlist><para>A <literal>RepositoryHandler</literal> manages a set of repositories, allowing repositories to be defined and queried.</para><section><title>Properties</title><para>No properties</para></section><section><title>Methods</title><table><title>Methods - RepositoryHandler</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.artifacts.dsl.RepositoryHandler:flatDir(groovy.lang.Closure)">flatDir</link>(configureClosure)</literal></td><td><para>Adds and configures a repository which will look for dependencies in a number of local directories.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.dsl.RepositoryHandler:flatDir(java.util.Map)">flatDir</link>(args)</literal></td><td><para>Adds a resolver that looks into a number of directories for artifacts. The artifacts are expected to be located in the
root of the specified directories. The resolver ignores any group/organization information specified in the
dependency section of your build script. If you only use this kind of resolver you might specify your
dependencies like <literal>":junit:4.4"</literal> instead of <literal>"junit:junit:4.4"</literal>.

The following parameter are accepted as keys for the map:

</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.dsl.RepositoryHandler:flatDir(org.gradle.api.Action)">flatDir</link>(action)</literal></td><td><para>Adds and configures a repository which will look for dependencies in a number of local directories.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.dsl.RepositoryHandler:google()">google</link>()</literal></td><td><para>Adds a repository which looks in Google's Maven repository for dependencies.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.dsl.RepositoryHandler:google(org.gradle.api.Action)">google</link>(action)</literal></td><td><para>Adds a repository which looks in Google's Maven repository for dependencies.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.dsl.RepositoryHandler:gradlePluginPortal()">gradlePluginPortal</link>()</literal></td><td><para>Adds a repository which looks in Gradle Central Plugin Repository for dependencies.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.dsl.RepositoryHandler:gradlePluginPortal(org.gradle.api.Action)">gradlePluginPortal</link>(action)</literal></td><td><para>Adds a repository which looks in Gradle Central Plugin Repository for dependencies.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.dsl.RepositoryHandler:ivy(groovy.lang.Closure)">ivy</link>(closure)</literal></td><td><para>Adds and configures an Ivy repository. Newly created instance of <literal>IvyArtifactRepository</literal> is passed as an argument to the closure.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.dsl.RepositoryHandler:ivy(org.gradle.api.Action)">ivy</link>(action)</literal></td><td><para>Adds and configures an Ivy repository.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.dsl.RepositoryHandler:maven(groovy.lang.Closure)">maven</link>(closure)</literal></td><td><para>Adds and configures a Maven repository. Newly created instance of <literal>MavenArtifactRepository</literal> is passed as an argument to the closure.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.dsl.RepositoryHandler:maven(org.gradle.api.Action)">maven</link>(action)</literal></td><td><para>Adds and configures a Maven repository.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.dsl.RepositoryHandler:mavenCentral()">mavenCentral</link>()</literal></td><td><para>Adds a repository which looks in the Maven central repository for dependencies. The URL used to access this repository is
<literal>https://repo.maven.apache.org/maven2/</literal>. The name of the repository is
<literal>MavenRepo</literal>.

</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.dsl.RepositoryHandler:mavenCentral(java.util.Map)">mavenCentral</link>(args)</literal></td><td><para>Adds a repository which looks in the Maven central repository for dependencies. The URL used to access this repository is
<literal>https://repo.maven.apache.org/maven2/</literal>.

</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.dsl.RepositoryHandler:mavenCentral(org.gradle.api.Action)">mavenCentral</link>(action)</literal></td><td><para>Adds a repository which looks in the Maven central repository for dependencies. The URL used to access this repository is
<literal>https://repo.maven.apache.org/maven2/</literal>. The name of the repository is
<literal>MavenRepo</literal>.

</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.dsl.RepositoryHandler:mavenLocal()">mavenLocal</link>()</literal></td><td><para>Adds a repository which looks in the local Maven cache for dependencies. The name of the repository is
<literal>MavenLocal</literal>.

</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.dsl.RepositoryHandler:mavenLocal(org.gradle.api.Action)">mavenLocal</link>(action)</literal></td><td><para>Adds a repository which looks in the local Maven cache for dependencies. The name of the repository is
<literal>MavenLocal</literal>.

</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Method details</title><section id="org.gradle.api.artifacts.dsl.RepositoryHandler:flatDir(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.artifacts.repositories.FlatDirectoryArtifactRepository"/> <literal>flatDir</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> configureClosure)</title><para>Adds and configures a repository which will look for dependencies in a number of local directories.</para></section><section id="org.gradle.api.artifacts.dsl.RepositoryHandler:flatDir(java.util.Map)" role="detail"><title><apilink class="org.gradle.api.artifacts.repositories.FlatDirectoryArtifactRepository"/> <literal>flatDir</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, ?&gt;</classname> args)</title><para>Adds a resolver that looks into a number of directories for artifacts. The artifacts are expected to be located in the
root of the specified directories. The resolver ignores any group/organization information specified in the
dependency section of your build script. If you only use this kind of resolver you might specify your
dependencies like <literal>":junit:4.4"</literal> instead of <literal>"junit:junit:4.4"</literal>.

The following parameter are accepted as keys for the map:

</para><table><para><UNHANDLED-ELEMENT>&lt;caption&gt;Shows property keys and associated values&lt;/caption&gt;</UNHANDLED-ELEMENT>
</para><thead><tr><td>Key</td><td>Description of Associated Value</td></tr></thead><tr><td><literal>name</literal></td><td><emphasis>(optional)</emphasis> The name of the repository.
The default is a Hash value of the rootdir paths. The name is used in the console output,
to point to information related to a particular repository. A name must be unique amongst a repository group.</td></tr><tr><td><literal>dirs</literal></td><td>Specifies a list of rootDirs where to look for dependencies. These are evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/></td></tr></table><para>Examples:</para><programlisting language="java">
repositories {
    flatDir name: 'libs', dirs: "$projectDir/libs"
    flatDir dirs: ["$projectDir/libs1", "$projectDir/libs2"]
}
</programlisting></section><section id="org.gradle.api.artifacts.dsl.RepositoryHandler:flatDir(org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.artifacts.repositories.FlatDirectoryArtifactRepository"/> <literal>flatDir</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.artifacts.repositories.FlatDirectoryArtifactRepository"/>&gt;</classname> action)</title><para>Adds and configures a repository which will look for dependencies in a number of local directories.</para></section><section id="org.gradle.api.artifacts.dsl.RepositoryHandler:google()" role="detail"><title><apilink class="org.gradle.api.artifacts.repositories.MavenArtifactRepository"/> <literal>google</literal>()</title><para>Adds a repository which looks in Google's Maven repository for dependencies.
</para><para>
The URL used to access this repository is "https://dl.google.com/dl/android/maven2/".
</para><para>
Examples:
</para><programlisting language="java">
repositories {
    google()
}
</programlisting></section><section id="org.gradle.api.artifacts.dsl.RepositoryHandler:google(org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.artifacts.repositories.MavenArtifactRepository"/> <literal>google</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.artifacts.repositories.MavenArtifactRepository"/>&gt;</classname> action)</title><para>Adds a repository which looks in Google's Maven repository for dependencies.
</para><para>
The URL used to access this repository is "https://dl.google.com/dl/android/maven2/".
</para><para>
Examples:
</para><programlisting language="java">
repositories {
    google()
}
</programlisting></section><section id="org.gradle.api.artifacts.dsl.RepositoryHandler:gradlePluginPortal()" role="detail"><title><apilink class="org.gradle.api.artifacts.repositories.ArtifactRepository"/> <literal>gradlePluginPortal</literal>()</title><para>Adds a repository which looks in Gradle Central Plugin Repository for dependencies.</para></section><section id="org.gradle.api.artifacts.dsl.RepositoryHandler:gradlePluginPortal(org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.artifacts.repositories.ArtifactRepository"/> <literal>gradlePluginPortal</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.artifacts.repositories.ArtifactRepository"/>&gt;</classname> action)</title><para>Adds a repository which looks in Gradle Central Plugin Repository for dependencies.</para></section><section id="org.gradle.api.artifacts.dsl.RepositoryHandler:ivy(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.artifacts.repositories.IvyArtifactRepository"/> <literal>ivy</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> closure)</title><para>Adds and configures an Ivy repository. Newly created instance of <literal>IvyArtifactRepository</literal> is passed as an argument to the closure.</para></section><section id="org.gradle.api.artifacts.dsl.RepositoryHandler:ivy(org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.artifacts.repositories.IvyArtifactRepository"/> <literal>ivy</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.artifacts.repositories.IvyArtifactRepository"/>&gt;</classname> action)</title><para>Adds and configures an Ivy repository.</para></section><section id="org.gradle.api.artifacts.dsl.RepositoryHandler:maven(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.artifacts.repositories.MavenArtifactRepository"/> <literal>maven</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> closure)</title><para>Adds and configures a Maven repository. Newly created instance of <literal>MavenArtifactRepository</literal> is passed as an argument to the closure.</para></section><section id="org.gradle.api.artifacts.dsl.RepositoryHandler:maven(org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.artifacts.repositories.MavenArtifactRepository"/> <literal>maven</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.artifacts.repositories.MavenArtifactRepository"/>&gt;</classname> action)</title><para>Adds and configures a Maven repository.</para></section><section id="org.gradle.api.artifacts.dsl.RepositoryHandler:mavenCentral()" role="detail"><title><apilink class="org.gradle.api.artifacts.repositories.MavenArtifactRepository"/> <literal>mavenCentral</literal>()</title><para>Adds a repository which looks in the Maven central repository for dependencies. The URL used to access this repository is
<literal>https://repo.maven.apache.org/maven2/</literal>. The name of the repository is
<literal>MavenRepo</literal>.

</para><para>Examples:</para><programlisting language="java">
repositories {
    mavenCentral()
}
</programlisting></section><section id="org.gradle.api.artifacts.dsl.RepositoryHandler:mavenCentral(java.util.Map)" role="detail"><title><apilink class="org.gradle.api.artifacts.repositories.MavenArtifactRepository"/> <literal>mavenCentral</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, ?&gt;</classname> args)</title><para>Adds a repository which looks in the Maven central repository for dependencies. The URL used to access this repository is
<literal>https://repo.maven.apache.org/maven2/</literal>.

</para><para>The following parameter are accepted as keys for the map:

</para><table><para><UNHANDLED-ELEMENT>&lt;caption&gt;Shows property keys and associated values&lt;/caption&gt;</UNHANDLED-ELEMENT>
</para><thead><tr><td>Key</td><td>Description of Associated Value</td></tr></thead><tr><td><literal>name</literal></td><td><emphasis>(optional)</emphasis> The name of the repository. The default is
<literal>MavenRepo</literal> is used as the name. A name
must be unique amongst a repository group.
</td></tr><tr><td><literal>artifactUrls</literal></td><td>A single jar repository or a collection of jar repositories containing additional artifacts not found in the Maven central repository.
But be aware that the POM must exist in Maven central.
The provided values are evaluated as per <apilink class="org.gradle.api.Project" method="uri(java.lang.Object)"/>.</td></tr></table><para>Examples:</para><programlisting language="java">
repositories {
    mavenCentral artifactUrls: ["http://www.mycompany.com/artifacts1", "http://www.mycompany.com/artifacts2"]
    mavenCentral name: "nonDefaultName", artifactUrls: ["http://www.mycompany.com/artifacts1"]
}
</programlisting></section><section id="org.gradle.api.artifacts.dsl.RepositoryHandler:mavenCentral(org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.artifacts.repositories.MavenArtifactRepository"/> <literal>mavenCentral</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.artifacts.repositories.MavenArtifactRepository"/>&gt;</classname> action)</title><para>Adds a repository which looks in the Maven central repository for dependencies. The URL used to access this repository is
<literal>https://repo.maven.apache.org/maven2/</literal>. The name of the repository is
<literal>MavenRepo</literal>.

</para><para>Examples:</para><programlisting language="java">
repositories {
    mavenCentral()
}
</programlisting></section><section id="org.gradle.api.artifacts.dsl.RepositoryHandler:mavenLocal()" role="detail"><title><apilink class="org.gradle.api.artifacts.repositories.MavenArtifactRepository"/> <literal>mavenLocal</literal>()</title><para>Adds a repository which looks in the local Maven cache for dependencies. The name of the repository is
<literal>MavenLocal</literal>.

</para><para>Examples:</para><programlisting language="java">
repositories {
    mavenLocal()
}
</programlisting><para>
The location for the repository is determined as follows (in order of precedence):
</para><orderedlist><listitem>The value of system property 'maven.repo.local' if set;</listitem><listitem>The value of element &lt;localRepository&gt; of <literal>~/.m2/settings.xml</literal> if this file exists and element is set;</listitem><listitem>The value of element &lt;localRepository&gt; of <literal>$M2_HOME/conf/settings.xml</literal> (where <literal>$M2_HOME</literal> is the value of the environment variable with that name) if this file exists and element is set;</listitem><listitem>The path <literal>~/.m2/repository</literal>.</listitem></orderedlist></section><section id="org.gradle.api.artifacts.dsl.RepositoryHandler:mavenLocal(org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.artifacts.repositories.MavenArtifactRepository"/> <literal>mavenLocal</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.artifacts.repositories.MavenArtifactRepository"/>&gt;</classname> action)</title><para>Adds a repository which looks in the local Maven cache for dependencies. The name of the repository is
<literal>MavenLocal</literal>.

</para><para>Examples:</para><programlisting language="java">
repositories {
    mavenLocal()
}
</programlisting><para>
The location for the repository is determined as follows (in order of precedence):
</para><orderedlist><listitem>The value of system property 'maven.repo.local' if set;</listitem><listitem>The value of element &lt;localRepository&gt; of <literal>~/.m2/settings.xml</literal> if this file exists and element is set;</listitem><listitem>The value of element &lt;localRepository&gt; of <literal>$M2_HOME/conf/settings.xml</literal> (where <literal>$M2_HOME</literal> is the value of the environment variable with that name) if this file exists and element is set;</listitem><listitem>The path <literal>~/.m2/repository</literal>.</listitem></orderedlist></section></section></chapter><chapter id="org.gradle.api.plugins.JavaApplication"><title>JavaApplication</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.plugins.JavaApplication" style="javadoc"/></seg></seglistitem></segmentedlist><para>Configuration for a Java application, defining how to assemble the application.
</para><para>
An instance of this type is added as a project extension by the Java application plugin
under the name 'application'.

</para><programlisting language="java">
plugins {
    id 'application'
}

application {
  mainClass.set("com.foo.bar.FooBar")
}
</programlisting><section><title>Properties</title><table><title>Properties - JavaApplication</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.plugins.JavaApplication:applicationDefaultJvmArgs"><literal>applicationDefaultJvmArgs</literal></link></td><td><para>Array of string arguments to pass to the JVM when running the application</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.JavaApplication:applicationDistribution"><literal>applicationDistribution</literal></link></td><td><para>The specification of the contents of the distribution.</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.JavaApplication:applicationName"><literal>applicationName</literal></link></td><td><para>The name of the application.</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.JavaApplication:executableDir"><literal>executableDir</literal></link></td><td><para>Directory to place executables in</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.JavaApplication:mainClass"><literal>mainClass</literal></link></td><td><para>The fully qualified name of the application's main class.</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.JavaApplication:mainModule"><literal>mainModule</literal></link></td><td><para>The name of the application's Java module if it should run as a module.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.plugins.JavaApplication:applicationDefaultJvmArgs" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>applicationDefaultJvmArgs</literal></title><para>Array of string arguments to pass to the JVM when running the application</para><segmentedlist><segtitle>Default value</segtitle><seglistitem><seg><literal>[]</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.plugins.JavaApplication:applicationDistribution" role="detail"><title><apilink class="org.gradle.api.file.CopySpec"/> <literal>applicationDistribution</literal></title><para>The specification of the contents of the distribution.</para><para>
Use this <apilink class="org.gradle.api.file.CopySpec"/> to include extra files/resource in the application distribution.
</para><programlisting language="java">
plugins {
    id 'application'
}

application {
    applicationDistribution.from("some/dir") {
        include "*.txt"
    }
}
</programlisting><para>
Note that the application plugin pre configures this spec to; include the contents of "<literal>src/dist</literal>",
copy the application start scripts into the "<literal>bin</literal>" directory, and copy the built jar and its dependencies
into the "<literal>lib</literal>" directory.</para><segmentedlist><segtitle>Default value</segtitle><seglistitem><seg>A copy spec that includes all of the contents of <literal>src/dist</literal>, copies the start scripts into <literal>bin</literal>, and copies the built jar and all dependencies into <literal>lib</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.plugins.JavaApplication:applicationName" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>applicationName</literal></title><para>The name of the application.</para><segmentedlist><segtitle>Default value</segtitle><seglistitem><seg><literal>project.name</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.plugins.JavaApplication:executableDir" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>executableDir</literal></title><para>Directory to place executables in</para><segmentedlist><segtitle>Default value</segtitle><seglistitem><seg><literal>"bin"</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.plugins.JavaApplication:mainClass" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>mainClass</literal></title><para>The fully qualified name of the application's main class.</para><segmentedlist><segtitle>Default value</segtitle><seglistitem><seg><literal>null</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.plugins.JavaApplication:mainModule" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>mainModule</literal></title><para>The name of the application's Java module if it should run as a module.</para><segmentedlist><segtitle>Default value</segtitle><seglistitem><seg><literal>null</literal></seg></seglistitem></segmentedlist></section></section></chapter><chapter id="org.gradle.api.NamedDomainObjectCollection"><title>NamedDomainObjectCollection</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.NamedDomainObjectCollection" style="javadoc"/></seg></seglistitem></segmentedlist><segmentedlist><segtitle>Known Subtypes</segtitle><seglistitem><seg><simplelist columns="1" type="vert"><member><apilink class="org.gradle.api.NamedDomainObjectSet"/></member></simplelist></seg></seglistitem></segmentedlist><para>A <literal>NamedDomainObjectCollection</literal> represents a collection of objects that have an inherent, constant, name.</para><para>Objects to be added to a named domain object collection must implement <literal>equals()</literal> in such a way that no two objects
with different names are considered equal. That is, all equality tests <emphasis>must</emphasis> consider the name as an
equality key. Behavior is undefined if two objects with different names are considered equal by their <literal>equals()</literal> implementation.</para><para>All implementations <emphasis>must</emphasis> guarantee that all elements in the collection are uniquely named. That is,
an attempt to add an object with a name equal to the name of any existing object in the collection will fail.
Implementations may choose to simply return false from <literal>add(T)</literal> or to throw an exception.</para><para>Objects in the collection are accessible as read-only properties, using the name of the object
as the property name. For example (assuming the 'name' property provides the object name):</para><programlisting language="java">
books.add(new Book(name: "gradle", title: null))
books.gradle.title = "Gradle in Action"
</programlisting><para>A dynamic method is added for each object which takes a configuration closure. This is equivalent to calling
<apilink class="org.gradle.api.NamedDomainObjectCollection" method="getByName(java.lang.String, groovy.lang.Closure)"/>. For example:</para><programlisting language="java">
books.add(new Book(name: "gradle", title: null))
books.gradle {
  title = "Gradle in Action"
}
</programlisting><para>You can also use the <literal>[]</literal> operator to access the objects of a collection by name. For example:</para><programlisting language="java">
books.add(new Book(name: "gradle", title: null))
books['gradle'].title = "Gradle in Action"
</programlisting><para><apilink class="org.gradle.api.Rule"/> objects can be attached to the collection in order to respond to requests for objects by name
where no object with name exists in the collection. This mechanism can be used to create objects on demand.
For example: </para><programlisting language="java">
books.addRule('create any') { books.add(new Book(name: "gradle", title: null)) }
books.gradle.name == "gradle"
</programlisting><section><title>Properties</title><para>No properties</para></section><section><title>Methods</title><table><title>Methods - NamedDomainObjectCollection</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.NamedDomainObjectCollection:getByName(java.lang.String)">getByName</link>(name)</literal></td><td><para>Locates an object by name, failing if there is no such object.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.NamedDomainObjectCollection:getByName(java.lang.String, groovy.lang.Closure)">getByName</link>(name, configureClosure)</literal></td><td><para>Locates an object by name, failing if there is no such object. The given configure closure is executed against
the object before it is returned from this method. The object is passed to the closure as its delegate.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.NamedDomainObjectCollection:getByName(java.lang.String, org.gradle.api.Action)">getByName</link>(name, configureAction)</literal></td><td><para>Locates an object by name, failing if there is no such object. The given configure action is executed against
the object before it is returned from this method.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.NamedDomainObjectCollection:named(java.lang.String)">named</link>(name)</literal></td><td><para>Locates a object by name, failing if there is no such object.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.NamedDomainObjectCollection:named(java.lang.String, java.lang.Class)">named</link>(name, type)</literal></td><td><para>Locates a object by name and type, failing if there is no such object.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.NamedDomainObjectCollection:named(java.lang.String, java.lang.Class, org.gradle.api.Action)">named</link>(name, type, configurationAction)</literal></td><td><para>Locates a object by name and type, failing if there is no such object.
The given configure action is executed against the object before it is returned from the provider.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.NamedDomainObjectCollection:named(java.lang.String, org.gradle.api.Action)">named</link>(name, configurationAction)</literal></td><td><para>Locates a object by name, failing if there is no such object.
The given configure action is executed against the object before it is returned from the provider.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.NamedDomainObjectCollection:named(org.gradle.api.specs.Spec)">named</link>(nameFilter)</literal></td><td><caution>Incubating</caution><para>Returns a collection containing the objects with names matching the provided filter.
The returned collection is live, so that when matching objects are added to this collection,
they are also visible in the filtered collection.
</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Method details</title><section id="org.gradle.api.NamedDomainObjectCollection:getByName(java.lang.String)" role="detail"><title><classname>T</classname> <literal>getByName</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name)</title><para>Locates an object by name, failing if there is no such object.
</para><para>
This operation is eager and will cause the returned element to be realized.</para></section><section id="org.gradle.api.NamedDomainObjectCollection:getByName(java.lang.String, groovy.lang.Closure)" role="detail"><title><classname>T</classname> <literal>getByName</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> configureClosure)</title><para>Locates an object by name, failing if there is no such object. The given configure closure is executed against
the object before it is returned from this method. The object is passed to the closure as its delegate.
</para><para>
This operation is eager and will cause the returned element to be realized.</para></section><section id="org.gradle.api.NamedDomainObjectCollection:getByName(java.lang.String, org.gradle.api.Action)" role="detail"><title><classname>T</classname> <literal>getByName</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <classname>T</classname>&gt;</classname> configureAction)</title><para>Locates an object by name, failing if there is no such object. The given configure action is executed against
the object before it is returned from this method.
</para><para>
This operation is eager and will cause the returned element to be realized.</para></section><section id="org.gradle.api.NamedDomainObjectCollection:named(java.lang.String)" role="detail"><title><classname><apilink class="org.gradle.api.NamedDomainObjectProvider"/>&lt;<classname>T</classname>&gt;</classname> <literal>named</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name)</title><para>Locates a object by name, failing if there is no such object.
</para><para>
This method is lazy and will not cause the returned element to be realized.</para></section><section id="org.gradle.api.NamedDomainObjectCollection:named(java.lang.String, java.lang.Class)" role="detail"><title><classname><apilink class="org.gradle.api.NamedDomainObjectProvider"/>&lt;<classname>S</classname>&gt;</classname> <literal>named</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html"><classname>Class</classname></ulink>&lt;<classname>S</classname>&gt;</classname> type)</title><para>Locates a object by name and type, failing if there is no such object.
</para><para>
This method is lazy and will not cause the returned element to be realized.</para></section><section id="org.gradle.api.NamedDomainObjectCollection:named(java.lang.String, java.lang.Class, org.gradle.api.Action)" role="detail"><title><classname><apilink class="org.gradle.api.NamedDomainObjectProvider"/>&lt;<classname>S</classname>&gt;</classname> <literal>named</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html"><classname>Class</classname></ulink>&lt;<classname>S</classname>&gt;</classname> type, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <classname>S</classname>&gt;</classname> configurationAction)</title><para>Locates a object by name and type, failing if there is no such object.
The given configure action is executed against the object before it is returned from the provider.
</para><para>
This method is lazy and will not cause the returned element to be realized.</para></section><section id="org.gradle.api.NamedDomainObjectCollection:named(java.lang.String, org.gradle.api.Action)" role="detail"><title><classname><apilink class="org.gradle.api.NamedDomainObjectProvider"/>&lt;<classname>T</classname>&gt;</classname> <literal>named</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <classname>T</classname>&gt;</classname> configurationAction)</title><para>Locates a object by name, failing if there is no such object.
The given configure action is executed against the object before it is returned from the provider.
</para><para>
This method is lazy and will not cause the returned element to be realized.</para></section><section id="org.gradle.api.NamedDomainObjectCollection:named(org.gradle.api.specs.Spec)" role="detail"><title><classname><apilink class="org.gradle.api.NamedDomainObjectCollection"/>&lt;<classname>T</classname>&gt;</classname> <literal>named</literal>(<classname><apilink class="org.gradle.api.specs.Spec"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> nameFilter)</title><caution><para>Note: This method is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Returns a collection containing the objects with names matching the provided filter.
The returned collection is live, so that when matching objects are added to this collection,
they are also visible in the filtered collection.
</para><para>
This method is an intermediate operation. It does not change the realized/unrealized state of the elements in the collection.</para></section></section></chapter><chapter id="org.gradle.api.NamedDomainObjectSet"><title>NamedDomainObjectSet</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.NamedDomainObjectSet" style="javadoc"/></seg></seglistitem></segmentedlist><segmentedlist><segtitle>Known Subtypes</segtitle><seglistitem><seg><simplelist columns="1" type="vert"><member><apilink class="org.gradle.api.NamedDomainObjectContainer"/></member><member><apilink class="org.gradle.api.tasks.TaskCollection"/></member><member><apilink class="org.gradle.api.reporting.ReportContainer"/></member></simplelist></seg></seglistitem></segmentedlist><para>A specialization of <apilink class="org.gradle.api.NamedDomainObjectCollection"/> that also implements <ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink> and orders objects by their inherent name.</para><para>All object equality is determined in terms of object names. That is, calling <literal>remove()</literal> with an object that is NOT equal to
an existing object in terms of <literal>equals</literal>, but IS in terms of name equality will result in the existing collection item with
the equal name being removed.</para><para>You can create an instance of this type using the factory method <apilink class="org.gradle.api.model.ObjectFactory" method="namedDomainObjectSet(java.lang.Class)"/>.</para><section><title>Properties</title><para>No properties</para></section><section><title>Methods</title><table><title>Methods - NamedDomainObjectSet</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.NamedDomainObjectSet:getByName(java.lang.String)">getByName</link>(name)</literal></td><td><para>Locates an object by name, failing if there is no such object.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.NamedDomainObjectSet:getByName(java.lang.String, groovy.lang.Closure)">getByName</link>(name, configureClosure)</literal></td><td><para>Locates an object by name, failing if there is no such object. The given configure closure is executed against
the object before it is returned from this method. The object is passed to the closure as its delegate.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.NamedDomainObjectSet:getByName(java.lang.String, org.gradle.api.Action)">getByName</link>(name, configureAction)</literal></td><td><para>Locates an object by name, failing if there is no such object. The given configure action is executed against
the object before it is returned from this method.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.NamedDomainObjectSet:named(java.lang.String)">named</link>(name)</literal></td><td><para>Locates a object by name, failing if there is no such object.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.NamedDomainObjectSet:named(java.lang.String, java.lang.Class)">named</link>(name, type)</literal></td><td><para>Locates a object by name and type, failing if there is no such object.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.NamedDomainObjectSet:named(java.lang.String, java.lang.Class, org.gradle.api.Action)">named</link>(name, type, configurationAction)</literal></td><td><para>Locates a object by name and type, failing if there is no such object.
The given configure action is executed against the object before it is returned from the provider.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.NamedDomainObjectSet:named(java.lang.String, org.gradle.api.Action)">named</link>(name, configurationAction)</literal></td><td><para>Locates a object by name, failing if there is no such object.
The given configure action is executed against the object before it is returned from the provider.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.NamedDomainObjectSet:named(org.gradle.api.specs.Spec)">named</link>(nameFilter)</literal></td><td><caution>Incubating</caution><para>Returns a collection containing the objects with names matching the provided filter.
The returned collection is live, so that when matching objects are added to this collection,
they are also visible in the filtered collection.
</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Method details</title><section id="org.gradle.api.NamedDomainObjectSet:getByName(java.lang.String)" role="detail"><title><classname>T</classname> <literal>getByName</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name)</title><para>Locates an object by name, failing if there is no such object.
</para><para>
This operation is eager and will cause the returned element to be realized.</para></section><section id="org.gradle.api.NamedDomainObjectSet:getByName(java.lang.String, groovy.lang.Closure)" role="detail"><title><classname>T</classname> <literal>getByName</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> configureClosure)</title><para>Locates an object by name, failing if there is no such object. The given configure closure is executed against
the object before it is returned from this method. The object is passed to the closure as its delegate.
</para><para>
This operation is eager and will cause the returned element to be realized.</para></section><section id="org.gradle.api.NamedDomainObjectSet:getByName(java.lang.String, org.gradle.api.Action)" role="detail"><title><classname>T</classname> <literal>getByName</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <classname>T</classname>&gt;</classname> configureAction)</title><para>Locates an object by name, failing if there is no such object. The given configure action is executed against
the object before it is returned from this method.
</para><para>
This operation is eager and will cause the returned element to be realized.</para></section><section id="org.gradle.api.NamedDomainObjectSet:named(java.lang.String)" role="detail"><title><classname><apilink class="org.gradle.api.NamedDomainObjectProvider"/>&lt;<classname>T</classname>&gt;</classname> <literal>named</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name)</title><para>Locates a object by name, failing if there is no such object.
</para><para>
This method is lazy and will not cause the returned element to be realized.</para></section><section id="org.gradle.api.NamedDomainObjectSet:named(java.lang.String, java.lang.Class)" role="detail"><title><classname><apilink class="org.gradle.api.NamedDomainObjectProvider"/>&lt;<classname>S</classname>&gt;</classname> <literal>named</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html"><classname>Class</classname></ulink>&lt;<classname>S</classname>&gt;</classname> type)</title><para>Locates a object by name and type, failing if there is no such object.
</para><para>
This method is lazy and will not cause the returned element to be realized.</para></section><section id="org.gradle.api.NamedDomainObjectSet:named(java.lang.String, java.lang.Class, org.gradle.api.Action)" role="detail"><title><classname><apilink class="org.gradle.api.NamedDomainObjectProvider"/>&lt;<classname>S</classname>&gt;</classname> <literal>named</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html"><classname>Class</classname></ulink>&lt;<classname>S</classname>&gt;</classname> type, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <classname>S</classname>&gt;</classname> configurationAction)</title><para>Locates a object by name and type, failing if there is no such object.
The given configure action is executed against the object before it is returned from the provider.
</para><para>
This method is lazy and will not cause the returned element to be realized.</para></section><section id="org.gradle.api.NamedDomainObjectSet:named(java.lang.String, org.gradle.api.Action)" role="detail"><title><classname><apilink class="org.gradle.api.NamedDomainObjectProvider"/>&lt;<classname>T</classname>&gt;</classname> <literal>named</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <classname>T</classname>&gt;</classname> configurationAction)</title><para>Locates a object by name, failing if there is no such object.
The given configure action is executed against the object before it is returned from the provider.
</para><para>
This method is lazy and will not cause the returned element to be realized.</para></section><section id="org.gradle.api.NamedDomainObjectSet:named(org.gradle.api.specs.Spec)" role="detail"><title><classname><apilink class="org.gradle.api.NamedDomainObjectCollection"/>&lt;<classname>T</classname>&gt;</classname> <literal>named</literal>(<classname><apilink class="org.gradle.api.specs.Spec"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> nameFilter)</title><caution><para>Note: This method is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Returns a collection containing the objects with names matching the provided filter.
The returned collection is live, so that when matching objects are added to this collection,
they are also visible in the filtered collection.
</para><para>
This method is an intermediate operation. It does not change the realized/unrealized state of the elements in the collection.</para></section></section></chapter><chapter id="org.gradle.api.NamedDomainObjectContainer"><title>NamedDomainObjectContainer</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.NamedDomainObjectContainer" style="javadoc"/></seg></seglistitem></segmentedlist><segmentedlist><segtitle>Known Subtypes</segtitle><seglistitem><seg><simplelist columns="1" type="vert"><member><apilink class="org.gradle.api.distribution.DistributionContainer"/></member><member><apilink class="org.gradle.api.artifacts.ConfigurationContainer"/></member><member><apilink class="org.gradle.api.PolymorphicDomainObjectContainer"/></member></simplelist></seg></seglistitem></segmentedlist><para>A named domain object container is a specialization of <apilink class="org.gradle.api.NamedDomainObjectSet"/> that adds the ability to create
instances of the element type.</para><para>Implementations may use different strategies for creating new object instances.</para><para>Note that a container is an implementation of <ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/SortedSet.html"><classname>SortedSet</classname></ulink>, which means that the container is guaranteed
to only contain elements with unique names within this container. Furthermore, items are ordered by their name.</para><para>You can create an instance of this type using the factory method <apilink class="org.gradle.api.model.ObjectFactory" method="domainObjectContainer(java.lang.Class)"/>.</para><section><title>Properties</title><para>No properties</para></section><section><title>Methods</title><table><title>Methods - NamedDomainObjectContainer</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.NamedDomainObjectContainer:create(java.lang.String)">create</link>(name)</literal></td><td><para>Creates a new item with the given name, adding it to this container.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.NamedDomainObjectContainer:create(java.lang.String, groovy.lang.Closure)">create</link>(name, configureClosure)</literal></td><td><para>Creates a new item with the given name, adding it to this container, then configuring it with the given closure.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.NamedDomainObjectContainer:create(java.lang.String, org.gradle.api.Action)">create</link>(name, configureAction)</literal></td><td><para>Creates a new item with the given name, adding it to this container, then configuring it with the given action.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.NamedDomainObjectContainer:getByName(java.lang.String)">getByName</link>(name)</literal></td><td><para>Locates an object by name, failing if there is no such object.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.NamedDomainObjectContainer:getByName(java.lang.String, groovy.lang.Closure)">getByName</link>(name, configureClosure)</literal></td><td><para>Locates an object by name, failing if there is no such object. The given configure closure is executed against
the object before it is returned from this method. The object is passed to the closure as its delegate.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.NamedDomainObjectContainer:getByName(java.lang.String, org.gradle.api.Action)">getByName</link>(name, configureAction)</literal></td><td><para>Locates an object by name, failing if there is no such object. The given configure action is executed against
the object before it is returned from this method.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.NamedDomainObjectContainer:maybeCreate(java.lang.String)">maybeCreate</link>(name)</literal></td><td><para>Looks for an item with the given name, creating and adding it to this container if it does not exist.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.NamedDomainObjectContainer:named(java.lang.String)">named</link>(name)</literal></td><td><para>Locates a object by name, failing if there is no such object.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.NamedDomainObjectContainer:named(java.lang.String, java.lang.Class)">named</link>(name, type)</literal></td><td><para>Locates a object by name and type, failing if there is no such object.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.NamedDomainObjectContainer:named(java.lang.String, java.lang.Class, org.gradle.api.Action)">named</link>(name, type, configurationAction)</literal></td><td><para>Locates a object by name and type, failing if there is no such object.
The given configure action is executed against the object before it is returned from the provider.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.NamedDomainObjectContainer:named(java.lang.String, org.gradle.api.Action)">named</link>(name, configurationAction)</literal></td><td><para>Locates a object by name, failing if there is no such object.
The given configure action is executed against the object before it is returned from the provider.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.NamedDomainObjectContainer:named(org.gradle.api.specs.Spec)">named</link>(nameFilter)</literal></td><td><caution>Incubating</caution><para>Returns a collection containing the objects with names matching the provided filter.
The returned collection is live, so that when matching objects are added to this collection,
they are also visible in the filtered collection.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.NamedDomainObjectContainer:register(java.lang.String)">register</link>(name)</literal></td><td><para>Defines a new object, which will be created when it is required. A object is 'required' when the object is located using query methods such as <apilink class="org.gradle.api.NamedDomainObjectCollection" method="getByName(java.lang.String)"/> or when <apilink class="org.gradle.api.provider.Provider" method="get()"/> is called on the return value of this method.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.NamedDomainObjectContainer:register(java.lang.String, org.gradle.api.Action)">register</link>(name, configurationAction)</literal></td><td><para>Defines a new object, which will be created and configured when it is required. An object is 'required' when the object is located using query methods such as <apilink class="org.gradle.api.NamedDomainObjectCollection" method="getByName(java.lang.String)"/> or when <apilink class="org.gradle.api.provider.Provider" method="get()"/> is called on the return value of this method.
</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Method details</title><section id="org.gradle.api.NamedDomainObjectContainer:create(java.lang.String)" role="detail"><title><classname>T</classname> <literal>create</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name)</title><para>Creates a new item with the given name, adding it to this container.
</para><para>
This operation is eager, the element is realized before being returned.</para></section><section id="org.gradle.api.NamedDomainObjectContainer:create(java.lang.String, groovy.lang.Closure)" role="detail"><title><classname>T</classname> <literal>create</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> configureClosure)</title><para>Creates a new item with the given name, adding it to this container, then configuring it with the given closure.
</para><para>
This operation is eager, the element is realized before being returned.</para></section><section id="org.gradle.api.NamedDomainObjectContainer:create(java.lang.String, org.gradle.api.Action)" role="detail"><title><classname>T</classname> <literal>create</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <classname>T</classname>&gt;</classname> configureAction)</title><para>Creates a new item with the given name, adding it to this container, then configuring it with the given action.
</para><para>
This operation is eager, the element is realized before being returned.</para></section><section id="org.gradle.api.NamedDomainObjectContainer:getByName(java.lang.String)" role="detail"><title><classname>T</classname> <literal>getByName</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name)</title><para>Locates an object by name, failing if there is no such object.
</para><para>
This operation is eager and will cause the returned element to be realized.</para></section><section id="org.gradle.api.NamedDomainObjectContainer:getByName(java.lang.String, groovy.lang.Closure)" role="detail"><title><classname>T</classname> <literal>getByName</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> configureClosure)</title><para>Locates an object by name, failing if there is no such object. The given configure closure is executed against
the object before it is returned from this method. The object is passed to the closure as its delegate.
</para><para>
This operation is eager and will cause the returned element to be realized.</para></section><section id="org.gradle.api.NamedDomainObjectContainer:getByName(java.lang.String, org.gradle.api.Action)" role="detail"><title><classname>T</classname> <literal>getByName</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <classname>T</classname>&gt;</classname> configureAction)</title><para>Locates an object by name, failing if there is no such object. The given configure action is executed against
the object before it is returned from this method.
</para><para>
This operation is eager and will cause the returned element to be realized.</para></section><section id="org.gradle.api.NamedDomainObjectContainer:maybeCreate(java.lang.String)" role="detail"><title><classname>T</classname> <literal>maybeCreate</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name)</title><para>Looks for an item with the given name, creating and adding it to this container if it does not exist.
</para><para>
This operation is eager, the element is realized before being returned.</para></section><section id="org.gradle.api.NamedDomainObjectContainer:named(java.lang.String)" role="detail"><title><classname><apilink class="org.gradle.api.NamedDomainObjectProvider"/>&lt;<classname>T</classname>&gt;</classname> <literal>named</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name)</title><para>Locates a object by name, failing if there is no such object.
</para><para>
This method is lazy and will not cause the returned element to be realized.</para></section><section id="org.gradle.api.NamedDomainObjectContainer:named(java.lang.String, java.lang.Class)" role="detail"><title><classname><apilink class="org.gradle.api.NamedDomainObjectProvider"/>&lt;<classname>S</classname>&gt;</classname> <literal>named</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html"><classname>Class</classname></ulink>&lt;<classname>S</classname>&gt;</classname> type)</title><para>Locates a object by name and type, failing if there is no such object.
</para><para>
This method is lazy and will not cause the returned element to be realized.</para></section><section id="org.gradle.api.NamedDomainObjectContainer:named(java.lang.String, java.lang.Class, org.gradle.api.Action)" role="detail"><title><classname><apilink class="org.gradle.api.NamedDomainObjectProvider"/>&lt;<classname>S</classname>&gt;</classname> <literal>named</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html"><classname>Class</classname></ulink>&lt;<classname>S</classname>&gt;</classname> type, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <classname>S</classname>&gt;</classname> configurationAction)</title><para>Locates a object by name and type, failing if there is no such object.
The given configure action is executed against the object before it is returned from the provider.
</para><para>
This method is lazy and will not cause the returned element to be realized.</para></section><section id="org.gradle.api.NamedDomainObjectContainer:named(java.lang.String, org.gradle.api.Action)" role="detail"><title><classname><apilink class="org.gradle.api.NamedDomainObjectProvider"/>&lt;<classname>T</classname>&gt;</classname> <literal>named</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <classname>T</classname>&gt;</classname> configurationAction)</title><para>Locates a object by name, failing if there is no such object.
The given configure action is executed against the object before it is returned from the provider.
</para><para>
This method is lazy and will not cause the returned element to be realized.</para></section><section id="org.gradle.api.NamedDomainObjectContainer:named(org.gradle.api.specs.Spec)" role="detail"><title><classname><apilink class="org.gradle.api.NamedDomainObjectCollection"/>&lt;<classname>T</classname>&gt;</classname> <literal>named</literal>(<classname><apilink class="org.gradle.api.specs.Spec"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> nameFilter)</title><caution><para>Note: This method is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Returns a collection containing the objects with names matching the provided filter.
The returned collection is live, so that when matching objects are added to this collection,
they are also visible in the filtered collection.
</para><para>
This method is an intermediate operation. It does not change the realized/unrealized state of the elements in the collection.</para></section><section id="org.gradle.api.NamedDomainObjectContainer:register(java.lang.String)" role="detail"><title><classname><apilink class="org.gradle.api.NamedDomainObjectProvider"/>&lt;<classname>T</classname>&gt;</classname> <literal>register</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name)</title><para>Defines a new object, which will be created when it is required. A object is 'required' when the object is located using query methods such as <apilink class="org.gradle.api.NamedDomainObjectCollection" method="getByName(java.lang.String)"/> or when <apilink class="org.gradle.api.provider.Provider" method="get()"/> is called on the return value of this method.
</para><para>
It is generally more efficient to use this method instead of <apilink class="org.gradle.api.NamedDomainObjectContainer" method="create(java.lang.String)"/>, as that method will eagerly create the object, regardless of whether that object is required for the current build or not.
This method, on the other hand, will defer creation until required.
</para><para>
This operation is lazy, the returned element is NOT realized.
A <apilink class="org.gradle.api.NamedDomainObjectProvider"/> is returned, allowing to continue to use it with other lazy APIs.</para></section><section id="org.gradle.api.NamedDomainObjectContainer:register(java.lang.String, org.gradle.api.Action)" role="detail"><title><classname><apilink class="org.gradle.api.NamedDomainObjectProvider"/>&lt;<classname>T</classname>&gt;</classname> <literal>register</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <classname>T</classname>&gt;</classname> configurationAction)</title><para>Defines a new object, which will be created and configured when it is required. An object is 'required' when the object is located using query methods such as <apilink class="org.gradle.api.NamedDomainObjectCollection" method="getByName(java.lang.String)"/> or when <apilink class="org.gradle.api.provider.Provider" method="get()"/> is called on the return value of this method.
</para><para>
It is generally more efficient to use this method instead of <apilink class="org.gradle.api.NamedDomainObjectContainer" method="create(java.lang.String, org.gradle.api.Action)"/> or <apilink class="org.gradle.api.NamedDomainObjectContainer" method="create(java.lang.String)"/>, as those methods will eagerly create and configure the object, regardless of whether that object is required for the current build or not.
This method, on the other hand, will defer creation and configuration until required.
</para><para>
This operation is lazy, the returned element is NOT realized.
A <apilink class="org.gradle.api.NamedDomainObjectProvider"/> is returned, allowing to continue to use it with other lazy APIs.</para></section></section></chapter><chapter id="org.gradle.api.distribution.DistributionContainer"><title>DistributionContainer</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.distribution.DistributionContainer" style="javadoc"/></seg></seglistitem></segmentedlist><para>A <literal>DistributionContainer</literal> manages a set of <apilink class="org.gradle.api.distribution.Distribution"/> objects.</para><section><title>Properties</title><para>No properties</para></section><section><title>Methods</title><table><title>Methods - DistributionContainer</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.distribution.DistributionContainer:create(java.lang.String)">create</link>(name)</literal></td><td><para>Creates a new item with the given name, adding it to this container.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.distribution.DistributionContainer:create(java.lang.String, groovy.lang.Closure)">create</link>(name, configureClosure)</literal></td><td><para>Creates a new item with the given name, adding it to this container, then configuring it with the given closure.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.distribution.DistributionContainer:create(java.lang.String, org.gradle.api.Action)">create</link>(name, configureAction)</literal></td><td><para>Creates a new item with the given name, adding it to this container, then configuring it with the given action.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.distribution.DistributionContainer:getByName(java.lang.String)">getByName</link>(name)</literal></td><td><para>Locates an object by name, failing if there is no such object.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.distribution.DistributionContainer:getByName(java.lang.String, groovy.lang.Closure)">getByName</link>(name, configureClosure)</literal></td><td><para>Locates an object by name, failing if there is no such object. The given configure closure is executed against
the object before it is returned from this method. The object is passed to the closure as its delegate.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.distribution.DistributionContainer:getByName(java.lang.String, org.gradle.api.Action)">getByName</link>(name, configureAction)</literal></td><td><para>Locates an object by name, failing if there is no such object. The given configure action is executed against
the object before it is returned from this method.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.distribution.DistributionContainer:maybeCreate(java.lang.String)">maybeCreate</link>(name)</literal></td><td><para>Looks for an item with the given name, creating and adding it to this container if it does not exist.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.distribution.DistributionContainer:named(java.lang.String)">named</link>(name)</literal></td><td><para>Locates a object by name, failing if there is no such object.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.distribution.DistributionContainer:named(java.lang.String, java.lang.Class)">named</link>(name, type)</literal></td><td><para>Locates a object by name and type, failing if there is no such object.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.distribution.DistributionContainer:named(java.lang.String, java.lang.Class, org.gradle.api.Action)">named</link>(name, type, configurationAction)</literal></td><td><para>Locates a object by name and type, failing if there is no such object.
The given configure action is executed against the object before it is returned from the provider.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.distribution.DistributionContainer:named(java.lang.String, org.gradle.api.Action)">named</link>(name, configurationAction)</literal></td><td><para>Locates a object by name, failing if there is no such object.
The given configure action is executed against the object before it is returned from the provider.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.distribution.DistributionContainer:named(org.gradle.api.specs.Spec)">named</link>(nameFilter)</literal></td><td><caution>Incubating</caution><para>Returns a collection containing the objects with names matching the provided filter.
The returned collection is live, so that when matching objects are added to this collection,
they are also visible in the filtered collection.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.distribution.DistributionContainer:register(java.lang.String)">register</link>(name)</literal></td><td><para>Defines a new object, which will be created when it is required. A object is 'required' when the object is located using query methods such as <apilink class="org.gradle.api.NamedDomainObjectCollection" method="getByName(java.lang.String)"/> or when <apilink class="org.gradle.api.provider.Provider" method="get()"/> is called on the return value of this method.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.distribution.DistributionContainer:register(java.lang.String, org.gradle.api.Action)">register</link>(name, configurationAction)</literal></td><td><para>Defines a new object, which will be created and configured when it is required. An object is 'required' when the object is located using query methods such as <apilink class="org.gradle.api.NamedDomainObjectCollection" method="getByName(java.lang.String)"/> or when <apilink class="org.gradle.api.provider.Provider" method="get()"/> is called on the return value of this method.
</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Method details</title><section id="org.gradle.api.distribution.DistributionContainer:create(java.lang.String)" role="detail"><title><classname>T</classname> <literal>create</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name)</title><para>Creates a new item with the given name, adding it to this container.
</para><para>
This operation is eager, the element is realized before being returned.</para></section><section id="org.gradle.api.distribution.DistributionContainer:create(java.lang.String, groovy.lang.Closure)" role="detail"><title><classname>T</classname> <literal>create</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> configureClosure)</title><para>Creates a new item with the given name, adding it to this container, then configuring it with the given closure.
</para><para>
This operation is eager, the element is realized before being returned.</para></section><section id="org.gradle.api.distribution.DistributionContainer:create(java.lang.String, org.gradle.api.Action)" role="detail"><title><classname>T</classname> <literal>create</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <classname>T</classname>&gt;</classname> configureAction)</title><para>Creates a new item with the given name, adding it to this container, then configuring it with the given action.
</para><para>
This operation is eager, the element is realized before being returned.</para></section><section id="org.gradle.api.distribution.DistributionContainer:getByName(java.lang.String)" role="detail"><title><classname>T</classname> <literal>getByName</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name)</title><para>Locates an object by name, failing if there is no such object.
</para><para>
This operation is eager and will cause the returned element to be realized.</para></section><section id="org.gradle.api.distribution.DistributionContainer:getByName(java.lang.String, groovy.lang.Closure)" role="detail"><title><classname>T</classname> <literal>getByName</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> configureClosure)</title><para>Locates an object by name, failing if there is no such object. The given configure closure is executed against
the object before it is returned from this method. The object is passed to the closure as its delegate.
</para><para>
This operation is eager and will cause the returned element to be realized.</para></section><section id="org.gradle.api.distribution.DistributionContainer:getByName(java.lang.String, org.gradle.api.Action)" role="detail"><title><classname>T</classname> <literal>getByName</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <classname>T</classname>&gt;</classname> configureAction)</title><para>Locates an object by name, failing if there is no such object. The given configure action is executed against
the object before it is returned from this method.
</para><para>
This operation is eager and will cause the returned element to be realized.</para></section><section id="org.gradle.api.distribution.DistributionContainer:maybeCreate(java.lang.String)" role="detail"><title><classname>T</classname> <literal>maybeCreate</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name)</title><para>Looks for an item with the given name, creating and adding it to this container if it does not exist.
</para><para>
This operation is eager, the element is realized before being returned.</para></section><section id="org.gradle.api.distribution.DistributionContainer:named(java.lang.String)" role="detail"><title><classname><apilink class="org.gradle.api.NamedDomainObjectProvider"/>&lt;<classname>T</classname>&gt;</classname> <literal>named</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name)</title><para>Locates a object by name, failing if there is no such object.
</para><para>
This method is lazy and will not cause the returned element to be realized.</para></section><section id="org.gradle.api.distribution.DistributionContainer:named(java.lang.String, java.lang.Class)" role="detail"><title><classname><apilink class="org.gradle.api.NamedDomainObjectProvider"/>&lt;<classname>S</classname>&gt;</classname> <literal>named</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html"><classname>Class</classname></ulink>&lt;<classname>S</classname>&gt;</classname> type)</title><para>Locates a object by name and type, failing if there is no such object.
</para><para>
This method is lazy and will not cause the returned element to be realized.</para></section><section id="org.gradle.api.distribution.DistributionContainer:named(java.lang.String, java.lang.Class, org.gradle.api.Action)" role="detail"><title><classname><apilink class="org.gradle.api.NamedDomainObjectProvider"/>&lt;<classname>S</classname>&gt;</classname> <literal>named</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html"><classname>Class</classname></ulink>&lt;<classname>S</classname>&gt;</classname> type, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <classname>S</classname>&gt;</classname> configurationAction)</title><para>Locates a object by name and type, failing if there is no such object.
The given configure action is executed against the object before it is returned from the provider.
</para><para>
This method is lazy and will not cause the returned element to be realized.</para></section><section id="org.gradle.api.distribution.DistributionContainer:named(java.lang.String, org.gradle.api.Action)" role="detail"><title><classname><apilink class="org.gradle.api.NamedDomainObjectProvider"/>&lt;<classname>T</classname>&gt;</classname> <literal>named</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <classname>T</classname>&gt;</classname> configurationAction)</title><para>Locates a object by name, failing if there is no such object.
The given configure action is executed against the object before it is returned from the provider.
</para><para>
This method is lazy and will not cause the returned element to be realized.</para></section><section id="org.gradle.api.distribution.DistributionContainer:named(org.gradle.api.specs.Spec)" role="detail"><title><classname><apilink class="org.gradle.api.NamedDomainObjectCollection"/>&lt;<classname>T</classname>&gt;</classname> <literal>named</literal>(<classname><apilink class="org.gradle.api.specs.Spec"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> nameFilter)</title><caution><para>Note: This method is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Returns a collection containing the objects with names matching the provided filter.
The returned collection is live, so that when matching objects are added to this collection,
they are also visible in the filtered collection.
</para><para>
This method is an intermediate operation. It does not change the realized/unrealized state of the elements in the collection.</para></section><section id="org.gradle.api.distribution.DistributionContainer:register(java.lang.String)" role="detail"><title><classname><apilink class="org.gradle.api.NamedDomainObjectProvider"/>&lt;<classname>T</classname>&gt;</classname> <literal>register</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name)</title><para>Defines a new object, which will be created when it is required. A object is 'required' when the object is located using query methods such as <apilink class="org.gradle.api.NamedDomainObjectCollection" method="getByName(java.lang.String)"/> or when <apilink class="org.gradle.api.provider.Provider" method="get()"/> is called on the return value of this method.
</para><para>
It is generally more efficient to use this method instead of <apilink class="org.gradle.api.NamedDomainObjectContainer" method="create(java.lang.String)"/>, as that method will eagerly create the object, regardless of whether that object is required for the current build or not.
This method, on the other hand, will defer creation until required.
</para><para>
This operation is lazy, the returned element is NOT realized.
A <apilink class="org.gradle.api.NamedDomainObjectProvider"/> is returned, allowing to continue to use it with other lazy APIs.</para></section><section id="org.gradle.api.distribution.DistributionContainer:register(java.lang.String, org.gradle.api.Action)" role="detail"><title><classname><apilink class="org.gradle.api.NamedDomainObjectProvider"/>&lt;<classname>T</classname>&gt;</classname> <literal>register</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <classname>T</classname>&gt;</classname> configurationAction)</title><para>Defines a new object, which will be created and configured when it is required. An object is 'required' when the object is located using query methods such as <apilink class="org.gradle.api.NamedDomainObjectCollection" method="getByName(java.lang.String)"/> or when <apilink class="org.gradle.api.provider.Provider" method="get()"/> is called on the return value of this method.
</para><para>
It is generally more efficient to use this method instead of <apilink class="org.gradle.api.NamedDomainObjectContainer" method="create(java.lang.String, org.gradle.api.Action)"/> or <apilink class="org.gradle.api.NamedDomainObjectContainer" method="create(java.lang.String)"/>, as those methods will eagerly create and configure the object, regardless of whether that object is required for the current build or not.
This method, on the other hand, will defer creation and configuration until required.
</para><para>
This operation is lazy, the returned element is NOT realized.
A <apilink class="org.gradle.api.NamedDomainObjectProvider"/> is returned, allowing to continue to use it with other lazy APIs.</para></section></section></chapter><chapter id="org.gradle.plugins.signing.SigningExtension"><title>SigningExtension</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.plugins.signing.SigningExtension" style="javadoc"/></seg></seglistitem></segmentedlist><para>The global signing configuration for a project.</para><section><title>Properties</title><table><title>Properties - SigningExtension</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.plugins.signing.SigningExtension:required"><literal>required</literal></link></td><td><para>Whether this task should fail if no signatory or signature type are configured at generation time.

</para></td></tr><tr><td><link linkend="org.gradle.plugins.signing.SigningExtension:signatory"><literal>signatory</literal></link></td><td><para>The signatory that will be used for signing when an explicit signatory has not been specified.

</para></td></tr><tr><td><link linkend="org.gradle.plugins.signing.SigningExtension:signatureType"><literal>signatureType</literal></link></td><td><para>The signature type that will be used for signing files when an explicit signature type has not been specified.

</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - SigningExtension</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.plugins.signing.SigningExtension:sign(groovy.lang.Closure)">sign</link>(closure)</literal></td><td><para>Creates a new <apilink class="org.gradle.plugins.signing.SignOperation"/> using the given closure to configure it before executing it.

</para></td></tr><tr><td><literal><link linkend="org.gradle.plugins.signing.SigningExtension:sign(java.io.File[])">sign</link>(files)</literal></td><td><para>Digitally signs the files, generating signature files alongside them.

</para></td></tr><tr><td><literal><link linkend="org.gradle.plugins.signing.SigningExtension:sign(java.lang.String, java.io.File[])">sign</link>(classifier, files)</literal></td><td><para>Digitally signs the files, generating signature files alongside them.

</para></td></tr><tr><td><literal><link linkend="org.gradle.plugins.signing.SigningExtension:sign(org.gradle.api.Action)">sign</link>(setup)</literal></td><td><caution>Incubating</caution><para>Creates a new <apilink class="org.gradle.plugins.signing.SignOperation"/> using the given action to configure it before executing it.

</para></td></tr><tr><td><literal><link linkend="org.gradle.plugins.signing.SigningExtension:sign(org.gradle.api.DomainObjectCollection)">sign</link>(publications)</literal></td><td><para>Creates signing tasks that sign all publishable artifacts of the given publication collection.

</para></td></tr><tr><td><literal><link linkend="org.gradle.plugins.signing.SigningExtension:sign(org.gradle.api.Task[])">sign</link>(tasks)</literal></td><td><para>Creates signing tasks that depend on and sign the "archive" produced by the given tasks.

</para></td></tr><tr><td><literal><link linkend="org.gradle.plugins.signing.SigningExtension:sign(org.gradle.api.artifacts.Configuration[])">sign</link>(configurations)</literal></td><td><para>Creates signing tasks that sign <apilink class="org.gradle.api.artifacts.Configuration" method="getAllArtifacts()"/> of the given configurations.

</para></td></tr><tr><td><literal><link linkend="org.gradle.plugins.signing.SigningExtension:sign(org.gradle.api.artifacts.PublishArtifact[])">sign</link>(publishArtifacts)</literal></td><td><para>Digitally signs the publish artifacts, generating signature files alongside them.

</para></td></tr><tr><td><literal><link linkend="org.gradle.plugins.signing.SigningExtension:sign(org.gradle.api.publish.Publication[])">sign</link>(publications)</literal></td><td><para>Creates signing tasks that sign all publishable artifacts of the given publications.

</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.plugins.signing.SigningExtension:required" role="detail"><title><classname>boolean</classname> <literal>required</literal></title><para>Whether this task should fail if no signatory or signature type are configured at generation time.

</para><para>Defaults to <literal>true</literal>.</para></section><section id="org.gradle.plugins.signing.SigningExtension:signatory" role="detail"><title><apilink class="org.gradle.plugins.signing.signatory.Signatory"/> <literal>signatory</literal> (read-only)</title><para>The signatory that will be used for signing when an explicit signatory has not been specified.

</para><para>Delegates to the signatory provider's default signatory.</para></section><section id="org.gradle.plugins.signing.SigningExtension:signatureType" role="detail"><title><apilink class="org.gradle.plugins.signing.type.SignatureType"/> <literal>signatureType</literal> (read-only)</title><para>The signature type that will be used for signing files when an explicit signature type has not been specified.

</para><para>Delegates to the signature type provider's default type.</para></section></section><section><title>Method details</title><section id="org.gradle.plugins.signing.SigningExtension:sign(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.plugins.signing.SignOperation"/> <literal>sign</literal>(<classname><ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink>&lt;?&gt;</classname> closure)</title><para>Creates a new <apilink class="org.gradle.plugins.signing.SignOperation"/> using the given closure to configure it before executing it.

</para><para>The project's default signatory and default signature type from the <apilink class="org.gradle.plugins.signing.SigningExtension"/> will be used to generate the signature.
The returned <apilink class="org.gradle.plugins.signing.SignOperation"/> gives access to the created signature files.
</para><para>If there is no configured default signatory available (and one is not explicitly specified in this operation's configuration), the sign operation will fail.</para></section><section id="org.gradle.plugins.signing.SigningExtension:sign(java.io.File[])" role="detail"><title><apilink class="org.gradle.plugins.signing.SignOperation"/> <literal>sign</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink>...</classname> files)</title><para>Digitally signs the files, generating signature files alongside them.

</para><para>The project's default signatory and default signature type from the <apilink class="org.gradle.plugins.signing.SigningExtension"/> will be used to generate the signature.
The returned <apilink class="org.gradle.plugins.signing.SignOperation"/> gives access to the created signature files.
</para><para>If there is no configured default signatory available, the sign operation will fail.</para></section><section id="org.gradle.plugins.signing.SigningExtension:sign(java.lang.String, java.io.File[])" role="detail"><title><apilink class="org.gradle.plugins.signing.SignOperation"/> <literal>sign</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> classifier, <classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink>...</classname> files)</title><para>Digitally signs the files, generating signature files alongside them.

</para><para>The project's default signatory and default signature type from the <apilink class="org.gradle.plugins.signing.SigningExtension"/> will be used to generate the signature.
The returned <apilink class="org.gradle.plugins.signing.SignOperation"/> gives access to the created signature files.
</para><para>If there is no configured default signatory available, the sign operation will fail.</para></section><section id="org.gradle.plugins.signing.SigningExtension:sign(org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.plugins.signing.SignOperation"/> <literal>sign</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;<apilink class="org.gradle.plugins.signing.SignOperation"/>&gt;</classname> setup)</title><caution><para>Note: This method is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Creates a new <apilink class="org.gradle.plugins.signing.SignOperation"/> using the given action to configure it before executing it.

</para><para>The project's default signatory and default signature type from the <apilink class="org.gradle.plugins.signing.SigningExtension"/> will be used to generate the signature.
The returned <apilink class="org.gradle.plugins.signing.SignOperation"/> gives access to the created signature files.
</para><para>If there is no configured default signatory available (and one is not explicitly specified in this operation's configuration), the sign operation will fail.</para></section><section id="org.gradle.plugins.signing.SigningExtension:sign(org.gradle.api.DomainObjectCollection)" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/List.html"><classname>List</classname></ulink>&lt;<apilink class="org.gradle.plugins.signing.Sign"/>&gt;</classname> <literal>sign</literal>(<classname><apilink class="org.gradle.api.DomainObjectCollection"/>&lt;<apilink class="org.gradle.api.publish.Publication"/>&gt;</classname> publications)</title><para>Creates signing tasks that sign all publishable artifacts of the given publication collection.

</para><para>The created tasks will be named "sign<emphasis>&lt;publication name capitalized&gt;</emphasis>Publication".
That is, given a publication with the name "mavenJava" the created task will be named "signMavenJavaPublication".

The signature artifacts for the created tasks are added to the publishable artifacts of the given publications.</para></section><section id="org.gradle.plugins.signing.SigningExtension:sign(org.gradle.api.Task[])" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/List.html"><classname>List</classname></ulink>&lt;<apilink class="org.gradle.plugins.signing.Sign"/>&gt;</classname> <literal>sign</literal>(<classname><apilink class="org.gradle.api.Task"/>...</classname> tasks)</title><para>Creates signing tasks that depend on and sign the "archive" produced by the given tasks.

</para><para>The created tasks will be named "sign<emphasis>&lt;input task name capitalized&gt;</emphasis>". That is, given a task with the name "jar" the created task will be named "signJar". </para><para> If the task is not
an <apilink class="org.gradle.api.tasks.bundling.AbstractArchiveTask"/>, an <apilink class="org.gradle.api.InvalidUserDataException"/> will be thrown.</para><para> The signature artifact for the created task is added to the <apilink class="org.gradle.plugins.signing.SigningExtension" method="getConfiguration()"/>.</para></section><section id="org.gradle.plugins.signing.SigningExtension:sign(org.gradle.api.artifacts.Configuration[])" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/List.html"><classname>List</classname></ulink>&lt;<apilink class="org.gradle.plugins.signing.Sign"/>&gt;</classname> <literal>sign</literal>(<classname><apilink class="org.gradle.api.artifacts.Configuration"/>...</classname> configurations)</title><para>Creates signing tasks that sign <apilink class="org.gradle.api.artifacts.Configuration" method="getAllArtifacts()"/> of the given configurations.

</para><para>The created tasks will be named "sign<emphasis>&lt;configuration name capitalized&gt;</emphasis>". That is, given a configuration with the name "conf" the created task will be named "signConf".

The signature artifacts for the created tasks are added to the <apilink class="org.gradle.plugins.signing.SigningExtension" method="getConfiguration()"/> for this settings object.</para></section><section id="org.gradle.plugins.signing.SigningExtension:sign(org.gradle.api.artifacts.PublishArtifact[])" role="detail"><title><apilink class="org.gradle.plugins.signing.SignOperation"/> <literal>sign</literal>(<classname><apilink class="org.gradle.api.artifacts.PublishArtifact"/>...</classname> publishArtifacts)</title><para>Digitally signs the publish artifacts, generating signature files alongside them.

</para><para>The project's default signatory and default signature type from the <apilink class="org.gradle.plugins.signing.SigningExtension"/> will be used to generate the signature.
The returned <apilink class="org.gradle.plugins.signing.SignOperation"/> gives access to the created signature files.
</para><para>If there is no configured default signatory available, the sign operation will fail.</para></section><section id="org.gradle.plugins.signing.SigningExtension:sign(org.gradle.api.publish.Publication[])" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/List.html"><classname>List</classname></ulink>&lt;<apilink class="org.gradle.plugins.signing.Sign"/>&gt;</classname> <literal>sign</literal>(<classname><apilink class="org.gradle.api.publish.Publication"/>...</classname> publications)</title><para>Creates signing tasks that sign all publishable artifacts of the given publications.

</para><para>The created tasks will be named "sign<emphasis>&lt;publication name capitalized&gt;</emphasis>Publication".
That is, given a publication with the name "mavenJava" the created task will be named "signMavenJavaPublication".

The signature artifacts for the created tasks are added to the publishable artifacts of the given publications.</para></section></section></chapter><chapter id="org.gradle.plugins.ide.eclipse.model.EclipseModel"><title>EclipseModel</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.plugins.ide.eclipse.model.EclipseModel" style="javadoc"/></seg></seglistitem></segmentedlist><para>DSL-friendly model of the Eclipse project information.
First point of entry for customizing Eclipse project generation.

</para><programlisting language="java">
plugins {
    id 'java'
    id 'eclipse'
    id 'eclipse-wtp' // for web projects only
}

eclipse {
  pathVariables 'GRADLE_HOME': file('/best/software/gradle'), 'TOMCAT_HOME': file('../tomcat')

  project {
    //see docs for <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseProject"/>
  }

  classpath {
    //see docs for <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseClasspath"/>
  }

  wtp {
    //see docs for <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseWtp"/>
  }
}
</programlisting><para>

More examples in docs for <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseProject"/>, <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseClasspath"/>, <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseWtp"/></para><section><title>Properties</title><table><title>Properties - EclipseModel</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.plugins.ide.eclipse.model.EclipseModel:classpath"><literal>classpath</literal></link></td><td><para>Configures eclipse classpath information
</para></td></tr><tr><td><link linkend="org.gradle.plugins.ide.eclipse.model.EclipseModel:jdt"><literal>jdt</literal></link></td><td><para>Configures eclipse java compatibility information (jdt)
</para></td></tr><tr><td><link linkend="org.gradle.plugins.ide.eclipse.model.EclipseModel:project"><literal>project</literal></link></td><td><para>Configures eclipse project information
</para></td></tr><tr><td><link linkend="org.gradle.plugins.ide.eclipse.model.EclipseModel:wtp"><literal>wtp</literal></link></td><td><para>Configures eclipse wtp information
</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - EclipseModel</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.plugins.ide.eclipse.model.EclipseModel:classpath(org.gradle.api.Action)">classpath</link>(action)</literal></td><td><para>Configures eclipse classpath information
</para></td></tr><tr><td><literal><link linkend="org.gradle.plugins.ide.eclipse.model.EclipseModel:jdt(org.gradle.api.Action)">jdt</link>(action)</literal></td><td><para>Configures eclipse java compatibility information (jdt)
</para></td></tr><tr><td><literal><link linkend="org.gradle.plugins.ide.eclipse.model.EclipseModel:pathVariables(java.util.Map)">pathVariables</link>(pathVariables)</literal></td><td><para>Adds path variables to be used for replacing absolute paths in classpath entries.
</para></td></tr><tr><td><literal><link linkend="org.gradle.plugins.ide.eclipse.model.EclipseModel:project(org.gradle.api.Action)">project</link>(action)</literal></td><td><para>Configures eclipse project information
</para></td></tr><tr><td><literal><link linkend="org.gradle.plugins.ide.eclipse.model.EclipseModel:wtp(org.gradle.api.Action)">wtp</link>(action)</literal></td><td><para>Configures eclipse wtp information
</para></td></tr></table></section><section><title>Script blocks</title><table><title>Script blocks - EclipseModel</title><thead><tr><td>Block</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.plugins.ide.eclipse.model.EclipseModel:classpath(groovy.lang.Closure)"><literal>classpath</literal></link></td><td><para>Configures eclipse classpath information
</para></td></tr><tr><td><link linkend="org.gradle.plugins.ide.eclipse.model.EclipseModel:jdt(groovy.lang.Closure)"><literal>jdt</literal></link></td><td><para>Configures eclipse java compatibility information (jdt)
</para></td></tr><tr><td><link linkend="org.gradle.plugins.ide.eclipse.model.EclipseModel:project(groovy.lang.Closure)"><literal>project</literal></link></td><td><para>Configures eclipse project information
</para></td></tr><tr><td><link linkend="org.gradle.plugins.ide.eclipse.model.EclipseModel:wtp(groovy.lang.Closure)"><literal>wtp</literal></link></td><td><para>Configures eclipse wtp information
</para></td></tr></table></section><section><title>Property details</title><section id="org.gradle.plugins.ide.eclipse.model.EclipseModel:classpath" role="detail"><title><apilink class="org.gradle.plugins.ide.eclipse.model.EclipseClasspath"/> <literal>classpath</literal></title><para>Configures eclipse classpath information
</para><para>
For examples see docs for <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseClasspath"/></para></section><section id="org.gradle.plugins.ide.eclipse.model.EclipseModel:jdt" role="detail"><title><apilink class="org.gradle.plugins.ide.eclipse.model.EclipseJdt"/> <literal>jdt</literal></title><para>Configures eclipse java compatibility information (jdt)
</para><para>
For examples see docs for <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseProject"/></para></section><section id="org.gradle.plugins.ide.eclipse.model.EclipseModel:project" role="detail"><title><apilink class="org.gradle.plugins.ide.eclipse.model.EclipseProject"/> <literal>project</literal></title><para>Configures eclipse project information
</para><para>
For examples see docs for <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseProject"/></para></section><section id="org.gradle.plugins.ide.eclipse.model.EclipseModel:wtp" role="detail"><title><apilink class="org.gradle.plugins.ide.eclipse.model.EclipseWtp"/> <literal>wtp</literal></title><para>Configures eclipse wtp information
</para><para>
For examples see docs for <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseWtp"/></para></section></section><section><title>Method details</title><section id="org.gradle.plugins.ide.eclipse.model.EclipseModel:classpath(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>classpath</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseClasspath"/>&gt;</classname> action)</title><para>Configures eclipse classpath information
</para><para>
For examples see docs for <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseClasspath"/></para></section><section id="org.gradle.plugins.ide.eclipse.model.EclipseModel:jdt(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>jdt</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseJdt"/>&gt;</classname> action)</title><para>Configures eclipse java compatibility information (jdt)
</para><para>
For examples see docs for <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseProject"/></para></section><section id="org.gradle.plugins.ide.eclipse.model.EclipseModel:pathVariables(java.util.Map)" role="detail"><title><classname>void</classname> <literal>pathVariables</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink>&gt;</classname> pathVariables)</title><para>Adds path variables to be used for replacing absolute paths in classpath entries.
</para><para>
If the beginning of the absolute path of a library or other path-related element matches a value of a variable,
a variable entry is used. The matching part of the library path is replaced with the variable name.
</para><para>
For example see docs for <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseModel"/></para></section><section id="org.gradle.plugins.ide.eclipse.model.EclipseModel:project(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>project</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseProject"/>&gt;</classname> action)</title><para>Configures eclipse project information
</para><para>
For examples see docs for <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseProject"/></para></section><section id="org.gradle.plugins.ide.eclipse.model.EclipseModel:wtp(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>wtp</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseWtp"/>&gt;</classname> action)</title><para>Configures eclipse wtp information
</para><para>
For examples see docs for <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseWtp"/></para></section></section><section><title>Script block details</title><section id="org.gradle.plugins.ide.eclipse.model.EclipseModel:classpath(groovy.lang.Closure)" role="detail"><title><literal>classpath</literal> { }</title><para>Configures eclipse classpath information
</para><para>
For examples see docs for <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseClasspath"/></para><segmentedlist><segtitle>Delegates to</segtitle><seglistitem><seg><apilink class="org.gradle.plugins.ide.eclipse.model.EclipseClasspath"/> from <link linkend="org.gradle.plugins.ide.eclipse.model.EclipseModel:classpath"><literal>classpath</literal></link></seg></seglistitem></segmentedlist></section><section id="org.gradle.plugins.ide.eclipse.model.EclipseModel:jdt(groovy.lang.Closure)" role="detail"><title><literal>jdt</literal> { }</title><para>Configures eclipse java compatibility information (jdt)
</para><para>
For examples see docs for <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseProject"/></para><segmentedlist><segtitle>Delegates to</segtitle><seglistitem><seg><apilink class="org.gradle.plugins.ide.eclipse.model.EclipseJdt"/> from <link linkend="org.gradle.plugins.ide.eclipse.model.EclipseModel:jdt"><literal>jdt</literal></link></seg></seglistitem></segmentedlist></section><section id="org.gradle.plugins.ide.eclipse.model.EclipseModel:project(groovy.lang.Closure)" role="detail"><title><literal>project</literal> { }</title><para>Configures eclipse project information
</para><para>
For examples see docs for <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseProject"/></para><segmentedlist><segtitle>Delegates to</segtitle><seglistitem><seg><apilink class="org.gradle.plugins.ide.eclipse.model.EclipseProject"/> from <link linkend="org.gradle.plugins.ide.eclipse.model.EclipseModel:project"><literal>project</literal></link></seg></seglistitem></segmentedlist></section><section id="org.gradle.plugins.ide.eclipse.model.EclipseModel:wtp(groovy.lang.Closure)" role="detail"><title><literal>wtp</literal> { }</title><para>Configures eclipse wtp information
</para><para>
For examples see docs for <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseWtp"/></para><segmentedlist><segtitle>Delegates to</segtitle><seglistitem><seg><apilink class="org.gradle.plugins.ide.eclipse.model.EclipseWtp"/> from <link linkend="org.gradle.plugins.ide.eclipse.model.EclipseModel:wtp"><literal>wtp</literal></link></seg></seglistitem></segmentedlist></section></section></chapter><chapter id="org.gradle.plugins.ide.eclipse.model.EclipseClasspath"><title>EclipseClasspath</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.plugins.ide.eclipse.model.EclipseClasspath" style="javadoc"/></seg></seglistitem></segmentedlist><para>The build path settings for the generated Eclipse project. Used by the
<apilink class="org.gradle.plugins.ide.eclipse.GenerateEclipseClasspath"/> task to generate an Eclipse .classpath file.
</para><para>
The following example demonstrates the various configuration options.
Keep in mind that all properties have sensible defaults; only configure them explicitly
if the defaults don't match your needs.

</para><programlisting language="java">
plugins {
    id 'java'
    id 'eclipse'
}

configurations {
  provided
  someBoringConfig
}

eclipse {
  //if you want parts of paths in resulting file to be replaced by variables (files):
  pathVariables 'GRADLE_HOME': file('/best/software/gradle'), 'TOMCAT_HOME': file('../tomcat')

  classpath {
    //you can tweak the classpath of the Eclipse project by adding extra configurations:
    plusConfigurations += [ configurations.provided ]

    //you can also remove configurations from the classpath:
    minusConfigurations += [ configurations.someBoringConfig ]

    //if you want to append extra containers:
    containers 'someFriendlyContainer', 'andYetAnotherContainer'

    //customizing the classes output directory:
    defaultOutputDir = file('build-eclipse')

    //default settings for downloading sources and Javadoc:
    downloadSources = true
    downloadJavadoc = false

    //if you want to expose test classes to dependent projects
    containsTestFixtures = true

    //customizing which Eclipse source directories should be marked as test
    testSourceSets = [sourceSets.test]

    //customizing which dependencies should be marked as test on the project's classpath
    testConfigurations = [configurations.testCompileClasspath, configurations.testRuntimeClasspath]
  }
}
</programlisting><para>

For tackling edge cases, users can perform advanced configuration on the resulting XML file.
It is also possible to affect the way that the Eclipse plugin merges the existing configuration
via beforeMerged and whenMerged closures.
</para><para>
The beforeMerged and whenMerged closures receive a <apilink class="org.gradle.plugins.ide.eclipse.model.Classpath"/> object.
</para><para>
Examples of advanced configuration:

</para><programlisting language="java">
plugins {
    id 'java'
    id 'eclipse'
}

eclipse {
  classpath {
    file {
      //if you want to mess with the resulting XML in whatever way you fancy
      withXml {
        def node = it.asNode()
        node.appendNode('xml', 'is what I love')
      }

      //closure executed after .classpath content is loaded from existing file
      //but before gradle build information is merged
      beforeMerged { classpath -&gt;
        //you can tinker with the <apilink class="org.gradle.plugins.ide.eclipse.model.Classpath"/> here
      }

      //closure executed after .classpath content is loaded from existing file
      //and after gradle build information is merged
      whenMerged { classpath -&gt;
        //you can tinker with the <apilink class="org.gradle.plugins.ide.eclipse.model.Classpath"/> here
      }
    }
  }
}
</programlisting><section><title>Properties</title><table><title>Properties - EclipseClasspath</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.plugins.ide.eclipse.model.EclipseClasspath:containers"><literal>containers</literal></link></td><td><para>The classpath containers to be added.
</para></td></tr><tr><td><link linkend="org.gradle.plugins.ide.eclipse.model.EclipseClasspath:defaultOutputDir"><literal>defaultOutputDir</literal></link></td><td><para>The default output directory where Eclipse puts compiled classes.
</para></td></tr><tr><td><link linkend="org.gradle.plugins.ide.eclipse.model.EclipseClasspath:downloadJavadoc"><literal>downloadJavadoc</literal></link></td><td><para>Whether to download and associate Javadoc Jars with the dependency Jars. Defaults to false.
</para></td></tr><tr><td><link linkend="org.gradle.plugins.ide.eclipse.model.EclipseClasspath:downloadSources"><literal>downloadSources</literal></link></td><td><para>Whether to download and associate source Jars with the dependency Jars. Defaults to true.
</para></td></tr><tr><td><link linkend="org.gradle.plugins.ide.eclipse.model.EclipseClasspath:file"><literal>file</literal></link></td><td><para>See <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseClasspath" method="file(org.gradle.api.Action)"/>.</para></td></tr><tr><td><link linkend="org.gradle.plugins.ide.eclipse.model.EclipseClasspath:minusConfigurations"><literal>minusConfigurations</literal></link></td><td><para>The configurations whose files are to be excluded from the classpath entries.
</para></td></tr><tr><td><link linkend="org.gradle.plugins.ide.eclipse.model.EclipseClasspath:plusConfigurations"><literal>plusConfigurations</literal></link></td><td><para>The configurations whose files are to be added as classpath entries.
</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - EclipseClasspath</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.plugins.ide.eclipse.model.EclipseClasspath:containers(java.lang.String[])">containers</link>(containers)</literal></td><td><para>Further classpath containers to be added.
</para></td></tr><tr><td><literal><link linkend="org.gradle.plugins.ide.eclipse.model.EclipseClasspath:file(org.gradle.api.Action)">file</link>(action)</literal></td><td><para>Enables advanced configuration like tinkering with the output XML or affecting the way
that the contents of an existing .classpath file is merged with Gradle build information.
The object passed to the whenMerged{} and beforeMerged{} closures is of type <apilink class="org.gradle.plugins.ide.eclipse.model.Classpath"/>.
</para></td></tr></table></section><section><title>Script blocks</title><table><title>Script blocks - EclipseClasspath</title><thead><tr><td>Block</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.plugins.ide.eclipse.model.EclipseClasspath:file(groovy.lang.Closure)"><literal>file</literal></link></td><td><para>Enables advanced configuration like tinkering with the output XML or affecting the way
that the contents of an existing .classpath file is merged with Gradle build information.
The object passed to the whenMerged{} and beforeMerged{} closures is of type <apilink class="org.gradle.plugins.ide.eclipse.model.Classpath"/>.
</para></td></tr></table></section><section><title>Property details</title><section id="org.gradle.plugins.ide.eclipse.model.EclipseClasspath:containers" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>containers</literal></title><para>The classpath containers to be added.
</para><para>
See <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseClasspath"/> for an example.</para><segmentedlist><segtitle>Default with <literal>eclipse</literal> and <literal>java</literal> plugins</segtitle><seglistitem><seg>[JRE container]</seg></seglistitem></segmentedlist></section><section id="org.gradle.plugins.ide.eclipse.model.EclipseClasspath:defaultOutputDir" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>defaultOutputDir</literal></title><para>The default output directory where Eclipse puts compiled classes.
</para><para>
See <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseClasspath"/> for an example.</para><segmentedlist><segtitle>Default with <literal>eclipse</literal> and <literal>java</literal> plugins</segtitle><seglistitem><seg><filename><replaceable>${project.projectDir}</replaceable>/bin/default</filename></seg></seglistitem></segmentedlist></section><section id="org.gradle.plugins.ide.eclipse.model.EclipseClasspath:downloadJavadoc" role="detail"><title><classname>boolean</classname> <literal>downloadJavadoc</literal></title><para>Whether to download and associate Javadoc Jars with the dependency Jars. Defaults to false.
</para><para>
See <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseClasspath"/> for an example.</para><segmentedlist><segtitle>Default with <literal>eclipse</literal> and <literal>java</literal> plugins</segtitle><seglistitem><seg><literal>false</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.plugins.ide.eclipse.model.EclipseClasspath:downloadSources" role="detail"><title><classname>boolean</classname> <literal>downloadSources</literal></title><para>Whether to download and associate source Jars with the dependency Jars. Defaults to true.
</para><para>
See <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseClasspath"/> for an example.</para><segmentedlist><segtitle>Default with <literal>eclipse</literal> and <literal>java</literal> plugins</segtitle><seglistitem><seg><literal>true</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.plugins.ide.eclipse.model.EclipseClasspath:file" role="detail"><title><apilink class="org.gradle.plugins.ide.api.XmlFileContentMerger"/> <literal>file</literal></title><para>See <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseClasspath" method="file(org.gradle.api.Action)"/>.</para></section><section id="org.gradle.plugins.ide.eclipse.model.EclipseClasspath:minusConfigurations" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Collection.html"><classname>Collection</classname></ulink>&lt;<apilink class="org.gradle.api.artifacts.Configuration"/>&gt;</classname> <literal>minusConfigurations</literal></title><para>The configurations whose files are to be excluded from the classpath entries.
</para><para>
See <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseClasspath"/> for an example.</para><segmentedlist><segtitle>Default with <literal>eclipse</literal> and <literal>java</literal> plugins</segtitle><seglistitem><seg><literal>[]</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.plugins.ide.eclipse.model.EclipseClasspath:plusConfigurations" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Collection.html"><classname>Collection</classname></ulink>&lt;<apilink class="org.gradle.api.artifacts.Configuration"/>&gt;</classname> <literal>plusConfigurations</literal></title><para>The configurations whose files are to be added as classpath entries.
</para><para>
See <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseClasspath"/> for an example.</para><segmentedlist><segtitle>Default with <literal>eclipse</literal> and <literal>java</literal> plugins</segtitle><seglistitem><seg><literal>project.configurations.testRuntime</literal></seg></seglistitem></segmentedlist></section></section><section><title>Method details</title><section id="org.gradle.plugins.ide.eclipse.model.EclipseClasspath:containers(java.lang.String[])" role="detail"><title><classname>void</classname> <literal>containers</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>...</classname> containers)</title><para>Further classpath containers to be added.
</para><para>
See <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseClasspath"/> for an example.</para></section><section id="org.gradle.plugins.ide.eclipse.model.EclipseClasspath:file(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>file</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.plugins.ide.api.XmlFileContentMerger"/>&gt;</classname> action)</title><para>Enables advanced configuration like tinkering with the output XML or affecting the way
that the contents of an existing .classpath file is merged with Gradle build information.
The object passed to the whenMerged{} and beforeMerged{} closures is of type <apilink class="org.gradle.plugins.ide.eclipse.model.Classpath"/>.
</para><para>
See <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseProject"/> for an example.</para></section></section><section><title>Script block details</title><section id="org.gradle.plugins.ide.eclipse.model.EclipseClasspath:file(groovy.lang.Closure)" role="detail"><title><literal>file</literal> { }</title><para>Enables advanced configuration like tinkering with the output XML or affecting the way
that the contents of an existing .classpath file is merged with Gradle build information.
The object passed to the whenMerged{} and beforeMerged{} closures is of type <apilink class="org.gradle.plugins.ide.eclipse.model.Classpath"/>.
</para><para>
See <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseProject"/> for an example.</para><segmentedlist><segtitle>Delegates to</segtitle><seglistitem><seg><apilink class="org.gradle.plugins.ide.api.XmlFileContentMerger"/> from <link linkend="org.gradle.plugins.ide.eclipse.model.EclipseClasspath:file"><literal>file</literal></link></seg></seglistitem></segmentedlist></section></section></chapter><chapter id="org.gradle.plugins.ide.api.FileContentMerger"><title>FileContentMerger</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.plugins.ide.api.FileContentMerger" style="javadoc"/></seg></seglistitem></segmentedlist><segmentedlist><segtitle>Known Subtypes</segtitle><seglistitem><seg><simplelist columns="1" type="vert"><member><apilink class="org.gradle.plugins.ide.api.XmlFileContentMerger"/></member><member><apilink class="org.gradle.plugins.ide.api.PropertiesFileContentMerger"/></member></simplelist></seg></seglistitem></segmentedlist><para>Models the generation/parsing/merging capabilities.
</para><para>
For examples see docs for <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseProject"/>
or <apilink class="org.gradle.plugins.ide.idea.model.IdeaProject"/> and others.</para><section><title>Properties</title><para>No properties</para></section><section><title>Methods</title><table><title>Methods - FileContentMerger</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.plugins.ide.api.FileContentMerger:beforeMerged(groovy.lang.Closure)">beforeMerged</link>(closure)</literal></td><td><para>Adds a closure to be called after content is loaded from existing file but before gradle build information is merged.
</para></td></tr><tr><td><literal><link linkend="org.gradle.plugins.ide.api.FileContentMerger:beforeMerged(org.gradle.api.Action)">beforeMerged</link>(action)</literal></td><td><para>Adds an action to be called after content is loaded from existing file but before gradle build information is merged.
</para></td></tr><tr><td><literal><link linkend="org.gradle.plugins.ide.api.FileContentMerger:whenMerged(groovy.lang.Closure)">whenMerged</link>(closure)</literal></td><td><para>Adds a closure to be called after content is loaded from existing file and after gradle build information is merged.
</para></td></tr><tr><td><literal><link linkend="org.gradle.plugins.ide.api.FileContentMerger:whenMerged(org.gradle.api.Action)">whenMerged</link>(action)</literal></td><td><para>Adds an action to be called after content is loaded from existing file and after gradle build information is merged.
</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Method details</title><section id="org.gradle.plugins.ide.api.FileContentMerger:beforeMerged(groovy.lang.Closure)" role="detail"><title><classname>void</classname> <literal>beforeMerged</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> closure)</title><para>Adds a closure to be called after content is loaded from existing file but before gradle build information is merged.
</para><para>
This is advanced api that gives access to internal implementation.
It might be useful if you want to alter the way gradle build information is merged into existing file content.
</para><para>
For examples see docs for <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseProject"/>
or <apilink class="org.gradle.plugins.ide.idea.model.IdeaProject"/> and others.</para></section><section id="org.gradle.plugins.ide.api.FileContentMerger:beforeMerged(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>beforeMerged</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;?&gt;</classname> action)</title><para>Adds an action to be called after content is loaded from existing file but before gradle build information is merged.
</para><para>
This is advanced api that gives access to internal implementation.
It might be useful if you want to alter the way gradle build information is merged into existing file content.
</para><para>
For examples see docs for <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseProject"/>
or <apilink class="org.gradle.plugins.ide.idea.model.IdeaProject"/> and others.</para></section><section id="org.gradle.plugins.ide.api.FileContentMerger:whenMerged(groovy.lang.Closure)" role="detail"><title><classname>void</classname> <literal>whenMerged</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> closure)</title><para>Adds a closure to be called after content is loaded from existing file and after gradle build information is merged.
</para><para>
This is advanced api that gives access to internal implementation of idea plugin.
Use it only to tackle some tricky edge cases.
</para><para>
For examples see docs for <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseProject"/>
or <apilink class="org.gradle.plugins.ide.idea.model.IdeaProject"/> and others.</para></section><section id="org.gradle.plugins.ide.api.FileContentMerger:whenMerged(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>whenMerged</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;?&gt;</classname> action)</title><para>Adds an action to be called after content is loaded from existing file and after gradle build information is merged.
</para><para>
This is advanced api that gives access to internal implementation of idea plugin.
Use it only to tackle some tricky edge cases.
</para><para>
For examples see docs for <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseProject"/>
or <apilink class="org.gradle.plugins.ide.idea.model.IdeaProject"/> and others.</para></section></section></chapter><chapter id="org.gradle.plugins.ide.api.XmlFileContentMerger"><title>XmlFileContentMerger</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.plugins.ide.api.XmlFileContentMerger" style="javadoc"/></seg></seglistitem></segmentedlist><para>Models the generation/parsing/merging capabilities.
Adds XML-related hooks.
</para><para>
For examples see docs for <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseProject"/>
or <apilink class="org.gradle.plugins.ide.idea.model.IdeaProject"/> and others.</para><section><title>Properties</title><para>No properties</para></section><section><title>Methods</title><table><title>Methods - XmlFileContentMerger</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.plugins.ide.api.XmlFileContentMerger:beforeMerged(groovy.lang.Closure)">beforeMerged</link>(closure)</literal></td><td><para>Adds a closure to be called after content is loaded from existing file but before gradle build information is merged.
</para></td></tr><tr><td><literal><link linkend="org.gradle.plugins.ide.api.XmlFileContentMerger:beforeMerged(org.gradle.api.Action)">beforeMerged</link>(action)</literal></td><td><para>Adds an action to be called after content is loaded from existing file but before gradle build information is merged.
</para></td></tr><tr><td><literal><link linkend="org.gradle.plugins.ide.api.XmlFileContentMerger:whenMerged(groovy.lang.Closure)">whenMerged</link>(closure)</literal></td><td><para>Adds a closure to be called after content is loaded from existing file and after gradle build information is merged.
</para></td></tr><tr><td><literal><link linkend="org.gradle.plugins.ide.api.XmlFileContentMerger:whenMerged(org.gradle.api.Action)">whenMerged</link>(action)</literal></td><td><para>Adds an action to be called after content is loaded from existing file and after gradle build information is merged.
</para></td></tr><tr><td><literal><link linkend="org.gradle.plugins.ide.api.XmlFileContentMerger:withXml(groovy.lang.Closure)">withXml</link>(closure)</literal></td><td><para>Adds a closure to be called when the file has been created.
The XML is passed to the closure as a parameter in form of a <apilink class="org.gradle.api.XmlProvider"/>.
The closure can modify the XML before it is written to the output file.
</para></td></tr><tr><td><literal><link linkend="org.gradle.plugins.ide.api.XmlFileContentMerger:withXml(org.gradle.api.Action)">withXml</link>(action)</literal></td><td><para>Adds an action to be called when the file has been created.
</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Method details</title><section id="org.gradle.plugins.ide.api.XmlFileContentMerger:beforeMerged(groovy.lang.Closure)" role="detail"><title><classname>void</classname> <literal>beforeMerged</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> closure)</title><para>Adds a closure to be called after content is loaded from existing file but before gradle build information is merged.
</para><para>
This is advanced api that gives access to internal implementation.
It might be useful if you want to alter the way gradle build information is merged into existing file content.
</para><para>
For examples see docs for <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseProject"/>
or <apilink class="org.gradle.plugins.ide.idea.model.IdeaProject"/> and others.</para></section><section id="org.gradle.plugins.ide.api.XmlFileContentMerger:beforeMerged(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>beforeMerged</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;?&gt;</classname> action)</title><para>Adds an action to be called after content is loaded from existing file but before gradle build information is merged.
</para><para>
This is advanced api that gives access to internal implementation.
It might be useful if you want to alter the way gradle build information is merged into existing file content.
</para><para>
For examples see docs for <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseProject"/>
or <apilink class="org.gradle.plugins.ide.idea.model.IdeaProject"/> and others.</para></section><section id="org.gradle.plugins.ide.api.XmlFileContentMerger:whenMerged(groovy.lang.Closure)" role="detail"><title><classname>void</classname> <literal>whenMerged</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> closure)</title><para>Adds a closure to be called after content is loaded from existing file and after gradle build information is merged.
</para><para>
This is advanced api that gives access to internal implementation of idea plugin.
Use it only to tackle some tricky edge cases.
</para><para>
For examples see docs for <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseProject"/>
or <apilink class="org.gradle.plugins.ide.idea.model.IdeaProject"/> and others.</para></section><section id="org.gradle.plugins.ide.api.XmlFileContentMerger:whenMerged(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>whenMerged</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;?&gt;</classname> action)</title><para>Adds an action to be called after content is loaded from existing file and after gradle build information is merged.
</para><para>
This is advanced api that gives access to internal implementation of idea plugin.
Use it only to tackle some tricky edge cases.
</para><para>
For examples see docs for <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseProject"/>
or <apilink class="org.gradle.plugins.ide.idea.model.IdeaProject"/> and others.</para></section><section id="org.gradle.plugins.ide.api.XmlFileContentMerger:withXml(groovy.lang.Closure)" role="detail"><title><classname>void</classname> <literal>withXml</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> closure)</title><para>Adds a closure to be called when the file has been created.
The XML is passed to the closure as a parameter in form of a <apilink class="org.gradle.api.XmlProvider"/>.
The closure can modify the XML before it is written to the output file.
</para><para>
For examples see docs for <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseProject"/>
or <apilink class="org.gradle.plugins.ide.idea.model.IdeaProject"/> and others.</para></section><section id="org.gradle.plugins.ide.api.XmlFileContentMerger:withXml(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>withXml</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.XmlProvider"/>&gt;</classname> action)</title><para>Adds an action to be called when the file has been created.
</para><para>
See <apilink class="org.gradle.plugins.ide.api.XmlFileContentMerger" method="withXml(groovy.lang.Closure)"/></para></section></section></chapter><chapter id="org.gradle.plugins.ide.eclipse.model.EclipseJdt"><title>EclipseJdt</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.plugins.ide.eclipse.model.EclipseJdt" style="javadoc"/></seg></seglistitem></segmentedlist><para>Enables fine-tuning jdt details of the Eclipse plugin

</para><programlisting language="java">
plugins {
    id 'java'
    id 'eclipse'
}

eclipse {
  jdt {
    //if you want to alter the java versions (by default they are configured with gradle java plugin settings):
    sourceCompatibility = 1.6
    targetCompatibility = 1.5
    javaRuntimeName = "J2SE-1.5"

    file {
      //whenMerged closure is the highest voodoo
      //and probably should be used only to solve tricky edge cases.
      //the type passed to the closure is <apilink class="org.gradle.plugins.ide.eclipse.model.Jdt"/>

      //closure executed after jdt file content is loaded from existing file
      //and after gradle build information is merged
      whenMerged { jdt
        //you can tinker with the <apilink class="org.gradle.plugins.ide.eclipse.model.Jdt"/> here
      }

      //withProperties allows addition of properties not currently
      //modeled by Gradle
      withProperties { properties -&gt;
          //you can tinker with the <ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Properties.html"><classname>Properties</classname></ulink> here
      }
    }
  }
}
</programlisting><section><title>Properties</title><table><title>Properties - EclipseJdt</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.plugins.ide.eclipse.model.EclipseJdt:file"><literal>file</literal></link></td><td><para>See <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseJdt" method="file(org.gradle.api.Action)"/></para></td></tr><tr><td><link linkend="org.gradle.plugins.ide.eclipse.model.EclipseJdt:sourceCompatibility"><literal>sourceCompatibility</literal></link></td><td><para>The source Java language level.
</para></td></tr><tr><td><link linkend="org.gradle.plugins.ide.eclipse.model.EclipseJdt:targetCompatibility"><literal>targetCompatibility</literal></link></td><td><para>The target JVM to generate <literal>.class</literal> files for.
</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - EclipseJdt</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.plugins.ide.eclipse.model.EclipseJdt:file(org.gradle.api.Action)">file</link>(action)</literal></td><td><para>Enables advanced configuration like affecting the way existing jdt file content
is merged with gradle build information
</para></td></tr></table></section><section><title>Script blocks</title><table><title>Script blocks - EclipseJdt</title><thead><tr><td>Block</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.plugins.ide.eclipse.model.EclipseJdt:file(groovy.lang.Closure)"><literal>file</literal></link></td><td><para>Enables advanced configuration like affecting the way existing jdt file content
is merged with gradle build information
</para></td></tr></table></section><section><title>Property details</title><section id="org.gradle.plugins.ide.eclipse.model.EclipseJdt:file" role="detail"><title><apilink class="org.gradle.plugins.ide.api.PropertiesFileContentMerger"/> <literal>file</literal> (read-only)</title><para>See <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseJdt" method="file(org.gradle.api.Action)"/></para></section><section id="org.gradle.plugins.ide.eclipse.model.EclipseJdt:sourceCompatibility" role="detail"><title><apilink class="org.gradle.api.JavaVersion"/> <literal>sourceCompatibility</literal></title><para>The source Java language level.
</para><para>
For example see docs for <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseJdt"/></para><segmentedlist><segtitle>Default with <literal>eclipse</literal> and <literal>java</literal> plugins</segtitle><seglistitem><seg><literal>project.sourceCompatibility</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.plugins.ide.eclipse.model.EclipseJdt:targetCompatibility" role="detail"><title><apilink class="org.gradle.api.JavaVersion"/> <literal>targetCompatibility</literal></title><para>The target JVM to generate <literal>.class</literal> files for.
</para><para>
For example see docs for <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseJdt"/></para><segmentedlist><segtitle>Default with <literal>eclipse</literal> and <literal>java</literal> plugins</segtitle><seglistitem><seg><literal>project.targetCompatibility</literal></seg></seglistitem></segmentedlist></section></section><section><title>Method details</title><section id="org.gradle.plugins.ide.eclipse.model.EclipseJdt:file(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>file</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.plugins.ide.api.PropertiesFileContentMerger"/>&gt;</classname> action)</title><para>Enables advanced configuration like affecting the way existing jdt file content
is merged with gradle build information
</para><para>
The object passed to whenMerged{} and beforeMerged{} actions is of type <apilink class="org.gradle.plugins.ide.eclipse.model.Jdt"/>
</para><para>
The object passed to withProperties{} actions is of type <ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Properties.html"><classname>Properties</classname></ulink>
</para><para>
For example see docs for <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseJdt"/></para></section></section><section><title>Script block details</title><section id="org.gradle.plugins.ide.eclipse.model.EclipseJdt:file(groovy.lang.Closure)" role="detail"><title><literal>file</literal> { }</title><para>Enables advanced configuration like affecting the way existing jdt file content
is merged with gradle build information
</para><para>
The object passed to whenMerged{} and beforeMerged{} closures is of type <apilink class="org.gradle.plugins.ide.eclipse.model.Jdt"/>
</para><para>
The object passed to withProperties{} closures is of type <ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Properties.html"><classname>Properties</classname></ulink>
</para><para>
For example see docs for <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseJdt"/></para><segmentedlist><segtitle>Delegates to</segtitle><seglistitem><seg><apilink class="org.gradle.plugins.ide.api.PropertiesFileContentMerger"/> from <link linkend="org.gradle.plugins.ide.eclipse.model.EclipseJdt:file"><literal>file</literal></link></seg></seglistitem></segmentedlist></section></section></chapter><chapter id="org.gradle.plugins.ide.api.PropertiesFileContentMerger"><title>PropertiesFileContentMerger</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.plugins.ide.api.PropertiesFileContentMerger" style="javadoc"/></seg></seglistitem></segmentedlist><para>Models the generation/parsing/merging capabilities.
Adds properties-related hooks.
</para><para>
For examples see docs for <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseJdt"/> and others.</para><section><title>Properties</title><para>No properties</para></section><section><title>Methods</title><table><title>Methods - PropertiesFileContentMerger</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.plugins.ide.api.PropertiesFileContentMerger:beforeMerged(groovy.lang.Closure)">beforeMerged</link>(closure)</literal></td><td><para>Adds a closure to be called after content is loaded from existing file but before gradle build information is merged.
</para></td></tr><tr><td><literal><link linkend="org.gradle.plugins.ide.api.PropertiesFileContentMerger:beforeMerged(org.gradle.api.Action)">beforeMerged</link>(action)</literal></td><td><para>Adds an action to be called after content is loaded from existing file but before gradle build information is merged.
</para></td></tr><tr><td><literal><link linkend="org.gradle.plugins.ide.api.PropertiesFileContentMerger:whenMerged(groovy.lang.Closure)">whenMerged</link>(closure)</literal></td><td><para>Adds a closure to be called after content is loaded from existing file and after gradle build information is merged.
</para></td></tr><tr><td><literal><link linkend="org.gradle.plugins.ide.api.PropertiesFileContentMerger:whenMerged(org.gradle.api.Action)">whenMerged</link>(action)</literal></td><td><para>Adds an action to be called after content is loaded from existing file and after gradle build information is merged.
</para></td></tr><tr><td><literal><link linkend="org.gradle.plugins.ide.api.PropertiesFileContentMerger:withProperties(groovy.lang.Closure)">withProperties</link>(closure)</literal></td><td><para>Adds a closure to be called when the file has been created.
The <ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Properties.html"><classname>Properties</classname></ulink> are passed to the closure as a parameter.
The closure can modify the Properties before they are written to the output file.
</para></td></tr><tr><td><literal><link linkend="org.gradle.plugins.ide.api.PropertiesFileContentMerger:withProperties(org.gradle.api.Action)">withProperties</link>(action)</literal></td><td><para>Adds an action to be called when the file has been created.
The <ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Properties.html"><classname>Properties</classname></ulink> are passed to the action as a parameter.
The action can modify the Properties before they are written to the output file.
</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Method details</title><section id="org.gradle.plugins.ide.api.PropertiesFileContentMerger:beforeMerged(groovy.lang.Closure)" role="detail"><title><classname>void</classname> <literal>beforeMerged</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> closure)</title><para>Adds a closure to be called after content is loaded from existing file but before gradle build information is merged.
</para><para>
This is advanced api that gives access to internal implementation.
It might be useful if you want to alter the way gradle build information is merged into existing file content.
</para><para>
For examples see docs for <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseProject"/>
or <apilink class="org.gradle.plugins.ide.idea.model.IdeaProject"/> and others.</para></section><section id="org.gradle.plugins.ide.api.PropertiesFileContentMerger:beforeMerged(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>beforeMerged</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;?&gt;</classname> action)</title><para>Adds an action to be called after content is loaded from existing file but before gradle build information is merged.
</para><para>
This is advanced api that gives access to internal implementation.
It might be useful if you want to alter the way gradle build information is merged into existing file content.
</para><para>
For examples see docs for <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseProject"/>
or <apilink class="org.gradle.plugins.ide.idea.model.IdeaProject"/> and others.</para></section><section id="org.gradle.plugins.ide.api.PropertiesFileContentMerger:whenMerged(groovy.lang.Closure)" role="detail"><title><classname>void</classname> <literal>whenMerged</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> closure)</title><para>Adds a closure to be called after content is loaded from existing file and after gradle build information is merged.
</para><para>
This is advanced api that gives access to internal implementation of idea plugin.
Use it only to tackle some tricky edge cases.
</para><para>
For examples see docs for <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseProject"/>
or <apilink class="org.gradle.plugins.ide.idea.model.IdeaProject"/> and others.</para></section><section id="org.gradle.plugins.ide.api.PropertiesFileContentMerger:whenMerged(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>whenMerged</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;?&gt;</classname> action)</title><para>Adds an action to be called after content is loaded from existing file and after gradle build information is merged.
</para><para>
This is advanced api that gives access to internal implementation of idea plugin.
Use it only to tackle some tricky edge cases.
</para><para>
For examples see docs for <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseProject"/>
or <apilink class="org.gradle.plugins.ide.idea.model.IdeaProject"/> and others.</para></section><section id="org.gradle.plugins.ide.api.PropertiesFileContentMerger:withProperties(groovy.lang.Closure)" role="detail"><title><classname>void</classname> <literal>withProperties</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> closure)</title><para>Adds a closure to be called when the file has been created.
The <ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Properties.html"><classname>Properties</classname></ulink> are passed to the closure as a parameter.
The closure can modify the Properties before they are written to the output file.
</para><para>
For examples see docs for <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseJdt"/> and others.</para></section><section id="org.gradle.plugins.ide.api.PropertiesFileContentMerger:withProperties(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>withProperties</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Properties.html"><classname>Properties</classname></ulink>&gt;</classname> action)</title><para>Adds an action to be called when the file has been created.
The <ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Properties.html"><classname>Properties</classname></ulink> are passed to the action as a parameter.
The action can modify the Properties before they are written to the output file.
</para><para>
For examples see docs for <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseJdt"/> and others.</para></section></section></chapter><chapter id="org.gradle.plugins.ide.eclipse.model.EclipseProject"><title>EclipseProject</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.plugins.ide.eclipse.model.EclipseProject" style="javadoc"/></seg></seglistitem></segmentedlist><para>Enables fine-tuning project details (.project file) of the Eclipse plugin
</para><para>
Example of use with a blend of all possible properties.
Bear in mind that usually you don't have configure eclipse project directly because Gradle configures it for free!

</para><programlisting language="java">
plugins {
    id 'java'
    id 'eclipse'
}

eclipse {
  project {
    //if you don't like the name Gradle has chosen
    name = 'someBetterName'

    //if you want to specify the Eclipse project's comment
    comment = 'Very interesting top secret project'

    //if you want to append some extra referenced projects in a declarative fashion:
    referencedProjects 'someProject', 'someOtherProject'
    //if you want to assign referenced projects
    referencedProjects = ['someProject'] as Set

    //if you want to append some extra natures in a declarative fashion:
    natures 'some.extra.eclipse.nature', 'some.another.interesting.nature'
    //if you want to assign natures in a groovy fashion:
    natures = ['some.extra.eclipse.nature', 'some.another.interesting.nature']

    //if you want to append some extra build command:
    buildCommand 'buildThisLovelyProject'
    //if you want to append a build command with parameters:
    buildCommand 'buildItWithTheArguments', argumentOne: "I'm first", argumentTwo: "I'm second"

    //if you want to create an extra link in the eclipse project,
    //by location uri:
    linkedResource name: 'someLinkByLocationUri', type: 'someLinkType', locationUri: 'file://someUri'
    //by location:
    linkedResource name: 'someLinkByLocation', type: 'someLinkType', location: '/some/location'

    //if you don't want any node_modules folder to appear in Eclipse, you can filter it out:
    resourceFilter {
      appliesTo = 'FOLDERS'
      type = 'EXCLUDE_ALL'
      matcher {
        id = 'org.eclipse.ui.ide.multiFilter'
        arguments = '1.0-name-matches-false-false-node_modules'
      }
    }
  }
}
</programlisting><para>

For tackling edge cases users can perform advanced configuration on resulting XML file.
It is also possible to affect the way eclipse plugin merges the existing configuration
via beforeMerged and whenMerged closures.
</para><para>
beforeMerged and whenMerged closures receive <apilink class="org.gradle.plugins.ide.eclipse.model.Project"/> object
</para><para>
Examples of advanced configuration:

</para><programlisting language="java">
plugins {
    id 'java'
    id 'eclipse'
}

eclipse {
  project {

    file {
      //if you want to mess with the resulting XML in whatever way you fancy
      withXml {
        def node = it.asNode()
        node.appendNode('xml', 'is what I love')
      }

      //closure executed after .project content is loaded from existing file
      //but before gradle build information is merged
      beforeMerged { project -&gt;
        //if you want skip merging natures... (a very abstract example)
        project.natures.clear()
      }

      //closure executed after .project content is loaded from existing file
      //and after gradle build information is merged
      whenMerged { project -&gt;
        //you can tinker with the <apilink class="org.gradle.plugins.ide.eclipse.model.Project"/> here
      }
    }
  }
}
</programlisting><section><title>Properties</title><table><title>Properties - EclipseProject</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.plugins.ide.eclipse.model.EclipseProject:buildCommands"><literal>buildCommands</literal></link></td><td><para>The build commands to be added to this Eclipse project.
</para></td></tr><tr><td><link linkend="org.gradle.plugins.ide.eclipse.model.EclipseProject:comment"><literal>comment</literal></link></td><td><para>A comment used for the eclipse project. By default it will be configured to <emphasis>project.description</emphasis>
</para></td></tr><tr><td><link linkend="org.gradle.plugins.ide.eclipse.model.EclipseProject:file"><literal>file</literal></link></td><td><para>See <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseProject" method="file(org.gradle.api.Action)"/></para></td></tr><tr><td><link linkend="org.gradle.plugins.ide.eclipse.model.EclipseProject:linkedResources"><literal>linkedResources</literal></link></td><td><para>The linked resources to be added to this Eclipse project.
</para></td></tr><tr><td><link linkend="org.gradle.plugins.ide.eclipse.model.EclipseProject:name"><literal>name</literal></link></td><td><para>Configures eclipse project name. It is <emphasis>optional</emphasis> because the task should configure it correctly for you.
By default it will try to use the <emphasis>project.name</emphasis> or prefix it with a part of a <emphasis>project.path</emphasis>
to make sure the moduleName is unique in the scope of a multi-module build.
The 'uniqueness' of a module name is required for correct import
into Eclipse and the task will make sure the name is unique.
</para></td></tr><tr><td><link linkend="org.gradle.plugins.ide.eclipse.model.EclipseProject:natures"><literal>natures</literal></link></td><td><para>The natures to be added to this Eclipse project.
</para></td></tr><tr><td><link linkend="org.gradle.plugins.ide.eclipse.model.EclipseProject:referencedProjects"><literal>referencedProjects</literal></link></td><td><para>The referenced projects of this Eclipse project (*not*: java build path project references).
</para></td></tr><tr><td><link linkend="org.gradle.plugins.ide.eclipse.model.EclipseProject:resourceFilters"><literal>resourceFilters</literal></link></td><td><para>The resource filters of the eclipse project.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - EclipseProject</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.plugins.ide.eclipse.model.EclipseProject:buildCommand(java.lang.String)">buildCommand</link>(buildCommand)</literal></td><td><para>Adds a build command to the eclipse project. </para></td></tr><tr><td><literal><link linkend="org.gradle.plugins.ide.eclipse.model.EclipseProject:buildCommand(java.util.Map, java.lang.String)">buildCommand</link>(args, buildCommand)</literal></td><td><para>Adds a build command with arguments to the eclipse project. </para></td></tr><tr><td><literal><link linkend="org.gradle.plugins.ide.eclipse.model.EclipseProject:file(org.gradle.api.Action)">file</link>(action)</literal></td><td><para>Enables advanced configuration like tinkering with the output XML or affecting the way existing .project content is merged with gradle build information.

For example see docs for <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseProject"/></para></td></tr><tr><td><literal><link linkend="org.gradle.plugins.ide.eclipse.model.EclipseProject:linkedResource(java.util.Map)">linkedResource</link>(args)</literal></td><td><para>Adds a resource link (aka 'source link') to the eclipse project. </para></td></tr><tr><td><literal><link linkend="org.gradle.plugins.ide.eclipse.model.EclipseProject:natures(java.lang.String[])">natures</link>(natures)</literal></td><td><para>Appends natures entries to the eclipse project. </para></td></tr><tr><td><literal><link linkend="org.gradle.plugins.ide.eclipse.model.EclipseProject:referencedProjects(java.lang.String[])">referencedProjects</link>(referencedProjects)</literal></td><td><para>The referenced projects of this Eclipse project (*not*: java build path project references). </para></td></tr><tr><td><literal><link linkend="org.gradle.plugins.ide.eclipse.model.EclipseProject:resourceFilter(groovy.lang.Closure)">resourceFilter</link>(configureClosure)</literal></td><td><para>Adds a resource filter to the eclipse project.
</para></td></tr><tr><td><literal><link linkend="org.gradle.plugins.ide.eclipse.model.EclipseProject:resourceFilter(org.gradle.api.Action)">resourceFilter</link>(configureAction)</literal></td><td><para>Adds a resource filter to the eclipse project.
</para></td></tr></table></section><section><title>Script blocks</title><table><title>Script blocks - EclipseProject</title><thead><tr><td>Block</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.plugins.ide.eclipse.model.EclipseProject:file(groovy.lang.Closure)"><literal>file</literal></link></td><td><para>Enables advanced configuration like tinkering with the output XML or affecting the way existing .project content is merged with gradle build information </para></td></tr></table></section><section><title>Property details</title><section id="org.gradle.plugins.ide.eclipse.model.EclipseProject:buildCommands" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/List.html"><classname>List</classname></ulink>&lt;<apilink class="org.gradle.plugins.ide.eclipse.model.BuildCommand"/>&gt;</classname> <literal>buildCommands</literal></title><para>The build commands to be added to this Eclipse project.
</para><para>
For example see docs for <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseProject"/></para><segmentedlist><segtitle>Default with <literal>eclipse</literal> and <literal>java</literal> plugins</segtitle><seglistitem><seg>Java builder, plus Scala and Web builders as appropriate.</seg></seglistitem></segmentedlist></section><section id="org.gradle.plugins.ide.eclipse.model.EclipseProject:comment" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>comment</literal></title><para>A comment used for the eclipse project. By default it will be configured to <emphasis>project.description</emphasis>
</para><para>
For example see docs for <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseProject"/></para><segmentedlist><segtitle>Default with <literal>eclipse</literal> and <literal>java</literal> plugins</segtitle><seglistitem><seg><literal>project.description</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.plugins.ide.eclipse.model.EclipseProject:file" role="detail"><title><apilink class="org.gradle.plugins.ide.api.XmlFileContentMerger"/> <literal>file</literal> (read-only)</title><para>See <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseProject" method="file(org.gradle.api.Action)"/></para></section><section id="org.gradle.plugins.ide.eclipse.model.EclipseProject:linkedResources" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<apilink class="org.gradle.plugins.ide.eclipse.model.Link"/>&gt;</classname> <literal>linkedResources</literal></title><para>The linked resources to be added to this Eclipse project.
</para><para>
For example see docs for <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseProject"/></para><segmentedlist><segtitle>Default with <literal>eclipse</literal> and <literal>java</literal> plugins</segtitle><seglistitem><seg>[]</seg></seglistitem></segmentedlist></section><section id="org.gradle.plugins.ide.eclipse.model.EclipseProject:name" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>name</literal></title><para>Configures eclipse project name. It is <emphasis>optional</emphasis> because the task should configure it correctly for you.
By default it will try to use the <emphasis>project.name</emphasis> or prefix it with a part of a <emphasis>project.path</emphasis>
to make sure the moduleName is unique in the scope of a multi-module build.
The 'uniqueness' of a module name is required for correct import
into Eclipse and the task will make sure the name is unique.
</para><para>
The logic that makes sure project names are unique is available <emphasis>since</emphasis> 1.0-milestone-2
</para><para>
If your project has problems with unique names it is recommended to always run gradle eclipse from the root, e.g. for all subprojects, including generation of .classpath.
If you run the generation of the eclipse project only for a single subproject then you may have different results
because the unique names are calculated based on eclipse projects that are involved in the specific build run.
</para><para>
If you update the project names then make sure you run gradle eclipse from the root, e.g. for all subprojects.
The reason is that there may be subprojects that depend on the subproject with amended eclipse project name.
So you want them to be generated as well because the project dependencies in .classpath need to refer to the amended project name.
Basically, for non-trivial projects it is recommended to always run gradle eclipse from the root.
</para><para>
For example see docs for <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseProject"/></para><segmentedlist><segtitle>Default with <literal>eclipse</literal> and <literal>java</literal> plugins</segtitle><seglistitem><seg><literal><replaceable>${project.name}</replaceable> (sometimes prefixed with parts of <replaceable>${project.path}</replaceable> to guarantee uniqueness)</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.plugins.ide.eclipse.model.EclipseProject:natures" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/List.html"><classname>List</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>natures</literal></title><para>The natures to be added to this Eclipse project.
</para><para>
For example see docs for <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseProject"/></para><segmentedlist><segtitle>Default with <literal>eclipse</literal> and <literal>java</literal> plugins</segtitle><seglistitem><seg>Java nature, plus Groovy, Scala and Web natures as appropriate.</seg></seglistitem></segmentedlist></section><section id="org.gradle.plugins.ide.eclipse.model.EclipseProject:referencedProjects" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>referencedProjects</literal></title><para>The referenced projects of this Eclipse project (*not*: java build path project references).
</para><para>
Referencing projects does not mean adding a build path dependencies between them!
If you need to configure a build path dependency use Gradle's dependencies section or
eclipse.classpath.whenMerged { classpath -&gt; ... to manipulate the classpath entries
</para><para>
For example see docs for <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseProject"/></para><segmentedlist><segtitle>Default with <literal>eclipse</literal> and <literal>java</literal> plugins</segtitle><seglistitem><seg>[]</seg></seglistitem></segmentedlist></section><section id="org.gradle.plugins.ide.eclipse.model.EclipseProject:resourceFilters" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<apilink class="org.gradle.plugins.ide.eclipse.model.ResourceFilter"/>&gt;</classname> <literal>resourceFilters</literal> (read-only)</title><para>The resource filters of the eclipse project.</para><segmentedlist><segtitle>Default with <literal>eclipse</literal> and <literal>java</literal> plugins</segtitle><seglistitem><seg>[]</seg></seglistitem></segmentedlist></section></section><section><title>Method details</title><section id="org.gradle.plugins.ide.eclipse.model.EclipseProject:buildCommand(java.lang.String)" role="detail"><title><classname>void</classname> <literal>buildCommand</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> buildCommand)</title><para>Adds a build command to the eclipse project. </para><para> For example see docs for <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseProject"/></para></section><section id="org.gradle.plugins.ide.eclipse.model.EclipseProject:buildCommand(java.util.Map, java.lang.String)" role="detail"><title><classname>void</classname> <literal>buildCommand</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> args, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> buildCommand)</title><para>Adds a build command with arguments to the eclipse project. </para><para> For example see docs for <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseProject"/></para></section><section id="org.gradle.plugins.ide.eclipse.model.EclipseProject:file(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>file</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.plugins.ide.api.XmlFileContentMerger"/>&gt;</classname> action)</title><para>Enables advanced configuration like tinkering with the output XML or affecting the way existing .project content is merged with gradle build information.

For example see docs for <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseProject"/></para></section><section id="org.gradle.plugins.ide.eclipse.model.EclipseProject:linkedResource(java.util.Map)" role="detail"><title><classname>void</classname> <literal>linkedResource</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> args)</title><para>Adds a resource link (aka 'source link') to the eclipse project. </para><para> For example see docs for <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseProject"/></para></section><section id="org.gradle.plugins.ide.eclipse.model.EclipseProject:natures(java.lang.String[])" role="detail"><title><classname>void</classname> <literal>natures</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>...</classname> natures)</title><para>Appends natures entries to the eclipse project. </para><para> For example see docs for <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseProject"/></para></section><section id="org.gradle.plugins.ide.eclipse.model.EclipseProject:referencedProjects(java.lang.String[])" role="detail"><title><classname>void</classname> <literal>referencedProjects</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>...</classname> referencedProjects)</title><para>The referenced projects of this Eclipse project (*not*: java build path project references). </para><para> Referencing projects does not mean adding a build path dependencies between them! If you need to
configure a build path dependency use Gradle's dependencies section or eclipse.classpath.whenMerged { classpath -&gt; ... to manipulate the classpath entries</para></section><section id="org.gradle.plugins.ide.eclipse.model.EclipseProject:resourceFilter(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.plugins.ide.eclipse.model.ResourceFilter"/> <literal>resourceFilter</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> configureClosure)</title><para>Adds a resource filter to the eclipse project.
</para><para>
For examples, see docs for <apilink class="org.gradle.plugins.ide.eclipse.model.ResourceFilter"/></para></section><section id="org.gradle.plugins.ide.eclipse.model.EclipseProject:resourceFilter(org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.plugins.ide.eclipse.model.ResourceFilter"/> <literal>resourceFilter</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.plugins.ide.eclipse.model.ResourceFilter"/>&gt;</classname> configureAction)</title><para>Adds a resource filter to the eclipse project.
</para><para>
For examples, see docs for <apilink class="org.gradle.plugins.ide.eclipse.model.ResourceFilter"/></para></section></section><section><title>Script block details</title><section id="org.gradle.plugins.ide.eclipse.model.EclipseProject:file(groovy.lang.Closure)" role="detail"><title><literal>file</literal> { }</title><para>Enables advanced configuration like tinkering with the output XML or affecting the way existing .project content is merged with gradle build information </para><para> The object passed to whenMerged{}
and beforeMerged{} closures is of type <apilink class="org.gradle.plugins.ide.eclipse.model.Project"/> </para><para>

For example see docs for <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseProject"/></para><segmentedlist><segtitle>Delegates to</segtitle><seglistitem><seg><apilink class="org.gradle.plugins.ide.api.XmlFileContentMerger"/> from <link linkend="org.gradle.plugins.ide.eclipse.model.EclipseProject:file"><literal>file</literal></link></seg></seglistitem></segmentedlist></section></section></chapter><chapter id="org.gradle.plugins.ide.eclipse.model.EclipseWtp"><title>EclipseWtp</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.plugins.ide.eclipse.model.EclipseWtp" style="javadoc"/></seg></seglistitem></segmentedlist><para>Enables fine-tuning wtp/wst details of the Eclipse plugin
</para><para>
For projects applying the eclipse plugin and either one of the ear or war plugins, this plugin is auto-applied.
</para><para>
More interesting examples you will find in docs for <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseWtpComponent"/> and <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseWtpFacet"/>

</para><programlisting language="java">
plugins {
    id 'war' // or 'ear' or 'java'
    id 'eclipse-wtp'
}

eclipse {

  //if you want parts of paths in resulting file(s) to be replaced by variables (files):
  pathVariables 'GRADLE_HOME': file('/best/software/gradle'), 'TOMCAT_HOME': file('../tomcat')

  wtp {
    component {
      //for examples see docs for <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseWtpComponent"/>
    }

    facet {
      //for examples see docs for <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseWtpFacet"/>
    }
  }
}

</programlisting><section><title>Properties</title><table><title>Properties - EclipseWtp</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.plugins.ide.eclipse.model.EclipseWtp:component"><literal>component</literal></link></td><td><para>Configures wtp component.
</para></td></tr><tr><td><link linkend="org.gradle.plugins.ide.eclipse.model.EclipseWtp:facet"><literal>facet</literal></link></td><td><para>Configures wtp facet.
</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - EclipseWtp</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.plugins.ide.eclipse.model.EclipseWtp:component(org.gradle.api.Action)">component</link>(action)</literal></td><td><para>Configures wtp component.
</para></td></tr><tr><td><literal><link linkend="org.gradle.plugins.ide.eclipse.model.EclipseWtp:facet(org.gradle.api.Action)">facet</link>(action)</literal></td><td><para>Configures wtp facet.
</para></td></tr></table></section><section><title>Script blocks</title><table><title>Script blocks - EclipseWtp</title><thead><tr><td>Block</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.plugins.ide.eclipse.model.EclipseWtp:component(groovy.lang.Closure)"><literal>component</literal></link></td><td><para>Configures wtp component.
</para></td></tr><tr><td><link linkend="org.gradle.plugins.ide.eclipse.model.EclipseWtp:facet(groovy.lang.Closure)"><literal>facet</literal></link></td><td><para>Configures wtp facet.
</para></td></tr></table></section><section><title>Property details</title><section id="org.gradle.plugins.ide.eclipse.model.EclipseWtp:component" role="detail"><title><apilink class="org.gradle.plugins.ide.eclipse.model.EclipseWtpComponent"/> <literal>component</literal></title><para>Configures wtp component.
</para><para>
For examples see docs for <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseWtpComponent"/></para></section><section id="org.gradle.plugins.ide.eclipse.model.EclipseWtp:facet" role="detail"><title><apilink class="org.gradle.plugins.ide.eclipse.model.EclipseWtpFacet"/> <literal>facet</literal></title><para>Configures wtp facet.
</para><para>
For examples see docs for <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseWtpFacet"/></para></section></section><section><title>Method details</title><section id="org.gradle.plugins.ide.eclipse.model.EclipseWtp:component(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>component</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseWtpComponent"/>&gt;</classname> action)</title><para>Configures wtp component.
</para><para>
For examples see docs for <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseWtpComponent"/></para></section><section id="org.gradle.plugins.ide.eclipse.model.EclipseWtp:facet(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>facet</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseWtpFacet"/>&gt;</classname> action)</title><para>Configures wtp facet.
</para><para>
For examples see docs for <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseWtpFacet"/></para></section></section><section><title>Script block details</title><section id="org.gradle.plugins.ide.eclipse.model.EclipseWtp:component(groovy.lang.Closure)" role="detail"><title><literal>component</literal> { }</title><para>Configures wtp component.
</para><para>
For examples see docs for <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseWtpComponent"/></para><segmentedlist><segtitle>Delegates to</segtitle><seglistitem><seg><apilink class="org.gradle.plugins.ide.eclipse.model.EclipseWtpComponent"/> from <link linkend="org.gradle.plugins.ide.eclipse.model.EclipseWtp:component"><literal>component</literal></link></seg></seglistitem></segmentedlist></section><section id="org.gradle.plugins.ide.eclipse.model.EclipseWtp:facet(groovy.lang.Closure)" role="detail"><title><literal>facet</literal> { }</title><para>Configures wtp facet.
</para><para>
For examples see docs for <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseWtpFacet"/></para><segmentedlist><segtitle>Delegates to</segtitle><seglistitem><seg><apilink class="org.gradle.plugins.ide.eclipse.model.EclipseWtpFacet"/> from <link linkend="org.gradle.plugins.ide.eclipse.model.EclipseWtp:facet"><literal>facet</literal></link></seg></seglistitem></segmentedlist></section></section></chapter><chapter id="org.gradle.plugins.ide.eclipse.model.EclipseWtpComponent"><title>EclipseWtpComponent</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.plugins.ide.eclipse.model.EclipseWtpComponent" style="javadoc"/></seg></seglistitem></segmentedlist><para>Enables fine-tuning wtp component details of the Eclipse plugin
</para><para>
Example of use with a blend of all possible properties.
Bear in mind that usually you don't have to configure them directly because Gradle configures it for free!

</para><programlisting language="java">
plugins {
    id 'war' // or 'ear' or 'java'
    id 'eclipse-wtp'
}

configurations {
  someInterestingConfiguration
  anotherConfiguration
}

eclipse {

  //if you want parts of paths in resulting file(s) to be replaced by variables (files):
  pathVariables 'GRADLE_HOME': file('/best/software/gradle'), 'TOMCAT_HOME': file('../tomcat')

  wtp {
    component {
      //you can configure the context path:
      contextPath = 'someContextPath'

      //you can configure the deployName:
      deployName = 'killerApp'

      //you can alter the wb-resource elements.
      //non-existing source dirs won't be added to the component file.
      sourceDirs += file('someExtraFolder')

      // dependencies to mark as deployable with lib folder deploy path
      libConfigurations += [ configurations.someInterestingConfiguration ]

      // dependencies to mark as deployable with root folder deploy path
      rootConfigurations += [ configurations.someInterestingConfiguration ]

      // dependencies to exclude from wtp deployment
      minusConfigurations &lt;&lt; configurations.anotherConfiguration

      //you can add a wb-resource elements; mandatory keys: 'sourcePath', 'deployPath':
      //if sourcePath points to non-existing folder it will *not* be added.
      resource sourcePath: 'extra/resource', deployPath: 'deployment/resource'

      //you can add a wb-property elements; mandatory keys: 'name', 'value':
      property name: 'moodOfTheDay', value: ':-D'
    }
  }
}
</programlisting><para>

For tackling edge cases users can perform advanced configuration on resulting XML file.
It is also possible to affect the way eclipse plugin merges the existing configuration
via beforeMerged and whenMerged closures.
</para><para>
beforeMerged and whenMerged closures receive <apilink class="org.gradle.plugins.ide.eclipse.model.WtpComponent"/> object
</para><para>
Examples of advanced configuration:

</para><programlisting language="java">
plugins {
    id 'war'
    id 'eclipse-wtp'
}

eclipse {

  wtp {
    component {
      file {
        //if you want to mess with the resulting XML in whatever way you fancy
        withXml {
          def node = it.asNode()
          node.appendNode('xml', 'is what I love')
        }

        //closure executed after wtp component file content is loaded from existing file
        //but before gradle build information is merged
        beforeMerged { wtpComponent -&gt;
          //tinker with <apilink class="org.gradle.plugins.ide.eclipse.model.WtpComponent"/> here
        }

        //closure executed after wtp component file content is loaded from existing file
        //and after gradle build information is merged
        whenMerged { wtpComponent -&gt;
          //you can tinker with the <apilink class="org.gradle.plugins.ide.eclipse.model.WtpComponent"/> here
        }
      }
    }
  }
}
</programlisting><section><title>Properties</title><table><title>Properties - EclipseWtpComponent</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.plugins.ide.eclipse.model.EclipseWtpComponent:classesDeployPath"><literal>classesDeployPath</literal></link></td><td><para>The deploy path for classes.
</para></td></tr><tr><td><link linkend="org.gradle.plugins.ide.eclipse.model.EclipseWtpComponent:contextPath"><literal>contextPath</literal></link></td><td><para>The context path for the web application
</para></td></tr><tr><td><link linkend="org.gradle.plugins.ide.eclipse.model.EclipseWtpComponent:deployName"><literal>deployName</literal></link></td><td><para>The deploy name to be used.
</para></td></tr><tr><td><link linkend="org.gradle.plugins.ide.eclipse.model.EclipseWtpComponent:file"><literal>file</literal></link></td><td><para>See <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseWtpComponent" method="file(org.gradle.api.Action)"/></para></td></tr><tr><td><link linkend="org.gradle.plugins.ide.eclipse.model.EclipseWtpComponent:libConfigurations"><literal>libConfigurations</literal></link></td><td><para>The configurations whose files are to be marked to be deployed with a deploy path of <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseWtpComponent" method="getLibDeployPath()"/>.
</para></td></tr><tr><td><link linkend="org.gradle.plugins.ide.eclipse.model.EclipseWtpComponent:libDeployPath"><literal>libDeployPath</literal></link></td><td><para>The deploy path for libraries.
</para></td></tr><tr><td><link linkend="org.gradle.plugins.ide.eclipse.model.EclipseWtpComponent:minusConfigurations"><literal>minusConfigurations</literal></link></td><td><para>The configurations whose files are to be excluded from wtp deployment.
</para></td></tr><tr><td><link linkend="org.gradle.plugins.ide.eclipse.model.EclipseWtpComponent:properties"><literal>properties</literal></link></td><td><para>Additional property elements.
</para></td></tr><tr><td><link linkend="org.gradle.plugins.ide.eclipse.model.EclipseWtpComponent:resources"><literal>resources</literal></link></td><td><para>Additional wb-resource elements.
</para></td></tr><tr><td><link linkend="org.gradle.plugins.ide.eclipse.model.EclipseWtpComponent:rootConfigurations"><literal>rootConfigurations</literal></link></td><td><para>The configurations whose files are to be marked to be deployed with a deploy path of '/'.
</para></td></tr><tr><td><link linkend="org.gradle.plugins.ide.eclipse.model.EclipseWtpComponent:sourceDirs"><literal>sourceDirs</literal></link></td><td><para>Source directories to be transformed into wb-resource elements.
</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - EclipseWtpComponent</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.plugins.ide.eclipse.model.EclipseWtpComponent:file(org.gradle.api.Action)">file</link>(action)</literal></td><td><para>Enables advanced configuration like tinkering with the output XML
or affecting the way existing wtp component file content is merged with gradle build information.
</para></td></tr><tr><td><literal><link linkend="org.gradle.plugins.ide.eclipse.model.EclipseWtpComponent:property(java.util.Map)">property</link>(args)</literal></td><td><para>Adds a property.
</para></td></tr><tr><td><literal><link linkend="org.gradle.plugins.ide.eclipse.model.EclipseWtpComponent:resource(java.util.Map)">resource</link>(args)</literal></td><td><para>Adds a wb-resource.
</para></td></tr></table></section><section><title>Script blocks</title><table><title>Script blocks - EclipseWtpComponent</title><thead><tr><td>Block</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.plugins.ide.eclipse.model.EclipseWtpComponent:file(groovy.lang.Closure)"><literal>file</literal></link></td><td><para>Enables advanced configuration like tinkering with the output XML
or affecting the way existing wtp component file content is merged with gradle build information
</para></td></tr></table></section><section><title>Property details</title><section id="org.gradle.plugins.ide.eclipse.model.EclipseWtpComponent:classesDeployPath" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>classesDeployPath</literal></title><para>The deploy path for classes.
</para><para>
For examples see docs for <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseWtp"/></para><segmentedlist><segtitle>Default with <literal>eclipse</literal> and <literal>war</literal> plugins</segtitle><segtitle>Default with <literal>eclipse</literal> and <literal>ear</literal> plugins</segtitle><seglistitem><seg><literal>/WEB-INF/classes</literal></seg><seg><literal>/</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.plugins.ide.eclipse.model.EclipseWtpComponent:contextPath" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>contextPath</literal></title><para>The context path for the web application
</para><para>
For examples see docs for <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseWtp"/></para><segmentedlist><segtitle>Default with <literal>eclipse</literal> and <literal>war</literal> plugins</segtitle><seglistitem><seg><literal>project.war.baseName</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.plugins.ide.eclipse.model.EclipseWtpComponent:deployName" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>deployName</literal></title><para>The deploy name to be used.
</para><para>
For examples see docs for <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseWtp"/></para><segmentedlist><segtitle>Default with <literal>eclipse</literal> and <literal>war</literal> plugins</segtitle><segtitle>Default with <literal>eclipse</literal> and <literal>ear</literal> plugins</segtitle><seglistitem><seg><literal>eclipse.project.name</literal></seg><seg><literal>eclipse.project.name</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.plugins.ide.eclipse.model.EclipseWtpComponent:file" role="detail"><title><apilink class="org.gradle.plugins.ide.api.XmlFileContentMerger"/> <literal>file</literal> (read-only)</title><para>See <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseWtpComponent" method="file(org.gradle.api.Action)"/></para></section><section id="org.gradle.plugins.ide.eclipse.model.EclipseWtpComponent:libConfigurations" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<apilink class="org.gradle.api.artifacts.Configuration"/>&gt;</classname> <literal>libConfigurations</literal></title><para>The configurations whose files are to be marked to be deployed with a deploy path of <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseWtpComponent" method="getLibDeployPath()"/>.
</para><para>
For examples see docs for <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseWtp"/></para><segmentedlist><segtitle>Default with <literal>eclipse</literal> and <literal>war</literal> plugins</segtitle><segtitle>Default with <literal>eclipse</literal> and <literal>ear</literal> plugins</segtitle><seglistitem><seg><literal>[project.configurations.runtimeClasspath]</literal></seg><seg><literal>[project.configurations.earlib]</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.plugins.ide.eclipse.model.EclipseWtpComponent:libDeployPath" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>libDeployPath</literal></title><para>The deploy path for libraries.
</para><para>
For examples see docs for <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseWtp"/></para><segmentedlist><segtitle>Default with <literal>eclipse</literal> and <literal>war</literal> plugins</segtitle><segtitle>Default with <literal>eclipse</literal> and <literal>ear</literal> plugins</segtitle><seglistitem><seg><literal>/WEB-INF/lib</literal></seg><seg><literal>/lib</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.plugins.ide.eclipse.model.EclipseWtpComponent:minusConfigurations" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<apilink class="org.gradle.api.artifacts.Configuration"/>&gt;</classname> <literal>minusConfigurations</literal></title><para>The configurations whose files are to be excluded from wtp deployment.
</para><para>
For examples see docs for <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseWtp"/></para><segmentedlist><segtitle>Default with <literal>eclipse</literal> and <literal>war</literal> plugins</segtitle><segtitle>Default with <literal>eclipse</literal> and <literal>ear</literal> plugins</segtitle><seglistitem><seg><literal>[project.configurations.providedRuntime]</literal></seg><seg><literal>[]</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.plugins.ide.eclipse.model.EclipseWtpComponent:properties" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/List.html"><classname>List</classname></ulink>&lt;<apilink class="org.gradle.plugins.ide.eclipse.model.WbProperty"/>&gt;</classname> <literal>properties</literal></title><para>Additional property elements.
</para><para>
For examples see docs for <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseWtp"/></para><segmentedlist><segtitle>Default with <literal>eclipse</literal> and <literal>war</literal> plugins</segtitle><segtitle>Default with <literal>eclipse</literal> and <literal>ear</literal> plugins</segtitle><seglistitem><seg><literal>[]</literal></seg><seg><literal>[]</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.plugins.ide.eclipse.model.EclipseWtpComponent:resources" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/List.html"><classname>List</classname></ulink>&lt;<apilink class="org.gradle.plugins.ide.eclipse.model.WbResource"/>&gt;</classname> <literal>resources</literal></title><para>Additional wb-resource elements.
</para><para>
For examples see docs for <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseWtp"/>
</para><para>
Only resources that link to an existing directory (<apilink class="org.gradle.plugins.ide.eclipse.model.WbResource" method="getSourcePath()"/>)
will be added to the wtp component file.
The reason is that non-existing resource directory declarations
lead to errors when project is imported into Eclipse.</para><segmentedlist><segtitle>Default with <literal>eclipse</literal> and <literal>war</literal> plugins</segtitle><segtitle>Default with <literal>eclipse</literal> and <literal>ear</literal> plugins</segtitle><seglistitem><seg><literal>[deployPath: '/', sourcePath: project.webAppDirName]</literal></seg><seg><literal>[]</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.plugins.ide.eclipse.model.EclipseWtpComponent:rootConfigurations" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<apilink class="org.gradle.api.artifacts.Configuration"/>&gt;</classname> <literal>rootConfigurations</literal></title><para>The configurations whose files are to be marked to be deployed with a deploy path of '/'.
</para><para>
For examples see docs for <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseWtp"/></para><segmentedlist><segtitle>Default with <literal>eclipse</literal> and <literal>war</literal> plugins</segtitle><segtitle>Default with <literal>eclipse</literal> and <literal>ear</literal> plugins</segtitle><seglistitem><seg><literal>[]</literal></seg><seg><literal>[project.configurations.deploy]]</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.plugins.ide.eclipse.model.EclipseWtpComponent:sourceDirs" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink>&gt;</classname> <literal>sourceDirs</literal></title><para>Source directories to be transformed into wb-resource elements.
</para><para>
For examples see docs for <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseWtp"/>
</para><para>
Only source dirs that exist will be added to the wtp component file.
Non-existing resource directory declarations lead to errors when project is imported into Eclipse.</para><segmentedlist><segtitle>Default with <literal>eclipse</literal> and <literal>war</literal> plugins</segtitle><segtitle>Default with <literal>eclipse</literal> and <literal>ear</literal> plugins</segtitle><seglistitem><seg>source dirs from <literal>project.sourceSets.main.allSource</literal></seg><seg>The same unless <literal>java</literal> plugin not applied, then: <literal>[project.appDirName]</literal></seg></seglistitem></segmentedlist></section></section><section><title>Method details</title><section id="org.gradle.plugins.ide.eclipse.model.EclipseWtpComponent:file(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>file</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.plugins.ide.api.XmlFileContentMerger"/>&gt;</classname> action)</title><para>Enables advanced configuration like tinkering with the output XML
or affecting the way existing wtp component file content is merged with gradle build information.
</para><para>
For example see docs for <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseWtpComponent"/></para></section><section id="org.gradle.plugins.ide.eclipse.model.EclipseWtpComponent:property(java.util.Map)" role="detail"><title><classname>void</classname> <literal>property</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> args)</title><para>Adds a property.
</para><para>
For examples see docs for <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseWtp"/></para></section><section id="org.gradle.plugins.ide.eclipse.model.EclipseWtpComponent:resource(java.util.Map)" role="detail"><title><classname>void</classname> <literal>resource</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> args)</title><para>Adds a wb-resource.
</para><para>
For examples see docs for <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseWtp"/></para></section></section><section><title>Script block details</title><section id="org.gradle.plugins.ide.eclipse.model.EclipseWtpComponent:file(groovy.lang.Closure)" role="detail"><title><literal>file</literal> { }</title><para>Enables advanced configuration like tinkering with the output XML
or affecting the way existing wtp component file content is merged with gradle build information
</para><para>
The object passed to whenMerged{} and beforeMerged{} closures is of type <apilink class="org.gradle.plugins.ide.eclipse.model.WtpComponent"/>
</para><para>
For example see docs for <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseWtpComponent"/></para><segmentedlist><segtitle>Delegates to</segtitle><seglistitem><seg><apilink class="org.gradle.plugins.ide.api.XmlFileContentMerger"/> from <link linkend="org.gradle.plugins.ide.eclipse.model.EclipseWtpComponent:file"><literal>file</literal></link></seg></seglistitem></segmentedlist></section></section></chapter><chapter id="org.gradle.plugins.ide.eclipse.model.EclipseWtpFacet"><title>EclipseWtpFacet</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.plugins.ide.eclipse.model.EclipseWtpFacet" style="javadoc"/></seg></seglistitem></segmentedlist><para>Enables fine-tuning wtp facet details of the Eclipse plugin
</para><para>
Advanced configuration closures beforeMerged and whenMerged receive <apilink class="org.gradle.plugins.ide.eclipse.model.WtpFacet"/> object as parameter.

</para><programlisting language="java">
plugins {
    id 'war' // or 'ear' or 'java'
    id 'eclipse-wtp'
}

eclipse {
  wtp {
    facet {
      //you can add some extra wtp facets or update existing ones; mandatory keys: 'name', 'version':
      facet name: 'someCoolFacet', version: '1.3'

      file {
        //if you want to mess with the resulting XML in whatever way you fancy
        withXml {
          def node = it.asNode()
          node.appendNode('xml', 'is what I love')
        }

        //beforeMerged and whenMerged closures are the highest voodoo for the tricky edge cases.
        //the type passed to the closures is <apilink class="org.gradle.plugins.ide.eclipse.model.WtpFacet"/>

        //closure executed after wtp facet file content is loaded from existing file
        //but before gradle build information is merged
        beforeMerged { wtpFacet -&gt;
          //tinker with <apilink class="org.gradle.plugins.ide.eclipse.model.WtpFacet"/> here
        }

        //closure executed after wtp facet file content is loaded from existing file
        //and after gradle build information is merged
        whenMerged { wtpFacet -&gt;
          //you can tinker with the <apilink class="org.gradle.plugins.ide.eclipse.model.WtpFacet"/> here
        }
      }
    }
  }
}

</programlisting><section><title>Properties</title><table><title>Properties - EclipseWtpFacet</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.plugins.ide.eclipse.model.EclipseWtpFacet:facets"><literal>facets</literal></link></td><td><para>The facets to be added as elements.
</para></td></tr><tr><td><link linkend="org.gradle.plugins.ide.eclipse.model.EclipseWtpFacet:file"><literal>file</literal></link></td><td><para>See <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseWtpFacet" method="file(org.gradle.api.Action)"/></para></td></tr></table></section><section><title>Methods</title><table><title>Methods - EclipseWtpFacet</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.plugins.ide.eclipse.model.EclipseWtpFacet:facet(java.util.Map)">facet</link>(args)</literal></td><td><para>Adds a facet.
</para></td></tr><tr><td><literal><link linkend="org.gradle.plugins.ide.eclipse.model.EclipseWtpFacet:file(org.gradle.api.Action)">file</link>(action)</literal></td><td><para>Enables advanced configuration like tinkering with the output XML
or affecting the way existing wtp facet file content is merged with gradle build information.
</para></td></tr></table></section><section><title>Script blocks</title><table><title>Script blocks - EclipseWtpFacet</title><thead><tr><td>Block</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.plugins.ide.eclipse.model.EclipseWtpFacet:file(groovy.lang.Closure)"><literal>file</literal></link></td><td><para>Enables advanced configuration like tinkering with the output XML
or affecting the way existing wtp facet file content is merged with gradle build information
</para></td></tr></table></section><section><title>Property details</title><section id="org.gradle.plugins.ide.eclipse.model.EclipseWtpFacet:facets" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/List.html"><classname>List</classname></ulink>&lt;<apilink class="org.gradle.plugins.ide.eclipse.model.Facet"/>&gt;</classname> <literal>facets</literal></title><para>The facets to be added as elements.
</para><para>
For examples see docs for <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseWtpFacet"/></para><segmentedlist><segtitle>Default with <literal>eclipse</literal> and <literal>war</literal> plugins</segtitle><seglistitem><seg>Java and web facets.</seg></seglistitem></segmentedlist></section><section id="org.gradle.plugins.ide.eclipse.model.EclipseWtpFacet:file" role="detail"><title><apilink class="org.gradle.plugins.ide.api.XmlFileContentMerger"/> <literal>file</literal> (read-only)</title><para>See <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseWtpFacet" method="file(org.gradle.api.Action)"/></para></section></section><section><title>Method details</title><section id="org.gradle.plugins.ide.eclipse.model.EclipseWtpFacet:facet(java.util.Map)" role="detail"><title><classname>void</classname> <literal>facet</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, ?&gt;</classname> args)</title><para>Adds a facet.
</para><para>
If a facet already exists with the given name then its version will be updated.
</para><para>
In the case of a "jst.ejb" facet, it will also be added as a fixed facet.
</para><para>
For examples see docs for <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseWtpFacet"/></para></section><section id="org.gradle.plugins.ide.eclipse.model.EclipseWtpFacet:file(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>file</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.plugins.ide.api.XmlFileContentMerger"/>&gt;</classname> action)</title><para>Enables advanced configuration like tinkering with the output XML
or affecting the way existing wtp facet file content is merged with gradle build information.
</para><para>

For example see docs for <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseWtpFacet"/></para></section></section><section><title>Script block details</title><section id="org.gradle.plugins.ide.eclipse.model.EclipseWtpFacet:file(groovy.lang.Closure)" role="detail"><title><literal>file</literal> { }</title><para>Enables advanced configuration like tinkering with the output XML
or affecting the way existing wtp facet file content is merged with gradle build information
</para><para>
The object passed to whenMerged{} and beforeMerged{} closures is of type <apilink class="org.gradle.plugins.ide.eclipse.model.WtpFacet"/>
</para><para>

For example see docs for <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseWtpFacet"/></para><segmentedlist><segtitle>Delegates to</segtitle><seglistitem><seg><apilink class="org.gradle.plugins.ide.api.XmlFileContentMerger"/> from <link linkend="org.gradle.plugins.ide.eclipse.model.EclipseWtpFacet:file"><literal>file</literal></link></seg></seglistitem></segmentedlist></section></section></chapter><chapter id="org.gradle.plugins.ide.idea.model.IdeaModel"><title>IdeaModel</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.plugins.ide.idea.model.IdeaModel" style="javadoc"/></seg></seglistitem></segmentedlist><para>DSL-friendly model of the IDEA project information.
First point of entry when it comes to customizing the IDEA generation.
</para><para>
See the examples in docs for <apilink class="org.gradle.plugins.ide.idea.model.IdeaModule"/> or <apilink class="org.gradle.plugins.ide.idea.model.IdeaProject"/>.</para><section><title>Properties</title><table><title>Properties - IdeaModel</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.plugins.ide.idea.model.IdeaModel:module"><literal>module</literal></link></td><td><para>Configures IDEA module information. </para></td></tr><tr><td><link linkend="org.gradle.plugins.ide.idea.model.IdeaModel:project"><literal>project</literal></link></td><td><para>Configures IDEA project information. </para></td></tr><tr><td><link linkend="org.gradle.plugins.ide.idea.model.IdeaModel:targetVersion"><literal>targetVersion</literal></link></td><td><para>Configures the target IDEA version.</para></td></tr><tr><td><link linkend="org.gradle.plugins.ide.idea.model.IdeaModel:workspace"><literal>workspace</literal></link></td><td><para>Configures IDEA workspace information.
</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - IdeaModel</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.plugins.ide.idea.model.IdeaModel:module(org.gradle.api.Action)">module</link>(action)</literal></td><td><para>Configures IDEA module information. </para></td></tr><tr><td><literal><link linkend="org.gradle.plugins.ide.idea.model.IdeaModel:pathVariables(java.util.Map)">pathVariables</link>(pathVariables)</literal></td><td><para>Adds path variables to be used for replacing absolute paths in resulting files (*.iml, etc.). </para></td></tr><tr><td><literal><link linkend="org.gradle.plugins.ide.idea.model.IdeaModel:project(org.gradle.api.Action)">project</link>(action)</literal></td><td><para>Configures IDEA project information. </para></td></tr><tr><td><literal><link linkend="org.gradle.plugins.ide.idea.model.IdeaModel:workspace(org.gradle.api.Action)">workspace</link>(action)</literal></td><td><para>Configures IDEA workspace information. </para></td></tr></table></section><section><title>Script blocks</title><table><title>Script blocks - IdeaModel</title><thead><tr><td>Block</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.plugins.ide.idea.model.IdeaModel:module(groovy.lang.Closure)"><literal>module</literal></link></td><td><para>Configures IDEA module information. </para></td></tr><tr><td><link linkend="org.gradle.plugins.ide.idea.model.IdeaModel:project(groovy.lang.Closure)"><literal>project</literal></link></td><td><para>Configures IDEA project information. </para></td></tr><tr><td><link linkend="org.gradle.plugins.ide.idea.model.IdeaModel:workspace(groovy.lang.Closure)"><literal>workspace</literal></link></td><td><para>Configures IDEA workspace information. </para></td></tr></table></section><section><title>Property details</title><section id="org.gradle.plugins.ide.idea.model.IdeaModel:module" role="detail"><title><apilink class="org.gradle.plugins.ide.idea.model.IdeaModule"/> <literal>module</literal></title><para>Configures IDEA module information. </para><para> For examples see docs for <apilink class="org.gradle.plugins.ide.idea.model.IdeaModule"/>.</para></section><section id="org.gradle.plugins.ide.idea.model.IdeaModel:project" role="detail"><title><apilink class="org.gradle.plugins.ide.idea.model.IdeaProject"/> <literal>project</literal></title><para>Configures IDEA project information. </para><para> For examples see docs for <apilink class="org.gradle.plugins.ide.idea.model.IdeaProject"/>.</para></section><section id="org.gradle.plugins.ide.idea.model.IdeaModel:targetVersion" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>targetVersion</literal></title><para>Configures the target IDEA version.</para></section><section id="org.gradle.plugins.ide.idea.model.IdeaModel:workspace" role="detail"><title><apilink class="org.gradle.plugins.ide.idea.model.IdeaWorkspace"/> <literal>workspace</literal></title><para>Configures IDEA workspace information.
</para><para>
For examples see docs for <apilink class="org.gradle.plugins.ide.idea.model.IdeaWorkspace"/>.</para></section></section><section><title>Method details</title><section id="org.gradle.plugins.ide.idea.model.IdeaModel:module(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>module</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.plugins.ide.idea.model.IdeaModule"/>&gt;</classname> action)</title><para>Configures IDEA module information. </para><para> For examples see docs for <apilink class="org.gradle.plugins.ide.idea.model.IdeaModule"/>.</para></section><section id="org.gradle.plugins.ide.idea.model.IdeaModel:pathVariables(java.util.Map)" role="detail"><title><classname>void</classname> <literal>pathVariables</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink>&gt;</classname> pathVariables)</title><para>Adds path variables to be used for replacing absolute paths in resulting files (*.iml, etc.). </para><para> For example see docs for <apilink class="org.gradle.plugins.ide.idea.model.IdeaModule"/>.</para></section><section id="org.gradle.plugins.ide.idea.model.IdeaModel:project(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>project</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.plugins.ide.idea.model.IdeaProject"/>&gt;</classname> action)</title><para>Configures IDEA project information. </para><para> For examples see docs for <apilink class="org.gradle.plugins.ide.idea.model.IdeaProject"/>.</para></section><section id="org.gradle.plugins.ide.idea.model.IdeaModel:workspace(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>workspace</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.plugins.ide.idea.model.IdeaWorkspace"/>&gt;</classname> action)</title><para>Configures IDEA workspace information. </para><para> For examples see docs for <apilink class="org.gradle.plugins.ide.idea.model.IdeaWorkspace"/>.</para></section></section><section><title>Script block details</title><section id="org.gradle.plugins.ide.idea.model.IdeaModel:module(groovy.lang.Closure)" role="detail"><title><literal>module</literal> { }</title><para>Configures IDEA module information. </para><para> For examples see docs for <apilink class="org.gradle.plugins.ide.idea.model.IdeaModule"/>.</para><segmentedlist><segtitle>Delegates to</segtitle><seglistitem><seg><apilink class="org.gradle.plugins.ide.idea.model.IdeaModule"/> from <link linkend="org.gradle.plugins.ide.idea.model.IdeaModel:module"><literal>module</literal></link></seg></seglistitem></segmentedlist></section><section id="org.gradle.plugins.ide.idea.model.IdeaModel:project(groovy.lang.Closure)" role="detail"><title><literal>project</literal> { }</title><para>Configures IDEA project information. </para><para> For examples see docs for <apilink class="org.gradle.plugins.ide.idea.model.IdeaProject"/>.</para><segmentedlist><segtitle>Delegates to</segtitle><seglistitem><seg><apilink class="org.gradle.plugins.ide.idea.model.IdeaProject"/> from <link linkend="org.gradle.plugins.ide.idea.model.IdeaModel:project"><literal>project</literal></link></seg></seglistitem></segmentedlist></section><section id="org.gradle.plugins.ide.idea.model.IdeaModel:workspace(groovy.lang.Closure)" role="detail"><title><literal>workspace</literal> { }</title><para>Configures IDEA workspace information. </para><para> For examples see docs for <apilink class="org.gradle.plugins.ide.idea.model.IdeaWorkspace"/>.</para><segmentedlist><segtitle>Delegates to</segtitle><seglistitem><seg><apilink class="org.gradle.plugins.ide.idea.model.IdeaWorkspace"/> from <link linkend="org.gradle.plugins.ide.idea.model.IdeaModel:workspace"><literal>workspace</literal></link></seg></seglistitem></segmentedlist></section></section></chapter><chapter id="org.gradle.plugins.ide.idea.model.IdeaModule"><title>IdeaModule</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.plugins.ide.idea.model.IdeaModule" style="javadoc"/></seg></seglistitem></segmentedlist><para>Enables fine-tuning module details (*.iml file) of the IDEA plugin.
</para><para>
Example of use with a blend of most possible properties.
Typically you don't have to configure this model directly because Gradle configures it for you.

</para><programlisting language="java">
plugins {
    id 'java'
    id 'idea'
}

//for the sake of this example, let's introduce a 'performanceTestCompile' configuration
configurations {
  performanceTestCompile
  performanceTestCompile.extendsFrom(testCompile)
}

dependencies {
  //performanceTestCompile "some.interesting:dependency:1.0"
}

idea {

  //if you want parts of paths in resulting files (*.iml, etc.) to be replaced by variables (Files)
  pathVariables GRADLE_HOME: file('~/cool-software/gradle')

  module {
    //if for some reason you want to add an extra sourceDirs
    sourceDirs += file('some-extra-source-folder')

    //and some extra test source dirs
    testSources.from(file('some-extra-test-dir'))

    //and some extra resource dirs
    resourceDirs += file('some-extra-resource-dir')

    //and some extra test resource dirs
    testResources.from(file('some-extra-test-resource-dir'))

    //and hint to mark some of existing source dirs as generated sources
    generatedSourceDirs += file('some-extra-source-folder')

    //and some extra dirs that should be excluded by IDEA
    excludeDirs += file('some-extra-exclude-dir')

    //if you don't like the name Gradle has chosen
    name = 'some-better-name'

    //if you prefer different output folders
    inheritOutputDirs = false
    outputDir = file('muchBetterOutputDir')
    testOutputDir = file('muchBetterTestOutputDir')

    //if you prefer different SDK than the one inherited from IDEA project
    jdkName = '1.6'

    //put our custom test dependencies onto IDEA's TEST scope
    scopes.TEST.plus += [ configurations.performanceTestCompile ]

    //if 'content root' (as IDEA calls it) of the module is different
    contentRoot = file('my-module-content-root')

    //if you love browsing Javadoc
    downloadJavadoc = true

    //and hate reading sources :)
    downloadSources = false
  }
}
</programlisting><para>

For tackling edge cases, users can perform advanced configuration on the resulting XML file.
It is also possible to affect the way the IDEA plugin merges the existing configuration
via beforeMerged and whenMerged closures.
</para><para>
beforeMerged and whenMerged closures receive a <apilink class="org.gradle.plugins.ide.idea.model.Module"/> parameter
</para><para>
Examples of advanced configuration:

</para><programlisting language="java">
plugins {
    id 'java'
    id 'idea'
}

idea {
  module {
    iml {
      //if you like to keep *.iml in a secret folder
      generateTo = file('secret-modules-folder')

      //if you want to mess with the resulting XML in whatever way you fancy
      withXml {
        def node = it.asNode()
        node.appendNode('iLoveGradle', 'true')
        node.appendNode('butAlso', 'I find increasing pleasure tinkering with output *.iml contents. Yeah!!!')
      }

      //closure executed after *.iml content is loaded from existing file
      //but before gradle build information is merged
      beforeMerged { module -&gt;
        //if you want skip merging exclude dirs
        module.excludeFolders.clear()
      }

      //closure executed after *.iml content is loaded from existing file
      //and after gradle build information is merged
      whenMerged { module -&gt;
        //you can tinker with <apilink class="org.gradle.plugins.ide.idea.model.Module"/>
      }
    }
  }
}

</programlisting><section><title>Properties</title><table><title>Properties - IdeaModule</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.plugins.ide.idea.model.IdeaModule:contentRoot"><literal>contentRoot</literal></link></td><td><para>The content root directory of the module. </para></td></tr><tr><td><link linkend="org.gradle.plugins.ide.idea.model.IdeaModule:downloadJavadoc"><literal>downloadJavadoc</literal></link></td><td><para>Whether to download and add javadoc associated with the dependency jars. Defaults to false. </para></td></tr><tr><td><link linkend="org.gradle.plugins.ide.idea.model.IdeaModule:downloadSources"><literal>downloadSources</literal></link></td><td><para>Whether to download and add sources associated with the dependency jars. Defaults to true. </para></td></tr><tr><td><link linkend="org.gradle.plugins.ide.idea.model.IdeaModule:excludeDirs"><literal>excludeDirs</literal></link></td><td><para>Directories to be excluded. </para></td></tr><tr><td><link linkend="org.gradle.plugins.ide.idea.model.IdeaModule:generatedSourceDirs"><literal>generatedSourceDirs</literal></link></td><td><para>The directories containing the generated sources (both production and test sources).
</para></td></tr><tr><td><link linkend="org.gradle.plugins.ide.idea.model.IdeaModule:iml"><literal>iml</literal></link></td><td><para>See <apilink class="org.gradle.plugins.ide.idea.model.IdeaModule" method="iml(org.gradle.api.Action)"/></para></td></tr><tr><td><link linkend="org.gradle.plugins.ide.idea.model.IdeaModule:inheritOutputDirs"><literal>inheritOutputDirs</literal></link></td><td><para>If true, output directories for this module will be located below the output directory for the project;
otherwise, they will be set to the directories specified by <apilink class="org.gradle.plugins.ide.idea.model.IdeaModule" method="getOutputDir()"/> and <apilink class="org.gradle.plugins.ide.idea.model.IdeaModule" method="getTestOutputDir()"/>.
</para></td></tr><tr><td><link linkend="org.gradle.plugins.ide.idea.model.IdeaModule:jdkName"><literal>jdkName</literal></link></td><td><para>The JDK to use for this module.
If <literal>null</literal>, the value of the existing or default ipr XML (inherited) is used.
If it is set to <literal>inherited</literal>, the project SDK is used.
Otherwise the SDK for the corresponding value of java version is used for this module.
</para></td></tr><tr><td><link linkend="org.gradle.plugins.ide.idea.model.IdeaModule:languageLevel"><literal>languageLevel</literal></link></td><td><para>The module specific language Level to use for this module.
When <literal>null</literal>, the module will inherit the language level from the idea project.
</para></td></tr><tr><td><link linkend="org.gradle.plugins.ide.idea.model.IdeaModule:name"><literal>name</literal></link></td><td><para>Configures module name, that is the name of the *.iml file.
</para></td></tr><tr><td><link linkend="org.gradle.plugins.ide.idea.model.IdeaModule:outputDir"><literal>outputDir</literal></link></td><td><para>The output directory for production classes.
If <literal>null</literal>, no entry will be created.
</para></td></tr><tr><td><link linkend="org.gradle.plugins.ide.idea.model.IdeaModule:outputFile"><literal>outputFile</literal></link></td><td><para>Configures output *.iml file.
It's <emphasis>optional</emphasis> because the task should configure it correctly for you (including making sure it is unique in the multi-module build).
If you really need to change the output file name (or the module name) it is much easier to do it via the <emphasis>moduleName</emphasis> property!
</para></td></tr><tr><td><link linkend="org.gradle.plugins.ide.idea.model.IdeaModule:resourceDirs"><literal>resourceDirs</literal></link></td><td><para>The directories containing resources. </para></td></tr><tr><td><link linkend="org.gradle.plugins.ide.idea.model.IdeaModule:scopes"><literal>scopes</literal></link></td><td><para>The keys of this map are the IDEA scopes. Each key points to another map that has two keys, plus and minus.
The values of those keys are collections of <apilink class="org.gradle.api.artifacts.Configuration"/> objects. The files of the
plus configurations are added minus the files from the minus configurations. See example below...
</para></td></tr><tr><td><link linkend="org.gradle.plugins.ide.idea.model.IdeaModule:sourceDirs"><literal>sourceDirs</literal></link></td><td><para>The directories containing the production sources.

For example see docs for <apilink class="org.gradle.plugins.ide.idea.model.IdeaModule"/></para></td></tr><tr><td><link linkend="org.gradle.plugins.ide.idea.model.IdeaModule:targetBytecodeVersion"><literal>targetBytecodeVersion</literal></link></td><td><para>The module specific bytecode version to use for this module.
When <literal>null</literal>, the module will inherit the bytecode version from the idea project.
</para></td></tr><tr><td><link linkend="org.gradle.plugins.ide.idea.model.IdeaModule:testOutputDir"><literal>testOutputDir</literal></link></td><td><para>The output directory for test classes.
If <literal>null</literal>, no entry will be created.
</para></td></tr><tr><td><link linkend="org.gradle.plugins.ide.idea.model.IdeaModule:testResources"><literal>testResources</literal></link></td><td><para>The complete and up-to-date collection of test resource directories.</para></td></tr><tr><td><link linkend="org.gradle.plugins.ide.idea.model.IdeaModule:testSources"><literal>testSources</literal></link></td><td><para>The complete and up-to-date collection of test source directories</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - IdeaModule</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.plugins.ide.idea.model.IdeaModule:iml(org.gradle.api.Action)">iml</link>(action)</literal></td><td><para>Enables advanced configuration like tinkering with the output XML or affecting the way existing *.iml content is merged with gradle build information.
</para></td></tr></table></section><section><title>Script blocks</title><table><title>Script blocks - IdeaModule</title><thead><tr><td>Block</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.plugins.ide.idea.model.IdeaModule:iml(groovy.lang.Closure)"><literal>iml</literal></link></td><td><para>Enables advanced configuration like tinkering with the output XML or affecting the way existing *.iml content is merged with gradle build information.
</para></td></tr></table></section><section><title>Property details</title><section id="org.gradle.plugins.ide.idea.model.IdeaModule:contentRoot" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>contentRoot</literal></title><para>The content root directory of the module. </para><para> For example see docs for <apilink class="org.gradle.plugins.ide.idea.model.IdeaModule"/></para><segmentedlist><segtitle>Default with <literal>idea</literal> plugin</segtitle><seglistitem><seg><literal>project.projectDir</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.plugins.ide.idea.model.IdeaModule:downloadJavadoc" role="detail"><title><classname>boolean</classname> <literal>downloadJavadoc</literal></title><para>Whether to download and add javadoc associated with the dependency jars. Defaults to false. </para><para> For example see docs for <apilink class="org.gradle.plugins.ide.idea.model.IdeaModule"/></para><segmentedlist><segtitle>Default with <literal>idea</literal> plugin</segtitle><seglistitem><seg><literal>false</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.plugins.ide.idea.model.IdeaModule:downloadSources" role="detail"><title><classname>boolean</classname> <literal>downloadSources</literal></title><para>Whether to download and add sources associated with the dependency jars. Defaults to true. </para><para> For example see docs for <apilink class="org.gradle.plugins.ide.idea.model.IdeaModule"/></para><segmentedlist><segtitle>Default with <literal>idea</literal> plugin</segtitle><seglistitem><seg><literal>true</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.plugins.ide.idea.model.IdeaModule:excludeDirs" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink>&gt;</classname> <literal>excludeDirs</literal></title><para>Directories to be excluded. </para><para> For example see docs for <apilink class="org.gradle.plugins.ide.idea.model.IdeaModule"/></para><segmentedlist><segtitle>Default with <literal>idea</literal> plugin</segtitle><seglistitem><seg><literal>[project.layout.buildDirectory, project.file('.gradle')]</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.plugins.ide.idea.model.IdeaModule:generatedSourceDirs" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink>&gt;</classname> <literal>generatedSourceDirs</literal></title><para>The directories containing the generated sources (both production and test sources).
</para><para>
For example see docs for <apilink class="org.gradle.plugins.ide.idea.model.IdeaModule"/></para><segmentedlist><segtitle>Default with <literal>idea</literal> plugin</segtitle><seglistitem><seg><literal>[]</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.plugins.ide.idea.model.IdeaModule:iml" role="detail"><title><apilink class="org.gradle.plugins.ide.idea.model.IdeaModuleIml"/> <literal>iml</literal> (read-only)</title><para>See <apilink class="org.gradle.plugins.ide.idea.model.IdeaModule" method="iml(org.gradle.api.Action)"/></para></section><section id="org.gradle.plugins.ide.idea.model.IdeaModule:inheritOutputDirs" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html"><classname>Boolean</classname></ulink> <literal>inheritOutputDirs</literal></title><para>If true, output directories for this module will be located below the output directory for the project;
otherwise, they will be set to the directories specified by <apilink class="org.gradle.plugins.ide.idea.model.IdeaModule" method="getOutputDir()"/> and <apilink class="org.gradle.plugins.ide.idea.model.IdeaModule" method="getTestOutputDir()"/>.
</para><para>
For example see docs for <apilink class="org.gradle.plugins.ide.idea.model.IdeaModule"/></para><segmentedlist><segtitle>Default with <literal>idea</literal> plugin</segtitle><segtitle>Default with <literal>idea</literal> and <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>null</literal></seg><seg><literal>null</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.plugins.ide.idea.model.IdeaModule:jdkName" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>jdkName</literal></title><para>The JDK to use for this module.
If <literal>null</literal>, the value of the existing or default ipr XML (inherited) is used.
If it is set to <literal>inherited</literal>, the project SDK is used.
Otherwise the SDK for the corresponding value of java version is used for this module.
</para><para>
For example see docs for <apilink class="org.gradle.plugins.ide.idea.model.IdeaModule"/></para><segmentedlist><segtitle>Default with <literal>idea</literal> plugin</segtitle><seglistitem><seg><literal>'inherited'</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.plugins.ide.idea.model.IdeaModule:languageLevel" role="detail"><title><apilink class="org.gradle.plugins.ide.idea.model.IdeaLanguageLevel"/> <literal>languageLevel</literal></title><para>The module specific language Level to use for this module.
When <literal>null</literal>, the module will inherit the language level from the idea project.
</para><para>
The Idea module language level is based on the <literal>sourceCompatibility</literal> settings for the associated Gradle project.</para><segmentedlist><segtitle>Default with <literal>idea</literal> and <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>project.sourceCompatibility</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.plugins.ide.idea.model.IdeaModule:name" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>name</literal></title><para>Configures module name, that is the name of the *.iml file.
</para><para>
It's <emphasis>optional</emphasis> because the task should configure it correctly for you.
By default it will try to use the <emphasis>project.name</emphasis> or prefix it with a part of a <emphasis>project.path</emphasis> to make
sure the module name is unique in the scope of a multi-module build.
The 'uniqueness' of a module name is required for correct import into IDEA and the task will make sure the name
is unique.
</para><para>
<emphasis>since</emphasis> 1.0-milestone-2
</para><para>
If your project has problems with unique names it is recommended to always run <literal>gradle idea</literal> from the
root, i.e. for all subprojects.
If you run the generation of the IDEA module only for a single subproject then you may have different results
because the unique names are calculated based on IDEA modules that are involved in the specific build run.
</para><para>
If you update the module names then make sure you run <literal>gradle idea</literal> from the root, e.g. for all
subprojects, including generation of IDEA project.
The reason is that there may be subprojects that depend on the subproject with amended module name.
So you want them to be generated as well because the module dependencies need to refer to the amended project
name.
Basically, for non-trivial projects it is recommended to always run <literal>gradle idea</literal> from the root.
</para><para>
For example see docs for <apilink class="org.gradle.plugins.ide.idea.model.IdeaModule"/></para><segmentedlist><segtitle>Default with <literal>idea</literal> plugin</segtitle><seglistitem><seg><literal><replaceable>${project.name}</replaceable> (sometimes prefixed with parts of <replaceable>${project.path}</replaceable> to guarantee uniqueness)</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.plugins.ide.idea.model.IdeaModule:outputDir" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>outputDir</literal></title><para>The output directory for production classes.
If <literal>null</literal>, no entry will be created.
</para><para>
For example see docs for <apilink class="org.gradle.plugins.ide.idea.model.IdeaModule"/></para><segmentedlist><segtitle>Default with <literal>idea</literal> plugin</segtitle><segtitle>Default with <literal>idea</literal> and <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>null</literal></seg><seg><literal>null</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.plugins.ide.idea.model.IdeaModule:outputFile" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>outputFile</literal></title><para>Configures output *.iml file.
It's <emphasis>optional</emphasis> because the task should configure it correctly for you (including making sure it is unique in the multi-module build).
If you really need to change the output file name (or the module name) it is much easier to do it via the <emphasis>moduleName</emphasis> property!
</para><para>
Please refer to documentation on <emphasis>moduleName</emphasis> property.
In IntelliJ IDEA the module name is the same as the name of the *.iml file.</para><segmentedlist><segtitle>Default with <literal>idea</literal> plugin</segtitle><seglistitem><seg>#name + <literal>'.iml'</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.plugins.ide.idea.model.IdeaModule:resourceDirs" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink>&gt;</classname> <literal>resourceDirs</literal></title><para>The directories containing resources. </para><para> For example see docs for <apilink class="org.gradle.plugins.ide.idea.model.IdeaModule"/></para><segmentedlist><segtitle>Default with <literal>idea</literal> plugin</segtitle><segtitle>Default with <literal>idea</literal> and <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>[]</literal></seg><seg>resource dirs from <literal>project.sourceSets.main.resources</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.plugins.ide.idea.model.IdeaModule:scopes" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Collection.html"><classname>Collection</classname></ulink>&lt;<apilink class="org.gradle.api.artifacts.Configuration"/>&gt;&gt;&gt;</classname> <literal>scopes</literal></title><para>The keys of this map are the IDEA scopes. Each key points to another map that has two keys, plus and minus.
The values of those keys are collections of <apilink class="org.gradle.api.artifacts.Configuration"/> objects. The files of the
plus configurations are added minus the files from the minus configurations. See example below...
</para><para>
Example how to use scopes property to enable 'performanceTestCompile' dependencies in the output *.iml file:
</para><programlisting language="java">
plugins {
    id 'java'
    id 'idea'
}

configurations {
  performanceTestCompile
  performanceTestCompile.extendsFrom(testCompile)
}

dependencies {
  //performanceTestCompile "some.interesting:dependency:1.0"
}

idea {
  module {
    scopes.TEST.plus += [ configurations.performanceTestCompile ]
  }
}
</programlisting><segmentedlist><segtitle>Default with <literal>idea</literal> plugin</segtitle><segtitle>Default with <literal>idea</literal> and <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>[:]</literal></seg><seg>
                    <itemizedlist>
                        <listitem><literal>COMPILE</literal> -&gt; <literal>project.configurations.compileClasspath</literal></listitem>
                        <listitem><literal>RUNTIME</literal> -&gt; <literal>project.configurations.runtimeClasspath - project.configurations.compileClasspath</literal></listitem>
                        <listitem><literal>TEST</literal> -&gt; <literal>project.configurations.testRuntimeClasspath - project.configurations.runtimeClasspath</literal></listitem>
                        <listitem><literal>PROVIDED</literal></listitem>
                    </itemizedlist>
                </seg></seglistitem></segmentedlist></section><section id="org.gradle.plugins.ide.idea.model.IdeaModule:sourceDirs" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink>&gt;</classname> <literal>sourceDirs</literal></title><para>The directories containing the production sources.

For example see docs for <apilink class="org.gradle.plugins.ide.idea.model.IdeaModule"/></para><segmentedlist><segtitle>Default with <literal>idea</literal> plugin</segtitle><segtitle>Default with <literal>idea</literal> and <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>[]</literal></seg><seg>project.sourceSets.main.allJava</seg></seglistitem></segmentedlist></section><section id="org.gradle.plugins.ide.idea.model.IdeaModule:targetBytecodeVersion" role="detail"><title><apilink class="org.gradle.api.JavaVersion"/> <literal>targetBytecodeVersion</literal></title><para>The module specific bytecode version to use for this module.
When <literal>null</literal>, the module will inherit the bytecode version from the idea project.
</para><para>
The Idea module bytecode version is based on the <literal>targetCompatibility</literal> settings for the associated Gradle project.</para><segmentedlist><segtitle>Default with <literal>idea</literal> and <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>project.targetCompatibility</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.plugins.ide.idea.model.IdeaModule:testOutputDir" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>testOutputDir</literal></title><para>The output directory for test classes.
If <literal>null</literal>, no entry will be created.
</para><para>
For example see docs for <apilink class="org.gradle.plugins.ide.idea.model.IdeaModule"/></para><segmentedlist><segtitle>Default with <literal>idea</literal> plugin</segtitle><segtitle>Default with <literal>idea</literal> and <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>null</literal></seg><seg><literal>null</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.plugins.ide.idea.model.IdeaModule:testResources" role="detail"><title><apilink class="org.gradle.api.file.ConfigurableFileCollection"/> <literal>testResources</literal> (read-only)</title><para>The complete and up-to-date collection of test resource directories.</para><segmentedlist><segtitle>Default with <literal>idea</literal> plugin</segtitle><segtitle>Default with <literal>idea</literal> and <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>[]</literal></seg><seg>Based on resources in available test suites</seg></seglistitem></segmentedlist></section><section id="org.gradle.plugins.ide.idea.model.IdeaModule:testSources" role="detail"><title><apilink class="org.gradle.api.file.ConfigurableFileCollection"/> <literal>testSources</literal> (read-only)</title><para>The complete and up-to-date collection of test source directories</para><segmentedlist><segtitle>Default with <literal>idea</literal> plugin</segtitle><segtitle>Default with <literal>idea</literal> and <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>[]</literal></seg><seg>Based on source directories in available test suites</seg></seglistitem></segmentedlist></section></section><section><title>Method details</title><section id="org.gradle.plugins.ide.idea.model.IdeaModule:iml(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>iml</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.plugins.ide.idea.model.IdeaModuleIml"/>&gt;</classname> action)</title><para>Enables advanced configuration like tinkering with the output XML or affecting the way existing *.iml content is merged with gradle build information.
</para><para>
For example see docs for <apilink class="org.gradle.plugins.ide.idea.model.IdeaModule"/>.</para></section></section><section><title>Script block details</title><section id="org.gradle.plugins.ide.idea.model.IdeaModule:iml(groovy.lang.Closure)" role="detail"><title><literal>iml</literal> { }</title><para>Enables advanced configuration like tinkering with the output XML or affecting the way existing *.iml content is merged with gradle build information.
</para><para>
For example see docs for <apilink class="org.gradle.plugins.ide.idea.model.IdeaModule"/>.</para><segmentedlist><segtitle>Delegates to</segtitle><seglistitem><seg><apilink class="org.gradle.plugins.ide.idea.model.IdeaModuleIml"/> from <link linkend="org.gradle.plugins.ide.idea.model.IdeaModule:iml"><literal>iml</literal></link></seg></seglistitem></segmentedlist></section></section></chapter><chapter id="org.gradle.plugins.ide.idea.model.IdeaProject"><title>IdeaProject</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.plugins.ide.idea.model.IdeaProject" style="javadoc"/></seg></seglistitem></segmentedlist><para>Enables fine-tuning project details (*.ipr file) of the IDEA plugin.
</para><para>
Example of use with a blend of all possible properties.
Typically you don't have to configure IDEA module directly because Gradle configures it for you.

</para><programlisting language="java">
import org.gradle.plugins.ide.idea.model.*

plugins {
    id 'java'
    id 'idea'
}

idea {
  project {
    //if you want to set specific jdk and language level
    jdkName = '1.6'
    languageLevel = '1.5'

    //you can update the source wildcards
    wildcards += '!?*.ruby'

    //you can configure the VCS used by the project
    vcs = 'Git'

    //you can change the modules of the *.ipr
    //modules = project(':some-project').idea.module

    //you can change the output file
    outputFile = new File(outputFile.parentFile, 'someBetterName.ipr')

    //you can add project-level libraries
    projectLibraries &lt;&lt; new ProjectLibrary(name: "my-library", classes: [new File("path/to/library")])
  }
}
</programlisting><para>

For tackling edge cases users can perform advanced configuration on resulting XML file.
It is also possible to affect the way IDEA plugin merges the existing configuration
via beforeMerged and whenMerged closures.
</para><para>
beforeMerged and whenMerged closures receive <apilink class="org.gradle.plugins.ide.idea.model.Project"/> object
</para><para>
Examples of advanced configuration:

</para><programlisting language="java">
plugins {
    id 'java'
    id 'idea'
}

idea {
  project {
    ipr {
      //you can tinker with the output *.ipr file before it's written out
      withXml {
        def node = it.asNode()
        node.appendNode('iLove', 'tinkering with the output *.ipr file!')
      }

      //closure executed after *.ipr content is loaded from existing file
      //but before gradle build information is merged
      beforeMerged { project -&gt;
        //you can tinker with <apilink class="org.gradle.plugins.ide.idea.model.Project"/>
      }

      //closure executed after *.ipr content is loaded from existing file
      //and after gradle build information is merged
      whenMerged { project -&gt;
        //you can tinker with <apilink class="org.gradle.plugins.ide.idea.model.Project"/>
      }
    }
  }
}
</programlisting><section><title>Properties</title><table><title>Properties - IdeaProject</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.plugins.ide.idea.model.IdeaProject:ipr"><literal>ipr</literal></link></td><td><para>See <apilink class="org.gradle.plugins.ide.idea.model.IdeaProject" method="ipr(org.gradle.api.Action)"/></para></td></tr><tr><td><link linkend="org.gradle.plugins.ide.idea.model.IdeaProject:jdkName"><literal>jdkName</literal></link></td><td><para>The java version used for defining the project sdk.
</para></td></tr><tr><td><link linkend="org.gradle.plugins.ide.idea.model.IdeaProject:languageLevel"><literal>languageLevel</literal></link></td><td><para>The default Java language Level to use for this project.
</para></td></tr><tr><td><link linkend="org.gradle.plugins.ide.idea.model.IdeaProject:modules"><literal>modules</literal></link></td><td><para>Modules for the ipr file.
</para></td></tr><tr><td><link linkend="org.gradle.plugins.ide.idea.model.IdeaProject:outputFile"><literal>outputFile</literal></link></td><td><para>Output *.ipr
</para></td></tr><tr><td><link linkend="org.gradle.plugins.ide.idea.model.IdeaProject:projectLibraries"><literal>projectLibraries</literal></link></td><td><para>The project-level libraries to be added to the IDEA project.</para></td></tr><tr><td><link linkend="org.gradle.plugins.ide.idea.model.IdeaProject:targetBytecodeVersion"><literal>targetBytecodeVersion</literal></link></td><td><para>The target bytecode version to use for this project.
</para></td></tr><tr><td><link linkend="org.gradle.plugins.ide.idea.model.IdeaProject:vcs"><literal>vcs</literal></link></td><td><para>The vcs for the project.
</para></td></tr><tr><td><link linkend="org.gradle.plugins.ide.idea.model.IdeaProject:wildcards"><literal>wildcards</literal></link></td><td><para>The wildcard resource patterns.
</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - IdeaProject</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.plugins.ide.idea.model.IdeaProject:ipr(org.gradle.api.Action)">ipr</link>(action)</literal></td><td><para>Enables advanced configuration like tinkering with the output XML
or affecting the way existing *.ipr content is merged with Gradle build information.
</para></td></tr></table></section><section><title>Script blocks</title><table><title>Script blocks - IdeaProject</title><thead><tr><td>Block</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.plugins.ide.idea.model.IdeaProject:ipr(groovy.lang.Closure)"><literal>ipr</literal></link></td><td><para>Enables advanced configuration like tinkering with the output XML
or affecting the way existing *.ipr content is merged with Gradle build information.
</para></td></tr></table></section><section><title>Property details</title><section id="org.gradle.plugins.ide.idea.model.IdeaProject:ipr" role="detail"><title><apilink class="org.gradle.plugins.ide.api.XmlFileContentMerger"/> <literal>ipr</literal> (read-only)</title><para>See <apilink class="org.gradle.plugins.ide.idea.model.IdeaProject" method="ipr(org.gradle.api.Action)"/></para></section><section id="org.gradle.plugins.ide.idea.model.IdeaProject:jdkName" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>jdkName</literal></title><para>The java version used for defining the project sdk.
</para><para>
See the examples in the docs for <apilink class="org.gradle.plugins.ide.idea.model.IdeaProject"/></para><segmentedlist><segtitle>Default with <literal>idea</literal> plugin</segtitle><segtitle>Default with <literal>idea</literal> and <literal>java</literal> plugin</segtitle><seglistitem><seg>Java version used to run Gradle, for example <literal>'1.6'</literal></seg><seg>Java version used to run Gradle, for example <literal>'1.6'</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.plugins.ide.idea.model.IdeaProject:languageLevel" role="detail"><title><apilink class="org.gradle.plugins.ide.idea.model.IdeaLanguageLevel"/> <literal>languageLevel</literal></title><para>The default Java language Level to use for this project.
</para><para>
Generally, it isn't recommended to change this value. Instead, you are encouraged to set <literal>sourceCompatibility</literal> and <literal>targetCompatibility</literal>
for your Gradle projects which allows you to have full control over language levels in Gradle projects, and means that Gradle and IDEA will use the same
settings when compiling.
</para><para>
When not explicitly set, this is calculated as the maximum language level for the Idea modules of this Idea project.</para><segmentedlist><segtitle>Default with <literal>idea</literal> plugin</segtitle><segtitle>Default with <literal>idea</literal> and <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>JavaVersion.JAVA_1_6</literal></seg><seg><literal>project.sourceCompatibility</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.plugins.ide.idea.model.IdeaProject:modules" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/List.html"><classname>List</classname></ulink>&lt;<apilink class="org.gradle.plugins.ide.idea.model.IdeaModule"/>&gt;</classname> <literal>modules</literal></title><para>Modules for the ipr file.
</para><para>
See the examples in the docs for <apilink class="org.gradle.plugins.ide.idea.model.IdeaProject"/></para><segmentedlist><segtitle>Default with <literal>idea</literal> plugin</segtitle><seglistitem><seg><literal>project.allprojects.idea.module</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.plugins.ide.idea.model.IdeaProject:outputFile" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>outputFile</literal></title><para>Output *.ipr
</para><para>
See the examples in the docs for <apilink class="org.gradle.plugins.ide.idea.model.IdeaProject"/>.</para><segmentedlist><segtitle>Default with <literal>idea</literal> plugin</segtitle><seglistitem><seg><literal><replaceable>${project.projectDir}</replaceable>/<replaceable>${project.name}</replaceable>.ipr</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.plugins.ide.idea.model.IdeaProject:projectLibraries" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<apilink class="org.gradle.plugins.ide.idea.model.ProjectLibrary"/>&gt;</classname> <literal>projectLibraries</literal></title><para>The project-level libraries to be added to the IDEA project.</para><segmentedlist><segtitle>Default with <literal>idea</literal> plugin</segtitle><segtitle>Default with <literal>idea</literal> and <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>[]</literal> (<literal>[scala-library]</literal> with <literal>scala-base</literal> plugin)</seg><seg><literal>[]</literal> (<literal>[scala-library]</literal> with <literal>scala-base</literal> plugin)</seg></seglistitem></segmentedlist></section><section id="org.gradle.plugins.ide.idea.model.IdeaProject:targetBytecodeVersion" role="detail"><title><apilink class="org.gradle.api.JavaVersion"/> <literal>targetBytecodeVersion</literal></title><para>The target bytecode version to use for this project.
</para><para>
Generally, it isn't recommended to change this value. Instead, you are encouraged to set <literal>sourceCompatibility</literal> and <literal>targetCompatibility</literal>
for your Gradle projects which allows you to have full control over language levels in Gradle projects, and means that Gradle and IDEA will use the same
settings when compiling.
</para><para>
When <literal>languageLevel</literal> is not explicitly set, this is calculated as the maximum target bytecode version for the Idea modules of this Idea project.</para><segmentedlist><segtitle>Default with <literal>idea</literal> plugin</segtitle><segtitle>Default with <literal>idea</literal> and <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>JavaVersion.JAVA_1_6</literal></seg><seg>Highest <literal>project.targetCompatibility</literal> value of all java subprojects or <literal>JavaVersion.JAVA_1_6</literal> if no java project found.</seg></seglistitem></segmentedlist></section><section id="org.gradle.plugins.ide.idea.model.IdeaProject:vcs" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>vcs</literal></title><para>The vcs for the project.
</para><para>
Values are the same as used in IDEA's "Version Control" preference window (e.g. 'Git', 'Subversion').
</para><para>
See the examples in the docs for <apilink class="org.gradle.plugins.ide.idea.model.IdeaProject"/>.</para></section><section id="org.gradle.plugins.ide.idea.model.IdeaProject:wildcards" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>wildcards</literal></title><para>The wildcard resource patterns.
</para><para>
See the examples in the docs for <apilink class="org.gradle.plugins.ide.idea.model.IdeaProject"/>.</para><segmentedlist><segtitle>Default with <literal>idea</literal> plugin</segtitle><seglistitem><seg><literal>['!?*.java', '!?*.groovy']</literal></seg></seglistitem></segmentedlist></section></section><section><title>Method details</title><section id="org.gradle.plugins.ide.idea.model.IdeaProject:ipr(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>ipr</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.plugins.ide.api.XmlFileContentMerger"/>&gt;</classname> action)</title><para>Enables advanced configuration like tinkering with the output XML
or affecting the way existing *.ipr content is merged with Gradle build information.
</para><para>
See the examples in the docs for <apilink class="org.gradle.plugins.ide.idea.model.IdeaProject"/></para></section></section><section><title>Script block details</title><section id="org.gradle.plugins.ide.idea.model.IdeaProject:ipr(groovy.lang.Closure)" role="detail"><title><literal>ipr</literal> { }</title><para>Enables advanced configuration like tinkering with the output XML
or affecting the way existing *.ipr content is merged with Gradle build information.
</para><para>
See the examples in the docs for <apilink class="org.gradle.plugins.ide.idea.model.IdeaProject"/></para><segmentedlist><segtitle>Delegates to</segtitle><seglistitem><seg><apilink class="org.gradle.plugins.ide.api.XmlFileContentMerger"/> from <link linkend="org.gradle.plugins.ide.idea.model.IdeaProject:ipr"><literal>ipr</literal></link></seg></seglistitem></segmentedlist></section></section></chapter><chapter id="org.gradle.plugins.ide.idea.model.IdeaWorkspace"><title>IdeaWorkspace</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.plugins.ide.idea.model.IdeaWorkspace" style="javadoc"/></seg></seglistitem></segmentedlist><para>Enables fine-tuning workspace details (*.iws file) of the IDEA plugin.
</para><para>
At the moment, the only practical way of manipulating the resulting content is via the withXml hook:

</para><programlisting language="java">
plugins {
    id 'java'
    id 'idea'
}

idea.workspace.iws.withXml { provider -&gt;
    provider.asNode().appendNode('gradleRocks', 'true')
}
</programlisting><section><title>Properties</title><table><title>Properties - IdeaWorkspace</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.plugins.ide.idea.model.IdeaWorkspace:iws"><literal>iws</literal></link></td><td><para>Enables advanced manipulation of the output XML.
</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - IdeaWorkspace</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.plugins.ide.idea.model.IdeaWorkspace:iws(org.gradle.api.Action)">iws</link>(action)</literal></td><td><para>Enables advanced manipulation of the output XML.
</para></td></tr></table></section><section><title>Script blocks</title><table><title>Script blocks - IdeaWorkspace</title><thead><tr><td>Block</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.plugins.ide.idea.model.IdeaWorkspace:iws(groovy.lang.Closure)"><literal>iws</literal></link></td><td><para>Enables advanced manipulation of the output XML.
</para></td></tr></table></section><section><title>Property details</title><section id="org.gradle.plugins.ide.idea.model.IdeaWorkspace:iws" role="detail"><title><apilink class="org.gradle.plugins.ide.api.XmlFileContentMerger"/> <literal>iws</literal></title><para>Enables advanced manipulation of the output XML.
</para><para>
For example see docs for <apilink class="org.gradle.plugins.ide.idea.model.IdeaWorkspace"/></para></section></section><section><title>Method details</title><section id="org.gradle.plugins.ide.idea.model.IdeaWorkspace:iws(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>iws</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.plugins.ide.api.XmlFileContentMerger"/>&gt;</classname> action)</title><para>Enables advanced manipulation of the output XML.
</para><para>
For example see docs for <apilink class="org.gradle.plugins.ide.idea.model.IdeaWorkspace"/></para></section></section><section><title>Script block details</title><section id="org.gradle.plugins.ide.idea.model.IdeaWorkspace:iws(groovy.lang.Closure)" role="detail"><title><literal>iws</literal> { }</title><para>Enables advanced manipulation of the output XML.
</para><para>
For example see docs for <apilink class="org.gradle.plugins.ide.idea.model.IdeaWorkspace"/></para><segmentedlist><segtitle>Delegates to</segtitle><seglistitem><seg><apilink class="org.gradle.plugins.ide.api.XmlFileContentMerger"/> from <link linkend="org.gradle.plugins.ide.idea.model.IdeaWorkspace:iws"><literal>iws</literal></link></seg></seglistitem></segmentedlist></section></section></chapter><chapter id="org.gradle.api.plugins.quality.CodeQualityExtension"><title>CodeQualityExtension</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.plugins.quality.CodeQualityExtension" style="javadoc"/></seg></seglistitem></segmentedlist><segmentedlist><segtitle>Known Subtypes</segtitle><seglistitem><seg><simplelist columns="1" type="vert"><member><apilink class="org.gradle.api.plugins.quality.CheckstyleExtension"/></member><member><apilink class="org.gradle.api.plugins.quality.CodeNarcExtension"/></member><member><apilink class="org.gradle.api.plugins.quality.PmdExtension"/></member></simplelist></seg></seglistitem></segmentedlist><para>Base Code Quality Extension.</para><section><title>Properties</title><table><title>Properties - CodeQualityExtension</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.plugins.quality.CodeQualityExtension:ignoreFailures"><literal>ignoreFailures</literal></link></td><td><para>Whether to allow the build to continue if there are warnings.

Example: ignoreFailures = true</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.quality.CodeQualityExtension:reportsDir"><literal>reportsDir</literal></link></td><td><para>The directory where reports will be generated.</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.quality.CodeQualityExtension:sourceSets"><literal>sourceSets</literal></link></td><td><para>The source sets to be analyzed as part of the <literal>check</literal> and <literal>build</literal> tasks.</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.quality.CodeQualityExtension:toolVersion"><literal>toolVersion</literal></link></td><td><para>The version of the code quality tool to be used.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.plugins.quality.CodeQualityExtension:ignoreFailures" role="detail"><title><classname>boolean</classname> <literal>ignoreFailures</literal></title><para>Whether to allow the build to continue if there are warnings.

Example: ignoreFailures = true</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>false</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.plugins.quality.CodeQualityExtension:reportsDir" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>reportsDir</literal></title><para>The directory where reports will be generated.</para></section><section id="org.gradle.api.plugins.quality.CodeQualityExtension:sourceSets" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Collection.html"><classname>Collection</classname></ulink>&lt;<apilink class="org.gradle.api.tasks.SourceSet"/>&gt;</classname> <literal>sourceSets</literal></title><para>The source sets to be analyzed as part of the <literal>check</literal> and <literal>build</literal> tasks.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>project.sourceSets</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.plugins.quality.CodeQualityExtension:toolVersion" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>toolVersion</literal></title><para>The version of the code quality tool to be used.</para></section></section></chapter><chapter id="org.gradle.api.plugins.quality.CheckstyleExtension"><title>CheckstyleExtension</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.plugins.quality.CheckstyleExtension" style="javadoc"/></seg></seglistitem></segmentedlist><para>Configuration options for the Checkstyle plugin.</para><section><title>Properties</title><table><title>Properties - CheckstyleExtension</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.plugins.quality.CheckstyleExtension:config"><literal>config</literal></link></td><td><para>The Checkstyle configuration to use. Replaces the <literal>configFile</literal> property.</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.quality.CheckstyleExtension:configDirectory"><literal>configDirectory</literal></link></td><td><para>Path to other Checkstyle configuration files. By default, this path is <literal>$rootProject.projectDir/config/checkstyle</literal>
</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.quality.CheckstyleExtension:configFile"><literal>configFile</literal></link></td><td><para>The Checkstyle configuration file to use.</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.quality.CheckstyleExtension:configProperties"><literal>configProperties</literal></link></td><td><para>The properties available for use in the configuration file. These are substituted into the configuration file.</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.quality.CheckstyleExtension:enableExternalDtdLoad"><literal>enableExternalDtdLoad</literal></link></td><td><caution>Incubating</caution><para>Enable the ability to use custom DTD files in config and load them from some location on all checkstyle tasks in this project.
<emphasis>Disabled by default due to security concerns.</emphasis>
See <ulink url="https://checkstyle.org/config_system_properties.html#Enable_External_DTD_load">Checkstyle documentation</ulink> for more details.</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.quality.CheckstyleExtension:ignoreFailures"><literal>ignoreFailures</literal></link></td><td><para>Whether to allow the build to continue if there are warnings.

Example: ignoreFailures = true</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.quality.CheckstyleExtension:maxErrors"><literal>maxErrors</literal></link></td><td><para>The maximum number of errors that are tolerated before breaking the build
or setting the failure property. Defaults to <literal>0</literal>.
</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.quality.CheckstyleExtension:maxWarnings"><literal>maxWarnings</literal></link></td><td><para>The maximum number of warnings that are tolerated before breaking the build
or setting the failure property. Defaults to <literal>Integer.MAX_VALUE</literal>.
</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.quality.CheckstyleExtension:reportsDir"><literal>reportsDir</literal></link></td><td><para>The directory where reports will be generated.</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.quality.CheckstyleExtension:showViolations"><literal>showViolations</literal></link></td><td><para>Whether rule violations are to be displayed on the console. Defaults to <literal>true</literal>.

Example: showViolations = false</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.quality.CheckstyleExtension:sourceSets"><literal>sourceSets</literal></link></td><td><para>The source sets to be analyzed as part of the <literal>check</literal> and <literal>build</literal> tasks.</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.quality.CheckstyleExtension:toolVersion"><literal>toolVersion</literal></link></td><td><para>The version of the code quality tool to be used.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.plugins.quality.CheckstyleExtension:config" role="detail"><title><apilink class="org.gradle.api.resources.TextResource"/> <literal>config</literal></title><para>The Checkstyle configuration to use. Replaces the <literal>configFile</literal> property.</para><segmentedlist><segtitle>Default with <literal>checkstyle</literal> plugin</segtitle><seglistitem><seg><literal><replaceable>${configDirectory}</replaceable>/checkstyle.xml</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.plugins.quality.CheckstyleExtension:configDirectory" role="detail"><title><apilink class="org.gradle.api.file.DirectoryProperty"/> <literal>configDirectory</literal></title><para>Path to other Checkstyle configuration files. By default, this path is <literal>$rootProject.projectDir/config/checkstyle</literal>
</para><para>
This path will be exposed as the variable <literal>config_loc</literal> in Checkstyle's configuration files.
</para><segmentedlist><segtitle>Default with <literal>checkstyle</literal> plugin</segtitle><seglistitem><seg><literal><replaceable>${rootProject.projectDir}</replaceable>/config/checkstyle</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.plugins.quality.CheckstyleExtension:configFile" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>configFile</literal></title><para>The Checkstyle configuration file to use.</para><segmentedlist><segtitle>Default with <literal>checkstyle</literal> plugin</segtitle><seglistitem><seg><literal><replaceable>${configDirectory}</replaceable>/checkstyle.xml</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.plugins.quality.CheckstyleExtension:configProperties" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink>&gt;</classname> <literal>configProperties</literal></title><para>The properties available for use in the configuration file. These are substituted into the configuration file.</para><segmentedlist><segtitle>Default with <literal>checkstyle</literal> plugin</segtitle><seglistitem><seg><literal>[:]</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.plugins.quality.CheckstyleExtension:enableExternalDtdLoad" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html"><classname>Boolean</classname></ulink>&gt;</classname> <literal>enableExternalDtdLoad</literal></title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Enable the ability to use custom DTD files in config and load them from some location on all checkstyle tasks in this project.
<emphasis>Disabled by default due to security concerns.</emphasis>
See <ulink url="https://checkstyle.org/config_system_properties.html#Enable_External_DTD_load">Checkstyle documentation</ulink> for more details.</para><segmentedlist><segtitle>Default with <literal>checkstyle</literal> plugin</segtitle><seglistitem><seg><literal>false</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.plugins.quality.CheckstyleExtension:ignoreFailures" role="detail"><title><classname>boolean</classname> <literal>ignoreFailures</literal></title><para>Whether to allow the build to continue if there are warnings.

Example: ignoreFailures = true</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>false</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.plugins.quality.CheckstyleExtension:maxErrors" role="detail"><title><classname>int</classname> <literal>maxErrors</literal></title><para>The maximum number of errors that are tolerated before breaking the build
or setting the failure property. Defaults to <literal>0</literal>.
</para><para>
Example: maxErrors = 42</para><segmentedlist><segtitle>Default with <literal>checkstyle</literal> plugin</segtitle><seglistitem><seg><literal>0</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.plugins.quality.CheckstyleExtension:maxWarnings" role="detail"><title><classname>int</classname> <literal>maxWarnings</literal></title><para>The maximum number of warnings that are tolerated before breaking the build
or setting the failure property. Defaults to <literal>Integer.MAX_VALUE</literal>.
</para><para>
Example: maxWarnings = 1000</para><segmentedlist><segtitle>Default with <literal>checkstyle</literal> plugin</segtitle><seglistitem><seg><literal>Integer.MAX_VALUE</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.plugins.quality.CheckstyleExtension:reportsDir" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>reportsDir</literal></title><para>The directory where reports will be generated.</para></section><section id="org.gradle.api.plugins.quality.CheckstyleExtension:showViolations" role="detail"><title><classname>boolean</classname> <literal>showViolations</literal></title><para>Whether rule violations are to be displayed on the console. Defaults to <literal>true</literal>.

Example: showViolations = false</para><segmentedlist><segtitle>Default with <literal>checkstyle</literal> plugin</segtitle><seglistitem><seg><literal>true</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.plugins.quality.CheckstyleExtension:sourceSets" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Collection.html"><classname>Collection</classname></ulink>&lt;<apilink class="org.gradle.api.tasks.SourceSet"/>&gt;</classname> <literal>sourceSets</literal></title><para>The source sets to be analyzed as part of the <literal>check</literal> and <literal>build</literal> tasks.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>project.sourceSets</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.plugins.quality.CheckstyleExtension:toolVersion" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>toolVersion</literal></title><para>The version of the code quality tool to be used.</para></section></section></chapter><chapter id="org.gradle.api.Buildable"><title>Buildable</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.Buildable" style="javadoc"/></seg></seglistitem></segmentedlist><segmentedlist><segtitle>Known Subtypes</segtitle><seglistitem><seg><simplelist columns="3" type="vert"><member><apilink class="org.gradle.api.resources.TextResource"/></member><member><apilink class="org.gradle.ide.visualstudio.VisualStudioSolution"/></member><member><apilink class="org.gradle.api.publish.PublicationArtifact"/></member><member><apilink class="org.gradle.api.plugins.jvm.JvmTestSuite"/></member><member><apilink class="org.gradle.ide.visualstudio.VisualStudioProject"/></member></simplelist></seg></seglistitem></segmentedlist><para>A <literal>Buildable</literal> represents an artifact or set of artifacts which are built by one or more <apilink class="org.gradle.api.Task"/>
instances.</para><section><title>Properties</title><table><title>Properties - Buildable</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.Buildable:buildDependencies"><literal>buildDependencies</literal></link></td><td><para>Returns a dependency which contains the tasks which build this artifact. All <literal>Buildable</literal> implementations
must ensure that the returned dependency object is live, so that it tracks changes to the dependencies of this
buildable.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.Buildable:buildDependencies" role="detail"><title><apilink class="org.gradle.api.tasks.TaskDependency"/> <literal>buildDependencies</literal> (read-only)</title><para>Returns a dependency which contains the tasks which build this artifact. All <literal>Buildable</literal> implementations
must ensure that the returned dependency object is live, so that it tracks changes to the dependencies of this
buildable.</para></section></section></chapter><chapter id="org.gradle.api.resources.TextResource"><title>TextResource</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.resources.TextResource" style="javadoc"/></seg></seglistitem></segmentedlist><para>A read-only body of text backed by a string, file, archive entry, or other source.
To create a text resource, use one of the factory methods in <apilink class="org.gradle.api.resources.TextResourceFactory"/>
(e.g. <literal>project.resources.text.fromFile(myFile)</literal>).</para><section><title>Properties</title><table><title>Properties - TextResource</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.resources.TextResource:buildDependencies"><literal>buildDependencies</literal></link></td><td><para>Returns a dependency which contains the tasks which build this artifact. All <literal>Buildable</literal> implementations
must ensure that the returned dependency object is live, so that it tracks changes to the dependencies of this
buildable.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - TextResource</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.resources.TextResource:asFile()">asFile</link>()</literal></td><td><para>Same as <literal>asFile(Charset.defaultCharset().name())</literal>.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.resources.TextResource:asFile(java.lang.String)">asFile</link>(charset)</literal></td><td><para>Returns a file containing the resource's text and using the given character encoding.
If this resource is backed by a file with a matching encoding, that file may be
returned. Otherwise, a temporary file will be created and returned.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.resources.TextResource:asReader()">asReader</link>()</literal></td><td><para>Returns an unbuffered <ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/Reader.html"><classname>Reader</classname></ulink> that allows the resource's text to be read. The caller is responsible for closing the reader.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.resources.TextResource:asString()">asString</link>()</literal></td><td><para>Returns a string containing the resource's text</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.resources.TextResource:buildDependencies" role="detail"><title><apilink class="org.gradle.api.tasks.TaskDependency"/> <literal>buildDependencies</literal> (read-only)</title><para>Returns a dependency which contains the tasks which build this artifact. All <literal>Buildable</literal> implementations
must ensure that the returned dependency object is live, so that it tracks changes to the dependencies of this
buildable.</para></section></section><section><title>Method details</title><section id="org.gradle.api.resources.TextResource:asFile()" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>asFile</literal>()</title><para>Same as <literal>asFile(Charset.defaultCharset().name())</literal>.</para></section><section id="org.gradle.api.resources.TextResource:asFile(java.lang.String)" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>asFile</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> charset)</title><para>Returns a file containing the resource's text and using the given character encoding.
If this resource is backed by a file with a matching encoding, that file may be
returned. Otherwise, a temporary file will be created and returned.</para></section><section id="org.gradle.api.resources.TextResource:asReader()" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/Reader.html"><classname>Reader</classname></ulink> <literal>asReader</literal>()</title><para>Returns an unbuffered <ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/Reader.html"><classname>Reader</classname></ulink> that allows the resource's text to be read. The caller is responsible for closing the reader.</para></section><section id="org.gradle.api.resources.TextResource:asString()" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>asString</literal>()</title><para>Returns a string containing the resource's text</para></section></section></chapter><chapter id="org.gradle.api.plugins.quality.CodeNarcExtension"><title>CodeNarcExtension</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.plugins.quality.CodeNarcExtension" style="javadoc"/></seg></seglistitem></segmentedlist><para>Configuration options for the CodeNarc plugin.</para><section><title>Properties</title><table><title>Properties - CodeNarcExtension</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.plugins.quality.CodeNarcExtension:config"><literal>config</literal></link></td><td><para>The CodeNarc configuration to use. Replaces the <literal>configFile</literal> property.</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.quality.CodeNarcExtension:configFile"><literal>configFile</literal></link></td><td><para>The CodeNarc configuration file to use.</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.quality.CodeNarcExtension:ignoreFailures"><literal>ignoreFailures</literal></link></td><td><para>Whether to allow the build to continue if there are warnings.

Example: ignoreFailures = true</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.quality.CodeNarcExtension:maxPriority1Violations"><literal>maxPriority1Violations</literal></link></td><td><para>The maximum number of priority 1 violations allowed before failing the build.</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.quality.CodeNarcExtension:maxPriority2Violations"><literal>maxPriority2Violations</literal></link></td><td><para>The maximum number of priority 2 violations allowed before failing the build.</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.quality.CodeNarcExtension:maxPriority3Violations"><literal>maxPriority3Violations</literal></link></td><td><para>The maximum number of priority 3 violations allowed before failing the build.</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.quality.CodeNarcExtension:reportFormat"><literal>reportFormat</literal></link></td><td><para>The format type of the CodeNarc report. One of <literal>html</literal>, <literal>xml</literal>, <literal>text</literal>, <literal>console</literal>.</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.quality.CodeNarcExtension:reportsDir"><literal>reportsDir</literal></link></td><td><para>The directory where reports will be generated.</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.quality.CodeNarcExtension:sourceSets"><literal>sourceSets</literal></link></td><td><para>The source sets to be analyzed as part of the <literal>check</literal> and <literal>build</literal> tasks.</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.quality.CodeNarcExtension:toolVersion"><literal>toolVersion</literal></link></td><td><para>The version of the code quality tool to be used.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.plugins.quality.CodeNarcExtension:config" role="detail"><title><apilink class="org.gradle.api.resources.TextResource"/> <literal>config</literal></title><para>The CodeNarc configuration to use. Replaces the <literal>configFile</literal> property.</para><segmentedlist><segtitle>Default with <literal>codenarc</literal> plugin</segtitle><seglistitem><seg><literal><replaceable>${project.projectDir}</replaceable>/config/codenarc/codenarc.xml</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.plugins.quality.CodeNarcExtension:configFile" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>configFile</literal></title><para>The CodeNarc configuration file to use.</para><segmentedlist><segtitle>Default with <literal>codenarc</literal> plugin</segtitle><seglistitem><seg><literal><replaceable>${project.projectDir}</replaceable>/config/codenarc/codenarc.xml</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.plugins.quality.CodeNarcExtension:ignoreFailures" role="detail"><title><classname>boolean</classname> <literal>ignoreFailures</literal></title><para>Whether to allow the build to continue if there are warnings.

Example: ignoreFailures = true</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>false</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.plugins.quality.CodeNarcExtension:maxPriority1Violations" role="detail"><title><classname>int</classname> <literal>maxPriority1Violations</literal></title><para>The maximum number of priority 1 violations allowed before failing the build.</para><segmentedlist><segtitle>Default with <literal>codenarc</literal> plugin</segtitle><seglistitem><seg><literal>0</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.plugins.quality.CodeNarcExtension:maxPriority2Violations" role="detail"><title><classname>int</classname> <literal>maxPriority2Violations</literal></title><para>The maximum number of priority 2 violations allowed before failing the build.</para><segmentedlist><segtitle>Default with <literal>codenarc</literal> plugin</segtitle><seglistitem><seg><literal>0</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.plugins.quality.CodeNarcExtension:maxPriority3Violations" role="detail"><title><classname>int</classname> <literal>maxPriority3Violations</literal></title><para>The maximum number of priority 3 violations allowed before failing the build.</para><segmentedlist><segtitle>Default with <literal>codenarc</literal> plugin</segtitle><seglistitem><seg><literal>0</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.plugins.quality.CodeNarcExtension:reportFormat" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>reportFormat</literal></title><para>The format type of the CodeNarc report. One of <literal>html</literal>, <literal>xml</literal>, <literal>text</literal>, <literal>console</literal>.</para><segmentedlist><segtitle>Default with <literal>codenarc</literal> plugin</segtitle><seglistitem><seg><literal>html</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.plugins.quality.CodeNarcExtension:reportsDir" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>reportsDir</literal></title><para>The directory where reports will be generated.</para></section><section id="org.gradle.api.plugins.quality.CodeNarcExtension:sourceSets" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Collection.html"><classname>Collection</classname></ulink>&lt;<apilink class="org.gradle.api.tasks.SourceSet"/>&gt;</classname> <literal>sourceSets</literal></title><para>The source sets to be analyzed as part of the <literal>check</literal> and <literal>build</literal> tasks.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>project.sourceSets</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.plugins.quality.CodeNarcExtension:toolVersion" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>toolVersion</literal></title><para>The version of the code quality tool to be used.</para></section></section></chapter><chapter id="org.gradle.api.plugins.quality.PmdExtension"><title>PmdExtension</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.plugins.quality.PmdExtension" style="javadoc"/></seg></seglistitem></segmentedlist><para>Configuration options for the PMD plugin.</para><section><title>Properties</title><table><title>Properties - PmdExtension</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.plugins.quality.PmdExtension:consoleOutput"><literal>consoleOutput</literal></link></td><td><para>Whether or not to write PMD results to <literal>System.out</literal>.</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.quality.PmdExtension:ignoreFailures"><literal>ignoreFailures</literal></link></td><td><para>Whether to allow the build to continue if there are warnings.

Example: ignoreFailures = true</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.quality.PmdExtension:incrementalAnalysis"><literal>incrementalAnalysis</literal></link></td><td><para>Controls whether to use incremental analysis or not.

This is only supported for PMD 6.0.0 or better. See <ulink url="https://docs.pmd-code.org/pmd-doc-7.13.0/pmd_userdocs_incremental_analysis.html">official documentation</ulink> for more details.</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.quality.PmdExtension:maxFailures"><literal>maxFailures</literal></link></td><td><para>The maximum number of failures to allow before stopping the build.

If <literal>ignoreFailures</literal> is set, this is ignored and no limit is enforced.</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.quality.PmdExtension:reportsDir"><literal>reportsDir</literal></link></td><td><para>The directory where reports will be generated.</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.quality.PmdExtension:ruleSetConfig"><literal>ruleSetConfig</literal></link></td><td><para>The custom rule set to be used (if any). Replaces <literal>ruleSetFiles</literal>, except that it does not currently support multiple rule sets.

See the <ulink url="https://docs.pmd-code.org/pmd-doc-7.13.0/pmd_userdocs_making_rulesets.html">official documentation</ulink> for how to author a rule set.

</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.quality.PmdExtension:ruleSetFiles"><literal>ruleSetFiles</literal></link></td><td><para>The custom rule set files to be used. See the <ulink url="https://docs.pmd-code.org/pmd-doc-7.13.0/pmd_userdocs_making_rulesets.html">official documentation</ulink> for how to author a rule set file.

</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.quality.PmdExtension:ruleSets"><literal>ruleSets</literal></link></td><td><para>The built-in rule sets to be used. See the <ulink url="https://docs.pmd-code.org/pmd-doc-7.13.0/pmd_rules_java.html">official list</ulink> of built-in rule sets.

If not configured explicitly, the returned conventional value is "category/java/errorprone.xml", unless <apilink class="org.gradle.api.plugins.quality.PmdExtension" method="getRuleSetConfig()"/> returns
a non-null value or the return value of <apilink class="org.gradle.api.plugins.quality.PmdExtension" method="getRuleSetFiles()"/> is non-empty, in which case the conventional value is an empty list.

</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.quality.PmdExtension:rulesMinimumPriority"><literal>rulesMinimumPriority</literal></link></td><td><para>The rule priority threshold; violations for rules with a lower priority will not be reported. Default value is 5, which means that all violations will be reported.

This is equivalent to PMD's Ant task minimumPriority property.

See the official documentation for the <ulink url="https://docs.pmd-code.org/pmd-doc-7.13.0/pmd_userdocs_configuring_rules.html">list of priorities</ulink>.

</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.quality.PmdExtension:sourceSets"><literal>sourceSets</literal></link></td><td><para>The source sets to be analyzed as part of the <literal>check</literal> and <literal>build</literal> tasks.</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.quality.PmdExtension:targetJdk"><literal>targetJdk</literal></link></td><td><para>The target jdk to use with pmd, 1.3, 1.4, 1.5, 1.6, 1.7 or jsp</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.quality.PmdExtension:threads"><literal>threads</literal></link></td><td><para>The number of threads used by PMD.</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.quality.PmdExtension:toolVersion"><literal>toolVersion</literal></link></td><td><para>The version of the code quality tool to be used.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - PmdExtension</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.plugins.quality.PmdExtension:ruleSetFiles(java.lang.Object[])">ruleSetFiles</link>(ruleSetFiles)</literal></td><td><para>Convenience method for adding rule set files.

</para></td></tr><tr><td><literal><link linkend="org.gradle.api.plugins.quality.PmdExtension:ruleSets(java.lang.String[])">ruleSets</link>(ruleSets)</literal></td><td><para>Convenience method for adding rule sets.

</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.plugins.quality.PmdExtension:consoleOutput" role="detail"><title><classname>boolean</classname> <literal>consoleOutput</literal></title><para>Whether or not to write PMD results to <literal>System.out</literal>.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>false</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.plugins.quality.PmdExtension:ignoreFailures" role="detail"><title><classname>boolean</classname> <literal>ignoreFailures</literal></title><para>Whether to allow the build to continue if there are warnings.

Example: ignoreFailures = true</para></section><section id="org.gradle.api.plugins.quality.PmdExtension:incrementalAnalysis" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html"><classname>Boolean</classname></ulink>&gt;</classname> <literal>incrementalAnalysis</literal></title><para>Controls whether to use incremental analysis or not.

This is only supported for PMD 6.0.0 or better. See <ulink url="https://docs.pmd-code.org/pmd-doc-7.13.0/pmd_userdocs_incremental_analysis.html">official documentation</ulink> for more details.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>false</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.plugins.quality.PmdExtension:maxFailures" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html"><classname>Integer</classname></ulink>&gt;</classname> <literal>maxFailures</literal></title><para>The maximum number of failures to allow before stopping the build.

If <literal>ignoreFailures</literal> is set, this is ignored and no limit is enforced.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>0</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.plugins.quality.PmdExtension:reportsDir" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>reportsDir</literal></title><para>The directory where reports will be generated.</para></section><section id="org.gradle.api.plugins.quality.PmdExtension:ruleSetConfig" role="detail"><title><apilink class="org.gradle.api.resources.TextResource"/> <literal>ruleSetConfig</literal></title><para>The custom rule set to be used (if any). Replaces <literal>ruleSetFiles</literal>, except that it does not currently support multiple rule sets.

See the <ulink url="https://docs.pmd-code.org/pmd-doc-7.13.0/pmd_userdocs_making_rulesets.html">official documentation</ulink> for how to author a rule set.

</para><programlisting language="java">
    ruleSetConfig = resources.text.fromFile("config/pmd/myRuleSet.xml")
</programlisting><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>null</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.plugins.quality.PmdExtension:ruleSetFiles" role="detail"><title><apilink class="org.gradle.api.file.FileCollection"/> <literal>ruleSetFiles</literal></title><para>The custom rule set files to be used. See the <ulink url="https://docs.pmd-code.org/pmd-doc-7.13.0/pmd_userdocs_making_rulesets.html">official documentation</ulink> for how to author a rule set file.

</para><programlisting language="java">
    ruleSetFiles = files("config/pmd/myRuleSet.xml")
</programlisting><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>[]</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.plugins.quality.PmdExtension:ruleSets" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/List.html"><classname>List</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>ruleSets</literal></title><para>The built-in rule sets to be used. See the <ulink url="https://docs.pmd-code.org/pmd-doc-7.13.0/pmd_rules_java.html">official list</ulink> of built-in rule sets.

If not configured explicitly, the returned conventional value is "category/java/errorprone.xml", unless <apilink class="org.gradle.api.plugins.quality.PmdExtension" method="getRuleSetConfig()"/> returns
a non-null value or the return value of <apilink class="org.gradle.api.plugins.quality.PmdExtension" method="getRuleSetFiles()"/> is non-empty, in which case the conventional value is an empty list.

</para><programlisting language="java">
    ruleSets = ["category/java/errorprone.xml", "category/java/bestpractices.xml"]
</programlisting><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>["category/java/errorprone.xml"]</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.plugins.quality.PmdExtension:rulesMinimumPriority" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html"><classname>Integer</classname></ulink>&gt;</classname> <literal>rulesMinimumPriority</literal></title><para>The rule priority threshold; violations for rules with a lower priority will not be reported. Default value is 5, which means that all violations will be reported.

This is equivalent to PMD's Ant task minimumPriority property.

See the official documentation for the <ulink url="https://docs.pmd-code.org/pmd-doc-7.13.0/pmd_userdocs_configuring_rules.html">list of priorities</ulink>.

</para><programlisting language="java">
    rulesMinimumPriority = 3
</programlisting><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>5</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.plugins.quality.PmdExtension:sourceSets" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Collection.html"><classname>Collection</classname></ulink>&lt;<apilink class="org.gradle.api.tasks.SourceSet"/>&gt;</classname> <literal>sourceSets</literal></title><para>The source sets to be analyzed as part of the <literal>check</literal> and <literal>build</literal> tasks.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>project.sourceSets</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.plugins.quality.PmdExtension:targetJdk" role="detail"><title><apilink class="org.gradle.api.plugins.quality.TargetJdk"/> <literal>targetJdk</literal></title><para>The target jdk to use with pmd, 1.3, 1.4, 1.5, 1.6, 1.7 or jsp</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>project.sourceCompatibility</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.plugins.quality.PmdExtension:threads" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html"><classname>Integer</classname></ulink>&gt;</classname> <literal>threads</literal></title><para>The number of threads used by PMD.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>1</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.plugins.quality.PmdExtension:toolVersion" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>toolVersion</literal></title><para>The version of the code quality tool to be used.</para></section></section><section><title>Method details</title><section id="org.gradle.api.plugins.quality.PmdExtension:ruleSetFiles(java.lang.Object[])" role="detail"><title><classname>void</classname> <literal>ruleSetFiles</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink>...</classname> ruleSetFiles)</title><para>Convenience method for adding rule set files.

</para><programlisting language="java">
    ruleSetFiles "config/pmd/myRuleSet.xml"
</programlisting></section><section id="org.gradle.api.plugins.quality.PmdExtension:ruleSets(java.lang.String[])" role="detail"><title><classname>void</classname> <literal>ruleSets</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>...</classname> ruleSets)</title><para>Convenience method for adding rule sets.

</para><programlisting language="java">
    ruleSets "category/java/errorprone.xml", "category/java/bestpractices.xml"
</programlisting></section></section></chapter><chapter id="org.gradle.testing.jacoco.plugins.JacocoPluginExtension"><title>JacocoPluginExtension</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.testing.jacoco.plugins.JacocoPluginExtension" style="javadoc"/></seg></seglistitem></segmentedlist><para>Extension including common properties and methods for Jacoco.</para><section><title>Properties</title><table><title>Properties - JacocoPluginExtension</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.testing.jacoco.plugins.JacocoPluginExtension:reportsDirectory"><literal>reportsDirectory</literal></link></td><td><para>The directory where reports will be generated.</para></td></tr><tr><td><link linkend="org.gradle.testing.jacoco.plugins.JacocoPluginExtension:toolVersion"><literal>toolVersion</literal></link></td><td><para>Version of Jacoco JARs to use.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - JacocoPluginExtension</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.testing.jacoco.plugins.JacocoPluginExtension:applyTo(T)">applyTo</link>(task)</literal></td><td><para>Applies Jacoco to the given task.
Configuration options will be provided on a task extension named 'jacoco'.
Jacoco will be run as an agent during the execution of the task.</para></td></tr><tr><td><literal><link linkend="org.gradle.testing.jacoco.plugins.JacocoPluginExtension:applyTo(org.gradle.api.tasks.TaskCollection)">applyTo</link>(tasks)</literal></td><td><para>Applies Jacoco to all of the given tasks.</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.testing.jacoco.plugins.JacocoPluginExtension:reportsDirectory" role="detail"><title><apilink class="org.gradle.api.file.DirectoryProperty"/> <literal>reportsDirectory</literal></title><para>The directory where reports will be generated.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg>
                    <literal><replaceable>${project.reporting.baseDirectory}</replaceable>/jacoco
                    </literal>
                </seg></seglistitem></segmentedlist></section><section id="org.gradle.testing.jacoco.plugins.JacocoPluginExtension:toolVersion" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>toolVersion</literal></title><para>Version of Jacoco JARs to use.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>0.8.13</literal></seg></seglistitem></segmentedlist></section></section><section><title>Method details</title><section id="org.gradle.testing.jacoco.plugins.JacocoPluginExtension:applyTo(T)" role="detail"><title><classname>void</classname> <literal>applyTo</literal>(<classname>T</classname> task)</title><para>Applies Jacoco to the given task.
Configuration options will be provided on a task extension named 'jacoco'.
Jacoco will be run as an agent during the execution of the task.</para></section><section id="org.gradle.testing.jacoco.plugins.JacocoPluginExtension:applyTo(org.gradle.api.tasks.TaskCollection)" role="detail"><title><classname>void</classname> <literal>applyTo</literal>(<classname><apilink class="org.gradle.api.tasks.TaskCollection"/>&lt;<classname>T</classname>&gt;</classname> tasks)</title><para>Applies Jacoco to all of the given tasks.</para></section></section></chapter><chapter id="org.gradle.ide.visualstudio.VisualStudioExtension"><title>VisualStudioExtension</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.ide.visualstudio.VisualStudioExtension" style="javadoc"/></seg></seglistitem></segmentedlist><segmentedlist><segtitle>Known Subtypes</segtitle><seglistitem><seg><simplelist columns="1" type="vert"><member><apilink class="org.gradle.ide.visualstudio.VisualStudioRootExtension"/></member></simplelist></seg></seglistitem></segmentedlist><para>The configuration for mapping a set of native components to a Visual Studio project.</para><section><title>Properties</title><table><title>Properties - VisualStudioExtension</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.ide.visualstudio.VisualStudioExtension:projects"><literal>projects</literal></link></td><td><para>The <apilink class="org.gradle.ide.visualstudio.VisualStudioProject"/>s generated.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.ide.visualstudio.VisualStudioExtension:projects" role="detail"><title><classname><apilink class="org.gradle.api.NamedDomainObjectSet"/>&lt;? extends <apilink class="org.gradle.ide.visualstudio.VisualStudioProject"/>&gt;</classname> <literal>projects</literal> (read-only)</title><para>The <apilink class="org.gradle.ide.visualstudio.VisualStudioProject"/>s generated.</para></section></section></chapter><chapter id="org.gradle.ide.visualstudio.VisualStudioRootExtension"><title>VisualStudioRootExtension</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.ide.visualstudio.VisualStudioRootExtension" style="javadoc"/></seg></seglistitem></segmentedlist><para>The configuration for mapping a set of native components to a Visual Studio project and solution.</para><section><title>Properties</title><table><title>Properties - VisualStudioRootExtension</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.ide.visualstudio.VisualStudioRootExtension:projects"><literal>projects</literal></link></td><td><para>The <apilink class="org.gradle.ide.visualstudio.VisualStudioProject"/>s generated.</para></td></tr><tr><td><link linkend="org.gradle.ide.visualstudio.VisualStudioRootExtension:solution"><literal>solution</literal></link></td><td><para>The generated  <apilink class="org.gradle.ide.visualstudio.VisualStudioSolution"/> for this build.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.ide.visualstudio.VisualStudioRootExtension:projects" role="detail"><title><classname><apilink class="org.gradle.api.NamedDomainObjectSet"/>&lt;? extends <apilink class="org.gradle.ide.visualstudio.VisualStudioProject"/>&gt;</classname> <literal>projects</literal> (read-only)</title><para>The <apilink class="org.gradle.ide.visualstudio.VisualStudioProject"/>s generated.</para></section><section id="org.gradle.ide.visualstudio.VisualStudioRootExtension:solution" role="detail"><title><apilink class="org.gradle.ide.visualstudio.VisualStudioSolution"/> <literal>solution</literal> (read-only)</title><para>The generated  <apilink class="org.gradle.ide.visualstudio.VisualStudioSolution"/> for this build.</para></section></section></chapter><chapter id="org.gradle.ide.visualstudio.VisualStudioSolution"><title>VisualStudioSolution</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.ide.visualstudio.VisualStudioSolution" style="javadoc"/></seg></seglistitem></segmentedlist><caution><para>Note: This class is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>A visual studio solution, representing one or more native binaries in a build.
</para><para>

The content and location of the generate solution file can be modified by the supplied methods:

</para><programlisting language="java">
 plugins {
     id 'visual-studio'
 }

 model {
     visualStudio {
         solution {
             solutionFile.location = "vs/${name}.sln"
             solutionFile.withContent { TextProvider content -&gt;
                 content.asBuilder().insert(0, "# GENERATED FILE: DO NOT EDIT\\n")
                 content.text = content.text.replaceAll("HideSolutionNode = FALSE", "HideSolutionNode = TRUE")
             }
         }
     }
 }
</programlisting><section><title>Properties</title><table><title>Properties - VisualStudioSolution</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.ide.visualstudio.VisualStudioSolution:buildDependencies"><literal>buildDependencies</literal></link></td><td><para>Returns a dependency which contains the tasks which build this artifact. All <literal>Buildable</literal> implementations
must ensure that the returned dependency object is live, so that it tracks changes to the dependencies of this
buildable.</para></td></tr><tr><td><link linkend="org.gradle.ide.visualstudio.VisualStudioSolution:solutionFile"><literal>solutionFile</literal></link></td><td><caution>Incubating</caution><para>Configuration for the generated solution file.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.ide.visualstudio.VisualStudioSolution:buildDependencies" role="detail"><title><apilink class="org.gradle.api.tasks.TaskDependency"/> <literal>buildDependencies</literal> (read-only)</title><para>Returns a dependency which contains the tasks which build this artifact. All <literal>Buildable</literal> implementations
must ensure that the returned dependency object is live, so that it tracks changes to the dependencies of this
buildable.</para></section><section id="org.gradle.ide.visualstudio.VisualStudioSolution:solutionFile" role="detail"><title><apilink class="org.gradle.ide.visualstudio.TextConfigFile"/> <literal>solutionFile</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Configuration for the generated solution file.</para></section></section></chapter><chapter id="org.gradle.ide.xcode.XcodeExtension"><title>XcodeExtension</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.ide.xcode.XcodeExtension" style="javadoc"/></seg></seglistitem></segmentedlist><segmentedlist><segtitle>Known Subtypes</segtitle><seglistitem><seg><simplelist columns="1" type="vert"><member><apilink class="org.gradle.ide.xcode.XcodeRootExtension"/></member></simplelist></seg></seglistitem></segmentedlist><para>The configuration for mapping a C++ or Swift project to an XCode project.</para><section><title>Properties</title><table><title>Properties - XcodeExtension</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.ide.xcode.XcodeExtension:project"><literal>project</literal></link></td><td><para>The generated Xcode project for this Gradle project.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.ide.xcode.XcodeExtension:project" role="detail"><title><apilink class="org.gradle.ide.xcode.XcodeProject"/> <literal>project</literal> (read-only)</title><para>The generated Xcode project for this Gradle project.</para></section></section></chapter><chapter id="org.gradle.ide.xcode.XcodeRootExtension"><title>XcodeRootExtension</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.ide.xcode.XcodeRootExtension" style="javadoc"/></seg></seglistitem></segmentedlist><para>The configuration for mapping a C++ or Swift project to XCode project and workspace.</para><section><title>Properties</title><table><title>Properties - XcodeRootExtension</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.ide.xcode.XcodeRootExtension:project"><literal>project</literal></link></td><td><para>The generated Xcode project for this Gradle project.</para></td></tr><tr><td><link linkend="org.gradle.ide.xcode.XcodeRootExtension:workspace"><literal>workspace</literal></link></td><td><para>The generated Xcode workspace for this Gradle build.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.ide.xcode.XcodeRootExtension:project" role="detail"><title><apilink class="org.gradle.ide.xcode.XcodeProject"/> <literal>project</literal> (read-only)</title><para>The generated Xcode project for this Gradle project.</para></section><section id="org.gradle.ide.xcode.XcodeRootExtension:workspace" role="detail"><title><apilink class="org.gradle.ide.xcode.XcodeWorkspace"/> <literal>workspace</literal> (read-only)</title><para>The generated Xcode workspace for this Gradle build.</para></section></section></chapter><chapter id="org.gradle.api.Project"><title>Project</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.Project" style="javadoc"/></seg></seglistitem></segmentedlist><para>This interface is the main API you use to interact with Gradle from your build file. From a <literal>Project</literal>,
you have programmatic access to all of Gradle's features.</para><section><title>Lifecycle</title><para>There is a one-to-one relationship between a <literal>Project</literal> and a <literal><literal>build.gradle</literal></literal>
file. During build initialisation, Gradle assembles a <literal>Project</literal> object for each project which is to
participate in the build, as follows:</para><itemizedlist><listitem>Create a <apilink class="org.gradle.api.initialization.Settings"/> instance for the build.</listitem><listitem>Evaluate the <literal><literal>settings.gradle</literal></literal> script, if
present, against the <apilink class="org.gradle.api.initialization.Settings"/> object to configure it.</listitem><listitem>Use the configured <apilink class="org.gradle.api.initialization.Settings"/> object to create the hierarchy of
<literal>Project</literal> instances.</listitem><listitem>Finally, evaluate each <literal>Project</literal> by executing its <literal><literal>build.gradle</literal></literal> file, if
present, against the project. The projects are evaluated in breadth-wise order, such that a project is evaluated
before its child projects. This order can be overridden by calling <literal><apilink class="org.gradle.api.Project" method="evaluationDependsOnChildren()"/></literal> or by adding an
explicit evaluation dependency using <literal><apilink class="org.gradle.api.Project" method="evaluationDependsOn(java.lang.String)"/></literal>.</listitem></itemizedlist></section><section><title>Tasks</title><para>A project is essentially a collection of <apilink class="org.gradle.api.Task"/> objects. Each task performs some basic piece of work, such
as compiling classes, or running unit tests, or zipping up a WAR file. You add tasks to a project using one of the
<literal>create()</literal> methods on <apilink class="org.gradle.api.tasks.TaskContainer"/>, such as <apilink class="org.gradle.api.tasks.TaskContainer" method="create(java.lang.String)"/>.  You can locate existing
tasks using one of the lookup methods on <apilink class="org.gradle.api.tasks.TaskContainer"/>, such as <apilink class="org.gradle.api.tasks.TaskCollection" method="getByName(java.lang.String)"/>.</para></section><section><title>Dependencies</title><para>A project generally has a number of dependencies it needs in order to do its work.  Also, a project generally
produces a number of artifacts, which other projects can use. Those dependencies are grouped in configurations, and
can be retrieved and uploaded from repositories. You use the <apilink class="org.gradle.api.artifacts.ConfigurationContainer"/>
returned by <apilink class="org.gradle.api.Project" method="getConfigurations()"/> method to manage the configurations. The <apilink class="org.gradle.api.artifacts.dsl.DependencyHandler"/> returned by <apilink class="org.gradle.api.Project" method="getDependencies()"/> method to manage the
dependencies. The <apilink class="org.gradle.api.artifacts.dsl.ArtifactHandler"/> returned by <apilink class="org.gradle.api.Project" method="getArtifacts()"/> method to
manage the artifacts. The <apilink class="org.gradle.api.artifacts.dsl.RepositoryHandler"/> returned by <apilink class="org.gradle.api.Project" method="getRepositories()"/> method to manage the repositories.</para></section><section><title>Multi-project Builds</title><para>Projects are arranged into a hierarchy of projects. A project has a name, and a fully qualified path which
uniquely identifies it in the hierarchy.</para></section><section><title>Plugins</title><para>
Plugins can be used to modularise and reuse project configuration.
Plugins can be applied using the <apilink class="org.gradle.api.plugins.PluginAware" method="apply(java.util.Map)"/> method, or by using the <apilink class="org.gradle.plugin.use.PluginDependenciesSpec"/> plugins script block.
</para></section><section><title>Dynamic Project Properties</title><para>Gradle executes the project's build file against the <literal>Project</literal> instance to configure the project. Any
property or method which your script uses is delegated through to the associated <literal>Project</literal> object.  This
means, that you can use any of the methods and properties on the <literal>Project</literal> interface directly in your script.
</para><para>For example:
</para><programlisting language="java">
defaultTasks('some-task')  // Delegates to Project.defaultTasks()
reportsDir = file('reports') // Delegates to Project.file() and the Java Plugin
</programlisting><para>You can also access the <literal>Project</literal> instance using the <literal>project</literal> property. This can make the
script clearer in some cases. For example, you could use <literal>project.name</literal> rather than <literal>name</literal> to
access the project's name.</para><para>A project has 5 property 'scopes', which it searches for properties. You can access these properties by name in
your build file, or by calling the project's <apilink class="org.gradle.api.Project" method="property(java.lang.String)"/> method. The scopes are:</para><itemizedlist><listitem>The <literal>Project</literal> object itself. This scope includes any property getters and setters declared by the
<literal>Project</literal> implementation class.  For example, <apilink class="org.gradle.api.Project" method="getRootProject()"/> is accessible as the
<literal>rootProject</literal> property.  The properties of this scope are readable or writable depending on the presence
of the corresponding getter or setter method.</listitem><listitem>The <emphasis>extra</emphasis> properties of the project.  Each project maintains a map of extra properties, which
can contain any arbitrary name -&gt; value pair.  Once defined, the properties of this scope are readable and writable.
See <link linkend="org.gradle.api.Project.extraproperties">extra properties</link> for more details.</listitem><listitem>The <emphasis>extensions</emphasis> added to the project by the plugins. Each extension is available as a read-only property with the same name as the extension.</listitem><listitem>The tasks of the project.  A task is accessible by using its name as a property name.  The properties of this
scope are read-only. For example, a task called <literal>compile</literal> is accessible as the <literal>compile</literal>
property.</listitem><listitem>The extra properties and convention properties are inherited from the project's parent, recursively up to the root
project. The properties of this scope are read-only.</listitem></itemizedlist><para>When reading a property, the project searches the above scopes in order, and returns the value from the first
scope it finds the property in. If not found, an exception is thrown. See <apilink class="org.gradle.api.Project" method="property(java.lang.String)"/> for more details.</para><para>When writing a property, the project searches the above scopes in order, and sets the property in the first scope
it finds the property in. If not found, an exception is thrown. See <apilink class="org.gradle.api.Project" method="setProperty(java.lang.String, java.lang.Object)"/> for more details.</para><section><title>Extra Properties</title><para>All extra properties must be defined through the "ext" namespace. Once an extra property has been defined,
it is available directly on the owning object (in the below case the Project, Task, and sub-projects respectively) and can
be read and updated. Only the initial declaration that needs to be done via the namespace.</para><programlisting language="java">
project.ext.prop1 = "foo"
task doStuff {
    ext.prop2 = "bar"
}
subprojects { ext.${prop3} = false }
</programlisting><para>

Reading extra properties is done through the "ext" or through the owning object.

</para><programlisting language="java">
ext.isSnapshot = version.endsWith("-SNAPSHOT")
if (isSnapshot) {
    // do snapshot stuff
}
</programlisting></section><section><title>Dynamic Methods</title><para>A project has 5 method 'scopes', which it searches for methods:</para><itemizedlist><listitem>The <literal>Project</literal> object itself.</listitem><listitem>The build file. The project searches for a matching method declared in the build file.</listitem><listitem>The <emphasis>extensions</emphasis> added to the project by the plugins. Each extension is available as a method which takes
a closure or <apilink class="org.gradle.api.Action"/> as a parameter.</listitem><listitem>The tasks of the project. A method is added for each task, using the name of the task as the method name and
taking a single closure or <apilink class="org.gradle.api.Action"/> parameter. The method calls the <apilink class="org.gradle.api.Task" method="configure(groovy.lang.Closure)"/> method for the
associated task with the provided closure. For example, if the project has a task called <literal>compile</literal>, then a
method is added with the following signature: <literal>void compile(Closure configureClosure)</literal>.</listitem><listitem>The methods of the parent project, recursively up to the root project.</listitem><listitem>A property of the project whose value is a closure. The closure is treated as a method and called with the provided parameters.
The property is located as described above.</listitem></itemizedlist></section></section><section><title>Properties</title><table><title>Properties - Project</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.Project:allprojects"><literal>allprojects</literal></link></td><td><para>The set containing this project and its subprojects.</para></td></tr><tr><td><link linkend="org.gradle.api.Project:ant"><literal>ant</literal></link></td><td><para>The <literal>AntBuilder</literal> for this project. You can use this in your build file to execute ant
tasks. See example below.</para></td></tr><tr><td><link linkend="org.gradle.api.Project:artifacts"><literal>artifacts</literal></link></td><td><para>Returns a handler for assigning artifacts produced by the project to configurations.
</para></td></tr><tr><td><link linkend="org.gradle.api.Project:buildDir"><literal>buildDir</literal></link></td><td><caution>Deprecated</caution><para>The build directory of this project.  The build directory is the directory which all artifacts are
generated into.  The default value for the build directory is <literal><emphasis>projectDir</emphasis>/build</literal></para></td></tr><tr><td><link linkend="org.gradle.api.Project:buildFile"><literal>buildFile</literal></link></td><td><para>The build script for this project.
</para></td></tr><tr><td><link linkend="org.gradle.api.Project:buildscript"><literal>buildscript</literal></link></td><td><para>The build script handler for this project. You can use this handler to query details about the build
script for this project, and manage the classpath used to compile and execute the project's build script.</para></td></tr><tr><td><link linkend="org.gradle.api.Project:childProjects"><literal>childProjects</literal></link></td><td><para>The direct children of this project.</para></td></tr><tr><td><link linkend="org.gradle.api.Project:configurations"><literal>configurations</literal></link></td><td><para>The configurations of this project.
</para></td></tr><tr><td><link linkend="org.gradle.api.Project:defaultTasks"><literal>defaultTasks</literal></link></td><td><para>The names of the default tasks of this project. These are used when no tasks names are provided when
starting the build.</para></td></tr><tr><td><link linkend="org.gradle.api.Project:dependencies"><literal>dependencies</literal></link></td><td><para>The dependency handler of this project. The returned dependency handler instance can be used for adding
new dependencies. For accessing already declared dependencies, the configurations can be used.
</para></td></tr><tr><td><link linkend="org.gradle.api.Project:dependencyLocking"><literal>dependencyLocking</literal></link></td><td><para>Provides access to configuring dependency locking</para></td></tr><tr><td><link linkend="org.gradle.api.Project:description"><literal>description</literal></link></td><td><para>The description of this project, if any.</para></td></tr><tr><td><link linkend="org.gradle.api.Project:extensions"><literal>extensions</literal></link></td><td><para>Allows adding DSL extensions to the project. Useful for plugin authors.</para></td></tr><tr><td><link linkend="org.gradle.api.Project:gradle"><literal>gradle</literal></link></td><td><para>The <apilink class="org.gradle.api.invocation.Gradle"/> invocation which this project belongs to.</para></td></tr><tr><td><link linkend="org.gradle.api.Project:group"><literal>group</literal></link></td><td><para>The group of this project. Gradle always uses the <literal>toString()</literal> value of the group. The group
defaults to the path with dots as separators.</para></td></tr><tr><td><link linkend="org.gradle.api.Project:layout"><literal>layout</literal></link></td><td><para>Provides access to various important directories for this project.</para></td></tr><tr><td><link linkend="org.gradle.api.Project:logger"><literal>logger</literal></link></td><td><para>The logger for this project. You can use this in your build file to write log messages.</para></td></tr><tr><td><link linkend="org.gradle.api.Project:logging"><literal>logging</literal></link></td><td><para>The <apilink class="org.gradle.api.logging.LoggingManager"/> which can be used to receive logging and to control the
standard output/error capture for this project's build script. By default, System.out is redirected to the Gradle
logging system at the QUIET log level, and System.err is redirected at the ERROR log level.</para></td></tr><tr><td><link linkend="org.gradle.api.Project:name"><literal>name</literal></link></td><td><para>The name of this project. The project's name is not necessarily unique within a project hierarchy. You
should use the <apilink class="org.gradle.api.Project" method="getPath()"/> method for a unique identifier for the project.
If the root project is unnamed and is located on a file system root it will have a randomly-generated name
</para></td></tr><tr><td><link linkend="org.gradle.api.Project:normalization"><literal>normalization</literal></link></td><td><para>Provides access to configuring input normalization.</para></td></tr><tr><td><link linkend="org.gradle.api.Project:parent"><literal>parent</literal></link></td><td><para>The parent project of this project, if any.</para></td></tr><tr><td><link linkend="org.gradle.api.Project:path"><literal>path</literal></link></td><td><para>The path of this project.  The path is the fully qualified name of the project.</para></td></tr><tr><td><link linkend="org.gradle.api.Project:pluginManager"><literal>pluginManager</literal></link></td><td><para>The plugin manager for this plugin aware object.</para></td></tr><tr><td><link linkend="org.gradle.api.Project:plugins"><literal>plugins</literal></link></td><td><para>The container of plugins that have been applied to this object.
</para></td></tr><tr><td><link linkend="org.gradle.api.Project:project"><literal>project</literal></link></td><td><para>Returns this project. This method is useful in build files to explicitly access project properties and
methods. For example, using <literal>project.name</literal> can express your intent better than using
<literal>name</literal>. This method also allows you to access project properties from a scope where the property may
be hidden, such as, for example, from a method or closure. </para></td></tr><tr><td><link linkend="org.gradle.api.Project:projectDir"><literal>projectDir</literal></link></td><td><para>The directory containing the project build file.</para></td></tr><tr><td><link linkend="org.gradle.api.Project:properties"><literal>properties</literal></link></td><td><para>The properties of this project. See <link linkend="org.gradle.api.Project.properties">here</link> for details of the properties which
are available for a project.</para></td></tr><tr><td><link linkend="org.gradle.api.Project:repositories"><literal>repositories</literal></link></td><td><para>Returns a handler to create repositories which are used for retrieving dependencies and uploading artifacts
produced by the project.</para></td></tr><tr><td><link linkend="org.gradle.api.Project:resources"><literal>resources</literal></link></td><td><para>Provides access to resource-specific utility methods, for example factory methods that create various resources.</para></td></tr><tr><td><link linkend="org.gradle.api.Project:rootDir"><literal>rootDir</literal></link></td><td><para>The root directory of this project. The root directory is the project directory of the root
project.</para></td></tr><tr><td><link linkend="org.gradle.api.Project:rootProject"><literal>rootProject</literal></link></td><td><para>The root project for the hierarchy that this project belongs to.  In the case of a single-project
build, this method returns this project.</para></td></tr><tr><td><link linkend="org.gradle.api.Project:state"><literal>state</literal></link></td><td><para>The evaluation state of this project. You can use this to access information about the evaluation of this
project, such as whether it has failed.</para></td></tr><tr><td><link linkend="org.gradle.api.Project:status"><literal>status</literal></link></td><td><para>The status of this project. Gradle always uses the <literal>toString()</literal> value of the status. The status
defaults to <literal>release</literal>.</para></td></tr><tr><td><link linkend="org.gradle.api.Project:subprojects"><literal>subprojects</literal></link></td><td><para>The set containing the subprojects of this project.</para></td></tr><tr><td><link linkend="org.gradle.api.Project:tasks"><literal>tasks</literal></link></td><td><para>The tasks of this project.</para></td></tr><tr><td><link linkend="org.gradle.api.Project:version"><literal>version</literal></link></td><td><para>The version of this project. Gradle always uses the <literal>toString()</literal> value of the version. The
version defaults to <literal>unspecified</literal>.</para></td></tr></table><section><title>Properties added by the <literal>application</literal> plugin</title><titleabbrev><literal>application</literal> plugin</titleabbrev><table><title>Properties - <literal>application</literal> plugin</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.Project:application"><literal>application</literal></link></td><td><para>The <apilink class="org.gradle.api.plugins.JavaApplication"/> added by the application plugin.</para></td></tr></table></section><section><title>Properties added by the <literal>checkstyle</literal> plugin</title><titleabbrev><literal>checkstyle</literal> plugin</titleabbrev><table><title>Properties - <literal>checkstyle</literal> plugin</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.Project:checkstyle"><literal>checkstyle</literal></link></td><td><para>The <apilink class="org.gradle.api.plugins.quality.CheckstyleExtension"/> added by the checkstyle plugin.</para></td></tr></table></section><section><title>Properties added by the <literal>codenarc</literal> plugin</title><titleabbrev><literal>codenarc</literal> plugin</titleabbrev><table><title>Properties - <literal>codenarc</literal> plugin</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.Project:codenarc"><literal>codenarc</literal></link></td><td><para>The <apilink class="org.gradle.api.plugins.quality.CodeNarcExtension"/> added by the codenarc plugin.</para></td></tr></table></section><section><title>Properties added by the <literal>distribution</literal> plugin</title><titleabbrev><literal>distribution</literal> plugin</titleabbrev><table><title>Properties - <literal>distribution</literal> plugin</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.Project:distributions"><literal>distributions</literal></link></td><td><para>The <apilink class="org.gradle.api.distribution.DistributionContainer"/> added by the distribution plugin.</para></td></tr></table></section><section><title>Properties added by the <literal>eclipse</literal> plugin</title><titleabbrev><literal>eclipse</literal> plugin</titleabbrev><table><title>Properties - <literal>eclipse</literal> plugin</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.Project:eclipse"><literal>eclipse</literal></link></td><td><para>The <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseModel"/> added by the eclipse plugin.</para></td></tr></table></section><section><title>Properties added by the <literal>idea</literal> plugin</title><titleabbrev><literal>idea</literal> plugin</titleabbrev><table><title>Properties - <literal>idea</literal> plugin</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.Project:idea"><literal>idea</literal></link></td><td><para>The <apilink class="org.gradle.plugins.ide.idea.model.IdeaModel"/> added by the idea plugin.</para></td></tr></table></section><section><title>Properties added by the <literal>jacoco</literal> plugin</title><titleabbrev><literal>jacoco</literal> plugin</titleabbrev><table><title>Properties - <literal>jacoco</literal> plugin</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.Project:jacoco"><literal>jacoco</literal></link></td><td><para>The <apilink class="org.gradle.testing.jacoco.plugins.JacocoPluginExtension"/> added by the jacoco plugin.</para></td></tr></table></section><section><title>Properties added by the <literal>java</literal> plugin</title><titleabbrev><literal>java</literal> plugin</titleabbrev><table><title>Properties - <literal>java</literal> plugin</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.Project:base"><literal>base</literal></link></td><td><para>The <apilink class="org.gradle.api.plugins.BasePluginExtension"/> added by the java plugin.</para></td></tr><tr><td><link linkend="org.gradle.api.Project:java"><literal>java</literal></link></td><td><para>The <apilink class="org.gradle.api.plugins.JavaPluginExtension"/> added by the java plugin.</para></td></tr><tr><td><link linkend="org.gradle.api.Project:reporting"><literal>reporting</literal></link></td><td><para>The <apilink class="org.gradle.api.reporting.ReportingExtension"/> added by the java plugin.</para></td></tr></table></section><section><title>Properties added by the <literal>pmd</literal> plugin</title><titleabbrev><literal>pmd</literal> plugin</titleabbrev><table><title>Properties - <literal>pmd</literal> plugin</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.Project:pmd"><literal>pmd</literal></link></td><td><para>The <apilink class="org.gradle.api.plugins.quality.PmdExtension"/> added by the pmd plugin.</para></td></tr></table></section><section><title>Properties added by the <literal>publishing</literal> plugin</title><titleabbrev><literal>publishing</literal> plugin</titleabbrev><table><title>Properties - <literal>publishing</literal> plugin</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.Project:publishing"><literal>publishing</literal></link></td><td><para>The <apilink class="org.gradle.api.publish.PublishingExtension"/> added by the publishing plugin.</para></td></tr></table></section><section><title>Properties added by the <literal>signing</literal> plugin</title><titleabbrev><literal>signing</literal> plugin</titleabbrev><table><title>Properties - <literal>signing</literal> plugin</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.Project:signing"><literal>signing</literal></link></td><td><para>The <apilink class="org.gradle.plugins.signing.SigningExtension"/> added by the signing plugin.</para></td></tr></table></section><section><title>Properties added by the <literal>visual-studio</literal> plugin</title><titleabbrev><literal>visual-studio</literal> plugin</titleabbrev><table><title>Properties - <literal>visual-studio</literal> plugin</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.Project:visualStudio"><literal>visualStudio</literal></link></td><td><para>The <apilink class="org.gradle.ide.visualstudio.VisualStudioRootExtension"/> added by the visual-studio plugin.</para></td></tr></table></section><section><title>Properties added by the <literal>xcode</literal> plugin</title><titleabbrev><literal>xcode</literal> plugin</titleabbrev><table><title>Properties - <literal>xcode</literal> plugin</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.Project:xcode"><literal>xcode</literal></link></td><td><para>The <apilink class="org.gradle.ide.xcode.XcodeRootExtension"/> added by the xcode plugin.</para></td></tr></table></section></section><section><title>Methods</title><table><title>Methods - Project</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.Project:absoluteProjectPath(java.lang.String)">absoluteProjectPath</link>(path)</literal></td><td><para>Converts a name to an absolute project path, resolving names relative to this project.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.Project:afterEvaluate(groovy.lang.Closure)">afterEvaluate</link>(closure)</literal></td><td><para>Adds a closure to call immediately after this project is evaluated.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.Project:afterEvaluate(org.gradle.api.Action)">afterEvaluate</link>(action)</literal></td><td><para>Adds an action to call immediately after this project is evaluated.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.Project:allprojects(org.gradle.api.Action)">allprojects</link>(action)</literal></td><td><para>Configures this project and each of its sub-projects.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.Project:ant(org.gradle.api.Action)">ant</link>(configureAction)</literal></td><td><para>Executes the given action against the <literal>AntBuilder</literal> for this project. You can use this in your
build file to execute ant tasks. See example in javadoc for <apilink class="org.gradle.api.Project" method="getAnt()"/></para></td></tr><tr><td><literal><link linkend="org.gradle.api.Project:apply(groovy.lang.Closure)">apply</link>(closure)</literal></td><td><para>Applies zero or more plugins or scripts.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.Project:apply(java.util.Map)">apply</link>(options)</literal></td><td><para>Applies a plugin or script, using the given options provided as a map. Does nothing if the plugin has already been applied.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.Project:apply(org.gradle.api.Action)">apply</link>(action)</literal></td><td><para>Applies zero or more plugins or scripts.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.Project:artifacts(org.gradle.api.Action)">artifacts</link>(configureAction)</literal></td><td><para>Configures the published artifacts for this project.

</para></td></tr><tr><td><literal><link linkend="org.gradle.api.Project:beforeEvaluate(groovy.lang.Closure)">beforeEvaluate</link>(closure)</literal></td><td><para>Adds a closure to call immediately before this project is evaluated.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.Project:beforeEvaluate(org.gradle.api.Action)">beforeEvaluate</link>(action)</literal></td><td><para>Adds an action to call immediately before this project is evaluated.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.Project:configure(java.lang.Iterable, groovy.lang.Closure)">configure</link>(objects, configureClosure)</literal></td><td><para>Configures a collection of objects via a closure. This is equivalent to calling <apilink class="org.gradle.api.Project" method="configure(java.lang.Object, groovy.lang.Closure)"/> for each of the given objects.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.Project:configure(java.lang.Iterable, org.gradle.api.Action)">configure</link>(objects, configureAction)</literal></td><td><para>Configures a collection of objects via an action.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.Project:configure(java.lang.Object, groovy.lang.Closure)">configure</link>(object, configureClosure)</literal></td><td><para>Configures an object via a closure, with the closure's delegate set to the supplied object. This way you don't
have to specify the context of a configuration statement multiple times. </para></td></tr><tr><td><literal><link linkend="org.gradle.api.Project:container(java.lang.Class)">container</link>(type)</literal></td><td><para>Creates a container for managing named objects of the specified type. The specified type must have a public constructor which takes the name as a String parameter.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.Project:container(java.lang.Class, groovy.lang.Closure)">container</link>(type, factoryClosure)</literal></td><td><para>Creates a container for managing named objects of the specified type. The given closure is used to create object instances. The name of the instance to be created is passed as a parameter to
the closure.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.Project:container(java.lang.Class, org.gradle.api.NamedDomainObjectFactory)">container</link>(type, factory)</literal></td><td><para>Creates a container for managing named objects of the specified type. The given factory is used to create object instances.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.Project:copy(groovy.lang.Closure)">copy</link>(closure)</literal></td><td><para>Copies the specified files.  The given closure is used to configure a <apilink class="org.gradle.api.file.CopySpec"/>, which is then used to
copy the files. Example:
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.Project:copy(org.gradle.api.Action)">copy</link>(action)</literal></td><td><para>Copies the specified files.  The given action is used to configure a <apilink class="org.gradle.api.file.CopySpec"/>, which is then used to
copy the files.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.Project:copySpec()">copySpec</link>()</literal></td><td><para>Creates a <apilink class="org.gradle.api.file.CopySpec"/> which can later be used to copy files or create an archive.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.Project:copySpec(groovy.lang.Closure)">copySpec</link>(closure)</literal></td><td><para>Creates a <apilink class="org.gradle.api.file.CopySpec"/> which can later be used to copy files or create an archive. The given closure is used
to configure the <apilink class="org.gradle.api.file.CopySpec"/> before it is returned by this method.

</para></td></tr><tr><td><literal><link linkend="org.gradle.api.Project:copySpec(org.gradle.api.Action)">copySpec</link>(action)</literal></td><td><para>Creates a <apilink class="org.gradle.api.file.CopySpec"/> which can later be used to copy files or create an archive. The given action is used
to configure the <apilink class="org.gradle.api.file.CopySpec"/> before it is returned by this method.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.Project:defaultTasks(java.lang.String[])">defaultTasks</link>(defaultTasks)</literal></td><td><para>Sets the names of the default tasks of this project. These are used when no tasks names are provided when
starting the build.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.Project:delete(java.lang.Object[])">delete</link>(paths)</literal></td><td><para>Deletes files and directories.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.Project:delete(org.gradle.api.Action)">delete</link>(action)</literal></td><td><para>Deletes the specified files.  The given action is used to configure a <apilink class="org.gradle.api.file.DeleteSpec"/>, which is then used to
delete the files.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.Project:dependencyLocking(org.gradle.api.Action)">dependencyLocking</link>(configuration)</literal></td><td><para>Configures dependency locking</para></td></tr><tr><td><literal><link linkend="org.gradle.api.Project:evaluationDependsOn(java.lang.String)">evaluationDependsOn</link>(path)</literal></td><td><para>Declares that this project has an evaluation dependency on the project with the given path.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.Project:file(java.lang.Object)">file</link>(path)</literal></td><td><para>Resolves a file path relative to the project directory of this project. This method converts the supplied path
based on its type:</para></td></tr><tr><td><literal><link linkend="org.gradle.api.Project:file(java.lang.Object, org.gradle.api.PathValidation)">file</link>(path, validation)</literal></td><td><para>Resolves a file path relative to the project directory of this project and validates it using the given
scheme. See <apilink class="org.gradle.api.PathValidation"/> for the list of possible validations.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.Project:fileTree(java.lang.Object)">fileTree</link>(baseDir)</literal></td><td><para>Creates a new <literal>ConfigurableFileTree</literal> using the given base directory. The given baseDir path is evaluated
as per <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/>.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.Project:fileTree(java.lang.Object, groovy.lang.Closure)">fileTree</link>(baseDir, configureClosure)</literal></td><td><para>Creates a new <literal>ConfigurableFileTree</literal> using the given base directory. The given baseDir path is evaluated
as per <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/>. The closure will be used to configure the new file tree.
The file tree is passed to the closure as its delegate.  Example:</para></td></tr><tr><td><literal><link linkend="org.gradle.api.Project:fileTree(java.lang.Object, org.gradle.api.Action)">fileTree</link>(baseDir, configureAction)</literal></td><td><para>Creates a new <literal>ConfigurableFileTree</literal> using the given base directory. The given baseDir path is evaluated
as per <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/>. The action will be used to configure the new file tree. Example:</para></td></tr><tr><td><literal><link linkend="org.gradle.api.Project:fileTree(java.util.Map)">fileTree</link>(args)</literal></td><td><para>Creates a new <literal>ConfigurableFileTree</literal> using the provided map of arguments.  The map will be applied as
properties on the new file tree.  Example:</para></td></tr><tr><td><literal><link linkend="org.gradle.api.Project:files(java.lang.Object, groovy.lang.Closure)">files</link>(paths, configureClosure)</literal></td><td><para>Creates a new <literal>ConfigurableFileCollection</literal> using the given paths. The paths are evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/>. The file collection is configured using the given closure. The file collection is passed to
the closure as its delegate. Example:</para></td></tr><tr><td><literal><link linkend="org.gradle.api.Project:files(java.lang.Object, org.gradle.api.Action)">files</link>(paths, configureAction)</literal></td><td><para>Creates a new <literal>ConfigurableFileCollection</literal> using the given paths. The paths are evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/>. The file collection is configured using the given action. Example:</para></td></tr><tr><td><literal><link linkend="org.gradle.api.Project:files(java.lang.Object[])">files</link>(paths)</literal></td><td><para>Returns a <apilink class="org.gradle.api.file.ConfigurableFileCollection"/> containing the given files. You can pass any of the following
types to this method:</para></td></tr><tr><td><literal><link linkend="org.gradle.api.Project:findProject(java.lang.String)">findProject</link>(path)</literal></td><td><para>Locates a project by path. If the path is relative, it is interpreted relative to this project.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.Project:findProperty(java.lang.String)">findProperty</link>(propertyName)</literal></td><td><para>Returns the value of the given property or null if not found.
This method locates a property as follows:</para></td></tr><tr><td><literal><link linkend="org.gradle.api.Project:getAllTasks(boolean)">getAllTasks</link>(recursive)</literal></td><td><para>Returns a map of the tasks contained in this project, and optionally its subprojects.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.Project:getTasksByName(java.lang.String, boolean)">getTasksByName</link>(name, recursive)</literal></td><td><para>Returns the set of tasks with the given name contained in this project, and optionally its subprojects.

<emphasis>NOTE:</emphasis> This is an expensive operation since it requires all projects to be configured.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.Project:hasProperty(java.lang.String)">hasProperty</link>(propertyName)</literal></td><td><para>Determines if this project has the given property. See <link linkend="org.gradle.api.Project.properties">here</link> for details of the
properties which are available for a project.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.Project:mkdir(java.lang.Object)">mkdir</link>(path)</literal></td><td><para>Creates a directory and returns a file pointing to it.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.Project:normalization(org.gradle.api.Action)">normalization</link>(configuration)</literal></td><td><para>Configures input normalization.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.Project:project(java.lang.String)">project</link>(path)</literal></td><td><para>Locates a project by path. If the path is relative, it is interpreted relative to this project.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.Project:project(java.lang.String, groovy.lang.Closure)">project</link>(path, configureClosure)</literal></td><td><para>Locates a project by path and configures it using the given closure. If the path is relative, it is
interpreted relative to this project. The target project is passed to the closure as the closure's delegate.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.Project:project(java.lang.String, org.gradle.api.Action)">project</link>(path, configureAction)</literal></td><td><para>Locates a project by path and configures it using the given action. If the path is relative, it is
interpreted relative to this project.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.Project:property(java.lang.String)">property</link>(propertyName)</literal></td><td><para>Returns the value of the given property.  This method locates a property as follows:</para></td></tr><tr><td><literal><link linkend="org.gradle.api.Project:relativePath(java.lang.Object)">relativePath</link>(path)</literal></td><td><para>Returns the relative path from the project directory to the given path. The given path object is (logically)
resolved as described for <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/>, from which a relative path is calculated.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.Project:relativeProjectPath(java.lang.String)">relativeProjectPath</link>(path)</literal></td><td><para>Converts a name to a project path relative to this project.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.Project:setProperty(java.lang.String, java.lang.Object)">setProperty</link>(name, value)</literal></td><td><para>Sets a property of this project.  This method searches for a property with the given name in the following
locations, and sets the property on the first location where it finds the property.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.Project:subprojects(org.gradle.api.Action)">subprojects</link>(action)</literal></td><td><para>Configures the sub-projects of this project</para></td></tr><tr><td><literal><link linkend="org.gradle.api.Project:sync(org.gradle.api.Action)">sync</link>(action)</literal></td><td><para>Synchronizes the contents of a destination directory with some source directories and files.
The given action is used to configure a <apilink class="org.gradle.api.file.SyncSpec"/>, which is then used to synchronize the files.

</para></td></tr><tr><td><literal><link linkend="org.gradle.api.Project:tarTree(java.lang.Object)">tarTree</link>(tarPath)</literal></td><td><para>Creates a new <literal>FileTree</literal> which contains the contents of the given TAR file. The given tarPath path can be:
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.Project:task(java.lang.String)">task</link>(name)</literal></td><td><caution>Deprecated</caution><para>Creates a <apilink class="org.gradle.api.Task"/> with the given name and adds it to this project. Calling this method is equivalent to
calling <apilink class="org.gradle.api.Project" method="task(java.util.Map, java.lang.String)"/> with an empty options map.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.Project:task(java.lang.String, groovy.lang.Closure)">task</link>(name, configureClosure)</literal></td><td><caution>Deprecated</caution><para>Creates a <apilink class="org.gradle.api.Task"/> with the given name and adds it to this project. Before the task is returned, the given
closure is executed to configure the task.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.Project:task(java.lang.String, org.gradle.api.Action)">task</link>(name, configureAction)</literal></td><td><caution>Deprecated</caution><para>Creates a <apilink class="org.gradle.api.Task"/> with the given name and adds it to this project. Before the task is returned, the given
action is executed to configure the task.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.Project:task(java.util.Map, java.lang.String)">task</link>(args, name)</literal></td><td><caution>Deprecated</caution><para>Creates a <apilink class="org.gradle.api.Task"/> with the given name and adds it to this project. A map of creation options can be
passed to this method to control how the task is created. The following options are available:</para></td></tr><tr><td><literal><link linkend="org.gradle.api.Project:task(java.util.Map, java.lang.String, groovy.lang.Closure)">task</link>(args, name, configureClosure)</literal></td><td><caution>Deprecated</caution><para>Creates a <apilink class="org.gradle.api.Task"/> with the given name and adds it to this project. Before the task is returned, the given
closure is executed to configure the task. A map of creation options can be passed to this method to control how
the task is created. See <apilink class="org.gradle.api.Project" method="task(java.util.Map, java.lang.String)"/> for the available options.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.Project:uri(java.lang.Object)">uri</link>(path)</literal></td><td><para>Resolves a file path to a URI, relative to the project directory of this project. Evaluates the provided path
object as described for <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/>, with the exception that any URI scheme is supported, not just
'file:' URIs.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.Project:zipTree(java.lang.Object)">zipTree</link>(zipPath)</literal></td><td><para>Creates a new <literal>FileTree</literal> which contains the contents of the given ZIP file. The given zipPath path is
evaluated as per <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/>. You can combine this method with the <apilink class="org.gradle.api.Project" method="copy(org.gradle.api.Action)"/>
method to unzip a ZIP file.</para></td></tr></table></section><section><title>Script blocks</title><table><title>Script blocks - Project</title><thead><tr><td>Block</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.Project:allprojects(groovy.lang.Closure)"><literal>allprojects</literal></link></td><td><para>Configures this project and each of its sub-projects.</para></td></tr><tr><td><link linkend="org.gradle.api.Project:ant(groovy.lang.Closure)"><literal>ant</literal></link></td><td><para>Executes the given closure against the <literal>AntBuilder</literal> for this project. You can use this in your
build file to execute ant tasks. The <literal>AntBuild</literal> is passed to the closure as the closure's
delegate. See example in javadoc for <apilink class="org.gradle.api.Project" method="getAnt()"/></para></td></tr><tr><td><link linkend="org.gradle.api.Project:artifacts(groovy.lang.Closure)"><literal>artifacts</literal></link></td><td><para>Configures the published artifacts for this project.

</para></td></tr><tr><td><link linkend="org.gradle.api.Project:buildscript(groovy.lang.Closure)"><literal>buildscript</literal></link></td><td><para>Configures the build script classpath for this project.

</para></td></tr><tr><td><link linkend="org.gradle.api.Project:configurations(groovy.lang.Closure)"><literal>configurations</literal></link></td><td><para>Configures the dependency configurations for this project.

</para></td></tr><tr><td><link linkend="org.gradle.api.Project:dependencies(groovy.lang.Closure)"><literal>dependencies</literal></link></td><td><para>Configures the dependencies for this project.

</para></td></tr><tr><td><link linkend="org.gradle.api.Project:repositories(groovy.lang.Closure)"><literal>repositories</literal></link></td><td><para>Configures the repositories for this project.

</para></td></tr><tr><td><link linkend="org.gradle.api.Project:subprojects(groovy.lang.Closure)"><literal>subprojects</literal></link></td><td><para>Configures the sub-projects of this project.</para></td></tr></table><section><title>Script blocks added by the <literal>application</literal> plugin</title><titleabbrev><literal>application</literal> plugin</titleabbrev><table><title>Script blocks - <literal>application</literal> plugin</title><thead><tr><td>Block</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.Project:application(groovy.lang.Closure)"><literal>application</literal></link></td><td><para>Configures the <apilink class="org.gradle.api.plugins.JavaApplication"/> added by the application plugin.</para></td></tr></table></section><section><title>Script blocks added by the <literal>checkstyle</literal> plugin</title><titleabbrev><literal>checkstyle</literal> plugin</titleabbrev><table><title>Script blocks - <literal>checkstyle</literal> plugin</title><thead><tr><td>Block</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.Project:checkstyle(groovy.lang.Closure)"><literal>checkstyle</literal></link></td><td><para>Configures the <apilink class="org.gradle.api.plugins.quality.CheckstyleExtension"/> added by the checkstyle plugin.</para></td></tr></table></section><section><title>Script blocks added by the <literal>codenarc</literal> plugin</title><titleabbrev><literal>codenarc</literal> plugin</titleabbrev><table><title>Script blocks - <literal>codenarc</literal> plugin</title><thead><tr><td>Block</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.Project:codenarc(groovy.lang.Closure)"><literal>codenarc</literal></link></td><td><para>Configures the <apilink class="org.gradle.api.plugins.quality.CodeNarcExtension"/> added by the codenarc plugin.</para></td></tr></table></section><section><title>Script blocks added by the <literal>distribution</literal> plugin</title><titleabbrev><literal>distribution</literal> plugin</titleabbrev><table><title>Script blocks - <literal>distribution</literal> plugin</title><thead><tr><td>Block</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.Project:distributions(groovy.lang.Closure)"><literal>distributions</literal></link></td><td><para>Configures the <apilink class="org.gradle.api.distribution.DistributionContainer"/> added by the distribution plugin.</para></td></tr></table></section><section><title>Script blocks added by the <literal>eclipse</literal> plugin</title><titleabbrev><literal>eclipse</literal> plugin</titleabbrev><table><title>Script blocks - <literal>eclipse</literal> plugin</title><thead><tr><td>Block</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.Project:eclipse(groovy.lang.Closure)"><literal>eclipse</literal></link></td><td><para>Configures the <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseModel"/> added by the eclipse plugin.</para></td></tr></table></section><section><title>Script blocks added by the <literal>idea</literal> plugin</title><titleabbrev><literal>idea</literal> plugin</titleabbrev><table><title>Script blocks - <literal>idea</literal> plugin</title><thead><tr><td>Block</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.Project:idea(groovy.lang.Closure)"><literal>idea</literal></link></td><td><para>Configures the <apilink class="org.gradle.plugins.ide.idea.model.IdeaModel"/> added by the idea plugin.</para></td></tr></table></section><section><title>Script blocks added by the <literal>jacoco</literal> plugin</title><titleabbrev><literal>jacoco</literal> plugin</titleabbrev><table><title>Script blocks - <literal>jacoco</literal> plugin</title><thead><tr><td>Block</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.Project:jacoco(groovy.lang.Closure)"><literal>jacoco</literal></link></td><td><para>Configures the <apilink class="org.gradle.testing.jacoco.plugins.JacocoPluginExtension"/> added by the jacoco plugin.</para></td></tr></table></section><section><title>Script blocks added by the <literal>java</literal> plugin</title><titleabbrev><literal>java</literal> plugin</titleabbrev><table><title>Script blocks - <literal>java</literal> plugin</title><thead><tr><td>Block</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.Project:base(groovy.lang.Closure)"><literal>base</literal></link></td><td><para>Configures the <apilink class="org.gradle.api.plugins.BasePluginExtension"/> added by the java plugin.</para></td></tr><tr><td><link linkend="org.gradle.api.Project:java(groovy.lang.Closure)"><literal>java</literal></link></td><td><para>Configures the <apilink class="org.gradle.api.plugins.JavaPluginExtension"/> added by the java plugin.</para></td></tr><tr><td><link linkend="org.gradle.api.Project:reporting(groovy.lang.Closure)"><literal>reporting</literal></link></td><td><para>Configures the <apilink class="org.gradle.api.reporting.ReportingExtension"/> added by the java plugin.</para></td></tr></table></section><section><title>Script blocks added by the <literal>pmd</literal> plugin</title><titleabbrev><literal>pmd</literal> plugin</titleabbrev><table><title>Script blocks - <literal>pmd</literal> plugin</title><thead><tr><td>Block</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.Project:pmd(groovy.lang.Closure)"><literal>pmd</literal></link></td><td><para>Configures the <apilink class="org.gradle.api.plugins.quality.PmdExtension"/> added by the pmd plugin.</para></td></tr></table></section><section><title>Script blocks added by the <literal>publishing</literal> plugin</title><titleabbrev><literal>publishing</literal> plugin</titleabbrev><table><title>Script blocks - <literal>publishing</literal> plugin</title><thead><tr><td>Block</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.Project:publishing(groovy.lang.Closure)"><literal>publishing</literal></link></td><td><para>Configures the <apilink class="org.gradle.api.publish.PublishingExtension"/> added by the publishing plugin.</para></td></tr></table></section><section><title>Script blocks added by the <literal>signing</literal> plugin</title><titleabbrev><literal>signing</literal> plugin</titleabbrev><table><title>Script blocks - <literal>signing</literal> plugin</title><thead><tr><td>Block</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.Project:signing(groovy.lang.Closure)"><literal>signing</literal></link></td><td><para>Configures the <apilink class="org.gradle.plugins.signing.SigningExtension"/> added by the signing plugin.</para></td></tr></table></section><section><title>Script blocks added by the <literal>visual-studio</literal> plugin</title><titleabbrev><literal>visual-studio</literal> plugin</titleabbrev><table><title>Script blocks - <literal>visual-studio</literal> plugin</title><thead><tr><td>Block</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.Project:visualStudio(groovy.lang.Closure)"><literal>visualStudio</literal></link></td><td><para>Configures the <apilink class="org.gradle.ide.visualstudio.VisualStudioRootExtension"/> added by the visual-studio plugin.</para></td></tr></table></section><section><title>Script blocks added by the <literal>xcode</literal> plugin</title><titleabbrev><literal>xcode</literal> plugin</titleabbrev><table><title>Script blocks - <literal>xcode</literal> plugin</title><thead><tr><td>Block</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.Project:xcode(groovy.lang.Closure)"><literal>xcode</literal></link></td><td><para>Configures the <apilink class="org.gradle.ide.xcode.XcodeRootExtension"/> added by the xcode plugin.</para></td></tr></table></section></section><section><title>Property details</title><section id="org.gradle.api.Project:allprojects" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<apilink class="org.gradle.api.Project"/>&gt;</classname> <literal>allprojects</literal> (read-only)</title><para>The set containing this project and its subprojects.</para></section><section id="org.gradle.api.Project:ant" role="detail"><title><apilink class="org.gradle.api.AntBuilder"/> <literal>ant</literal> (read-only)</title><para>The <literal>AntBuilder</literal> for this project. You can use this in your build file to execute ant
tasks. See example below.</para><programlisting language="java">
task printChecksum {
  doLast {
    ant {
      //using ant checksum task to store the file checksum in the checksumOut ant property
      checksum(property: 'checksumOut', file: 'someFile.txt')

      //we can refer to the ant property created by checksum task:
      println "The checksum is: " + checksumOut
    }

    //we can refer to the ant property later as well:
    println "I just love to print checksums: " + ant.checksumOut
  }
}
</programlisting><para>

Consider following example of ant target:
</para><programlisting language="java">
&lt;target name='printChecksum'&gt;
  &lt;checksum property='checksumOut'&gt;
    &lt;fileset dir='.'&gt;
      &lt;include name='agile.txt'/&gt;
    &lt;/fileset&gt;
  &lt;/checksum&gt;
  &lt;echo&gt;The checksum is: ${checksumOut}&lt;/echo&gt;
&lt;/target&gt;
</programlisting><para>

Here's how it would look like in gradle. Observe how the ant XML is represented in groovy by the ant builder
</para><programlisting language="java">
task printChecksum {
  doLast {
    ant {
      checksum(property: 'checksumOut') {
        fileset(dir: '.') {
          include name: 'agile1.txt'
        }
      }
    }
    logger.lifecycle("The checksum is $ant.checksumOut")
  }
}
</programlisting></section><section id="org.gradle.api.Project:artifacts" role="detail"><title><apilink class="org.gradle.api.artifacts.dsl.ArtifactHandler"/> <literal>artifacts</literal> (read-only)</title><para>Returns a handler for assigning artifacts produced by the project to configurations.
</para><para>
Examples: See docs for <apilink class="org.gradle.api.artifacts.dsl.ArtifactHandler"/></para></section><section id="org.gradle.api.Project:buildDir" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>buildDir</literal></title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">deprecated</ulink> and will be removed in the next major version of Gradle.</para></caution><para>The build directory of this project.  The build directory is the directory which all artifacts are
generated into.  The default value for the build directory is <literal><emphasis>projectDir</emphasis>/build</literal></para></section><section id="org.gradle.api.Project:buildFile" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>buildFile</literal> (read-only)</title><para>The build script for this project.
</para><para>
If the file exists, it will be evaluated against this project when this project is configured.</para></section><section id="org.gradle.api.Project:buildscript" role="detail"><title><apilink class="org.gradle.api.initialization.dsl.ScriptHandler"/> <literal>buildscript</literal> (read-only)</title><para>The build script handler for this project. You can use this handler to query details about the build
script for this project, and manage the classpath used to compile and execute the project's build script.</para></section><section id="org.gradle.api.Project:childProjects" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, <apilink class="org.gradle.api.Project"/>&gt;</classname> <literal>childProjects</literal> (read-only)</title><para>The direct children of this project.</para></section><section id="org.gradle.api.Project:configurations" role="detail"><title><apilink class="org.gradle.api.artifacts.ConfigurationContainer"/> <literal>configurations</literal> (read-only)</title><para>The configurations of this project.
</para><para>
Examples: See docs for <apilink class="org.gradle.api.artifacts.ConfigurationContainer"/></para></section><section id="org.gradle.api.Project:defaultTasks" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/List.html"><classname>List</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>defaultTasks</literal></title><para>The names of the default tasks of this project. These are used when no tasks names are provided when
starting the build.</para></section><section id="org.gradle.api.Project:dependencies" role="detail"><title><apilink class="org.gradle.api.artifacts.dsl.DependencyHandler"/> <literal>dependencies</literal> (read-only)</title><para>The dependency handler of this project. The returned dependency handler instance can be used for adding
new dependencies. For accessing already declared dependencies, the configurations can be used.
</para><para>
Examples: See docs for <apilink class="org.gradle.api.artifacts.dsl.DependencyHandler"/></para></section><section id="org.gradle.api.Project:dependencyLocking" role="detail"><title><apilink class="org.gradle.api.artifacts.dsl.DependencyLockingHandler"/> <literal>dependencyLocking</literal> (read-only)</title><para>Provides access to configuring dependency locking</para></section><section id="org.gradle.api.Project:description" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>description</literal></title><para>The description of this project, if any.</para></section><section id="org.gradle.api.Project:extensions" role="detail"><title><apilink class="org.gradle.api.plugins.ExtensionContainer"/> <literal>extensions</literal> (read-only)</title><para>Allows adding DSL extensions to the project. Useful for plugin authors.</para></section><section id="org.gradle.api.Project:gradle" role="detail"><title><apilink class="org.gradle.api.invocation.Gradle"/> <literal>gradle</literal> (read-only)</title><para>The <apilink class="org.gradle.api.invocation.Gradle"/> invocation which this project belongs to.</para></section><section id="org.gradle.api.Project:group" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> <literal>group</literal></title><para>The group of this project. Gradle always uses the <literal>toString()</literal> value of the group. The group
defaults to the path with dots as separators.</para></section><section id="org.gradle.api.Project:layout" role="detail"><title><apilink class="org.gradle.api.file.ProjectLayout"/> <literal>layout</literal> (read-only)</title><para>Provides access to various important directories for this project.</para></section><section id="org.gradle.api.Project:logger" role="detail"><title><apilink class="org.gradle.api.logging.Logger"/> <literal>logger</literal> (read-only)</title><para>The logger for this project. You can use this in your build file to write log messages.</para></section><section id="org.gradle.api.Project:logging" role="detail"><title><apilink class="org.gradle.api.logging.LoggingManager"/> <literal>logging</literal> (read-only)</title><para>The <apilink class="org.gradle.api.logging.LoggingManager"/> which can be used to receive logging and to control the
standard output/error capture for this project's build script. By default, System.out is redirected to the Gradle
logging system at the QUIET log level, and System.err is redirected at the ERROR log level.</para></section><section id="org.gradle.api.Project:name" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>name</literal> (read-only)</title><para>The name of this project. The project's name is not necessarily unique within a project hierarchy. You
should use the <apilink class="org.gradle.api.Project" method="getPath()"/> method for a unique identifier for the project.
If the root project is unnamed and is located on a file system root it will have a randomly-generated name
</para></section><section id="org.gradle.api.Project:normalization" role="detail"><title><apilink class="org.gradle.normalization.InputNormalizationHandler"/> <literal>normalization</literal> (read-only)</title><para>Provides access to configuring input normalization.</para></section><section id="org.gradle.api.Project:parent" role="detail"><title><apilink class="org.gradle.api.Project"/> <literal>parent</literal> (read-only)</title><para>The parent project of this project, if any.</para></section><section id="org.gradle.api.Project:path" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>path</literal> (read-only)</title><para>The path of this project.  The path is the fully qualified name of the project.</para></section><section id="org.gradle.api.Project:pluginManager" role="detail"><title><apilink class="org.gradle.api.plugins.PluginManager"/> <literal>pluginManager</literal> (read-only)</title><para>The plugin manager for this plugin aware object.</para></section><section id="org.gradle.api.Project:plugins" role="detail"><title><apilink class="org.gradle.api.plugins.PluginContainer"/> <literal>plugins</literal> (read-only)</title><para>The container of plugins that have been applied to this object.
</para><para>
While not deprecated, it is preferred to use the methods of this interface or the <apilink class="org.gradle.api.plugins.PluginAware" method="getPluginManager()"/> than use the plugin container.
</para><para>
Use one of the 'apply' methods on this interface or on the <apilink class="org.gradle.api.plugins.PluginAware" method="getPluginManager()"/> to apply plugins instead of applying via the plugin container.
</para><para>
Use <apilink class="org.gradle.api.plugins.PluginManager" method="hasPlugin(java.lang.String)"/> or similar to query for the application of plugins instead of doing so via the plugin container.</para></section><section id="org.gradle.api.Project:project" role="detail"><title><apilink class="org.gradle.api.Project"/> <literal>project</literal> (read-only)</title><para>Returns this project. This method is useful in build files to explicitly access project properties and
methods. For example, using <literal>project.name</literal> can express your intent better than using
<literal>name</literal>. This method also allows you to access project properties from a scope where the property may
be hidden, such as, for example, from a method or closure. </para></section><section id="org.gradle.api.Project:projectDir" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>projectDir</literal> (read-only)</title><para>The directory containing the project build file.</para></section><section id="org.gradle.api.Project:properties" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, ? extends <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink>&gt;</classname> <literal>properties</literal> (read-only)</title><para>The properties of this project. See <link linkend="org.gradle.api.Project.properties">here</link> for details of the properties which
are available for a project.</para></section><section id="org.gradle.api.Project:repositories" role="detail"><title><apilink class="org.gradle.api.artifacts.dsl.RepositoryHandler"/> <literal>repositories</literal> (read-only)</title><para>Returns a handler to create repositories which are used for retrieving dependencies and uploading artifacts
produced by the project.</para></section><section id="org.gradle.api.Project:resources" role="detail"><title><apilink class="org.gradle.api.resources.ResourceHandler"/> <literal>resources</literal> (read-only)</title><para>Provides access to resource-specific utility methods, for example factory methods that create various resources.</para></section><section id="org.gradle.api.Project:rootDir" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>rootDir</literal> (read-only)</title><para>The root directory of this project. The root directory is the project directory of the root
project.</para></section><section id="org.gradle.api.Project:rootProject" role="detail"><title><apilink class="org.gradle.api.Project"/> <literal>rootProject</literal> (read-only)</title><para>The root project for the hierarchy that this project belongs to.  In the case of a single-project
build, this method returns this project.</para></section><section id="org.gradle.api.Project:state" role="detail"><title><apilink class="org.gradle.api.ProjectState"/> <literal>state</literal> (read-only)</title><para>The evaluation state of this project. You can use this to access information about the evaluation of this
project, such as whether it has failed.</para></section><section id="org.gradle.api.Project:status" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> <literal>status</literal></title><para>The status of this project. Gradle always uses the <literal>toString()</literal> value of the status. The status
defaults to <literal>release</literal>.</para><para>The status of the project is only relevant, if you upload libraries together with a module descriptor. The
status specified here, will be part of this module descriptor.</para></section><section id="org.gradle.api.Project:subprojects" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<apilink class="org.gradle.api.Project"/>&gt;</classname> <literal>subprojects</literal> (read-only)</title><para>The set containing the subprojects of this project.</para></section><section id="org.gradle.api.Project:tasks" role="detail"><title><apilink class="org.gradle.api.tasks.TaskContainer"/> <literal>tasks</literal> (read-only)</title><para>The tasks of this project.</para></section><section id="org.gradle.api.Project:version" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> <literal>version</literal></title><para>The version of this project. Gradle always uses the <literal>toString()</literal> value of the version. The
version defaults to <literal>unspecified</literal>.</para></section><section id="org.gradle.api.Project:application" role="detail"><title><apilink class="org.gradle.api.plugins.JavaApplication"/> <literal>application</literal> (read-only)</title><para>The <apilink class="org.gradle.api.plugins.JavaApplication"/> added by the application plugin.</para></section><section id="org.gradle.api.Project:checkstyle" role="detail"><title><apilink class="org.gradle.api.plugins.quality.CheckstyleExtension"/> <literal>checkstyle</literal> (read-only)</title><para>The <apilink class="org.gradle.api.plugins.quality.CheckstyleExtension"/> added by the checkstyle plugin.</para></section><section id="org.gradle.api.Project:codenarc" role="detail"><title><apilink class="org.gradle.api.plugins.quality.CodeNarcExtension"/> <literal>codenarc</literal> (read-only)</title><para>The <apilink class="org.gradle.api.plugins.quality.CodeNarcExtension"/> added by the codenarc plugin.</para></section><section id="org.gradle.api.Project:distributions" role="detail"><title><apilink class="org.gradle.api.distribution.DistributionContainer"/> <literal>distributions</literal> (read-only)</title><para>The <apilink class="org.gradle.api.distribution.DistributionContainer"/> added by the distribution plugin.</para></section><section id="org.gradle.api.Project:eclipse" role="detail"><title><apilink class="org.gradle.plugins.ide.eclipse.model.EclipseModel"/> <literal>eclipse</literal> (read-only)</title><para>The <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseModel"/> added by the eclipse plugin.</para></section><section id="org.gradle.api.Project:idea" role="detail"><title><apilink class="org.gradle.plugins.ide.idea.model.IdeaModel"/> <literal>idea</literal> (read-only)</title><para>The <apilink class="org.gradle.plugins.ide.idea.model.IdeaModel"/> added by the idea plugin.</para></section><section id="org.gradle.api.Project:jacoco" role="detail"><title><apilink class="org.gradle.testing.jacoco.plugins.JacocoPluginExtension"/> <literal>jacoco</literal> (read-only)</title><para>The <apilink class="org.gradle.testing.jacoco.plugins.JacocoPluginExtension"/> added by the jacoco plugin.</para></section><section id="org.gradle.api.Project:base" role="detail"><title><apilink class="org.gradle.api.plugins.BasePluginExtension"/> <literal>base</literal> (read-only)</title><para>The <apilink class="org.gradle.api.plugins.BasePluginExtension"/> added by the java plugin.</para></section><section id="org.gradle.api.Project:java" role="detail"><title><apilink class="org.gradle.api.plugins.JavaPluginExtension"/> <literal>java</literal> (read-only)</title><para>The <apilink class="org.gradle.api.plugins.JavaPluginExtension"/> added by the java plugin.</para></section><section id="org.gradle.api.Project:reporting" role="detail"><title><apilink class="org.gradle.api.reporting.ReportingExtension"/> <literal>reporting</literal> (read-only)</title><para>The <apilink class="org.gradle.api.reporting.ReportingExtension"/> added by the java plugin.</para></section><section id="org.gradle.api.Project:pmd" role="detail"><title><apilink class="org.gradle.api.plugins.quality.PmdExtension"/> <literal>pmd</literal> (read-only)</title><para>The <apilink class="org.gradle.api.plugins.quality.PmdExtension"/> added by the pmd plugin.</para></section><section id="org.gradle.api.Project:publishing" role="detail"><title><apilink class="org.gradle.api.publish.PublishingExtension"/> <literal>publishing</literal> (read-only)</title><para>The <apilink class="org.gradle.api.publish.PublishingExtension"/> added by the publishing plugin.</para></section><section id="org.gradle.api.Project:signing" role="detail"><title><apilink class="org.gradle.plugins.signing.SigningExtension"/> <literal>signing</literal> (read-only)</title><para>The <apilink class="org.gradle.plugins.signing.SigningExtension"/> added by the signing plugin.</para></section><section id="org.gradle.api.Project:visualStudio" role="detail"><title><apilink class="org.gradle.ide.visualstudio.VisualStudioRootExtension"/> <literal>visualStudio</literal> (read-only)</title><para>The <apilink class="org.gradle.ide.visualstudio.VisualStudioRootExtension"/> added by the visual-studio plugin.</para></section><section id="org.gradle.api.Project:xcode" role="detail"><title><apilink class="org.gradle.ide.xcode.XcodeRootExtension"/> <literal>xcode</literal> (read-only)</title><para>The <apilink class="org.gradle.ide.xcode.XcodeRootExtension"/> added by the xcode plugin.</para></section></section><section><title>Method details</title><section id="org.gradle.api.Project:absoluteProjectPath(java.lang.String)" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>absoluteProjectPath</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> path)</title><para>Converts a name to an absolute project path, resolving names relative to this project.</para></section><section id="org.gradle.api.Project:afterEvaluate(groovy.lang.Closure)" role="detail"><title><classname>void</classname> <literal>afterEvaluate</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> closure)</title><para>Adds a closure to call immediately after this project is evaluated.</para></section><section id="org.gradle.api.Project:afterEvaluate(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>afterEvaluate</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.Project"/>&gt;</classname> action)</title><para>Adds an action to call immediately after this project is evaluated.</para><para>Passes the project to the
action as a parameter. Actions passed to this method execute in the same order they were passed.
A parent project may add an action to its child projects to further configure those projects based
on their state after their build files run.</para><para>If the project has already been evaluated, this method fails.</para><para>If you call this method within an <literal>afterEvaluate</literal> action, the passed action executes after all
previously added <literal>afterEvaluate</literal> actions finish executing.</para></section><section id="org.gradle.api.Project:allprojects(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>allprojects</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.Project"/>&gt;</classname> action)</title><para>Configures this project and each of its sub-projects.</para><para>This method executes the given <apilink class="org.gradle.api.Action"/> against this project and each of its sub-projects.</para></section><section id="org.gradle.api.Project:ant(org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.AntBuilder"/> <literal>ant</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.AntBuilder"/>&gt;</classname> configureAction)</title><para>Executes the given action against the <literal>AntBuilder</literal> for this project. You can use this in your
build file to execute ant tasks. See example in javadoc for <apilink class="org.gradle.api.Project" method="getAnt()"/></para></section><section id="org.gradle.api.Project:apply(groovy.lang.Closure)" role="detail"><title><classname>void</classname> <literal>apply</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> closure)</title><para>Applies zero or more plugins or scripts.
</para><para>
The given closure is used to configure an <apilink class="org.gradle.api.plugins.ObjectConfigurationAction"/>, which "builds" the plugin application.
</para><para>
This method differs from <apilink class="org.gradle.api.plugins.PluginAware" method="apply(java.util.Map)"/> in that it allows methods of the configuration action to be invoked more than once.</para></section><section id="org.gradle.api.Project:apply(java.util.Map)" role="detail"><title><classname>void</classname> <literal>apply</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, ?&gt;</classname> options)</title><para>Applies a plugin or script, using the given options provided as a map. Does nothing if the plugin has already been applied.
</para><para>
The given map is applied as a series of method calls to a newly created <apilink class="org.gradle.api.plugins.ObjectConfigurationAction"/>.
That is, each key in the map is expected to be the name of a method <apilink class="org.gradle.api.plugins.ObjectConfigurationAction"/> and the value to be compatible arguments to that method.

</para><para>The following options are available:</para><itemizedlist><listitem><literal>from</literal>: A script to apply. Accepts any path supported by <apilink class="org.gradle.api.Project" method="uri(java.lang.Object)"/>.</listitem><listitem><literal>plugin</literal>: The id or implementation class of the plugin to apply.</listitem><listitem><literal>to</literal>: The target delegate object or objects. The default is this plugin aware object. Use this to configure objects other than this object.</listitem></itemizedlist></section><section id="org.gradle.api.Project:apply(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>apply</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.plugins.ObjectConfigurationAction"/>&gt;</classname> action)</title><para>Applies zero or more plugins or scripts.
</para><para>
The given closure is used to configure an <apilink class="org.gradle.api.plugins.ObjectConfigurationAction"/>, which "builds" the plugin application.
</para><para>
This method differs from <apilink class="org.gradle.api.plugins.PluginAware" method="apply(java.util.Map)"/> in that it allows methods of the configuration action to be invoked more than once.</para></section><section id="org.gradle.api.Project:artifacts(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>artifacts</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.artifacts.dsl.ArtifactHandler"/>&gt;</classname> configureAction)</title><para>Configures the published artifacts for this project.

</para><para>This method executes the given action against the <apilink class="org.gradle.api.artifacts.dsl.ArtifactHandler"/> for this project.

</para><para>Example:
</para><programlisting language="java">
configurations {
  //declaring new configuration that will be used to associate with artifacts
  schema
}

task schemaJar(type: Jar) {
  //some imaginary task that creates a jar artifact with the schema
}

//associating the task that produces the artifact with the configuration
artifacts {
  //configuration name and the task:
  schema schemaJar
}
</programlisting></section><section id="org.gradle.api.Project:beforeEvaluate(groovy.lang.Closure)" role="detail"><title><classname>void</classname> <literal>beforeEvaluate</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> closure)</title><para>Adds a closure to call immediately before this project is evaluated.</para></section><section id="org.gradle.api.Project:beforeEvaluate(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>beforeEvaluate</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.Project"/>&gt;</classname> action)</title><para>Adds an action to call immediately before this project is evaluated.</para><para>Passes the project to the action as a parameter. Actions passed to this
method execute in the same order they were passed.</para><para>If the project has already been evaluated, the action never executes.</para><para>If you call this method within a <literal>beforeEvaluate</literal> action, the passed action never executes.</para></section><section id="org.gradle.api.Project:configure(java.lang.Iterable, groovy.lang.Closure)" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;?&gt;</classname> <literal>configure</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;?&gt;</classname> objects, <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> configureClosure)</title><para>Configures a collection of objects via a closure. This is equivalent to calling <apilink class="org.gradle.api.Project" method="configure(java.lang.Object, groovy.lang.Closure)"/> for each of the given objects.</para></section><section id="org.gradle.api.Project:configure(java.lang.Iterable, org.gradle.api.Action)" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;<classname>T</classname>&gt;</classname> <literal>configure</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;<classname>T</classname>&gt;</classname> objects, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <classname>T</classname>&gt;</classname> configureAction)</title><para>Configures a collection of objects via an action.</para></section><section id="org.gradle.api.Project:configure(java.lang.Object, groovy.lang.Closure)" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> <literal>configure</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> object, <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> configureClosure)</title><para>Configures an object via a closure, with the closure's delegate set to the supplied object. This way you don't
have to specify the context of a configuration statement multiple times. </para><para> Instead of:</para><programlisting language="java">
MyType myType = new MyType()
myType.doThis()
myType.doThat()
</programlisting><para> you can do:
</para><programlisting language="java">
MyType myType = configure(new MyType()) {
    doThis()
    doThat()
}
</programlisting><para>The object being configured is also passed to the closure as a parameter, so you can access it explicitly if
required:</para><programlisting language="java">
configure(someObj) { obj -&gt; obj.doThis() }
</programlisting></section><section id="org.gradle.api.Project:container(java.lang.Class)" role="detail"><title><classname><apilink class="org.gradle.api.NamedDomainObjectContainer"/>&lt;<classname>T</classname>&gt;</classname> <literal>container</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html"><classname>Class</classname></ulink>&lt;<classname>T</classname>&gt;</classname> type)</title><para>Creates a container for managing named objects of the specified type. The specified type must have a public constructor which takes the name as a String parameter.</para><para>All objects <emphasis>MUST</emphasis> expose their name as a bean property named "name". The name must be constant for the life of the object.</para></section><section id="org.gradle.api.Project:container(java.lang.Class, groovy.lang.Closure)" role="detail"><title><classname><apilink class="org.gradle.api.NamedDomainObjectContainer"/>&lt;<classname>T</classname>&gt;</classname> <literal>container</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html"><classname>Class</classname></ulink>&lt;<classname>T</classname>&gt;</classname> type, <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> factoryClosure)</title><para>Creates a container for managing named objects of the specified type. The given closure is used to create object instances. The name of the instance to be created is passed as a parameter to
the closure.</para><para>All objects <emphasis>MUST</emphasis> expose their name as a bean property named "name". The name must be constant for the life of the object.</para></section><section id="org.gradle.api.Project:container(java.lang.Class, org.gradle.api.NamedDomainObjectFactory)" role="detail"><title><classname><apilink class="org.gradle.api.NamedDomainObjectContainer"/>&lt;<classname>T</classname>&gt;</classname> <literal>container</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html"><classname>Class</classname></ulink>&lt;<classname>T</classname>&gt;</classname> type, <classname><apilink class="org.gradle.api.NamedDomainObjectFactory"/>&lt;<classname>T</classname>&gt;</classname> factory)</title><para>Creates a container for managing named objects of the specified type. The given factory is used to create object instances.</para><para>All objects <emphasis>MUST</emphasis> expose their name as a bean property named "name". The name must be constant for the life of the object.</para></section><section id="org.gradle.api.Project:copy(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.WorkResult"/> <literal>copy</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> closure)</title><para>Copies the specified files.  The given closure is used to configure a <apilink class="org.gradle.api.file.CopySpec"/>, which is then used to
copy the files. Example:
</para><programlisting language="java">
copy {
   from configurations.runtimeClasspath
   into 'build/deploy/lib'
}
</programlisting><para>
Note that CopySpecs can be nested:
</para><programlisting language="java">
copy {
   into 'build/webroot'
   exclude '**/.svn/**'
   from('src/main/webapp') {
      include '**/*.jsp'
      filter(ReplaceTokens, tokens:[copyright:'2009', version:'2.3.1'])
   }
   from('src/main/js') {
      include '**/*.js'
   }
}
</programlisting></section><section id="org.gradle.api.Project:copy(org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.tasks.WorkResult"/> <literal>copy</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.CopySpec"/>&gt;</classname> action)</title><para>Copies the specified files.  The given action is used to configure a <apilink class="org.gradle.api.file.CopySpec"/>, which is then used to
copy the files.</para></section><section id="org.gradle.api.Project:copySpec()" role="detail"><title><apilink class="org.gradle.api.file.CopySpec"/> <literal>copySpec</literal>()</title><para>Creates a <apilink class="org.gradle.api.file.CopySpec"/> which can later be used to copy files or create an archive.</para></section><section id="org.gradle.api.Project:copySpec(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.file.CopySpec"/> <literal>copySpec</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> closure)</title><para>Creates a <apilink class="org.gradle.api.file.CopySpec"/> which can later be used to copy files or create an archive. The given closure is used
to configure the <apilink class="org.gradle.api.file.CopySpec"/> before it is returned by this method.

</para><programlisting language="java">
def baseSpec = copySpec {
   from "source"
   include "**/*.java"
}

task copy(type: Copy) {
   into "target"
   with baseSpec
}
</programlisting></section><section id="org.gradle.api.Project:copySpec(org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.file.CopySpec"/> <literal>copySpec</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.CopySpec"/>&gt;</classname> action)</title><para>Creates a <apilink class="org.gradle.api.file.CopySpec"/> which can later be used to copy files or create an archive. The given action is used
to configure the <apilink class="org.gradle.api.file.CopySpec"/> before it is returned by this method.</para></section><section id="org.gradle.api.Project:defaultTasks(java.lang.String[])" role="detail"><title><classname>void</classname> <literal>defaultTasks</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>...</classname> defaultTasks)</title><para>Sets the names of the default tasks of this project. These are used when no tasks names are provided when
starting the build.</para></section><section id="org.gradle.api.Project:delete(java.lang.Object[])" role="detail"><title><classname>boolean</classname> <literal>delete</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink>...</classname> paths)</title><para>Deletes files and directories.
</para><para>
This will not follow symlinks. If you need to follow symlinks too use <apilink class="org.gradle.api.Project" method="delete(org.gradle.api.Action)"/>.</para></section><section id="org.gradle.api.Project:delete(org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.tasks.WorkResult"/> <literal>delete</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.DeleteSpec"/>&gt;</classname> action)</title><para>Deletes the specified files.  The given action is used to configure a <apilink class="org.gradle.api.file.DeleteSpec"/>, which is then used to
delete the files.
</para><para>Example:
</para><programlisting language="java">
project.delete {
    delete 'somefile'
    followSymlinks = true
}
</programlisting></section><section id="org.gradle.api.Project:dependencyLocking(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>dependencyLocking</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.artifacts.dsl.DependencyLockingHandler"/>&gt;</classname> configuration)</title><para>Configures dependency locking</para></section><section id="org.gradle.api.Project:evaluationDependsOn(java.lang.String)" role="detail"><title><apilink class="org.gradle.api.Project"/> <literal>evaluationDependsOn</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> path)</title><para>Declares that this project has an evaluation dependency on the project with the given path.</para></section><section id="org.gradle.api.Project:file(java.lang.Object)" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>file</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> path)</title><para>Resolves a file path relative to the project directory of this project. This method converts the supplied path
based on its type:</para><itemizedlist><listitem>A <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/CharSequence.html"><classname>CharSequence</classname></ulink>, including <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> or <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/GString.html"><classname>GString</classname></ulink>. Interpreted relative to the project directory. A string that starts with <literal>file:</literal> is treated as a file URL.</listitem><listitem>A <ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink>. If the file is an absolute file, it is returned as is. Otherwise, the file's path is
interpreted relative to the project directory.</listitem><listitem>A <ulink url="https://docs.oracle.com/javase/8/docs/api/java/nio/file/Path.html"><classname>Path</classname></ulink>. The path must be associated with the default provider and is treated the
same way as an instance of <literal>File</literal>.</listitem><listitem>A <ulink url="https://docs.oracle.com/javase/8/docs/api/java/net/URI.html"><classname>URI</classname></ulink> or <ulink url="https://docs.oracle.com/javase/8/docs/api/java/net/URL.html"><classname>URL</classname></ulink>. The URL's path is interpreted as the file path. Only <literal>file:</literal> URLs are supported.</listitem><listitem>A <apilink class="org.gradle.api.file.Directory"/> or <apilink class="org.gradle.api.file.RegularFile"/>.</listitem><listitem>A <apilink class="org.gradle.api.provider.Provider"/> of any supported type. The provider's value is resolved recursively.</listitem><listitem>A <apilink class="org.gradle.api.resources.TextResource"/>.</listitem><listitem>A Groovy <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> or Kotlin function that returns any supported type. The closure's return value is resolved recursively.</listitem><listitem>A <ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/Callable.html"><classname>Callable</classname></ulink> that returns any supported type. The callable's return value is resolved recursively.</listitem></itemizedlist></section><section id="org.gradle.api.Project:file(java.lang.Object, org.gradle.api.PathValidation)" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>file</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> path, <apilink class="org.gradle.api.PathValidation"/> validation)</title><para>Resolves a file path relative to the project directory of this project and validates it using the given
scheme. See <apilink class="org.gradle.api.PathValidation"/> for the list of possible validations.</para></section><section id="org.gradle.api.Project:fileTree(java.lang.Object)" role="detail"><title><apilink class="org.gradle.api.file.ConfigurableFileTree"/> <literal>fileTree</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> baseDir)</title><para>Creates a new <literal>ConfigurableFileTree</literal> using the given base directory. The given baseDir path is evaluated
as per <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/>.</para><para>The returned file tree is lazy, so that it scans for files only when the contents of the file tree are
queried. The file tree is also live, so that it scans for files each time the contents of the file tree are
queried.</para><programlisting language="java">
def myTree = fileTree("src")
myTree.include "**/*.java"
myTree.builtBy "someTask"

task copy(type: Copy) {
   from myTree
}
</programlisting><para>The order of the files in a <literal>FileTree</literal> is not stable, even on a single computer.</para></section><section id="org.gradle.api.Project:fileTree(java.lang.Object, groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.file.ConfigurableFileTree"/> <literal>fileTree</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> baseDir, <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> configureClosure)</title><para>Creates a new <literal>ConfigurableFileTree</literal> using the given base directory. The given baseDir path is evaluated
as per <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/>. The closure will be used to configure the new file tree.
The file tree is passed to the closure as its delegate.  Example:</para><programlisting language="java">
def myTree = fileTree('src') {
   exclude '**/.data/**'
   builtBy 'someTask'
}

task copy(type: Copy) {
   from myTree
}
</programlisting><para>The returned file tree is lazy, so that it scans for files only when the contents of the file tree are
queried. The file tree is also live, so that it scans for files each time the contents of the file tree are
queried.</para><para>The order of the files in a <literal>FileTree</literal> is not stable, even on a single computer.</para></section><section id="org.gradle.api.Project:fileTree(java.lang.Object, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.file.ConfigurableFileTree"/> <literal>fileTree</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> baseDir, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.ConfigurableFileTree"/>&gt;</classname> configureAction)</title><para>Creates a new <literal>ConfigurableFileTree</literal> using the given base directory. The given baseDir path is evaluated
as per <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/>. The action will be used to configure the new file tree. Example:</para><programlisting language="java">
def myTree = fileTree('src') {
   exclude '**/.data/**'
   builtBy 'someTask'
}

task copy(type: Copy) {
   from myTree
}
</programlisting><para>The returned file tree is lazy, so that it scans for files only when the contents of the file tree are
queried. The file tree is also live, so that it scans for files each time the contents of the file tree are
queried.</para><para>The order of the files in a <literal>FileTree</literal> is not stable, even on a single computer.</para></section><section id="org.gradle.api.Project:fileTree(java.util.Map)" role="detail"><title><apilink class="org.gradle.api.file.ConfigurableFileTree"/> <literal>fileTree</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, ?&gt;</classname> args)</title><para>Creates a new <literal>ConfigurableFileTree</literal> using the provided map of arguments.  The map will be applied as
properties on the new file tree.  Example:</para><programlisting language="java">
def myTree = fileTree(dir:'src', excludes:['**/ignore/**', '**/.data/**'])

task copy(type: Copy) {
    from myTree
}
</programlisting><para>The returned file tree is lazy, so that it scans for files only when the contents of the file tree are
queried. The file tree is also live, so that it scans for files each time the contents of the file tree are
queried.</para><para>The order of the files in a <literal>FileTree</literal> is not stable, even on a single computer.</para></section><section id="org.gradle.api.Project:files(java.lang.Object, groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.file.ConfigurableFileCollection"/> <literal>files</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> paths, <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> configureClosure)</title><para>Creates a new <literal>ConfigurableFileCollection</literal> using the given paths. The paths are evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/>. The file collection is configured using the given closure. The file collection is passed to
the closure as its delegate. Example:</para><programlisting language="java">
files "$buildDir/classes" {
    builtBy 'compile'
}
</programlisting><para>The returned file collection is lazy, so that the paths are evaluated only when the contents of the file
collection are queried. The file collection is also live, so that it evaluates the above each time the contents
of the collection is queried.</para></section><section id="org.gradle.api.Project:files(java.lang.Object, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.file.ConfigurableFileCollection"/> <literal>files</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> paths, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.ConfigurableFileCollection"/>&gt;</classname> configureAction)</title><para>Creates a new <literal>ConfigurableFileCollection</literal> using the given paths. The paths are evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/>. The file collection is configured using the given action. Example:</para><programlisting language="java">
files "$buildDir/classes" {
    builtBy 'compile'
}
</programlisting><para>The returned file collection is lazy, so that the paths are evaluated only when the contents of the file
collection are queried. The file collection is also live, so that it evaluates the above each time the contents
of the collection is queried.</para></section><section id="org.gradle.api.Project:files(java.lang.Object[])" role="detail"><title><apilink class="org.gradle.api.file.ConfigurableFileCollection"/> <literal>files</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink>...</classname> paths)</title><para>Returns a <apilink class="org.gradle.api.file.ConfigurableFileCollection"/> containing the given files. You can pass any of the following
types to this method:</para><itemizedlist><listitem>A <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/CharSequence.html"><classname>CharSequence</classname></ulink>, including <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> or <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/GString.html"><classname>GString</classname></ulink>. Interpreted relative to the project directory, as per <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/>. A string that starts with <literal>file:</literal> is treated as a file URL.</listitem><listitem>A <ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink>. Interpreted relative to the project directory, as per <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/>.</listitem><listitem>A <ulink url="https://docs.oracle.com/javase/8/docs/api/java/nio/file/Path.html"><classname>Path</classname></ulink>, as per <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/>.</listitem><listitem>A <ulink url="https://docs.oracle.com/javase/8/docs/api/java/net/URI.html"><classname>URI</classname></ulink> or <ulink url="https://docs.oracle.com/javase/8/docs/api/java/net/URL.html"><classname>URL</classname></ulink>. The URL's path is interpreted as a file path. Only <literal>file:</literal> URLs are supported.</listitem><listitem>A <apilink class="org.gradle.api.file.Directory"/> or <apilink class="org.gradle.api.file.RegularFile"/>.</listitem><listitem>A <ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Collection.html"><classname>Collection</classname></ulink>, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>, or an array that contains objects of any supported type. The elements of the collection are recursively converted to files.</listitem><listitem>A <apilink class="org.gradle.api.file.FileCollection"/>. The contents of the collection are included in the returned collection.</listitem><listitem>A <apilink class="org.gradle.api.file.FileTree"/> or <apilink class="org.gradle.api.file.DirectoryTree"/>. The contents of the tree are included in the returned collection.</listitem><listitem>A <apilink class="org.gradle.api.provider.Provider"/> of any supported type. The provider's value is recursively converted to files. If the provider represents an output of a task, that task is executed if the file collection is used as an input to another task.

</listitem><listitem>A <ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/Callable.html"><classname>Callable</classname></ulink> that returns any supported type. The return value of the <literal>call()</literal> method is recursively converted to files. A <literal>null</literal> return value is treated as an empty collection.</listitem><listitem>A Groovy <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> or Kotlin function that returns any of the types listed here. The return value of the closure is recursively converted to files. A <literal>null</literal> return value is treated as an empty collection.</listitem><listitem>A <apilink class="org.gradle.api.Task"/>. Converted to the task's output files. The task is executed if the file collection is used as an input to another task.</listitem><listitem>A <apilink class="org.gradle.api.tasks.TaskOutputs"/>. Converted to the output files the related task. The task is executed if the file collection is used as an input to another task.</listitem><listitem>Anything else is treated as an error.</listitem></itemizedlist><para>The returned file collection is lazy, so that the paths are evaluated only when the contents of the file
collection are queried. The file collection is also live, so that it evaluates the above each time the contents
of the collection is queried.</para><para>The returned file collection maintains the iteration order of the supplied paths.</para><para>The returned file collection maintains the details of the tasks that produce the files, so that these tasks are executed if this file collection is used as an input to some task.</para><para>This method can also be used to create an empty collection, which can later be mutated to add elements.</para></section><section id="org.gradle.api.Project:findProject(java.lang.String)" role="detail"><title><apilink class="org.gradle.api.Project"/> <literal>findProject</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> path)</title><para>Locates a project by path. If the path is relative, it is interpreted relative to this project.</para></section><section id="org.gradle.api.Project:findProperty(java.lang.String)" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> <literal>findProperty</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> propertyName)</title><para>Returns the value of the given property or null if not found.
This method locates a property as follows:</para><orderedlist><listitem>If this project object has a property with the given name, return the value of the property.</listitem><listitem>If this project has an extension with the given name, return the extension.</listitem><listitem>If this project's convention object has a property with the given name, return the value of the
property.</listitem><listitem>If this project has an extra property with the given name, return the value of the property.</listitem><listitem>If this project has a task with the given name, return the task.</listitem><listitem>Search up through this project's ancestor projects for a convention property or extra property with the
given name.</listitem><listitem>If not found, null value is returned.</listitem></orderedlist></section><section id="org.gradle.api.Project:getAllTasks(boolean)" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>&lt;<apilink class="org.gradle.api.Project"/>, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<apilink class="org.gradle.api.Task"/>&gt;&gt;</classname> <literal>getAllTasks</literal>(<classname>boolean</classname> recursive)</title><para>Returns a map of the tasks contained in this project, and optionally its subprojects.</para></section><section id="org.gradle.api.Project:getTasksByName(java.lang.String, boolean)" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<apilink class="org.gradle.api.Task"/>&gt;</classname> <literal>getTasksByName</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <classname>boolean</classname> recursive)</title><para>Returns the set of tasks with the given name contained in this project, and optionally its subprojects.

<emphasis>NOTE:</emphasis> This is an expensive operation since it requires all projects to be configured.
</para></section><section id="org.gradle.api.Project:hasProperty(java.lang.String)" role="detail"><title><classname>boolean</classname> <literal>hasProperty</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> propertyName)</title><para>Determines if this project has the given property. See <link linkend="org.gradle.api.Project.properties">here</link> for details of the
properties which are available for a project.</para></section><section id="org.gradle.api.Project:mkdir(java.lang.Object)" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>mkdir</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> path)</title><para>Creates a directory and returns a file pointing to it.</para></section><section id="org.gradle.api.Project:normalization(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>normalization</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.normalization.InputNormalizationHandler"/>&gt;</classname> configuration)</title><para>Configures input normalization.</para></section><section id="org.gradle.api.Project:project(java.lang.String)" role="detail"><title><apilink class="org.gradle.api.Project"/> <literal>project</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> path)</title><para>Locates a project by path. If the path is relative, it is interpreted relative to this project.</para></section><section id="org.gradle.api.Project:project(java.lang.String, groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.Project"/> <literal>project</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> path, <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> configureClosure)</title><para>Locates a project by path and configures it using the given closure. If the path is relative, it is
interpreted relative to this project. The target project is passed to the closure as the closure's delegate.</para></section><section id="org.gradle.api.Project:project(java.lang.String, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.Project"/> <literal>project</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> path, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.Project"/>&gt;</classname> configureAction)</title><para>Locates a project by path and configures it using the given action. If the path is relative, it is
interpreted relative to this project.</para></section><section id="org.gradle.api.Project:property(java.lang.String)" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> <literal>property</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> propertyName)</title><para>Returns the value of the given property.  This method locates a property as follows:</para><orderedlist><listitem>If this project object has a property with the given name, return the value of the property.</listitem><listitem>If this project has an extension with the given name, return the extension.</listitem><listitem>If this project's convention object has a property with the given name, return the value of the
property.</listitem><listitem>If this project has an extra property with the given name, return the value of the property.</listitem><listitem>If this project has a task with the given name, return the task.</listitem><listitem>Search up through this project's ancestor projects for a convention property or extra property with the
given name.</listitem><listitem>If not found, a <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/MissingPropertyException.html"><classname>MissingPropertyException</classname></ulink> is thrown.</listitem></orderedlist></section><section id="org.gradle.api.Project:relativePath(java.lang.Object)" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>relativePath</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> path)</title><para>Returns the relative path from the project directory to the given path. The given path object is (logically)
resolved as described for <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/>, from which a relative path is calculated.</para></section><section id="org.gradle.api.Project:relativeProjectPath(java.lang.String)" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>relativeProjectPath</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> path)</title><para>Converts a name to a project path relative to this project.</para></section><section id="org.gradle.api.Project:setProperty(java.lang.String, java.lang.Object)" role="detail"><title><classname>void</classname> <literal>setProperty</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> value)</title><para>Sets a property of this project.  This method searches for a property with the given name in the following
locations, and sets the property on the first location where it finds the property.</para><orderedlist><listitem>The project object itself.  For example, the <literal>rootDir</literal> project property.</listitem><listitem>The project's extra properties.</listitem></orderedlist><para>

If the property is not found, a <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/MissingPropertyException.html"><classname>MissingPropertyException</classname></ulink> is thrown.</para></section><section id="org.gradle.api.Project:subprojects(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>subprojects</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.Project"/>&gt;</classname> action)</title><para>Configures the sub-projects of this project</para><para>This method executes the given <apilink class="org.gradle.api.Action"/> against the sub-projects of this project.</para></section><section id="org.gradle.api.Project:sync(org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.tasks.WorkResult"/> <literal>sync</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.SyncSpec"/>&gt;</classname> action)</title><para>Synchronizes the contents of a destination directory with some source directories and files.
The given action is used to configure a <apilink class="org.gradle.api.file.SyncSpec"/>, which is then used to synchronize the files.

</para><para>
This method is like the <apilink class="org.gradle.api.Project" method="copy(org.gradle.api.Action)"/> task, except the destination directory will only contain the files copied.
All files that exist in the destination directory will be deleted before copying files, unless a preserve option is specified.

</para><para>
Example:

</para><programlisting language="java">
project.sync {
   from 'my/shared/dependencyDir'
   into 'build/deps/compile'
}
</programlisting><para>
Note that you can preserve output that already exists in the destination directory:
</para><programlisting language="java">
project.sync {
    from 'source'
    into 'dest'
    preserve {
        include 'extraDir/**'
        include 'dir1/**'
        exclude 'dir1/extra.txt'
    }
}
</programlisting></section><section id="org.gradle.api.Project:tarTree(java.lang.Object)" role="detail"><title><apilink class="org.gradle.api.file.FileTree"/> <literal>tarTree</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> tarPath)</title><para>Creates a new <literal>FileTree</literal> which contains the contents of the given TAR file. The given tarPath path can be:
</para><itemizedlist><listitem>an instance of <apilink class="org.gradle.api.resources.Resource"/></listitem><listitem>any other object is evaluated as per <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/></listitem></itemizedlist><para>

The returned file tree is lazy, so that it scans for files only when the contents of the file tree are
queried. The file tree is also live, so that it scans for files each time the contents of the file tree are
queried.
</para><para>
Unless custom implementation of resources is passed, the tar tree attempts to guess the compression based on the file extension.
</para><para>
You can combine this method with the <apilink class="org.gradle.api.Project" method="copy(org.gradle.api.Action)"/>
method to untar a TAR file:

</para><programlisting language="java">
task untar(type: Copy) {
  from tarTree('someCompressedTar.gzip')

  //tar tree attempts to guess the compression based on the file extension
  //however if you must specify the compression explicitly you can:
  from tarTree(resources.gzip('someTar.ext'))

  //in case you work with unconventionally compressed tars
  //you can provide your own implementation of a ReadableResource:
  //from tarTree(yourOwnResource as ReadableResource)

  into 'dest'
}
</programlisting></section><section id="org.gradle.api.Project:task(java.lang.String)" role="detail"><title><apilink class="org.gradle.api.Task"/> <literal>task</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name)</title><caution><para>Note: This method is <ulink url="../userguide/feature_lifecycle.html">deprecated</ulink> and will be removed in the next major version of Gradle.</para></caution><para>Creates a <apilink class="org.gradle.api.Task"/> with the given name and adds it to this project. Calling this method is equivalent to
calling <apilink class="org.gradle.api.Project" method="task(java.util.Map, java.lang.String)"/> with an empty options map.</para><para>After the task is added to the project, it is made available as a property of the project, so that you can
reference the task by name in your build file. See <link linkend="org.gradle.api.Project.properties">properties</link> for more details</para><para>If a task with the given name already exists in this project, an exception is thrown.</para></section><section id="org.gradle.api.Project:task(java.lang.String, groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.Task"/> <literal>task</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> configureClosure)</title><caution><para>Note: This method is <ulink url="../userguide/feature_lifecycle.html">deprecated</ulink> and will be removed in the next major version of Gradle.</para></caution><para>Creates a <apilink class="org.gradle.api.Task"/> with the given name and adds it to this project. Before the task is returned, the given
closure is executed to configure the task.</para><para>After the task is added to the project, it is made
available as a property of the project, so that you can reference the task by name in your build file.  See <link linkend="org.gradle.api.Project.properties">here</link> for more details</para></section><section id="org.gradle.api.Project:task(java.lang.String, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.Task"/> <literal>task</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.Task"/>&gt;</classname> configureAction)</title><caution><para>Note: This method is <ulink url="../userguide/feature_lifecycle.html">deprecated</ulink> and will be removed in the next major version of Gradle.</para></caution><para>Creates a <apilink class="org.gradle.api.Task"/> with the given name and adds it to this project. Before the task is returned, the given
action is executed to configure the task.</para><para>After the task is added to the project, it is made
available as a property of the project, so that you can reference the task by name in your build file.  See <link linkend="org.gradle.api.Project.properties">here</link> for more details</para></section><section id="org.gradle.api.Project:task(java.util.Map, java.lang.String)" role="detail"><title><apilink class="org.gradle.api.Task"/> <literal>task</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, ?&gt;</classname> args, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name)</title><caution><para>Note: This method is <ulink url="../userguide/feature_lifecycle.html">deprecated</ulink> and will be removed in the next major version of Gradle.</para></caution><para>Creates a <apilink class="org.gradle.api.Task"/> with the given name and adds it to this project. A map of creation options can be
passed to this method to control how the task is created. The following options are available:</para><table><para><UNHANDLED-ELEMENT>&lt;caption&gt;Permitted map keys&lt;/caption&gt;</UNHANDLED-ELEMENT>

</para><thead><tr><td>Option</td><td>Description</td><td>Default Value</td></tr></thead><tr><td><literal><literal>type</literal></literal></td><td>The class of the task to
create.</td><td><apilink class="org.gradle.api.DefaultTask"/></td></tr><tr><td><literal><literal>overwrite</literal></literal></td><td>Replace an existing
task?</td><td><literal>false</literal></td></tr><tr><td><literal><literal>dependsOn</literal></literal></td><td>A task name or set of task names which
this task depends on</td><td><literal>[]</literal></td></tr><tr><td><literal><literal>action</literal></literal></td><td>A closure or <apilink class="org.gradle.api.Action"/> to add to the
task.</td><td><literal>null</literal></td></tr><tr><td><literal><literal>description</literal></literal></td><td>A description of the task.
</td><td><literal>null</literal></td></tr><tr><td><literal><literal>group</literal></literal></td><td>A task group which this task belongs to.
</td><td><literal>null</literal></td></tr></table><para>After the task is added to the project, it is made available as a property of the project, so that you can
reference the task by name in your build file.  See <link linkend="org.gradle.api.Project.properties">here</link> for more details</para><para>If a task with the given name already exists in this project and the <literal>override</literal> option is not set
to true, an exception is thrown.</para></section><section id="org.gradle.api.Project:task(java.util.Map, java.lang.String, groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.Task"/> <literal>task</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, ?&gt;</classname> args, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> configureClosure)</title><caution><para>Note: This method is <ulink url="../userguide/feature_lifecycle.html">deprecated</ulink> and will be removed in the next major version of Gradle.</para></caution><para>Creates a <apilink class="org.gradle.api.Task"/> with the given name and adds it to this project. Before the task is returned, the given
closure is executed to configure the task. A map of creation options can be passed to this method to control how
the task is created. See <apilink class="org.gradle.api.Project" method="task(java.util.Map, java.lang.String)"/> for the available options.</para><para>After the task is added to the project, it is made available as a property of the project, so that you can
reference the task by name in your build file.  See <link linkend="org.gradle.api.Project.properties">here</link> for more details</para><para>If a task with the given name already exists in this project and the <literal>override</literal> option is not set
to true, an exception is thrown.</para></section><section id="org.gradle.api.Project:uri(java.lang.Object)" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/net/URI.html"><classname>URI</classname></ulink> <literal>uri</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> path)</title><para>Resolves a file path to a URI, relative to the project directory of this project. Evaluates the provided path
object as described for <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/>, with the exception that any URI scheme is supported, not just
'file:' URIs.</para></section><section id="org.gradle.api.Project:zipTree(java.lang.Object)" role="detail"><title><apilink class="org.gradle.api.file.FileTree"/> <literal>zipTree</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> zipPath)</title><para>Creates a new <literal>FileTree</literal> which contains the contents of the given ZIP file. The given zipPath path is
evaluated as per <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/>. You can combine this method with the <apilink class="org.gradle.api.Project" method="copy(org.gradle.api.Action)"/>
method to unzip a ZIP file.</para><para>The returned file tree is lazy, so that it scans for files only when the contents of the file tree are
queried. The file tree is also live, so that it scans for files each time the contents of the file tree are
queried.</para></section></section><section><title>Script block details</title><section id="org.gradle.api.Project:allprojects(groovy.lang.Closure)" role="detail"><title><literal>allprojects</literal> { }</title><para>Configures this project and each of its sub-projects.</para><para>This method executes the given closure against this project and its sub-projects. The target <apilink class="org.gradle.api.Project"/>
is passed to the closure as the closure's delegate.</para><segmentedlist><segtitle>Delegates to</segtitle><seglistitem><seg>Each <apilink class="org.gradle.api.Project"/> in <link linkend="org.gradle.api.Project:allprojects"><literal>allprojects</literal></link></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.Project:ant(groovy.lang.Closure)" role="detail"><title><literal>ant</literal> { }</title><para>Executes the given closure against the <literal>AntBuilder</literal> for this project. You can use this in your
build file to execute ant tasks. The <literal>AntBuild</literal> is passed to the closure as the closure's
delegate. See example in javadoc for <apilink class="org.gradle.api.Project" method="getAnt()"/></para><segmentedlist><segtitle>Delegates to</segtitle><seglistitem><seg><apilink class="org.gradle.api.AntBuilder"/> from <link linkend="org.gradle.api.Project:ant"><literal>ant</literal></link></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.Project:artifacts(groovy.lang.Closure)" role="detail"><title><literal>artifacts</literal> { }</title><para>Configures the published artifacts for this project.

</para><para>This method executes the given closure against the <apilink class="org.gradle.api.artifacts.dsl.ArtifactHandler"/> for this project. The <apilink class="org.gradle.api.artifacts.dsl.ArtifactHandler"/> is passed to the closure as the closure's delegate.

</para><para>Example:
</para><programlisting language="java">
configurations {
  //declaring new configuration that will be used to associate with artifacts
  schema
}

task schemaJar(type: Jar) {
  //some imaginary task that creates a jar artifact with the schema
}

//associating the task that produces the artifact with the configuration
artifacts {
  //configuration name and the task:
  schema schemaJar
}
</programlisting><segmentedlist><segtitle>Delegates to</segtitle><seglistitem><seg><apilink class="org.gradle.api.artifacts.dsl.ArtifactHandler"/> from <link linkend="org.gradle.api.Project:artifacts"><literal>artifacts</literal></link></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.Project:buildscript(groovy.lang.Closure)" role="detail"><title><literal>buildscript</literal> { }</title><para>Configures the build script classpath for this project.

</para><para>The given closure is executed against this project's <apilink class="org.gradle.api.initialization.dsl.ScriptHandler"/>. The <apilink class="org.gradle.api.initialization.dsl.ScriptHandler"/> is
passed to the closure as the closure's delegate.</para><segmentedlist><segtitle>Delegates to</segtitle><seglistitem><seg><apilink class="org.gradle.api.initialization.dsl.ScriptHandler"/> from <link linkend="org.gradle.api.Project:buildscript"><literal>buildscript</literal></link></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.Project:configurations(groovy.lang.Closure)" role="detail"><title><literal>configurations</literal> { }</title><para>Configures the dependency configurations for this project.

</para><para>This method executes the given closure against the <apilink class="org.gradle.api.artifacts.ConfigurationContainer"/>
for this project. The <apilink class="org.gradle.api.artifacts.ConfigurationContainer"/> is passed to the closure as the closure's delegate.
</para><para>
Examples: See docs for <apilink class="org.gradle.api.artifacts.ConfigurationContainer"/></para><segmentedlist><segtitle>Delegates to</segtitle><seglistitem><seg><apilink class="org.gradle.api.artifacts.ConfigurationContainer"/> from <link linkend="org.gradle.api.Project:configurations"><literal>configurations</literal></link></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.Project:dependencies(groovy.lang.Closure)" role="detail"><title><literal>dependencies</literal> { }</title><para>Configures the dependencies for this project.

</para><para>This method executes the given closure against the <apilink class="org.gradle.api.artifacts.dsl.DependencyHandler"/> for this project. The <apilink class="org.gradle.api.artifacts.dsl.DependencyHandler"/> is passed to the closure as the closure's delegate.
</para><para>
Examples: See docs for <apilink class="org.gradle.api.artifacts.dsl.DependencyHandler"/></para><segmentedlist><segtitle>Delegates to</segtitle><seglistitem><seg><apilink class="org.gradle.api.artifacts.dsl.DependencyHandler"/> from <link linkend="org.gradle.api.Project:dependencies"><literal>dependencies</literal></link></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.Project:repositories(groovy.lang.Closure)" role="detail"><title><literal>repositories</literal> { }</title><para>Configures the repositories for this project.

</para><para>This method executes the given closure against the <apilink class="org.gradle.api.artifacts.dsl.RepositoryHandler"/> for this project. The <apilink class="org.gradle.api.artifacts.dsl.RepositoryHandler"/> is passed to the closure as the closure's delegate.</para><segmentedlist><segtitle>Delegates to</segtitle><seglistitem><seg><apilink class="org.gradle.api.artifacts.dsl.RepositoryHandler"/> from <link linkend="org.gradle.api.Project:repositories"><literal>repositories</literal></link></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.Project:subprojects(groovy.lang.Closure)" role="detail"><title><literal>subprojects</literal> { }</title><para>Configures the sub-projects of this project.</para><para>This method executes the given closure against each of the sub-projects of this project. The target <apilink class="org.gradle.api.Project"/> is passed to the closure as the closure's delegate.</para><segmentedlist><segtitle>Delegates to</segtitle><seglistitem><seg>Each <apilink class="org.gradle.api.Project"/> in <link linkend="org.gradle.api.Project:subprojects"><literal>subprojects</literal></link></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.Project:application(groovy.lang.Closure)" role="detail"><title><literal>application</literal> { }</title><para>Configures the <apilink class="org.gradle.api.plugins.JavaApplication"/> added by the application plugin.</para><segmentedlist><segtitle>Delegates to</segtitle><seglistitem><seg><apilink class="org.gradle.api.plugins.JavaApplication"/> from <link linkend="org.gradle.api.Project:application"><literal>application</literal></link></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.Project:checkstyle(groovy.lang.Closure)" role="detail"><title><literal>checkstyle</literal> { }</title><para>Configures the <apilink class="org.gradle.api.plugins.quality.CheckstyleExtension"/> added by the checkstyle plugin.</para><segmentedlist><segtitle>Delegates to</segtitle><seglistitem><seg><apilink class="org.gradle.api.plugins.quality.CheckstyleExtension"/> from <link linkend="org.gradle.api.Project:checkstyle"><literal>checkstyle</literal></link></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.Project:codenarc(groovy.lang.Closure)" role="detail"><title><literal>codenarc</literal> { }</title><para>Configures the <apilink class="org.gradle.api.plugins.quality.CodeNarcExtension"/> added by the codenarc plugin.</para><segmentedlist><segtitle>Delegates to</segtitle><seglistitem><seg><apilink class="org.gradle.api.plugins.quality.CodeNarcExtension"/> from <link linkend="org.gradle.api.Project:codenarc"><literal>codenarc</literal></link></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.Project:distributions(groovy.lang.Closure)" role="detail"><title><literal>distributions</literal> { }</title><para>Configures the <apilink class="org.gradle.api.distribution.DistributionContainer"/> added by the distribution plugin.</para><segmentedlist><segtitle>Delegates to</segtitle><seglistitem><seg><apilink class="org.gradle.api.distribution.DistributionContainer"/> from <link linkend="org.gradle.api.Project:distributions"><literal>distributions</literal></link></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.Project:eclipse(groovy.lang.Closure)" role="detail"><title><literal>eclipse</literal> { }</title><para>Configures the <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseModel"/> added by the eclipse plugin.</para><segmentedlist><segtitle>Delegates to</segtitle><seglistitem><seg><apilink class="org.gradle.plugins.ide.eclipse.model.EclipseModel"/> from <link linkend="org.gradle.api.Project:eclipse"><literal>eclipse</literal></link></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.Project:idea(groovy.lang.Closure)" role="detail"><title><literal>idea</literal> { }</title><para>Configures the <apilink class="org.gradle.plugins.ide.idea.model.IdeaModel"/> added by the idea plugin.</para><segmentedlist><segtitle>Delegates to</segtitle><seglistitem><seg><apilink class="org.gradle.plugins.ide.idea.model.IdeaModel"/> from <link linkend="org.gradle.api.Project:idea"><literal>idea</literal></link></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.Project:jacoco(groovy.lang.Closure)" role="detail"><title><literal>jacoco</literal> { }</title><para>Configures the <apilink class="org.gradle.testing.jacoco.plugins.JacocoPluginExtension"/> added by the jacoco plugin.</para><segmentedlist><segtitle>Delegates to</segtitle><seglistitem><seg><apilink class="org.gradle.testing.jacoco.plugins.JacocoPluginExtension"/> from <link linkend="org.gradle.api.Project:jacoco"><literal>jacoco</literal></link></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.Project:base(groovy.lang.Closure)" role="detail"><title><literal>base</literal> { }</title><para>Configures the <apilink class="org.gradle.api.plugins.BasePluginExtension"/> added by the java plugin.</para><segmentedlist><segtitle>Delegates to</segtitle><seglistitem><seg><apilink class="org.gradle.api.plugins.BasePluginExtension"/> from <link linkend="org.gradle.api.Project:base"><literal>base</literal></link></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.Project:java(groovy.lang.Closure)" role="detail"><title><literal>java</literal> { }</title><para>Configures the <apilink class="org.gradle.api.plugins.JavaPluginExtension"/> added by the java plugin.</para><segmentedlist><segtitle>Delegates to</segtitle><seglistitem><seg><apilink class="org.gradle.api.plugins.JavaPluginExtension"/> from <link linkend="org.gradle.api.Project:java"><literal>java</literal></link></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.Project:reporting(groovy.lang.Closure)" role="detail"><title><literal>reporting</literal> { }</title><para>Configures the <apilink class="org.gradle.api.reporting.ReportingExtension"/> added by the java plugin.</para><segmentedlist><segtitle>Delegates to</segtitle><seglistitem><seg><apilink class="org.gradle.api.reporting.ReportingExtension"/> from <link linkend="org.gradle.api.Project:reporting"><literal>reporting</literal></link></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.Project:pmd(groovy.lang.Closure)" role="detail"><title><literal>pmd</literal> { }</title><para>Configures the <apilink class="org.gradle.api.plugins.quality.PmdExtension"/> added by the pmd plugin.</para><segmentedlist><segtitle>Delegates to</segtitle><seglistitem><seg><apilink class="org.gradle.api.plugins.quality.PmdExtension"/> from <link linkend="org.gradle.api.Project:pmd"><literal>pmd</literal></link></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.Project:publishing(groovy.lang.Closure)" role="detail"><title><literal>publishing</literal> { }</title><para>Configures the <apilink class="org.gradle.api.publish.PublishingExtension"/> added by the publishing plugin.</para><segmentedlist><segtitle>Delegates to</segtitle><seglistitem><seg><apilink class="org.gradle.api.publish.PublishingExtension"/> from <link linkend="org.gradle.api.Project:publishing"><literal>publishing</literal></link></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.Project:signing(groovy.lang.Closure)" role="detail"><title><literal>signing</literal> { }</title><para>Configures the <apilink class="org.gradle.plugins.signing.SigningExtension"/> added by the signing plugin.</para><segmentedlist><segtitle>Delegates to</segtitle><seglistitem><seg><apilink class="org.gradle.plugins.signing.SigningExtension"/> from <link linkend="org.gradle.api.Project:signing"><literal>signing</literal></link></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.Project:visualStudio(groovy.lang.Closure)" role="detail"><title><literal>visualStudio</literal> { }</title><para>Configures the <apilink class="org.gradle.ide.visualstudio.VisualStudioRootExtension"/> added by the visual-studio plugin.</para><segmentedlist><segtitle>Delegates to</segtitle><seglistitem><seg><apilink class="org.gradle.ide.visualstudio.VisualStudioRootExtension"/> from <link linkend="org.gradle.api.Project:visualStudio"><literal>visualStudio</literal></link></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.Project:xcode(groovy.lang.Closure)" role="detail"><title><literal>xcode</literal> { }</title><para>Configures the <apilink class="org.gradle.ide.xcode.XcodeRootExtension"/> added by the xcode plugin.</para><segmentedlist><segtitle>Delegates to</segtitle><seglistitem><seg><apilink class="org.gradle.ide.xcode.XcodeRootExtension"/> from <link linkend="org.gradle.api.Project:xcode"><literal>xcode</literal></link></seg></seglistitem></segmentedlist></section></section></chapter><chapter id="org.gradle.api.artifacts.dsl.ArtifactHandler"><title>ArtifactHandler</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.artifacts.dsl.ArtifactHandler" style="javadoc"/></seg></seglistitem></segmentedlist><para>This class is for defining artifacts to be published and adding them to configurations. Creating publish artifacts
does not mean to create an archive. What is created is a domain object which represents a file to be published
and information on how it should be published (e.g. the name).

</para><para>To create an publish artifact and assign it to a configuration you can use the following syntax:</para><para><literal>&lt;configurationName&gt; &lt;artifact-notation&gt;, &lt;artifact-notation&gt; ...</literal>

or

<literal>&lt;configurationName&gt; &lt;artifact-notation&gt; { ... some code to configure the artifact }</literal>

</para><para>The notation can be one of the following types:</para><itemizedlist><listitem><apilink class="org.gradle.api.artifacts.PublishArtifact"/>.</listitem><listitem><apilink class="org.gradle.api.tasks.bundling.AbstractArchiveTask"/>. The information for publishing the artifact is extracted from the archive task (e.g. name, extension, ...). The task will be executed if the artifact is required.</listitem><listitem>A <apilink class="org.gradle.api.file.RegularFile"/> or <apilink class="org.gradle.api.file.Directory"/>.</listitem><listitem>A <apilink class="org.gradle.api.provider.Provider"/> of <ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink>, <apilink class="org.gradle.api.file.RegularFile"/>, <apilink class="org.gradle.api.file.Directory"/> or <apilink class="org.gradle.api.Task"/>, with the limitation that the latter has to define a single file output property. The information for publishing the artifact is extracted from the file or directory name. When the provider represents an output of a particular task, that task will be executed if the artifact is required.</listitem><listitem><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink>. The information for publishing the artifact is extracted from the file name.</listitem><listitem><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>. The map should contain a 'file' key. This is converted to an artifact as described above. You can also specify other properties of the artifact using entries in the map.
</listitem></itemizedlist><para>In each case, a <apilink class="org.gradle.api.artifacts.ConfigurablePublishArtifact"/> instance is created for the artifact, to allow artifact properties to be configured. You can also override the default values for artifact properties by using a closure to configure the properties of the artifact instance</para><section><title>Examples</title><para>An example showing how to associate an archive task with a configuration via the artifact handler.
This way the archive can be published or referred in other projects via the configuration.
</para><programlisting language="java">
configurations {
  //declaring new configuration that will be used to associate with artifacts
  schema
}

task schemaJar(type: Jar) {
  //some imaginary task that creates a jar artifact with some schema
}

//associating the task that produces the artifact with the configuration
artifacts {
  //configuration name and the task:
  schema schemaJar
}
</programlisting></section><section><title>Properties</title><para>No properties</para></section><section><title>Methods</title><table><title>Methods - ArtifactHandler</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.artifacts.dsl.ArtifactHandler:add(java.lang.String, java.lang.Object)">add</link>(configurationName, artifactNotation)</literal></td><td><para>Adds an artifact to the given configuration.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.dsl.ArtifactHandler:add(java.lang.String, java.lang.Object, groovy.lang.Closure)">add</link>(configurationName, artifactNotation, configureClosure)</literal></td><td><para>Adds an artifact to the given configuration.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.dsl.ArtifactHandler:add(java.lang.String, java.lang.Object, org.gradle.api.Action)">add</link>(configurationName, artifactNotation, configureAction)</literal></td><td><para>Adds an artifact to the given configuration.</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Method details</title><section id="org.gradle.api.artifacts.dsl.ArtifactHandler:add(java.lang.String, java.lang.Object)" role="detail"><title><apilink class="org.gradle.api.artifacts.PublishArtifact"/> <literal>add</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> configurationName, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> artifactNotation)</title><para>Adds an artifact to the given configuration.</para></section><section id="org.gradle.api.artifacts.dsl.ArtifactHandler:add(java.lang.String, java.lang.Object, groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.artifacts.PublishArtifact"/> <literal>add</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> configurationName, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> artifactNotation, <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> configureClosure)</title><para>Adds an artifact to the given configuration.</para></section><section id="org.gradle.api.artifacts.dsl.ArtifactHandler:add(java.lang.String, java.lang.Object, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.artifacts.PublishArtifact"/> <literal>add</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> configurationName, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> artifactNotation, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.artifacts.ConfigurablePublishArtifact"/>&gt;</classname> configureAction)</title><para>Adds an artifact to the given configuration.</para></section></section></chapter><chapter id="org.gradle.api.artifacts.ConfigurationContainer"><title>ConfigurationContainer</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.artifacts.ConfigurationContainer" style="javadoc"/></seg></seglistitem></segmentedlist><para>A <literal>ConfigurationContainer</literal> is responsible for declaring and managing configurations. See also <apilink class="org.gradle.api.artifacts.Configuration"/>.</para><para>You can obtain a <literal>ConfigurationContainer</literal> instance by calling <apilink class="org.gradle.api.Project" method="getConfigurations()"/>,
or using the <literal>configurations</literal> property in your build script.</para><para>The configurations in a container are accessible as read-only properties of the container, using the name of the
configuration as the property name. For example:</para><programlisting language="java">
configurations.create('myConfiguration')
configurations.myConfiguration.transitive = false
</programlisting><para>A dynamic method is added for each configuration which takes a configuration closure. This is equivalent to
calling <apilink class="org.gradle.api.artifacts.ConfigurationContainer" method="getByName(java.lang.String, groovy.lang.Closure)"/>. For example:</para><programlisting language="java">
configurations.create('myConfiguration')
configurations.myConfiguration {
    transitive = false
}
</programlisting><section><title>Examples</title><para>

An example showing how to refer to a given configuration by name
in order to get hold of all dependencies (e.g. jars, but only)
</para><programlisting language="java">
  plugins {
      id 'java' //so that I can use 'implementation', 'compileClasspath' configuration
  }

  dependencies {
      implementation 'org.slf4j:slf4j-api:2.0.17'
  }

  //copying all dependencies attached to 'compileClasspath' into a specific folder
  task copyAllDependencies(type: Copy) {
    //referring to the 'compileClasspath' configuration
    from configurations.compileClasspath
    into 'allLibs'
  }
</programlisting><para>

An example showing how to declare and configure configurations
</para><programlisting language="java">
plugins {
    id 'java' // so that I can use 'implementation', 'testImplementation' configurations
}

configurations {
  //adding a configuration:
  myConfiguration

  //adding a configuration that extends existing configuration:
  //(testImplementation was added by the java plugin)
  myIntegrationTestsCompile.extendsFrom(testImplementation)

  //configuring existing configurations not to put transitive dependencies on the compile classpath
  //this way you can avoid issues with implicit dependencies to transitive libraries
  compileClasspath.transitive = false
  testCompileClasspath.transitive = false
}
</programlisting><para>

Examples on configuring the <emphasis>resolution strategy</emphasis> - see docs for <apilink class="org.gradle.api.artifacts.ResolutionStrategy"/>

Please see the <ulink url="https://docs.gradle.org/current/userguide/declaring_dependencies.html#sec:what-are-dependency-configurations">Managing Dependency Configurations</ulink> User Manual chapter for more information.</para></section><section><title>Properties</title><para>No properties</para></section><section><title>Methods</title><table><title>Methods - ConfigurationContainer</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.artifacts.ConfigurationContainer:consumable(java.lang.String)">consumable</link>(name)</literal></td><td><caution>Incubating</caution><para>Registers a new <apilink class="org.gradle.api.artifacts.ConsumableConfiguration"/> with an immutable role. Consumable configurations
are meant to act as a variant in the context of Dependency Management and Publishing.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.ConfigurationContainer:consumable(java.lang.String, org.gradle.api.Action)">consumable</link>(name, action)</literal></td><td><caution>Incubating</caution><para>Registers a <apilink class="org.gradle.api.artifacts.ConsumableConfiguration"/> via <apilink class="org.gradle.api.artifacts.ConfigurationContainer" method="consumable(java.lang.String)"/> and then
configures it with the provided action.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.ConfigurationContainer:create(java.lang.String)">create</link>(name)</literal></td><td><para>Creates a new item with the given name, adding it to this container.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.ConfigurationContainer:create(java.lang.String, groovy.lang.Closure)">create</link>(name, configureClosure)</literal></td><td><para>Creates a new item with the given name, adding it to this container, then configuring it with the given closure.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.ConfigurationContainer:create(java.lang.String, org.gradle.api.Action)">create</link>(name, configureAction)</literal></td><td><para>Creates a new item with the given name, adding it to this container, then configuring it with the given action.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.ConfigurationContainer:dependencyScope(java.lang.String)">dependencyScope</link>(name)</literal></td><td><caution>Incubating</caution><para>Registers a new <apilink class="org.gradle.api.artifacts.DependencyScopeConfiguration"/> with an immutable role. Dependency scope configurations
collect dependencies, dependency constraints, and exclude rules to be used by both resolvable
and consumable configurations.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.ConfigurationContainer:dependencyScope(java.lang.String, org.gradle.api.Action)">dependencyScope</link>(name, action)</literal></td><td><caution>Incubating</caution><para>Registers a <apilink class="org.gradle.api.artifacts.DependencyScopeConfiguration"/> via <apilink class="org.gradle.api.artifacts.ConfigurationContainer" method="dependencyScope(java.lang.String)"/> and then
configures it with the provided action.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.ConfigurationContainer:detachedConfiguration(org.gradle.api.artifacts.Dependency[])">detachedConfiguration</link>(dependencies)</literal></td><td><para>Creates a configuration, but does not add it to this container.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.ConfigurationContainer:getAt(java.lang.String)">getAt</link>(name)</literal></td><td><para>Locates an object by name, failing if there is no such object. This method is identical to <apilink class="org.gradle.api.NamedDomainObjectCollection" method="getByName(java.lang.String)"/>. You can call this method in your build script by using the groovy <literal>[]</literal> operator.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.ConfigurationContainer:getByName(java.lang.String)">getByName</link>(name)</literal></td><td><para>Locates an object by name, failing if there is no such object.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.ConfigurationContainer:getByName(java.lang.String, groovy.lang.Closure)">getByName</link>(name, configureClosure)</literal></td><td><para>Locates an object by name, failing if there is no such object. The given configure closure is executed against
the object before it is returned from this method. The object is passed to the closure as its delegate.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.ConfigurationContainer:getByName(java.lang.String, org.gradle.api.Action)">getByName</link>(name, configureAction)</literal></td><td><para>Locates an object by name, failing if there is no such object. The given configure action is executed against
the object before it is returned from this method.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.ConfigurationContainer:maybeCreate(java.lang.String)">maybeCreate</link>(name)</literal></td><td><para>Looks for an item with the given name, creating and adding it to this container if it does not exist.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.ConfigurationContainer:named(java.lang.String)">named</link>(name)</literal></td><td><para>Locates a object by name, failing if there is no such object.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.ConfigurationContainer:named(java.lang.String, java.lang.Class)">named</link>(name, type)</literal></td><td><para>Locates a object by name and type, failing if there is no such object.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.ConfigurationContainer:named(java.lang.String, java.lang.Class, org.gradle.api.Action)">named</link>(name, type, configurationAction)</literal></td><td><para>Locates a object by name and type, failing if there is no such object.
The given configure action is executed against the object before it is returned from the provider.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.ConfigurationContainer:named(java.lang.String, org.gradle.api.Action)">named</link>(name, configurationAction)</literal></td><td><para>Locates a object by name, failing if there is no such object.
The given configure action is executed against the object before it is returned from the provider.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.ConfigurationContainer:named(org.gradle.api.specs.Spec)">named</link>(nameFilter)</literal></td><td><caution>Incubating</caution><para>Returns a collection containing the objects with names matching the provided filter.
The returned collection is live, so that when matching objects are added to this collection,
they are also visible in the filtered collection.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.ConfigurationContainer:register(java.lang.String)">register</link>(name)</literal></td><td><para>Defines a new object, which will be created when it is required. A object is 'required' when the object is located using query methods such as <apilink class="org.gradle.api.NamedDomainObjectCollection" method="getByName(java.lang.String)"/> or when <apilink class="org.gradle.api.provider.Provider" method="get()"/> is called on the return value of this method.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.ConfigurationContainer:register(java.lang.String, org.gradle.api.Action)">register</link>(name, configurationAction)</literal></td><td><para>Defines a new object, which will be created and configured when it is required. An object is 'required' when the object is located using query methods such as <apilink class="org.gradle.api.NamedDomainObjectCollection" method="getByName(java.lang.String)"/> or when <apilink class="org.gradle.api.provider.Provider" method="get()"/> is called on the return value of this method.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.ConfigurationContainer:resolvable(java.lang.String)">resolvable</link>(name)</literal></td><td><caution>Incubating</caution><para>Registers a <apilink class="org.gradle.api.artifacts.ResolvableConfiguration"/> with an immutable role. Resolvable configurations
are meant to resolve dependency graphs and their artifacts.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.ConfigurationContainer:resolvable(java.lang.String, org.gradle.api.Action)">resolvable</link>(name, action)</literal></td><td><caution>Incubating</caution><para>Registers a <apilink class="org.gradle.api.artifacts.ResolvableConfiguration"/> via <apilink class="org.gradle.api.artifacts.ConfigurationContainer" method="resolvable(java.lang.String)"/> and then
configures it with the provided action.
</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Method details</title><section id="org.gradle.api.artifacts.ConfigurationContainer:consumable(java.lang.String)" role="detail"><title><classname><apilink class="org.gradle.api.NamedDomainObjectProvider"/>&lt;<apilink class="org.gradle.api.artifacts.ConsumableConfiguration"/>&gt;</classname> <literal>consumable</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name)</title><caution><para>Note: This method is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Registers a new <apilink class="org.gradle.api.artifacts.ConsumableConfiguration"/> with an immutable role. Consumable configurations
are meant to act as a variant in the context of Dependency Management and Publishing.
</para><para>
This operation is lazy, the returned element is NOT realized.
A <apilink class="org.gradle.api.NamedDomainObjectProvider"/> is returned, allowing to continue to use it with other lazy APIs.</para></section><section id="org.gradle.api.artifacts.ConfigurationContainer:consumable(java.lang.String, org.gradle.api.Action)" role="detail"><title><classname><apilink class="org.gradle.api.NamedDomainObjectProvider"/>&lt;<apilink class="org.gradle.api.artifacts.ConsumableConfiguration"/>&gt;</classname> <literal>consumable</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.artifacts.ConsumableConfiguration"/>&gt;</classname> action)</title><caution><para>Note: This method is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Registers a <apilink class="org.gradle.api.artifacts.ConsumableConfiguration"/> via <apilink class="org.gradle.api.artifacts.ConfigurationContainer" method="consumable(java.lang.String)"/> and then
configures it with the provided action.
</para><para>
This operation is lazy, the returned element is NOT realized.
A <apilink class="org.gradle.api.NamedDomainObjectProvider"/> is returned, allowing to continue to use it with other lazy APIs.</para></section><section id="org.gradle.api.artifacts.ConfigurationContainer:create(java.lang.String)" role="detail"><title><classname>T</classname> <literal>create</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name)</title><para>Creates a new item with the given name, adding it to this container.
</para><para>
This operation is eager, the element is realized before being returned.</para></section><section id="org.gradle.api.artifacts.ConfigurationContainer:create(java.lang.String, groovy.lang.Closure)" role="detail"><title><classname>T</classname> <literal>create</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> configureClosure)</title><para>Creates a new item with the given name, adding it to this container, then configuring it with the given closure.
</para><para>
This operation is eager, the element is realized before being returned.</para></section><section id="org.gradle.api.artifacts.ConfigurationContainer:create(java.lang.String, org.gradle.api.Action)" role="detail"><title><classname>T</classname> <literal>create</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <classname>T</classname>&gt;</classname> configureAction)</title><para>Creates a new item with the given name, adding it to this container, then configuring it with the given action.
</para><para>
This operation is eager, the element is realized before being returned.</para></section><section id="org.gradle.api.artifacts.ConfigurationContainer:dependencyScope(java.lang.String)" role="detail"><title><classname><apilink class="org.gradle.api.NamedDomainObjectProvider"/>&lt;<apilink class="org.gradle.api.artifacts.DependencyScopeConfiguration"/>&gt;</classname> <literal>dependencyScope</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name)</title><caution><para>Note: This method is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Registers a new <apilink class="org.gradle.api.artifacts.DependencyScopeConfiguration"/> with an immutable role. Dependency scope configurations
collect dependencies, dependency constraints, and exclude rules to be used by both resolvable
and consumable configurations.
</para><para>
This operation is lazy, the returned element is NOT realized.
A <apilink class="org.gradle.api.NamedDomainObjectProvider"/> is returned, allowing to continue to use it with other lazy APIs.</para></section><section id="org.gradle.api.artifacts.ConfigurationContainer:dependencyScope(java.lang.String, org.gradle.api.Action)" role="detail"><title><classname><apilink class="org.gradle.api.NamedDomainObjectProvider"/>&lt;<apilink class="org.gradle.api.artifacts.DependencyScopeConfiguration"/>&gt;</classname> <literal>dependencyScope</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.artifacts.DependencyScopeConfiguration"/>&gt;</classname> action)</title><caution><para>Note: This method is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Registers a <apilink class="org.gradle.api.artifacts.DependencyScopeConfiguration"/> via <apilink class="org.gradle.api.artifacts.ConfigurationContainer" method="dependencyScope(java.lang.String)"/> and then
configures it with the provided action.
</para><para>
This operation is lazy, the returned element is NOT realized.
A <apilink class="org.gradle.api.NamedDomainObjectProvider"/> is returned, allowing to continue to use it with other lazy APIs.</para></section><section id="org.gradle.api.artifacts.ConfigurationContainer:detachedConfiguration(org.gradle.api.artifacts.Dependency[])" role="detail"><title><apilink class="org.gradle.api.artifacts.Configuration"/> <literal>detachedConfiguration</literal>(<classname><apilink class="org.gradle.api.artifacts.Dependency"/>...</classname> dependencies)</title><para>Creates a configuration, but does not add it to this container.</para></section><section id="org.gradle.api.artifacts.ConfigurationContainer:getAt(java.lang.String)" role="detail"><title><apilink class="org.gradle.api.artifacts.Configuration"/> <literal>getAt</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name)</title><para>Locates an object by name, failing if there is no such object. This method is identical to <apilink class="org.gradle.api.NamedDomainObjectCollection" method="getByName(java.lang.String)"/>. You can call this method in your build script by using the groovy <literal>[]</literal> operator.
</para><para>
This operation is eager and will cause the returned element to be realized.</para></section><section id="org.gradle.api.artifacts.ConfigurationContainer:getByName(java.lang.String)" role="detail"><title><apilink class="org.gradle.api.artifacts.Configuration"/> <literal>getByName</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name)</title><para>Locates an object by name, failing if there is no such object.
</para><para>
This operation is eager and will cause the returned element to be realized.</para></section><section id="org.gradle.api.artifacts.ConfigurationContainer:getByName(java.lang.String, groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.artifacts.Configuration"/> <literal>getByName</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> configureClosure)</title><para>Locates an object by name, failing if there is no such object. The given configure closure is executed against
the object before it is returned from this method. The object is passed to the closure as its delegate.
</para><para>
This operation is eager and will cause the returned element to be realized.</para></section><section id="org.gradle.api.artifacts.ConfigurationContainer:getByName(java.lang.String, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.artifacts.Configuration"/> <literal>getByName</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.artifacts.Configuration"/>&gt;</classname> configureAction)</title><para>Locates an object by name, failing if there is no such object. The given configure action is executed against
the object before it is returned from this method.
</para><para>
This operation is eager and will cause the returned element to be realized.</para></section><section id="org.gradle.api.artifacts.ConfigurationContainer:maybeCreate(java.lang.String)" role="detail"><title><classname>T</classname> <literal>maybeCreate</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name)</title><para>Looks for an item with the given name, creating and adding it to this container if it does not exist.
</para><para>
This operation is eager, the element is realized before being returned.</para></section><section id="org.gradle.api.artifacts.ConfigurationContainer:named(java.lang.String)" role="detail"><title><classname><apilink class="org.gradle.api.NamedDomainObjectProvider"/>&lt;<classname>T</classname>&gt;</classname> <literal>named</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name)</title><para>Locates a object by name, failing if there is no such object.
</para><para>
This method is lazy and will not cause the returned element to be realized.</para></section><section id="org.gradle.api.artifacts.ConfigurationContainer:named(java.lang.String, java.lang.Class)" role="detail"><title><classname><apilink class="org.gradle.api.NamedDomainObjectProvider"/>&lt;<classname>S</classname>&gt;</classname> <literal>named</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html"><classname>Class</classname></ulink>&lt;<classname>S</classname>&gt;</classname> type)</title><para>Locates a object by name and type, failing if there is no such object.
</para><para>
This method is lazy and will not cause the returned element to be realized.</para></section><section id="org.gradle.api.artifacts.ConfigurationContainer:named(java.lang.String, java.lang.Class, org.gradle.api.Action)" role="detail"><title><classname><apilink class="org.gradle.api.NamedDomainObjectProvider"/>&lt;<classname>S</classname>&gt;</classname> <literal>named</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html"><classname>Class</classname></ulink>&lt;<classname>S</classname>&gt;</classname> type, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <classname>S</classname>&gt;</classname> configurationAction)</title><para>Locates a object by name and type, failing if there is no such object.
The given configure action is executed against the object before it is returned from the provider.
</para><para>
This method is lazy and will not cause the returned element to be realized.</para></section><section id="org.gradle.api.artifacts.ConfigurationContainer:named(java.lang.String, org.gradle.api.Action)" role="detail"><title><classname><apilink class="org.gradle.api.NamedDomainObjectProvider"/>&lt;<classname>T</classname>&gt;</classname> <literal>named</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <classname>T</classname>&gt;</classname> configurationAction)</title><para>Locates a object by name, failing if there is no such object.
The given configure action is executed against the object before it is returned from the provider.
</para><para>
This method is lazy and will not cause the returned element to be realized.</para></section><section id="org.gradle.api.artifacts.ConfigurationContainer:named(org.gradle.api.specs.Spec)" role="detail"><title><classname><apilink class="org.gradle.api.NamedDomainObjectCollection"/>&lt;<classname>T</classname>&gt;</classname> <literal>named</literal>(<classname><apilink class="org.gradle.api.specs.Spec"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> nameFilter)</title><caution><para>Note: This method is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Returns a collection containing the objects with names matching the provided filter.
The returned collection is live, so that when matching objects are added to this collection,
they are also visible in the filtered collection.
</para><para>
This method is an intermediate operation. It does not change the realized/unrealized state of the elements in the collection.</para></section><section id="org.gradle.api.artifacts.ConfigurationContainer:register(java.lang.String)" role="detail"><title><classname><apilink class="org.gradle.api.NamedDomainObjectProvider"/>&lt;<classname>T</classname>&gt;</classname> <literal>register</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name)</title><para>Defines a new object, which will be created when it is required. A object is 'required' when the object is located using query methods such as <apilink class="org.gradle.api.NamedDomainObjectCollection" method="getByName(java.lang.String)"/> or when <apilink class="org.gradle.api.provider.Provider" method="get()"/> is called on the return value of this method.
</para><para>
It is generally more efficient to use this method instead of <apilink class="org.gradle.api.NamedDomainObjectContainer" method="create(java.lang.String)"/>, as that method will eagerly create the object, regardless of whether that object is required for the current build or not.
This method, on the other hand, will defer creation until required.
</para><para>
This operation is lazy, the returned element is NOT realized.
A <apilink class="org.gradle.api.NamedDomainObjectProvider"/> is returned, allowing to continue to use it with other lazy APIs.</para></section><section id="org.gradle.api.artifacts.ConfigurationContainer:register(java.lang.String, org.gradle.api.Action)" role="detail"><title><classname><apilink class="org.gradle.api.NamedDomainObjectProvider"/>&lt;<classname>T</classname>&gt;</classname> <literal>register</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <classname>T</classname>&gt;</classname> configurationAction)</title><para>Defines a new object, which will be created and configured when it is required. An object is 'required' when the object is located using query methods such as <apilink class="org.gradle.api.NamedDomainObjectCollection" method="getByName(java.lang.String)"/> or when <apilink class="org.gradle.api.provider.Provider" method="get()"/> is called on the return value of this method.
</para><para>
It is generally more efficient to use this method instead of <apilink class="org.gradle.api.NamedDomainObjectContainer" method="create(java.lang.String, org.gradle.api.Action)"/> or <apilink class="org.gradle.api.NamedDomainObjectContainer" method="create(java.lang.String)"/>, as those methods will eagerly create and configure the object, regardless of whether that object is required for the current build or not.
This method, on the other hand, will defer creation and configuration until required.
</para><para>
This operation is lazy, the returned element is NOT realized.
A <apilink class="org.gradle.api.NamedDomainObjectProvider"/> is returned, allowing to continue to use it with other lazy APIs.</para></section><section id="org.gradle.api.artifacts.ConfigurationContainer:resolvable(java.lang.String)" role="detail"><title><classname><apilink class="org.gradle.api.NamedDomainObjectProvider"/>&lt;<apilink class="org.gradle.api.artifacts.ResolvableConfiguration"/>&gt;</classname> <literal>resolvable</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name)</title><caution><para>Note: This method is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Registers a <apilink class="org.gradle.api.artifacts.ResolvableConfiguration"/> with an immutable role. Resolvable configurations
are meant to resolve dependency graphs and their artifacts.
</para><para>
This operation is lazy, the returned element is NOT realized.
A <apilink class="org.gradle.api.NamedDomainObjectProvider"/> is returned, allowing to continue to use it with other lazy APIs.</para></section><section id="org.gradle.api.artifacts.ConfigurationContainer:resolvable(java.lang.String, org.gradle.api.Action)" role="detail"><title><classname><apilink class="org.gradle.api.NamedDomainObjectProvider"/>&lt;<apilink class="org.gradle.api.artifacts.ResolvableConfiguration"/>&gt;</classname> <literal>resolvable</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.artifacts.ResolvableConfiguration"/>&gt;</classname> action)</title><caution><para>Note: This method is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Registers a <apilink class="org.gradle.api.artifacts.ResolvableConfiguration"/> via <apilink class="org.gradle.api.artifacts.ConfigurationContainer" method="resolvable(java.lang.String)"/> and then
configures it with the provided action.
</para><para>
This operation is lazy, the returned element is NOT realized.
A <apilink class="org.gradle.api.NamedDomainObjectProvider"/> is returned, allowing to continue to use it with other lazy APIs.</para></section></section></chapter><chapter id="org.gradle.api.artifacts.dsl.DependencyHandler"><title>DependencyHandler</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.artifacts.dsl.DependencyHandler" style="javadoc"/></seg></seglistitem></segmentedlist><para>A <literal>DependencyHandler</literal> is used to declare dependencies. Dependencies are grouped into
configurations (see <apilink class="org.gradle.api.artifacts.Configuration"/>).</para><para>To declare a specific dependency for a configuration you can use the following syntax:</para><programlisting language="java">
dependencies {
    <emphasis>configurationName</emphasis> <emphasis>dependencyNotation</emphasis>
}
</programlisting><para>Example shows a basic way of declaring dependencies.
</para><programlisting language="java">
plugins {
    id 'java' // so that we can use 'implementation', 'testImplementation' for dependencies
}

dependencies {
  //for dependencies found in artifact repositories you can use
  //the group:name:version notation
  implementation 'commons-lang:commons-lang:2.6'
  testImplementation 'org.mockito:mockito:1.9.0-rc1'

  //map-style notation:
  implementation group: 'com.google.code.guice', name: 'guice', version: '1.0'

  //declaring arbitrary files as dependencies
  implementation files('hibernate.jar', 'libs/spring.jar')

  //putting all jars from 'libs' onto compile classpath
  implementation fileTree('libs')
}
</programlisting><section><title>Advanced dependency configuration</title><para>To do some advanced configuration on a dependency when it is declared, you can additionally pass a configuration closure:</para><programlisting language="java">
dependencies {
    <emphasis>configurationName</emphasis>(<emphasis>dependencyNotation</emphasis>){
        <emphasis>configStatement1</emphasis>
        <emphasis>configStatement2</emphasis>
    }
}
</programlisting><para>

Examples of advanced dependency declaration including:
</para><itemizedlist><listitem>Forcing certain dependency version in case of the conflict.</listitem><listitem>Excluding certain dependencies by name, group or both.
     More details about per-dependency exclusions can be found in
     docs for <apilink class="org.gradle.api.artifacts.ModuleDependency" method="exclude(java.util.Map)"/>.</listitem><listitem>Avoiding transitive dependencies for certain dependency.</listitem></itemizedlist><programlisting language="java">
plugins {
    id 'java' // so that I can declare 'implementation' dependencies
}

dependencies {
  implementation('org.hibernate:hibernate') {
    //in case of versions conflict '3.1' version of hibernate wins:
    version {
      strictly('3.1')
    }

    //excluding a particular transitive dependency:
    exclude module: 'cglib' //by artifact name
    exclude group: 'org.jmock' //by group
    exclude group: 'org.unwanted', module: 'iAmBuggy' //by both name and group

    //disabling all transitive dependencies of this dependency
    transitive = false
  }
}
</programlisting><para>

More examples of advanced configuration, useful when dependency module has multiple artifacts:
</para><itemizedlist><listitem>Declaring dependency to a specific configuration of the module.</listitem><listitem>Explicit specification of the artifact. See also <apilink class="org.gradle.api.artifacts.ModuleDependency" method="artifact(groovy.lang.Closure)"/>.</listitem></itemizedlist><programlisting language="java">
plugins {
    id("java-library")
}

dependencies {
  // Configuring dependency to specific configuration of the module
  // This notation should _only_ be used for Ivy dependencies
  implementation("org.someOrg:someModule:1.0") {
      targetConfiguration = "someConf"
  }

  // Configuring dependency on 'someLib' module
  implementation(group: 'org.myorg', name: 'someLib', version:'1.0') {
    // Explicitly adding the dependency artifact:
    // Prefer variant-aware dependency resolution
    artifact {
      // Useful when some artifact properties unconventional
      name = 'someArtifact' // Artifact name different than module name
      extension = 'someExt'
      type = 'someType'
      classifier = 'someClassifier'
    }
  }
}
</programlisting></section><section><title>Dependency notations</title><para>There are several supported dependency notations. These are described below. For each dependency declared this
way, a <apilink class="org.gradle.api.artifacts.Dependency"/> object is created. You can use this object to query or further configure the
dependency.</para><para>You can also always add instances of
<apilink class="org.gradle.api.artifacts.Dependency"/> directly:</para><para><literal><emphasis>configurationName</emphasis> &lt;instance&gt;</literal>

</para><para>Dependencies can also be declared with a <apilink class="org.gradle.api.provider.Provider"/> that provides any of the other supported dependency notations.</para><section><title>External dependencies</title><para>The following notation is used to declare a dependency on an external module:</para><para><literal><emphasis>configurationName</emphasis>("<emphasis>group</emphasis>:<emphasis>name</emphasis>:<emphasis>version</emphasis>:<emphasis>classifier</emphasis>@<emphasis>extension</emphasis>")</literal>

</para><para>All properties, except name, are optional.</para><para>External dependencies are represented by a <apilink class="org.gradle.api.artifacts.ExternalModuleDependency"/>.</para><programlisting language="java">
plugins {
    id 'java' // so that we can use 'implementation', 'testImplementation' for dependencies
}

dependencies {
  //for dependencies found in artifact repositories you can use
  //the string notation, e.g. group:name:version
  implementation 'commons-lang:commons-lang:2.6'
  testImplementation 'org.mockito:mockito:1.9.0-rc1'

  //map notation:
  implementation group: 'com.google.code.guice', name: 'guice', version: '1.0'
}
</programlisting></section><section><title>Project dependencies</title><para>To add a project dependency, you use the following notation:
</para><para><literal><emphasis>configurationName</emphasis> project(':some-project')</literal>

</para><para>The notation <literal>project(':project-a')</literal> is similar to the syntax you use
when configuring a projectA in a multi-module gradle project.

</para><para>Project dependencies are resolved by treating each consumable configuration in the target
project as a variant and performing variant-aware attribute matching against them.
However, in order to override this process, an explicit target configuration can be specified:
</para><para><literal><emphasis>configurationName</emphasis> project(path: ':project-a', configuration: 'someOtherConfiguration')</literal>

</para><para>Project dependencies are represented using a <apilink class="org.gradle.api.artifacts.ProjectDependency"/>.

</para></section><section><title>File dependencies</title><para>You can also add a dependency using a <apilink class="org.gradle.api.file.FileCollection"/>:</para><para><literal><emphasis>configurationName</emphasis> files('a file')</literal>

</para><programlisting language="java">
plugins {
    id 'java' // so that we can use 'implementation', 'testImplementation' for dependencies
}

dependencies {
  //declaring arbitrary files as dependencies
  implementation files('hibernate.jar', 'libs/spring.jar')

  //putting all jars from 'libs' onto compile classpath
  implementation fileTree('libs')
}
</programlisting><para>File dependencies are represented using a <apilink class="org.gradle.api.artifacts.FileCollectionDependency"/>.</para></section><section><title>Dependencies to other configurations</title><para>You can add a dependency using a <apilink class="org.gradle.api.artifacts.Configuration"/>.</para><para>When the configuration is from the same project as the target configuration, the target configuration is changed
to extend from the provided configuration.</para><para>When the configuration is from a different project, a project dependency is added.</para></section><section><title>Gradle distribution specific dependencies</title><para>It is possible to depend on certain Gradle APIs or libraries that Gradle ships with.
It is particularly useful for Gradle plugin development. Example:</para><programlisting language="java">
//Our Gradle plugin is written in groovy
plugins {
    id 'groovy'
}
// now we can use the 'implementation' configuration for declaring dependencies

dependencies {
  //we will use the Groovy version that ships with Gradle:
  implementation localGroovy()

  //our plugin requires Gradle API interfaces and classes to compile:
  implementation gradleApi()

  //we will use the Gradle test-kit to test build logic:
  testImplementation gradleTestKit()
}
</programlisting></section></section><section><title>Properties</title><table><title>Properties - DependencyHandler</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.artifacts.dsl.DependencyHandler:components"><literal>components</literal></link></td><td><para>The component metadata handler for this project. The returned handler can be used for adding rules
that modify the metadata of depended-on software components.</para></td></tr><tr><td><link linkend="org.gradle.api.artifacts.dsl.DependencyHandler:constraints"><literal>constraints</literal></link></td><td><para>The dependency constraint handler for this project.</para></td></tr><tr><td><link linkend="org.gradle.api.artifacts.dsl.DependencyHandler:extensions"><literal>extensions</literal></link></td><td><para>The container of extensions.</para></td></tr><tr><td><link linkend="org.gradle.api.artifacts.dsl.DependencyHandler:modules"><literal>modules</literal></link></td><td><para>The component module metadata handler for this project. The returned handler can be used for adding rules
that modify the metadata of depended-on software components.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - DependencyHandler</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.artifacts.dsl.DependencyHandler:add(java.lang.String, java.lang.Object)">add</link>(configurationName, dependencyNotation)</literal></td><td><para>Adds a dependency to the given configuration.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.dsl.DependencyHandler:add(java.lang.String, java.lang.Object, groovy.lang.Closure)">add</link>(configurationName, dependencyNotation, configureClosure)</literal></td><td><para>Adds a dependency to the given configuration, and configures the dependency using the given closure.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.dsl.DependencyHandler:components(org.gradle.api.Action)">components</link>(configureAction)</literal></td><td><para>Configures component metadata for this project.

</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.dsl.DependencyHandler:constraints(org.gradle.api.Action)">constraints</link>(configureAction)</literal></td><td><para>Configures dependency constraint for this project.

</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.dsl.DependencyHandler:create(java.lang.Object)">create</link>(dependencyNotation)</literal></td><td><para>Creates a dependency without adding it to a configuration.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.dsl.DependencyHandler:create(java.lang.Object, groovy.lang.Closure)">create</link>(dependencyNotation, configureClosure)</literal></td><td><para>Creates a dependency without adding it to a configuration, and configures the dependency using
the given closure.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.dsl.DependencyHandler:createArtifactResolutionQuery()">createArtifactResolutionQuery</link>()</literal></td><td><para>Creates an artifact resolution query.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.dsl.DependencyHandler:enforcedPlatform(java.lang.Object)">enforcedPlatform</link>(notation)</literal></td><td><para>Declares a dependency on an enforced platform. If the target coordinates represent multiple
potential components, the platform component will be selected, instead of the library.
An enforced platform is a platform for which the direct dependencies are forced, meaning
that they would override any other version found in the graph.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.dsl.DependencyHandler:enforcedPlatform(java.lang.Object, org.gradle.api.Action)">enforcedPlatform</link>(notation, configureAction)</literal></td><td><para>Declares a dependency on an enforced platform. If the target coordinates represent multiple
potential components, the platform component will be selected, instead of the library.
An enforced platform is a platform for which the direct dependencies are forced, meaning
that they would override any other version found in the graph.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.dsl.DependencyHandler:enforcedPlatform(org.gradle.api.provider.Provider)">enforcedPlatform</link>(dependencyProvider)</literal></td><td><para>Configures this dependency provider to select the enforced-platform variant of the target component</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.dsl.DependencyHandler:enforcedPlatform(org.gradle.api.provider.ProviderConvertible)">enforcedPlatform</link>(dependencyProviderConvertible)</literal></td><td><para>Configures this dependency provider to select the enforced-platform variant of the target component</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.dsl.DependencyHandler:gradleApi()">gradleApi</link>()</literal></td><td><para>Creates a dependency on the API of the current version of Gradle.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.dsl.DependencyHandler:gradleTestKit()">gradleTestKit</link>()</literal></td><td><para>Creates a dependency on the <ulink url="https://docs.gradle.org/current/userguide/test_kit.html">Gradle test-kit</ulink> API.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.dsl.DependencyHandler:localGroovy()">localGroovy</link>()</literal></td><td><para>Creates a dependency on the Groovy that is distributed with the current version of Gradle.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.dsl.DependencyHandler:modules(org.gradle.api.Action)">modules</link>(configureAction)</literal></td><td><para>Configures module metadata for this project.

</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.dsl.DependencyHandler:platform(java.lang.Object)">platform</link>(notation)</literal></td><td><para>Declares a dependency on a platform. If the target coordinates represent multiple
potential components, the platform component will be selected, instead of the library.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.dsl.DependencyHandler:platform(java.lang.Object, org.gradle.api.Action)">platform</link>(notation, configureAction)</literal></td><td><para>Declares a dependency on a platform. If the target coordinates represent multiple
potential components, the platform component will be selected, instead of the library.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.dsl.DependencyHandler:platform(org.gradle.api.provider.Provider)">platform</link>(dependencyProvider)</literal></td><td><para>Configures this dependency provider to select the platform variant of the target component</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.dsl.DependencyHandler:platform(org.gradle.api.provider.ProviderConvertible)">platform</link>(dependencyProviderConvertible)</literal></td><td><para>Configures this dependency provider to select the platform variant of the target component</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.dsl.DependencyHandler:project(java.util.Map)">project</link>(notation)</literal></td><td><para>Creates a dependency on a project.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.dsl.DependencyHandler:registerTransform(java.lang.Class, org.gradle.api.Action)">registerTransform</link>(actionType, registrationAction)</literal></td><td><para>Registers an <ulink url="https://docs.gradle.org/current/userguide/artifact_transforms.html">artifact transform</ulink>.

</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.artifacts.dsl.DependencyHandler:components" role="detail"><title><apilink class="org.gradle.api.artifacts.dsl.ComponentMetadataHandler"/> <literal>components</literal> (read-only)</title><para>The component metadata handler for this project. The returned handler can be used for adding rules
that modify the metadata of depended-on software components.</para></section><section id="org.gradle.api.artifacts.dsl.DependencyHandler:constraints" role="detail"><title><apilink class="org.gradle.api.artifacts.dsl.DependencyConstraintHandler"/> <literal>constraints</literal> (read-only)</title><para>The dependency constraint handler for this project.</para></section><section id="org.gradle.api.artifacts.dsl.DependencyHandler:extensions" role="detail"><title><apilink class="org.gradle.api.plugins.ExtensionContainer"/> <literal>extensions</literal> (read-only)</title><para>The container of extensions.</para></section><section id="org.gradle.api.artifacts.dsl.DependencyHandler:modules" role="detail"><title><apilink class="org.gradle.api.artifacts.dsl.ComponentModuleMetadataHandler"/> <literal>modules</literal> (read-only)</title><para>The component module metadata handler for this project. The returned handler can be used for adding rules
that modify the metadata of depended-on software components.</para></section></section><section><title>Method details</title><section id="org.gradle.api.artifacts.dsl.DependencyHandler:add(java.lang.String, java.lang.Object)" role="detail"><title><apilink class="org.gradle.api.artifacts.Dependency"/> <literal>add</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> configurationName, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> dependencyNotation)</title><para>Adds a dependency to the given configuration.</para></section><section id="org.gradle.api.artifacts.dsl.DependencyHandler:add(java.lang.String, java.lang.Object, groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.artifacts.Dependency"/> <literal>add</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> configurationName, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> dependencyNotation, <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> configureClosure)</title><para>Adds a dependency to the given configuration, and configures the dependency using the given closure.</para></section><section id="org.gradle.api.artifacts.dsl.DependencyHandler:components(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>components</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.artifacts.dsl.ComponentMetadataHandler"/>&gt;</classname> configureAction)</title><para>Configures component metadata for this project.

</para><para>This method executes the given action against the <apilink class="org.gradle.api.artifacts.dsl.ComponentMetadataHandler"/> for this project.</para></section><section id="org.gradle.api.artifacts.dsl.DependencyHandler:constraints(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>constraints</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.artifacts.dsl.DependencyConstraintHandler"/>&gt;</classname> configureAction)</title><para>Configures dependency constraint for this project.

</para><para>This method executes the given action against the <apilink class="org.gradle.api.artifacts.dsl.DependencyConstraintHandler"/> for this project.</para></section><section id="org.gradle.api.artifacts.dsl.DependencyHandler:create(java.lang.Object)" role="detail"><title><apilink class="org.gradle.api.artifacts.Dependency"/> <literal>create</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> dependencyNotation)</title><para>Creates a dependency without adding it to a configuration.</para></section><section id="org.gradle.api.artifacts.dsl.DependencyHandler:create(java.lang.Object, groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.artifacts.Dependency"/> <literal>create</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> dependencyNotation, <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> configureClosure)</title><para>Creates a dependency without adding it to a configuration, and configures the dependency using
the given closure.</para></section><section id="org.gradle.api.artifacts.dsl.DependencyHandler:createArtifactResolutionQuery()" role="detail"><title><apilink class="org.gradle.api.artifacts.query.ArtifactResolutionQuery"/> <literal>createArtifactResolutionQuery</literal>()</title><para>Creates an artifact resolution query.
</para><para>
This is a legacy API and is in maintenance mode. In future versions of Gradle,
this API will be deprecated and removed. New code should not use this API. Prefer
<UNHANDLED-LINK>ArtifactView.ViewConfiguration#withVariantReselection()</UNHANDLED-LINK> for resolving
sources and javadoc.</para></section><section id="org.gradle.api.artifacts.dsl.DependencyHandler:enforcedPlatform(java.lang.Object)" role="detail"><title><apilink class="org.gradle.api.artifacts.Dependency"/> <literal>enforcedPlatform</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> notation)</title><para>Declares a dependency on an enforced platform. If the target coordinates represent multiple
potential components, the platform component will be selected, instead of the library.
An enforced platform is a platform for which the direct dependencies are forced, meaning
that they would override any other version found in the graph.</para></section><section id="org.gradle.api.artifacts.dsl.DependencyHandler:enforcedPlatform(java.lang.Object, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.artifacts.Dependency"/> <literal>enforcedPlatform</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> notation, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.artifacts.Dependency"/>&gt;</classname> configureAction)</title><para>Declares a dependency on an enforced platform. If the target coordinates represent multiple
potential components, the platform component will be selected, instead of the library.
An enforced platform is a platform for which the direct dependencies are forced, meaning
that they would override any other version found in the graph.</para></section><section id="org.gradle.api.artifacts.dsl.DependencyHandler:enforcedPlatform(org.gradle.api.provider.Provider)" role="detail"><title><classname><apilink class="org.gradle.api.provider.Provider"/>&lt;<apilink class="org.gradle.api.artifacts.MinimalExternalModuleDependency"/>&gt;</classname> <literal>enforcedPlatform</literal>(<classname><apilink class="org.gradle.api.provider.Provider"/>&lt;<apilink class="org.gradle.api.artifacts.MinimalExternalModuleDependency"/>&gt;</classname> dependencyProvider)</title><para>Configures this dependency provider to select the enforced-platform variant of the target component</para></section><section id="org.gradle.api.artifacts.dsl.DependencyHandler:enforcedPlatform(org.gradle.api.provider.ProviderConvertible)" role="detail"><title><classname><apilink class="org.gradle.api.provider.Provider"/>&lt;<apilink class="org.gradle.api.artifacts.MinimalExternalModuleDependency"/>&gt;</classname> <literal>enforcedPlatform</literal>(<classname><apilink class="org.gradle.api.provider.ProviderConvertible"/>&lt;<apilink class="org.gradle.api.artifacts.MinimalExternalModuleDependency"/>&gt;</classname> dependencyProviderConvertible)</title><para>Configures this dependency provider to select the enforced-platform variant of the target component</para></section><section id="org.gradle.api.artifacts.dsl.DependencyHandler:gradleApi()" role="detail"><title><apilink class="org.gradle.api.artifacts.Dependency"/> <literal>gradleApi</literal>()</title><para>Creates a dependency on the API of the current version of Gradle.</para></section><section id="org.gradle.api.artifacts.dsl.DependencyHandler:gradleTestKit()" role="detail"><title><apilink class="org.gradle.api.artifacts.Dependency"/> <literal>gradleTestKit</literal>()</title><para>Creates a dependency on the <ulink url="https://docs.gradle.org/current/userguide/test_kit.html">Gradle test-kit</ulink> API.</para></section><section id="org.gradle.api.artifacts.dsl.DependencyHandler:localGroovy()" role="detail"><title><apilink class="org.gradle.api.artifacts.Dependency"/> <literal>localGroovy</literal>()</title><para>Creates a dependency on the Groovy that is distributed with the current version of Gradle.</para></section><section id="org.gradle.api.artifacts.dsl.DependencyHandler:modules(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>modules</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.artifacts.dsl.ComponentModuleMetadataHandler"/>&gt;</classname> configureAction)</title><para>Configures module metadata for this project.

</para><para>This method executes the given action against the <apilink class="org.gradle.api.artifacts.dsl.ComponentModuleMetadataHandler"/> for this project.</para></section><section id="org.gradle.api.artifacts.dsl.DependencyHandler:platform(java.lang.Object)" role="detail"><title><apilink class="org.gradle.api.artifacts.Dependency"/> <literal>platform</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> notation)</title><para>Declares a dependency on a platform. If the target coordinates represent multiple
potential components, the platform component will be selected, instead of the library.</para></section><section id="org.gradle.api.artifacts.dsl.DependencyHandler:platform(java.lang.Object, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.artifacts.Dependency"/> <literal>platform</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> notation, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.artifacts.Dependency"/>&gt;</classname> configureAction)</title><para>Declares a dependency on a platform. If the target coordinates represent multiple
potential components, the platform component will be selected, instead of the library.</para></section><section id="org.gradle.api.artifacts.dsl.DependencyHandler:platform(org.gradle.api.provider.Provider)" role="detail"><title><classname><apilink class="org.gradle.api.provider.Provider"/>&lt;<apilink class="org.gradle.api.artifacts.MinimalExternalModuleDependency"/>&gt;</classname> <literal>platform</literal>(<classname><apilink class="org.gradle.api.provider.Provider"/>&lt;<apilink class="org.gradle.api.artifacts.MinimalExternalModuleDependency"/>&gt;</classname> dependencyProvider)</title><para>Configures this dependency provider to select the platform variant of the target component</para></section><section id="org.gradle.api.artifacts.dsl.DependencyHandler:platform(org.gradle.api.provider.ProviderConvertible)" role="detail"><title><classname><apilink class="org.gradle.api.provider.Provider"/>&lt;<apilink class="org.gradle.api.artifacts.MinimalExternalModuleDependency"/>&gt;</classname> <literal>platform</literal>(<classname><apilink class="org.gradle.api.provider.ProviderConvertible"/>&lt;<apilink class="org.gradle.api.artifacts.MinimalExternalModuleDependency"/>&gt;</classname> dependencyProviderConvertible)</title><para>Configures this dependency provider to select the platform variant of the target component</para></section><section id="org.gradle.api.artifacts.dsl.DependencyHandler:project(java.util.Map)" role="detail"><title><apilink class="org.gradle.api.artifacts.Dependency"/> <literal>project</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, ?&gt;</classname> notation)</title><para>Creates a dependency on a project.</para></section><section id="org.gradle.api.artifacts.dsl.DependencyHandler:registerTransform(java.lang.Class, org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>registerTransform</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html"><classname>Class</classname></ulink>&lt;? extends <apilink class="org.gradle.api.artifacts.transform.TransformAction"/>&lt;<classname>T</classname>&gt;&gt;</classname> actionType, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.artifacts.transform.TransformSpec"/>&lt;<classname>T</classname>&gt;&gt;</classname> registrationAction)</title><para>Registers an <ulink url="https://docs.gradle.org/current/userguide/artifact_transforms.html">artifact transform</ulink>.

</para><para>
    The registration action needs to specify the <literal>from</literal> and <literal>to</literal> attributes.
    It may also provide parameters for the transform action by using <apilink class="org.gradle.api.artifacts.transform.TransformSpec" method="parameters(org.gradle.api.Action)"/>.
</para><para>For example:</para><programlisting language="java">
// You have a transform action like this:
abstract class MyTransform implements TransformAction&lt;Parameters&gt; {
    interface Parameters extends TransformParameters {
        @Input
        Property&lt;String&gt; getStringParameter();
        @InputFiles
        ConfigurableFileCollection getInputFiles();
    }

    void transform(TransformOutputs outputs) {
        // ...
    }
}

// Then you can register the action like this:

def artifactType = Attribute.of('artifactType', String)

dependencies.registerTransform(MyTransform) {
    from.attribute(artifactType, "jar")
    to.attribute(artifactType, "java-classes-directory")

    parameters {
        stringParameter.set("Some string")
        inputFiles.from("my-input-file")
    }
}
</programlisting></section></section></chapter><chapter id="org.gradle.api.artifacts.dsl.ComponentMetadataHandler"><title>ComponentMetadataHandler</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.artifacts.dsl.ComponentMetadataHandler" style="javadoc"/></seg></seglistitem></segmentedlist><para>Allows the build to provide rules that modify the metadata of depended-on software components.

Component metadata rules are applied in the components section of the dependencies block
<apilink class="org.gradle.api.artifacts.dsl.DependencyHandler"/> of a build script. The rules can be defined in two different ways:
</para><orderedlist><listitem>As an action directly when they are applied in the components section</listitem><listitem>As an isolated class implementing the <apilink class="org.gradle.api.artifacts.ComponentMetadataRule"/> interface</listitem></orderedlist><para>Example shows a basic way of removing certain transitive dependencies from one of our dependencies.</para><programlisting language="java">
plugins {
    id 'java'
}

repositories {
    mavenCentral()
}

dependencies {
    components {
        withModule("jaxen:jaxen") {
            allVariants {
                withDependencies {
                    removeAll { it.group in ["dom4j", "jdom", "xerces", "maven-plugins", "xml-apis", "xom"] }
                }
            }

        }
    }
    implementation("jaxen:jaxen:1.1.3")
}
</programlisting><section><title>Properties</title><para>No properties</para></section><section><title>Methods</title><table><title>Methods - ComponentMetadataHandler</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.artifacts.dsl.ComponentMetadataHandler:all(groovy.lang.Closure)">all</link>(rule)</literal></td><td><para>Adds a rule closure that may modify the metadata of any resolved software component.

</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.dsl.ComponentMetadataHandler:all(java.lang.Class)">all</link>(rule)</literal></td><td><para>Adds a class based rule that may modify the metadata of any resolved software component.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.dsl.ComponentMetadataHandler:all(java.lang.Class, org.gradle.api.Action)">all</link>(rule, configureAction)</literal></td><td><para>Adds a class based rule that may modify the metadata of any resolved software component.
The rule itself is configured by the provided configure action.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.dsl.ComponentMetadataHandler:all(java.lang.Object)">all</link>(ruleSource)</literal></td><td><para>Adds a rule that may modify the metadata of any resolved software component.

</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.dsl.ComponentMetadataHandler:all(org.gradle.api.Action)">all</link>(rule)</literal></td><td><para>Adds a rule action that may modify the metadata of any resolved software component.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.dsl.ComponentMetadataHandler:withModule(java.lang.Object, groovy.lang.Closure)">withModule</link>(id, rule)</literal></td><td><para>Adds a rule that may modify the metadata of any resolved software component belonging to the specified module.

</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.dsl.ComponentMetadataHandler:withModule(java.lang.Object, java.lang.Class)">withModule</link>(id, rule)</literal></td><td><para>Adds a class based rule that may modify the metadata of any resolved software component belonging to the specified module.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.dsl.ComponentMetadataHandler:withModule(java.lang.Object, java.lang.Class, org.gradle.api.Action)">withModule</link>(id, rule, configureAction)</literal></td><td><para>Adds a class based rule that may modify the metadata of any resolved software component belonging to the specified module.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.dsl.ComponentMetadataHandler:withModule(java.lang.Object, java.lang.Object)">withModule</link>(id, ruleSource)</literal></td><td><para>Adds a rule that may modify the metadata of any resolved software component belonging to the specified module.

</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.dsl.ComponentMetadataHandler:withModule(java.lang.Object, org.gradle.api.Action)">withModule</link>(id, rule)</literal></td><td><para>Adds a rule that may modify the metadata of any resolved software component belonging to the specified module.</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Method details</title><section id="org.gradle.api.artifacts.dsl.ComponentMetadataHandler:all(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.artifacts.dsl.ComponentMetadataHandler"/> <literal>all</literal>(<classname><ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink>&lt;?&gt;</classname> rule)</title><para>Adds a rule closure that may modify the metadata of any resolved software component.

</para><para>The supplied rule closure must declare a <apilink class="org.gradle.api.artifacts.ComponentMetadataDetails"/> as it's first parameter,
allowing the component metadata to be modified.

</para><para>In addition, the rule can declare additional (read-only) parameters, which may provide extra details
about the component. The order of these additional parameters is not significant.

</para><para>The following additional parameter types are supported:
</para><itemizedlist><listitem><apilink class="org.gradle.api.artifacts.ivy.IvyModuleDescriptor"/> - additional Ivy-specific
    metadata. Rules declaring this parameter will only be invoked for components packaged as an Ivy module.</listitem><listitem><apilink class="org.gradle.api.artifacts.maven.PomModuleDescriptor"/> - additional Maven-specific
    metadata. Rules declaring this parameter will only be invoked for components packaged as a POM module.</listitem></itemizedlist></section><section id="org.gradle.api.artifacts.dsl.ComponentMetadataHandler:all(java.lang.Class)" role="detail"><title><apilink class="org.gradle.api.artifacts.dsl.ComponentMetadataHandler"/> <literal>all</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html"><classname>Class</classname></ulink>&lt;? extends <apilink class="org.gradle.api.artifacts.ComponentMetadataRule"/>&gt;</classname> rule)</title><para>Adds a class based rule that may modify the metadata of any resolved software component.</para></section><section id="org.gradle.api.artifacts.dsl.ComponentMetadataHandler:all(java.lang.Class, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.artifacts.dsl.ComponentMetadataHandler"/> <literal>all</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html"><classname>Class</classname></ulink>&lt;? extends <apilink class="org.gradle.api.artifacts.ComponentMetadataRule"/>&gt;</classname> rule, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.ActionConfiguration"/>&gt;</classname> configureAction)</title><para>Adds a class based rule that may modify the metadata of any resolved software component.
The rule itself is configured by the provided configure action.</para></section><section id="org.gradle.api.artifacts.dsl.ComponentMetadataHandler:all(java.lang.Object)" role="detail"><title><apilink class="org.gradle.api.artifacts.dsl.ComponentMetadataHandler"/> <literal>all</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> ruleSource)</title><para>Adds a rule that may modify the metadata of any resolved software component.

</para><para>The ruleSource is an Object that has a single rule method annotated with <apilink class="org.gradle.model.Mutate"/>.

</para><para>This rule method:
</para><itemizedlist><listitem>must return void.</listitem><listitem>must have <apilink class="org.gradle.api.artifacts.ComponentMetadataDetails"/> as the first parameter.</listitem><listitem>may have an additional parameter of type <apilink class="org.gradle.api.artifacts.ivy.IvyModuleDescriptor"/> or <apilink class="org.gradle.api.artifacts.maven.PomModuleDescriptor"/>.</listitem></itemizedlist></section><section id="org.gradle.api.artifacts.dsl.ComponentMetadataHandler:all(org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.artifacts.dsl.ComponentMetadataHandler"/> <literal>all</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.artifacts.ComponentMetadataDetails"/>&gt;</classname> rule)</title><para>Adds a rule action that may modify the metadata of any resolved software component.</para></section><section id="org.gradle.api.artifacts.dsl.ComponentMetadataHandler:withModule(java.lang.Object, groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.artifacts.dsl.ComponentMetadataHandler"/> <literal>withModule</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> id, <classname><ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink>&lt;?&gt;</classname> rule)</title><para>Adds a rule that may modify the metadata of any resolved software component belonging to the specified module.

</para><para>The rule closure parameter is subject to the same requirements as <apilink class="org.gradle.api.artifacts.dsl.ComponentMetadataHandler" method="all(groovy.lang.Closure)"/>.</para></section><section id="org.gradle.api.artifacts.dsl.ComponentMetadataHandler:withModule(java.lang.Object, java.lang.Class)" role="detail"><title><apilink class="org.gradle.api.artifacts.dsl.ComponentMetadataHandler"/> <literal>withModule</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> id, <classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html"><classname>Class</classname></ulink>&lt;? extends <apilink class="org.gradle.api.artifacts.ComponentMetadataRule"/>&gt;</classname> rule)</title><para>Adds a class based rule that may modify the metadata of any resolved software component belonging to the specified module.</para></section><section id="org.gradle.api.artifacts.dsl.ComponentMetadataHandler:withModule(java.lang.Object, java.lang.Class, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.artifacts.dsl.ComponentMetadataHandler"/> <literal>withModule</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> id, <classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html"><classname>Class</classname></ulink>&lt;? extends <apilink class="org.gradle.api.artifacts.ComponentMetadataRule"/>&gt;</classname> rule, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.ActionConfiguration"/>&gt;</classname> configureAction)</title><para>Adds a class based rule that may modify the metadata of any resolved software component belonging to the specified module.</para></section><section id="org.gradle.api.artifacts.dsl.ComponentMetadataHandler:withModule(java.lang.Object, java.lang.Object)" role="detail"><title><apilink class="org.gradle.api.artifacts.dsl.ComponentMetadataHandler"/> <literal>withModule</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> id, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> ruleSource)</title><para>Adds a rule that may modify the metadata of any resolved software component belonging to the specified module.

</para><para>The rule source parameter is subject to the same requirements as <apilink class="org.gradle.api.artifacts.dsl.ComponentMetadataHandler" method="all(java.lang.Object)"/>.</para></section><section id="org.gradle.api.artifacts.dsl.ComponentMetadataHandler:withModule(java.lang.Object, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.artifacts.dsl.ComponentMetadataHandler"/> <literal>withModule</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> id, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.artifacts.ComponentMetadataDetails"/>&gt;</classname> rule)</title><para>Adds a rule that may modify the metadata of any resolved software component belonging to the specified module.</para></section></section></chapter><chapter id="org.gradle.api.artifacts.dsl.DependencyConstraintHandler"><title>DependencyConstraintHandler</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.artifacts.dsl.DependencyConstraintHandler" style="javadoc"/></seg></seglistitem></segmentedlist><para>A <literal>DependencyConstraintHandler</literal> is used to declare dependency constraints.</para><section><title>Dependency constraint notations</title><para>There are several supported dependency constraint notations. These are described below. For each dependency constraint declared this
way, a <apilink class="org.gradle.api.artifacts.DependencyConstraint"/> object is created. You can use this object to query or further configure the
dependency constraint.</para><para>You can also always add instances of <apilink class="org.gradle.api.artifacts.DependencyConstraint"/> directly:</para><para><literal><emphasis>configurationName</emphasis>(&lt;instance&gt;)</literal>

</para><para>Dependency constraints can also be declared with a <apilink class="org.gradle.api.provider.Provider"/> that provides any of the other supported dependency constraint notations.</para><section><title>External dependencies</title><para>There are two notations supported for declaring a dependency constraint on an external module.
One is a string notation formatted this way:</para><para><literal><emphasis>configurationName</emphasis>("<emphasis>group</emphasis>:<emphasis>name</emphasis>:<emphasis>version</emphasis>")</literal>

</para><para>The other is a map notation:</para><para><literal><emphasis>configurationName</emphasis>(group: <emphasis>group</emphasis>, name: <emphasis>name</emphasis>, version: <emphasis>version</emphasis>)</literal>

</para><para>In both notations, all properties, except name, are optional.</para><programlisting language="java">
plugins {
    id("java-library") // so that we can use 'implementation', 'testImplementation' for dependency constraints
}

dependencies {
  constraints {
    //for dependencies found in artifact repositories you can use
    //the string notation, e.g. group:name:version
    implementation 'commons-lang:commons-lang:2.6'
    testImplementation 'org.mockito:mockito:1.9.0-rc1'

    //map notation:
    implementation group: 'com.google.code.guice', name: 'guice', version: '1.0'
  }
}
</programlisting></section><section><title>Project dependencies</title><para>To add a project dependency constraint, you use the following notation:
</para><para><literal><emphasis>configurationName</emphasis>(project(":some-project"))</literal></para></section></section><section><title>Properties</title><para>No properties</para></section><section><title>Methods</title><table><title>Methods - DependencyConstraintHandler</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.artifacts.dsl.DependencyConstraintHandler:add(java.lang.String, java.lang.Object)">add</link>(configurationName, dependencyNotation)</literal></td><td><para>Adds a dependency constraint to the given configuration.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.dsl.DependencyConstraintHandler:add(java.lang.String, java.lang.Object, org.gradle.api.Action)">add</link>(configurationName, dependencyNotation, configureAction)</literal></td><td><para>Adds a dependency constraint to the given configuration, and configures the dependency constraint using the given closure.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.dsl.DependencyConstraintHandler:create(java.lang.Object)">create</link>(dependencyConstraintNotation)</literal></td><td><para>Creates a dependency constraint without adding it to a configuration.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.dsl.DependencyConstraintHandler:create(java.lang.Object, org.gradle.api.Action)">create</link>(dependencyConstraintNotation, configureAction)</literal></td><td><para>Creates a dependency constraint without adding it to a configuration, and configures the dependency constraint using
the given closure.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.dsl.DependencyConstraintHandler:enforcedPlatform(java.lang.Object)">enforcedPlatform</link>(notation)</literal></td><td><para>Declares a constraint on an enforced platform. If the target coordinates represent multiple
potential components, the platform component will be selected, instead of the library.
An enforced platform is a platform for which the direct dependencies are forced, meaning
that they would override any other version found in the graph.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.dsl.DependencyConstraintHandler:enforcedPlatform(java.lang.Object, org.gradle.api.Action)">enforcedPlatform</link>(notation, configureAction)</literal></td><td><para>Declares a constraint on an enforced platform. If the target coordinates represent multiple
potential components, the platform component will be selected, instead of the library.
An enforced platform is a platform for which the direct dependencies are forced, meaning
that they would override any other version found in the graph.</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Method details</title><section id="org.gradle.api.artifacts.dsl.DependencyConstraintHandler:add(java.lang.String, java.lang.Object)" role="detail"><title><apilink class="org.gradle.api.artifacts.DependencyConstraint"/> <literal>add</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> configurationName, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> dependencyNotation)</title><para>Adds a dependency constraint to the given configuration.</para></section><section id="org.gradle.api.artifacts.dsl.DependencyConstraintHandler:add(java.lang.String, java.lang.Object, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.artifacts.DependencyConstraint"/> <literal>add</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> configurationName, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> dependencyNotation, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.artifacts.DependencyConstraint"/>&gt;</classname> configureAction)</title><para>Adds a dependency constraint to the given configuration, and configures the dependency constraint using the given closure.</para></section><section id="org.gradle.api.artifacts.dsl.DependencyConstraintHandler:create(java.lang.Object)" role="detail"><title><apilink class="org.gradle.api.artifacts.DependencyConstraint"/> <literal>create</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> dependencyConstraintNotation)</title><para>Creates a dependency constraint without adding it to a configuration.</para></section><section id="org.gradle.api.artifacts.dsl.DependencyConstraintHandler:create(java.lang.Object, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.artifacts.DependencyConstraint"/> <literal>create</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> dependencyConstraintNotation, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.artifacts.DependencyConstraint"/>&gt;</classname> configureAction)</title><para>Creates a dependency constraint without adding it to a configuration, and configures the dependency constraint using
the given closure.</para></section><section id="org.gradle.api.artifacts.dsl.DependencyConstraintHandler:enforcedPlatform(java.lang.Object)" role="detail"><title><apilink class="org.gradle.api.artifacts.DependencyConstraint"/> <literal>enforcedPlatform</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> notation)</title><para>Declares a constraint on an enforced platform. If the target coordinates represent multiple
potential components, the platform component will be selected, instead of the library.
An enforced platform is a platform for which the direct dependencies are forced, meaning
that they would override any other version found in the graph.</para></section><section id="org.gradle.api.artifacts.dsl.DependencyConstraintHandler:enforcedPlatform(java.lang.Object, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.artifacts.DependencyConstraint"/> <literal>enforcedPlatform</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> notation, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.artifacts.DependencyConstraint"/>&gt;</classname> configureAction)</title><para>Declares a constraint on an enforced platform. If the target coordinates represent multiple
potential components, the platform component will be selected, instead of the library.
An enforced platform is a platform for which the direct dependencies are forced, meaning
that they would override any other version found in the graph.</para></section></section></chapter><chapter id="org.gradle.api.artifacts.dsl.ComponentModuleMetadataHandler"><title>ComponentModuleMetadataHandler</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.artifacts.dsl.ComponentModuleMetadataHandler" style="javadoc"/></seg></seglistitem></segmentedlist><para>Allows to modify the metadata of depended-on software components.

</para><para> Example:
</para><programlisting language="java">
dependencies {
    modules {
        //Configuring component module metadata for the entire "google-collections" module,
        // declaring that legacy library was replaced with "guava".
        //This way, Gradle's conflict resolution can use this information and use "guava"
        // in case both libraries appear in the same dependency tree.
        module("com.google.collections:google-collections") {
            replacedBy("com.google.guava:guava")
        }
    }
}
</programlisting><section><title>Properties</title><para>No properties</para></section><section><title>Methods</title><table><title>Methods - ComponentModuleMetadataHandler</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.artifacts.dsl.ComponentModuleMetadataHandler:module(java.lang.Object, org.gradle.api.Action)">module</link>(moduleNotation, rule)</literal></td><td><para>Enables configuring component module metadata.
This metadata applies to the entire component module (e.g. "group:name", like "org.gradle:gradle-core") regardless of the component version.

</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Method details</title><section id="org.gradle.api.artifacts.dsl.ComponentModuleMetadataHandler:module(java.lang.Object, org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>module</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> moduleNotation, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.artifacts.ComponentModuleMetadataDetails"/>&gt;</classname> rule)</title><para>Enables configuring component module metadata.
This metadata applies to the entire component module (e.g. "group:name", like "org.gradle:gradle-core") regardless of the component version.

</para><programlisting language="java">
//declaring that google collections are replaced by guava
//so that conflict resolution can take advantage of this information:
dependencies.modules.module('com.google.collections:google-collections') { replacedBy('com.google.guava:guava') }
</programlisting></section></section></chapter><chapter id="org.gradle.api.invocation.Gradle"><title>Gradle</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.invocation.Gradle" style="javadoc"/></seg></seglistitem></segmentedlist><para>Represents an invocation of Gradle.

</para><para>You can obtain a <literal>Gradle</literal> instance by calling <apilink class="org.gradle.api.Project" method="getGradle()"/>.</para><section><title>Properties</title><table><title>Properties - Gradle</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.invocation.Gradle:extensions"><literal>extensions</literal></link></td><td><para>The container of extensions.</para></td></tr><tr><td><link linkend="org.gradle.api.invocation.Gradle:gradle"><literal>gradle</literal></link></td><td><para>Returns this <literal>Gradle</literal> instance.

This method is useful in init scripts to explicitly access Gradle
properties and methods. For example, using <literal>gradle.parent</literal> can express your intent better than using
<literal>parent</literal>. This property also allows you to access Gradle properties from a scope where the property
may be hidden, such as, for example, from a method or closure.</para></td></tr><tr><td><link linkend="org.gradle.api.invocation.Gradle:gradleHomeDir"><literal>gradleHomeDir</literal></link></td><td><para>The Gradle home directory, if any.

This directory is the directory containing the Gradle distribution executing this build.
</para></td></tr><tr><td><link linkend="org.gradle.api.invocation.Gradle:gradleUserHomeDir"><literal>gradleUserHomeDir</literal></link></td><td><para>The Gradle user home directory.

This directory is used to cache downloaded resources, compiled build scripts and so on.</para></td></tr><tr><td><link linkend="org.gradle.api.invocation.Gradle:gradleVersion"><literal>gradleVersion</literal></link></td><td><para>The current Gradle version.</para></td></tr><tr><td><link linkend="org.gradle.api.invocation.Gradle:includedBuilds"><literal>includedBuilds</literal></link></td><td><para>The included builds for this build.</para></td></tr><tr><td><link linkend="org.gradle.api.invocation.Gradle:parent"><literal>parent</literal></link></td><td><para>The parent build of this build, if any.</para></td></tr><tr><td><link linkend="org.gradle.api.invocation.Gradle:pluginManager"><literal>pluginManager</literal></link></td><td><para>The plugin manager for this plugin aware object.</para></td></tr><tr><td><link linkend="org.gradle.api.invocation.Gradle:plugins"><literal>plugins</literal></link></td><td><para>The container of plugins that have been applied to this object.
</para></td></tr><tr><td><link linkend="org.gradle.api.invocation.Gradle:rootProject"><literal>rootProject</literal></link></td><td><para>The root project of this build.</para></td></tr><tr><td><link linkend="org.gradle.api.invocation.Gradle:startParameter"><literal>startParameter</literal></link></td><td><para>The <apilink class="org.gradle.StartParameter"/> used to start this build.</para></td></tr><tr><td><link linkend="org.gradle.api.invocation.Gradle:taskGraph"><literal>taskGraph</literal></link></td><td><para>The <apilink class="org.gradle.api.execution.TaskExecutionGraph"/> for this build.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - Gradle</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.invocation.Gradle:addBuildListener(org.gradle.BuildListener)">addBuildListener</link>(buildListener)</literal></td><td><para>Adds a <apilink class="org.gradle.BuildListener"/> to this Build instance.

The listener is notified of events which occur during the execution of the build.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.invocation.Gradle:addListener(java.lang.Object)">addListener</link>(listener)</literal></td><td><para>Adds the given listener to this build. The listener may implement any of the given listener interfaces:

</para></td></tr><tr><td><literal><link linkend="org.gradle.api.invocation.Gradle:addProjectEvaluationListener(org.gradle.api.ProjectEvaluationListener)">addProjectEvaluationListener</link>(listener)</literal></td><td><para>Adds a listener to this build, to receive notifications as projects are evaluated.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.invocation.Gradle:afterProject(groovy.lang.Closure)">afterProject</link>(closure)</literal></td><td><para>Adds a closure to be called immediately after a project is evaluated.

The project is passed to the closure as the first parameter. The project evaluation failure, if any,
is passed as the second parameter. Both parameters are optional.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.invocation.Gradle:afterProject(org.gradle.api.Action)">afterProject</link>(action)</literal></td><td><para>Adds an action to be called immediately after a project is evaluated.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.invocation.Gradle:allprojects(org.gradle.api.Action)">allprojects</link>(action)</literal></td><td><para>Adds an action to execute against all projects of this build.

The action is executed immediately against all projects which are
already available. It is also executed as subsequent projects are added to this build.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.invocation.Gradle:apply(groovy.lang.Closure)">apply</link>(closure)</literal></td><td><para>Applies zero or more plugins or scripts.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.invocation.Gradle:apply(java.util.Map)">apply</link>(options)</literal></td><td><para>Applies a plugin or script, using the given options provided as a map. Does nothing if the plugin has already been applied.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.invocation.Gradle:apply(org.gradle.api.Action)">apply</link>(action)</literal></td><td><para>Applies zero or more plugins or scripts.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.invocation.Gradle:beforeProject(groovy.lang.Closure)">beforeProject</link>(closure)</literal></td><td><para>Adds a closure to be called immediately before a project is evaluated. The project is passed to the closure as a
parameter.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.invocation.Gradle:beforeProject(org.gradle.api.Action)">beforeProject</link>(action)</literal></td><td><para>Adds an action to be called immediately before a project is evaluated.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.invocation.Gradle:beforeSettings(groovy.lang.Closure)">beforeSettings</link>(closure)</literal></td><td><para>Adds an action to be called before the build settings have been loaded and evaluated.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.invocation.Gradle:beforeSettings(org.gradle.api.Action)">beforeSettings</link>(action)</literal></td><td><para>Adds an action to be called before the build settings have been loaded and evaluated.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.invocation.Gradle:buildFinished(groovy.lang.Closure)">buildFinished</link>(closure)</literal></td><td><caution>Deprecated</caution><para>Adds a closure to be called when the build is completed.

All selected tasks have been executed.
A <apilink class="org.gradle.BuildResult"/> instance is passed to the closure as a parameter.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.invocation.Gradle:buildFinished(org.gradle.api.Action)">buildFinished</link>(action)</literal></td><td><caution>Deprecated</caution><para>Adds an action to be called when the build is completed.

All selected tasks have been executed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.invocation.Gradle:includedBuild(java.lang.String)">includedBuild</link>(name)</literal></td><td><para>Returns the included build with the specified name for this build.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.invocation.Gradle:projectsEvaluated(groovy.lang.Closure)">projectsEvaluated</link>(closure)</literal></td><td><para>Adds a closure to be called when all projects for the build have been evaluated.

The project objects are fully configured and are ready to use to populate the task graph.
This <literal>Gradle</literal> instance is passed to the closure as a parameter.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.invocation.Gradle:projectsEvaluated(org.gradle.api.Action)">projectsEvaluated</link>(action)</literal></td><td><para>Adds an action to be called when all projects for the build have been evaluated.

The project objects are fully configured and are ready to use to populate the task graph.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.invocation.Gradle:projectsLoaded(groovy.lang.Closure)">projectsLoaded</link>(closure)</literal></td><td><para>Adds a closure to be called when the projects for the build have been created from the settings.

None of the projects have been evaluated. This <literal>Gradle</literal> instance is passed to the closure as a parameter.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.invocation.Gradle:projectsLoaded(org.gradle.api.Action)">projectsLoaded</link>(action)</literal></td><td><para>Adds an action to be called when the projects for the build have been created from the settings.

None of the projects have been evaluated.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.invocation.Gradle:removeListener(java.lang.Object)">removeListener</link>(listener)</literal></td><td><para>Removes the given listener from this build.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.invocation.Gradle:removeProjectEvaluationListener(org.gradle.api.ProjectEvaluationListener)">removeProjectEvaluationListener</link>(listener)</literal></td><td><para>Removes the given listener from this build.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.invocation.Gradle:rootProject(org.gradle.api.Action)">rootProject</link>(action)</literal></td><td><para>Adds an action to execute against the root project of this build.

If the root project is already available, the action
is executed immediately. Otherwise, the action is executed when the root project becomes available.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.invocation.Gradle:settingsEvaluated(groovy.lang.Closure)">settingsEvaluated</link>(closure)</literal></td><td><para>Adds a closure to be called when the build settings have been loaded and evaluated.

The settings object is fully configured and is ready to use to load the build projects. The
<apilink class="org.gradle.api.initialization.Settings"/> object is passed to the closure as a parameter.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.invocation.Gradle:settingsEvaluated(org.gradle.api.Action)">settingsEvaluated</link>(action)</literal></td><td><para>Adds an action to be called when the build settings have been loaded and evaluated.

The settings object is fully configured and is ready to use to load the build projects.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.invocation.Gradle:useLogger(java.lang.Object)">useLogger</link>(logger)</literal></td><td><caution>Deprecated</caution><para>Uses the given object as a logger.

The logger object may implement any of the listener interfaces supported by
<apilink class="org.gradle.api.invocation.Gradle" method="addListener(java.lang.Object)"/>.
</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.invocation.Gradle:extensions" role="detail"><title><apilink class="org.gradle.api.plugins.ExtensionContainer"/> <literal>extensions</literal> (read-only)</title><para>The container of extensions.</para></section><section id="org.gradle.api.invocation.Gradle:gradle" role="detail"><title><apilink class="org.gradle.api.invocation.Gradle"/> <literal>gradle</literal> (read-only)</title><para>Returns this <literal>Gradle</literal> instance.

This method is useful in init scripts to explicitly access Gradle
properties and methods. For example, using <literal>gradle.parent</literal> can express your intent better than using
<literal>parent</literal>. This property also allows you to access Gradle properties from a scope where the property
may be hidden, such as, for example, from a method or closure.</para></section><section id="org.gradle.api.invocation.Gradle:gradleHomeDir" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>gradleHomeDir</literal> (read-only)</title><para>The Gradle home directory, if any.

This directory is the directory containing the Gradle distribution executing this build.
</para><para>
When using the "Gradle Daemon", this may not be the same Gradle distribution that the build was started with.
If an existing daemon process is running that is deemed compatible (e.g. has the desired JVM characteristics)
then this daemon may be used instead of starting a new process and it may have been started from a different "gradle home".
However, it is guaranteed to be the same version of Gradle. For more information on the Gradle Daemon, please consult the
<ulink url="https://docs.gradle.org/current/userguide/gradle_daemon.html">User Manual</ulink>.</para></section><section id="org.gradle.api.invocation.Gradle:gradleUserHomeDir" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>gradleUserHomeDir</literal> (read-only)</title><para>The Gradle user home directory.

This directory is used to cache downloaded resources, compiled build scripts and so on.</para></section><section id="org.gradle.api.invocation.Gradle:gradleVersion" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>gradleVersion</literal> (read-only)</title><para>The current Gradle version.</para></section><section id="org.gradle.api.invocation.Gradle:includedBuilds" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Collection.html"><classname>Collection</classname></ulink>&lt;<apilink class="org.gradle.api.initialization.IncludedBuild"/>&gt;</classname> <literal>includedBuilds</literal> (read-only)</title><para>The included builds for this build.</para></section><section id="org.gradle.api.invocation.Gradle:parent" role="detail"><title><apilink class="org.gradle.api.invocation.Gradle"/> <literal>parent</literal> (read-only)</title><para>The parent build of this build, if any.</para></section><section id="org.gradle.api.invocation.Gradle:pluginManager" role="detail"><title><apilink class="org.gradle.api.plugins.PluginManager"/> <literal>pluginManager</literal> (read-only)</title><para>The plugin manager for this plugin aware object.</para></section><section id="org.gradle.api.invocation.Gradle:plugins" role="detail"><title><apilink class="org.gradle.api.plugins.PluginContainer"/> <literal>plugins</literal> (read-only)</title><para>The container of plugins that have been applied to this object.
</para><para>
While not deprecated, it is preferred to use the methods of this interface or the <apilink class="org.gradle.api.plugins.PluginAware" method="getPluginManager()"/> than use the plugin container.
</para><para>
Use one of the 'apply' methods on this interface or on the <apilink class="org.gradle.api.plugins.PluginAware" method="getPluginManager()"/> to apply plugins instead of applying via the plugin container.
</para><para>
Use <apilink class="org.gradle.api.plugins.PluginManager" method="hasPlugin(java.lang.String)"/> or similar to query for the application of plugins instead of doing so via the plugin container.</para></section><section id="org.gradle.api.invocation.Gradle:rootProject" role="detail"><title><apilink class="org.gradle.api.Project"/> <literal>rootProject</literal> (read-only)</title><para>The root project of this build.</para></section><section id="org.gradle.api.invocation.Gradle:startParameter" role="detail"><title><apilink class="org.gradle.StartParameter"/> <literal>startParameter</literal> (read-only)</title><para>The <apilink class="org.gradle.StartParameter"/> used to start this build.</para></section><section id="org.gradle.api.invocation.Gradle:taskGraph" role="detail"><title><apilink class="org.gradle.api.execution.TaskExecutionGraph"/> <literal>taskGraph</literal> (read-only)</title><para>The <apilink class="org.gradle.api.execution.TaskExecutionGraph"/> for this build.</para></section></section><section><title>Method details</title><section id="org.gradle.api.invocation.Gradle:addBuildListener(org.gradle.BuildListener)" role="detail"><title><classname>void</classname> <literal>addBuildListener</literal>(<apilink class="org.gradle.BuildListener"/> buildListener)</title><para>Adds a <apilink class="org.gradle.BuildListener"/> to this Build instance.

The listener is notified of events which occur during the execution of the build.</para></section><section id="org.gradle.api.invocation.Gradle:addListener(java.lang.Object)" role="detail"><title><classname>void</classname> <literal>addListener</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> listener)</title><para>Adds the given listener to this build. The listener may implement any of the given listener interfaces:

</para><itemizedlist><listitem><apilink class="org.gradle.api.execution.TaskExecutionGraphListener"/>
</listitem><listitem><apilink class="org.gradle.api.ProjectEvaluationListener"/>
</listitem><listitem><apilink class="org.gradle.api.artifacts.DependencyResolutionListener"/>
</listitem></itemizedlist><para>The following listener types can be used, but are not supported when configuration caching is enabled.
Their usage is deprecated and adding a listener of these types become an error in a future Gradle version:</para><itemizedlist><listitem><apilink class="org.gradle.BuildListener"/>
</listitem><listitem><apilink class="org.gradle.api.execution.TaskExecutionListener"/>
</listitem><listitem><apilink class="org.gradle.api.execution.TaskActionListener"/>
</listitem><listitem><apilink class="org.gradle.api.tasks.testing.TestListener"/>
</listitem><listitem><apilink class="org.gradle.api.tasks.testing.TestOutputListener"/>
</listitem></itemizedlist></section><section id="org.gradle.api.invocation.Gradle:addProjectEvaluationListener(org.gradle.api.ProjectEvaluationListener)" role="detail"><title><apilink class="org.gradle.api.ProjectEvaluationListener"/> <literal>addProjectEvaluationListener</literal>(<apilink class="org.gradle.api.ProjectEvaluationListener"/> listener)</title><para>Adds a listener to this build, to receive notifications as projects are evaluated.</para></section><section id="org.gradle.api.invocation.Gradle:afterProject(groovy.lang.Closure)" role="detail"><title><classname>void</classname> <literal>afterProject</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> closure)</title><para>Adds a closure to be called immediately after a project is evaluated.

The project is passed to the closure as the first parameter. The project evaluation failure, if any,
is passed as the second parameter. Both parameters are optional.</para></section><section id="org.gradle.api.invocation.Gradle:afterProject(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>afterProject</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.Project"/>&gt;</classname> action)</title><para>Adds an action to be called immediately after a project is evaluated.</para></section><section id="org.gradle.api.invocation.Gradle:allprojects(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>allprojects</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.Project"/>&gt;</classname> action)</title><para>Adds an action to execute against all projects of this build.

The action is executed immediately against all projects which are
already available. It is also executed as subsequent projects are added to this build.</para></section><section id="org.gradle.api.invocation.Gradle:apply(groovy.lang.Closure)" role="detail"><title><classname>void</classname> <literal>apply</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> closure)</title><para>Applies zero or more plugins or scripts.
</para><para>
The given closure is used to configure an <apilink class="org.gradle.api.plugins.ObjectConfigurationAction"/>, which "builds" the plugin application.
</para><para>
This method differs from <apilink class="org.gradle.api.plugins.PluginAware" method="apply(java.util.Map)"/> in that it allows methods of the configuration action to be invoked more than once.</para></section><section id="org.gradle.api.invocation.Gradle:apply(java.util.Map)" role="detail"><title><classname>void</classname> <literal>apply</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, ?&gt;</classname> options)</title><para>Applies a plugin or script, using the given options provided as a map. Does nothing if the plugin has already been applied.
</para><para>
The given map is applied as a series of method calls to a newly created <apilink class="org.gradle.api.plugins.ObjectConfigurationAction"/>.
That is, each key in the map is expected to be the name of a method <apilink class="org.gradle.api.plugins.ObjectConfigurationAction"/> and the value to be compatible arguments to that method.

</para><para>The following options are available:</para><itemizedlist><listitem><literal>from</literal>: A script to apply. Accepts any path supported by <apilink class="org.gradle.api.Project" method="uri(java.lang.Object)"/>.</listitem><listitem><literal>plugin</literal>: The id or implementation class of the plugin to apply.</listitem><listitem><literal>to</literal>: The target delegate object or objects. The default is this plugin aware object. Use this to configure objects other than this object.</listitem></itemizedlist></section><section id="org.gradle.api.invocation.Gradle:apply(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>apply</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.plugins.ObjectConfigurationAction"/>&gt;</classname> action)</title><para>Applies zero or more plugins or scripts.
</para><para>
The given closure is used to configure an <apilink class="org.gradle.api.plugins.ObjectConfigurationAction"/>, which "builds" the plugin application.
</para><para>
This method differs from <apilink class="org.gradle.api.plugins.PluginAware" method="apply(java.util.Map)"/> in that it allows methods of the configuration action to be invoked more than once.</para></section><section id="org.gradle.api.invocation.Gradle:beforeProject(groovy.lang.Closure)" role="detail"><title><classname>void</classname> <literal>beforeProject</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> closure)</title><para>Adds a closure to be called immediately before a project is evaluated. The project is passed to the closure as a
parameter.</para></section><section id="org.gradle.api.invocation.Gradle:beforeProject(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>beforeProject</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.Project"/>&gt;</classname> action)</title><para>Adds an action to be called immediately before a project is evaluated.</para></section><section id="org.gradle.api.invocation.Gradle:beforeSettings(groovy.lang.Closure)" role="detail"><title><classname>void</classname> <literal>beforeSettings</literal>(<classname><ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink>&lt;?&gt;</classname> closure)</title><para>Adds an action to be called before the build settings have been loaded and evaluated.</para></section><section id="org.gradle.api.invocation.Gradle:beforeSettings(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>beforeSettings</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.initialization.Settings"/>&gt;</classname> action)</title><para>Adds an action to be called before the build settings have been loaded and evaluated.</para></section><section id="org.gradle.api.invocation.Gradle:buildFinished(groovy.lang.Closure)" role="detail"><title><classname>void</classname> <literal>buildFinished</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> closure)</title><caution><para>Note: This method is <ulink url="../userguide/feature_lifecycle.html">deprecated</ulink> and will be removed in the next major version of Gradle.</para></caution><para>Adds a closure to be called when the build is completed.

All selected tasks have been executed.
A <apilink class="org.gradle.BuildResult"/> instance is passed to the closure as a parameter.</para></section><section id="org.gradle.api.invocation.Gradle:buildFinished(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>buildFinished</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.BuildResult"/>&gt;</classname> action)</title><caution><para>Note: This method is <ulink url="../userguide/feature_lifecycle.html">deprecated</ulink> and will be removed in the next major version of Gradle.</para></caution><para>Adds an action to be called when the build is completed.

All selected tasks have been executed.</para></section><section id="org.gradle.api.invocation.Gradle:includedBuild(java.lang.String)" role="detail"><title><apilink class="org.gradle.api.initialization.IncludedBuild"/> <literal>includedBuild</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name)</title><para>Returns the included build with the specified name for this build.</para></section><section id="org.gradle.api.invocation.Gradle:projectsEvaluated(groovy.lang.Closure)" role="detail"><title><classname>void</classname> <literal>projectsEvaluated</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> closure)</title><para>Adds a closure to be called when all projects for the build have been evaluated.

The project objects are fully configured and are ready to use to populate the task graph.
This <literal>Gradle</literal> instance is passed to the closure as a parameter.</para></section><section id="org.gradle.api.invocation.Gradle:projectsEvaluated(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>projectsEvaluated</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.invocation.Gradle"/>&gt;</classname> action)</title><para>Adds an action to be called when all projects for the build have been evaluated.

The project objects are fully configured and are ready to use to populate the task graph.</para></section><section id="org.gradle.api.invocation.Gradle:projectsLoaded(groovy.lang.Closure)" role="detail"><title><classname>void</classname> <literal>projectsLoaded</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> closure)</title><para>Adds a closure to be called when the projects for the build have been created from the settings.

None of the projects have been evaluated. This <literal>Gradle</literal> instance is passed to the closure as a parameter.
</para><para>
An example of hooking into the projectsLoaded to configure buildscript classpath from the init script.
</para><programlisting language="java">
//init.gradle
gradle.projectsLoaded {
  rootProject.buildscript {
    repositories {
      //...
    }
    dependencies {
      //...
    }
  }
}
</programlisting></section><section id="org.gradle.api.invocation.Gradle:projectsLoaded(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>projectsLoaded</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.invocation.Gradle"/>&gt;</classname> action)</title><para>Adds an action to be called when the projects for the build have been created from the settings.

None of the projects have been evaluated.</para></section><section id="org.gradle.api.invocation.Gradle:removeListener(java.lang.Object)" role="detail"><title><classname>void</classname> <literal>removeListener</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> listener)</title><para>Removes the given listener from this build.</para></section><section id="org.gradle.api.invocation.Gradle:removeProjectEvaluationListener(org.gradle.api.ProjectEvaluationListener)" role="detail"><title><classname>void</classname> <literal>removeProjectEvaluationListener</literal>(<apilink class="org.gradle.api.ProjectEvaluationListener"/> listener)</title><para>Removes the given listener from this build.</para></section><section id="org.gradle.api.invocation.Gradle:rootProject(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>rootProject</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.Project"/>&gt;</classname> action)</title><para>Adds an action to execute against the root project of this build.

If the root project is already available, the action
is executed immediately. Otherwise, the action is executed when the root project becomes available.</para></section><section id="org.gradle.api.invocation.Gradle:settingsEvaluated(groovy.lang.Closure)" role="detail"><title><classname>void</classname> <literal>settingsEvaluated</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> closure)</title><para>Adds a closure to be called when the build settings have been loaded and evaluated.

The settings object is fully configured and is ready to use to load the build projects. The
<apilink class="org.gradle.api.initialization.Settings"/> object is passed to the closure as a parameter.</para></section><section id="org.gradle.api.invocation.Gradle:settingsEvaluated(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>settingsEvaluated</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.initialization.Settings"/>&gt;</classname> action)</title><para>Adds an action to be called when the build settings have been loaded and evaluated.

The settings object is fully configured and is ready to use to load the build projects.</para></section><section id="org.gradle.api.invocation.Gradle:useLogger(java.lang.Object)" role="detail"><title><classname>void</classname> <literal>useLogger</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> logger)</title><caution><para>Note: This method is <ulink url="../userguide/feature_lifecycle.html">deprecated</ulink> and will be removed in the next major version of Gradle.</para></caution><para>Uses the given object as a logger.

The logger object may implement any of the listener interfaces supported by
<apilink class="org.gradle.api.invocation.Gradle" method="addListener(java.lang.Object)"/>.
</para><para>
Each listener interface has exactly one associated logger. When you call this
method with a logger of a given listener type, the new logger will replace whichever logger is currently
associated with the listener type. This allows you to selectively replace the standard logging which Gradle
provides with your own implementation, for certain types of events.</para></section></section></chapter><chapter id="org.gradle.api.file.ProjectLayout"><title>ProjectLayout</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.file.ProjectLayout" style="javadoc"/></seg></seglistitem></segmentedlist><para>Provides access to several important locations for a project.

</para><para>An instance of this type can be injected into a task, plugin or other object by annotating a public constructor or method with <literal>javax.inject.Inject</literal>. It is also available via <apilink class="org.gradle.api.Project" method="getLayout()"/>.

</para><para><emphasis>Note:</emphasis> This interface is not intended for implementation by build script or plugin authors.</para><section><title>Properties</title><table><title>Properties - ProjectLayout</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.file.ProjectLayout:buildDirectory"><literal>buildDirectory</literal></link></td><td><para>The build directory for the project.</para></td></tr><tr><td><link linkend="org.gradle.api.file.ProjectLayout:projectDirectory"><literal>projectDirectory</literal></link></td><td><para>The project directory.</para></td></tr><tr><td><link linkend="org.gradle.api.file.ProjectLayout:settingsDirectory"><literal>settingsDirectory</literal></link></td><td><caution>Incubating</caution><para>The settings directory.
</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - ProjectLayout</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.file.ProjectLayout:dir(org.gradle.api.provider.Provider)">dir</link>(file)</literal></td><td><para>Creates a <apilink class="org.gradle.api.file.Directory"/> provider whose location is calculated from the given <apilink class="org.gradle.api.provider.Provider"/>.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.file.ProjectLayout:file(org.gradle.api.provider.Provider)">file</link>(file)</literal></td><td><para>Creates a <apilink class="org.gradle.api.file.RegularFile"/> provider whose location is calculated from the given <apilink class="org.gradle.api.provider.Provider"/>.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.file.ProjectLayout:files(java.lang.Object[])">files</link>(paths)</literal></td><td><para>Creates a read-only <apilink class="org.gradle.api.file.FileCollection"/> containing the given files, as defined by <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/>.

</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.file.ProjectLayout:buildDirectory" role="detail"><title><apilink class="org.gradle.api.file.DirectoryProperty"/> <literal>buildDirectory</literal></title><para>The build directory for the project.</para></section><section id="org.gradle.api.file.ProjectLayout:projectDirectory" role="detail"><title><apilink class="org.gradle.api.file.Directory"/> <literal>projectDirectory</literal> (read-only)</title><para>The project directory.</para></section><section id="org.gradle.api.file.ProjectLayout:settingsDirectory" role="detail"><title><apilink class="org.gradle.api.file.Directory"/> <literal>settingsDirectory</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The settings directory.
</para><para>
The settings directory is the directory containing the settings file.
It is shared by all projects in the build.</para></section></section><section><title>Method details</title><section id="org.gradle.api.file.ProjectLayout:dir(org.gradle.api.provider.Provider)" role="detail"><title><classname><apilink class="org.gradle.api.provider.Provider"/>&lt;<apilink class="org.gradle.api.file.Directory"/>&gt;</classname> <literal>dir</literal>(<classname><apilink class="org.gradle.api.provider.Provider"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink>&gt;</classname> file)</title><para>Creates a <apilink class="org.gradle.api.file.Directory"/> provider whose location is calculated from the given <apilink class="org.gradle.api.provider.Provider"/>.
</para><para>
File system locations based on relative paths will be
resolved against this layout's reference location, as defined by <apilink class="org.gradle.api.file.ProjectLayout" method="getProjectDirectory()"/>.</para></section><section id="org.gradle.api.file.ProjectLayout:file(org.gradle.api.provider.Provider)" role="detail"><title><classname><apilink class="org.gradle.api.provider.Provider"/>&lt;<apilink class="org.gradle.api.file.RegularFile"/>&gt;</classname> <literal>file</literal>(<classname><apilink class="org.gradle.api.provider.Provider"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink>&gt;</classname> file)</title><para>Creates a <apilink class="org.gradle.api.file.RegularFile"/> provider whose location is calculated from the given <apilink class="org.gradle.api.provider.Provider"/>.
</para><para>
File system locations based on relative paths will be
resolved against this layout's reference location, as defined by <apilink class="org.gradle.api.file.ProjectLayout" method="getProjectDirectory()"/>.</para></section><section id="org.gradle.api.file.ProjectLayout:files(java.lang.Object[])" role="detail"><title><apilink class="org.gradle.api.file.FileCollection"/> <literal>files</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink>...</classname> paths)</title><para>Creates a read-only <apilink class="org.gradle.api.file.FileCollection"/> containing the given files, as defined by <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/>.

</para><para>This method can also be used to create an empty collection, but the collection may not be mutated later.</para></section></section></chapter><chapter id="org.gradle.normalization.InputNormalizationHandler"><title>InputNormalizationHandler</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.normalization.InputNormalizationHandler" style="javadoc"/></seg></seglistitem></segmentedlist><para>Used to configure input normalization.

Currently, it is only possible to configure runtime classpath normalization.</para><section><title>Properties</title><table><title>Properties - InputNormalizationHandler</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.normalization.InputNormalizationHandler:runtimeClasspath"><literal>runtimeClasspath</literal></link></td><td><para>The normalization strategy for the runtime classpath.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - InputNormalizationHandler</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.normalization.InputNormalizationHandler:runtimeClasspath(org.gradle.api.Action)">runtimeClasspath</link>(configuration)</literal></td><td><para>Configures the normalization strategy for the runtime classpath.</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.normalization.InputNormalizationHandler:runtimeClasspath" role="detail"><title><apilink class="org.gradle.normalization.RuntimeClasspathNormalization"/> <literal>runtimeClasspath</literal> (read-only)</title><para>The normalization strategy for the runtime classpath.</para></section></section><section><title>Method details</title><section id="org.gradle.normalization.InputNormalizationHandler:runtimeClasspath(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>runtimeClasspath</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.normalization.RuntimeClasspathNormalization"/>&gt;</classname> configuration)</title><para>Configures the normalization strategy for the runtime classpath.</para></section></section></chapter><chapter id="org.gradle.normalization.InputNormalization"><title>InputNormalization</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.normalization.InputNormalization" style="javadoc"/></seg></seglistitem></segmentedlist><segmentedlist><segtitle>Known Subtypes</segtitle><seglistitem><seg><simplelist columns="1" type="vert"><member><apilink class="org.gradle.normalization.RuntimeClasspathNormalization"/></member></simplelist></seg></seglistitem></segmentedlist><para>Input normalization configuration.

Input normalization is used when Gradle tries to determine if two task inputs are different.
Gradle normalizes both inputs and the inputs are considered different if and only if the normalizations are different.</para><section><title>Properties</title><para>No properties</para></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section></chapter><chapter id="org.gradle.normalization.RuntimeClasspathNormalization"><title>RuntimeClasspathNormalization</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.normalization.RuntimeClasspathNormalization" style="javadoc"/></seg></seglistitem></segmentedlist><para>Configuration of runtime classpath normalization.

</para><para>Several methods accept a file pattern to selectively normalize files.  Patterns may include:</para><itemizedlist><listitem>'*' to match any number of characters

</listitem><listitem>'?' to match any single character

</listitem><listitem>'**' to match any number of directories or files

</listitem></itemizedlist><para>Either '/' or '\' may be used in a pattern to separate directories. Patterns ending with '/' or '\' will have '**'
automatically appended.</para><para>Examples:</para><programlisting language="java">
all files ending with '.json' (including files in subdirectories)
   **/*.json
</programlisting><programlisting language="java">
all files beginning with 'build-' in the level1/level2 directory
   level1/level2/build-*
</programlisting><programlisting language="java">
all files (including subdirectories) beneath config/build-data
  config/build-data/
</programlisting><programlisting language="java">
all properties files in a build directory beneath com/acme (including subdirectories)
  com/acme/**/build/*.properties
</programlisting><section><title>Properties</title><para>No properties</para></section><section><title>Methods</title><table><title>Methods - RuntimeClasspathNormalization</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.normalization.RuntimeClasspathNormalization:ignore(java.lang.String)">ignore</link>(pattern)</literal></td><td><para>Ignore resources in classpath entries matching <literal>pattern</literal>.</para></td></tr><tr><td><literal><link linkend="org.gradle.normalization.RuntimeClasspathNormalization:properties(java.lang.String, org.gradle.api.Action)">properties</link>(pattern, configuration)</literal></td><td><para>Normalize files matching <literal>pattern</literal> as properties files, ignoring comments and property order, applying the rules provided by <literal>configuration</literal>.</para></td></tr><tr><td><literal><link linkend="org.gradle.normalization.RuntimeClasspathNormalization:properties(org.gradle.api.Action)">properties</link>(configuration)</literal></td><td><para>Normalize all properties files according to the rules provided by <literal>configuration</literal>.  This is equivalent to calling <apilink class="org.gradle.normalization.RuntimeClasspathNormalization" method="properties(java.lang.String, org.gradle.api.Action)"/> with the '**/*.properties' pattern.</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Method details</title><section id="org.gradle.normalization.RuntimeClasspathNormalization:ignore(java.lang.String)" role="detail"><title><classname>void</classname> <literal>ignore</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> pattern)</title><para>Ignore resources in classpath entries matching <literal>pattern</literal>.</para></section><section id="org.gradle.normalization.RuntimeClasspathNormalization:properties(java.lang.String, org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>properties</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> pattern, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.normalization.PropertiesFileNormalization"/>&gt;</classname> configuration)</title><para>Normalize files matching <literal>pattern</literal> as properties files, ignoring comments and property order, applying the rules provided by <literal>configuration</literal>.</para></section><section id="org.gradle.normalization.RuntimeClasspathNormalization:properties(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>properties</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.normalization.PropertiesFileNormalization"/>&gt;</classname> configuration)</title><para>Normalize all properties files according to the rules provided by <literal>configuration</literal>.  This is equivalent to calling <apilink class="org.gradle.normalization.RuntimeClasspathNormalization" method="properties(java.lang.String, org.gradle.api.Action)"/> with the '**/*.properties' pattern.</para></section></section></chapter><chapter id="org.gradle.api.resources.ResourceHandler"><title>ResourceHandler</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.resources.ResourceHandler" style="javadoc"/></seg></seglistitem></segmentedlist><para>Provides access to resource-specific utility methods, for example factory methods that create various resources.</para><section><title>Properties</title><table><title>Properties - ResourceHandler</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.resources.ResourceHandler:text"><literal>text</literal></link></td><td><para>Returns a factory for creating <literal>TextResource</literal>s from various sources such as
strings, files, and archive entries.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - ResourceHandler</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.resources.ResourceHandler:bzip2(java.lang.Object)">bzip2</link>(path)</literal></td><td><para>Creates resource that points to a bzip2 compressed file at the given path.
The path is evaluated as per <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/>.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.resources.ResourceHandler:gzip(java.lang.Object)">gzip</link>(path)</literal></td><td><para>Creates resource that points to a gzip compressed file at the given path.
The path is evaluated as per <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/>.</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.resources.ResourceHandler:text" role="detail"><title><apilink class="org.gradle.api.resources.TextResourceFactory"/> <literal>text</literal> (read-only)</title><para>Returns a factory for creating <literal>TextResource</literal>s from various sources such as
strings, files, and archive entries.</para></section></section><section><title>Method details</title><section id="org.gradle.api.resources.ResourceHandler:bzip2(java.lang.Object)" role="detail"><title><apilink class="org.gradle.api.resources.ReadableResource"/> <literal>bzip2</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> path)</title><para>Creates resource that points to a bzip2 compressed file at the given path.
The path is evaluated as per <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/>.</para></section><section id="org.gradle.api.resources.ResourceHandler:gzip(java.lang.Object)" role="detail"><title><apilink class="org.gradle.api.resources.ReadableResource"/> <literal>gzip</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> path)</title><para>Creates resource that points to a gzip compressed file at the given path.
The path is evaluated as per <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/>.</para></section></section></chapter><chapter id="org.gradle.api.resources.TextResourceFactory"><title>TextResourceFactory</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.resources.TextResourceFactory" style="javadoc"/></seg></seglistitem></segmentedlist><para>Creates <literal>TextResource</literal>s backed by sources such as strings, files, and archive entries.

</para><para>Example usages:

</para><programlisting language="java">
def sourcedFromString = resources.text.fromString("some text content")

def sourcedFromFile = resources.text.fromFile("path/to/file.txt")

task someTask {} // assumption: produces a text file and declares it as output
def sourcedFromTask = resources.text.fromFile(someTask)

def sourcedFromArchiveEntry =
  resources.text.fromArchiveEntry("path/to/archive.zip", "path/to/archive/entry.txt")

configurations { someConfig } // assumption: contains a single archive
def sourcedFromConfiguration =
  resources.text.fromArchiveEntry(configurations.someConfig, "path/to/archive/entry.txt")

def sourceFromUri = resources.text.fromUri("https://example.com/resource")

def sourceFromInsecureUri = resources.text.fromInsecureUri("http://example.com/resource")
</programlisting><para>

File based factory methods optionally accept a character encoding. If no encoding is specified,
the platform's default encoding is used.</para><section><title>Properties</title><para>No properties</para></section><section><title>Methods</title><table><title>Methods - TextResourceFactory</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.resources.TextResourceFactory:fromArchiveEntry(java.lang.Object, java.lang.String)">fromArchiveEntry</link>(archive, path)</literal></td><td><para>Same as <literal>fromArchiveEntry(archive, path, Charset.defaultCharset().name())</literal>.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.resources.TextResourceFactory:fromArchiveEntry(java.lang.Object, java.lang.String, java.lang.String)">fromArchiveEntry</link>(archive, entryPath, charset)</literal></td><td><para>Creates a text resource backed by the archive entry at the given path within the given archive.
The archive format is determined based on the archive's file extension. If the archive format
is not supported or cannot be determined, any attempt to access the resource will fail with an exception.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.resources.TextResourceFactory:fromFile(java.lang.Object)">fromFile</link>(file)</literal></td><td><para>Same as <literal>fromFile(file, Charset.defaultCharset())</literal>.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.resources.TextResourceFactory:fromFile(java.lang.Object, java.lang.String)">fromFile</link>(file, charset)</literal></td><td><para>Creates a text resource backed by the given file.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.resources.TextResourceFactory:fromInsecureUri(java.lang.Object)">fromInsecureUri</link>(uri)</literal></td><td><para>Creates a text resource backed by the given uri.

<emphasis>NOTE:</emphasis> This method allows insecure protocols (like HTTP) to be used. Only use this method if you're comfortable with the dangers.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.resources.TextResourceFactory:fromString(java.lang.String)">fromString</link>(string)</literal></td><td><para>Creates a text resource backed by the given string.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.resources.TextResourceFactory:fromUri(java.lang.Object)">fromUri</link>(uri)</literal></td><td><para>Creates a text resource backed by the given uri.</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Method details</title><section id="org.gradle.api.resources.TextResourceFactory:fromArchiveEntry(java.lang.Object, java.lang.String)" role="detail"><title><apilink class="org.gradle.api.resources.TextResource"/> <literal>fromArchiveEntry</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> archive, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> path)</title><para>Same as <literal>fromArchiveEntry(archive, path, Charset.defaultCharset().name())</literal>.</para></section><section id="org.gradle.api.resources.TextResourceFactory:fromArchiveEntry(java.lang.Object, java.lang.String, java.lang.String)" role="detail"><title><apilink class="org.gradle.api.resources.TextResource"/> <literal>fromArchiveEntry</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> archive, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> entryPath, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> charset)</title><para>Creates a text resource backed by the archive entry at the given path within the given archive.
The archive format is determined based on the archive's file extension. If the archive format
is not supported or cannot be determined, any attempt to access the resource will fail with an exception.</para></section><section id="org.gradle.api.resources.TextResourceFactory:fromFile(java.lang.Object)" role="detail"><title><apilink class="org.gradle.api.resources.TextResource"/> <literal>fromFile</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> file)</title><para>Same as <literal>fromFile(file, Charset.defaultCharset())</literal>.</para></section><section id="org.gradle.api.resources.TextResourceFactory:fromFile(java.lang.Object, java.lang.String)" role="detail"><title><apilink class="org.gradle.api.resources.TextResource"/> <literal>fromFile</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> file, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> charset)</title><para>Creates a text resource backed by the given file.</para></section><section id="org.gradle.api.resources.TextResourceFactory:fromInsecureUri(java.lang.Object)" role="detail"><title><apilink class="org.gradle.api.resources.TextResource"/> <literal>fromInsecureUri</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> uri)</title><para>Creates a text resource backed by the given uri.

<emphasis>NOTE:</emphasis> This method allows insecure protocols (like HTTP) to be used. Only use this method if you're comfortable with the dangers.</para></section><section id="org.gradle.api.resources.TextResourceFactory:fromString(java.lang.String)" role="detail"><title><apilink class="org.gradle.api.resources.TextResource"/> <literal>fromString</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> string)</title><para>Creates a text resource backed by the given string.</para></section><section id="org.gradle.api.resources.TextResourceFactory:fromUri(java.lang.Object)" role="detail"><title><apilink class="org.gradle.api.resources.TextResource"/> <literal>fromUri</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> uri)</title><para>Creates a text resource backed by the given uri.</para></section></section></chapter><chapter id="org.gradle.api.tasks.TaskCollection"><title>TaskCollection</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.tasks.TaskCollection" style="javadoc"/></seg></seglistitem></segmentedlist><segmentedlist><segtitle>Known Subtypes</segtitle><seglistitem><seg><simplelist columns="1" type="vert"><member><apilink class="org.gradle.api.tasks.TaskContainer"/></member></simplelist></seg></seglistitem></segmentedlist><para>A <literal>TaskCollection</literal> contains a set of <apilink class="org.gradle.api.Task"/> instances, and provides a number of query methods.</para><section><title>Properties</title><para>No properties</para></section><section><title>Methods</title><table><title>Methods - TaskCollection</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.tasks.TaskCollection:getByName(java.lang.String)">getByName</link>(name)</literal></td><td><para>Locates an object by name, failing if there is no such object.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.TaskCollection:getByName(java.lang.String, groovy.lang.Closure)">getByName</link>(name, configureClosure)</literal></td><td><para>Locates an object by name, failing if there is no such object. The given configure closure is executed against
the object before it is returned from this method. The object is passed to the closure as its delegate.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.TaskCollection:getByName(java.lang.String, org.gradle.api.Action)">getByName</link>(name, configureAction)</literal></td><td><para>Locates an object by name, failing if there is no such object. The given configure action is executed against
the object before it is returned from this method.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.TaskCollection:named(java.lang.String)">named</link>(name)</literal></td><td><para>Locates a task by name, without triggering its creation or configuration, failing if there is no such object.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.TaskCollection:named(java.lang.String, java.lang.Class)">named</link>(name, type)</literal></td><td><para>Locates a object by name and type, failing if there is no such object.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.TaskCollection:named(java.lang.String, java.lang.Class, org.gradle.api.Action)">named</link>(name, type, configurationAction)</literal></td><td><para>Locates a object by name and type, failing if there is no such object.
The given configure action is executed against the object before it is returned from the provider.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.TaskCollection:named(java.lang.String, org.gradle.api.Action)">named</link>(name, configurationAction)</literal></td><td><para>Locates a object by name, failing if there is no such object.
The given configure action is executed against the object before it is returned from the provider.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.TaskCollection:named(org.gradle.api.specs.Spec)">named</link>(nameFilter)</literal></td><td><para>Returns a collection containing the objects with names matching the provided filter.
The returned collection is live, so that when matching objects are added to this collection,
they are also visible in the filtered collection.
</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Method details</title><section id="org.gradle.api.tasks.TaskCollection:getByName(java.lang.String)" role="detail"><title><classname>T</classname> <literal>getByName</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name)</title><para>Locates an object by name, failing if there is no such object.
</para><para>
This operation is eager and will cause the returned element to be realized.</para></section><section id="org.gradle.api.tasks.TaskCollection:getByName(java.lang.String, groovy.lang.Closure)" role="detail"><title><classname>T</classname> <literal>getByName</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> configureClosure)</title><para>Locates an object by name, failing if there is no such object. The given configure closure is executed against
the object before it is returned from this method. The object is passed to the closure as its delegate.
</para><para>
This operation is eager and will cause the returned element to be realized.</para></section><section id="org.gradle.api.tasks.TaskCollection:getByName(java.lang.String, org.gradle.api.Action)" role="detail"><title><classname>T</classname> <literal>getByName</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <classname>T</classname>&gt;</classname> configureAction)</title><para>Locates an object by name, failing if there is no such object. The given configure action is executed against
the object before it is returned from this method.
</para><para>
This operation is eager and will cause the returned element to be realized.</para></section><section id="org.gradle.api.tasks.TaskCollection:named(java.lang.String)" role="detail"><title><classname><apilink class="org.gradle.api.tasks.TaskProvider"/>&lt;<classname>T</classname>&gt;</classname> <literal>named</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name)</title><para>Locates a task by name, without triggering its creation or configuration, failing if there is no such object.</para></section><section id="org.gradle.api.tasks.TaskCollection:named(java.lang.String, java.lang.Class)" role="detail"><title><classname><apilink class="org.gradle.api.tasks.TaskProvider"/>&lt;<classname>S</classname>&gt;</classname> <literal>named</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html"><classname>Class</classname></ulink>&lt;<classname>S</classname>&gt;</classname> type)</title><para>Locates a object by name and type, failing if there is no such object.
</para><para>
This method is lazy and will not cause the returned element to be realized.</para></section><section id="org.gradle.api.tasks.TaskCollection:named(java.lang.String, java.lang.Class, org.gradle.api.Action)" role="detail"><title><classname><apilink class="org.gradle.api.tasks.TaskProvider"/>&lt;<classname>S</classname>&gt;</classname> <literal>named</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html"><classname>Class</classname></ulink>&lt;<classname>S</classname>&gt;</classname> type, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <classname>S</classname>&gt;</classname> configurationAction)</title><para>Locates a object by name and type, failing if there is no such object.
The given configure action is executed against the object before it is returned from the provider.
</para><para>
This method is lazy and will not cause the returned element to be realized.</para></section><section id="org.gradle.api.tasks.TaskCollection:named(java.lang.String, org.gradle.api.Action)" role="detail"><title><classname><apilink class="org.gradle.api.tasks.TaskProvider"/>&lt;<classname>T</classname>&gt;</classname> <literal>named</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <classname>T</classname>&gt;</classname> configurationAction)</title><para>Locates a object by name, failing if there is no such object.
The given configure action is executed against the object before it is returned from the provider.
</para><para>
This method is lazy and will not cause the returned element to be realized.</para></section><section id="org.gradle.api.tasks.TaskCollection:named(org.gradle.api.specs.Spec)" role="detail"><title><classname><apilink class="org.gradle.api.tasks.TaskCollection"/>&lt;<classname>T</classname>&gt;</classname> <literal>named</literal>(<classname><apilink class="org.gradle.api.specs.Spec"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> nameFilter)</title><para>Returns a collection containing the objects with names matching the provided filter.
The returned collection is live, so that when matching objects are added to this collection,
they are also visible in the filtered collection.
</para><para>
This method is an intermediate operation. It does not change the realized/unrealized state of the elements in the collection.</para></section></section></chapter><chapter id="org.gradle.api.PolymorphicDomainObjectContainer"><title>PolymorphicDomainObjectContainer</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.PolymorphicDomainObjectContainer" style="javadoc"/></seg></seglistitem></segmentedlist><segmentedlist><segtitle>Known Subtypes</segtitle><seglistitem><seg><simplelist columns="1" type="vert"><member><apilink class="org.gradle.api.tasks.TaskContainer"/></member><member><apilink class="org.gradle.api.artifacts.repositories.AuthenticationContainer"/></member></simplelist></seg></seglistitem></segmentedlist><para>A <apilink class="org.gradle.api.NamedDomainObjectContainer"/> that allows you to create objects with different types.</para><section><title>Properties</title><para>No properties</para></section><section><title>Methods</title><table><title>Methods - PolymorphicDomainObjectContainer</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.PolymorphicDomainObjectContainer:containerWithType(java.lang.Class)">containerWithType</link>(type)</literal></td><td><para>Creates a regular container that wraps the polymorphic container presenting all elements of a specified type.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.PolymorphicDomainObjectContainer:create(java.lang.String)">create</link>(name)</literal></td><td><para>Creates a new item with the given name, adding it to this container.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.PolymorphicDomainObjectContainer:create(java.lang.String, groovy.lang.Closure)">create</link>(name, configureClosure)</literal></td><td><para>Creates a new item with the given name, adding it to this container, then configuring it with the given closure.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.PolymorphicDomainObjectContainer:create(java.lang.String, java.lang.Class)">create</link>(name, type)</literal></td><td><para>Creates a domain object with the specified name and type, and adds it to the container.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.PolymorphicDomainObjectContainer:create(java.lang.String, java.lang.Class, org.gradle.api.Action)">create</link>(name, type, configuration)</literal></td><td><para>Creates a domain object with the specified name and type, adds it to the container, and configures
it with the specified action.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.PolymorphicDomainObjectContainer:create(java.lang.String, org.gradle.api.Action)">create</link>(name, configureAction)</literal></td><td><para>Creates a new item with the given name, adding it to this container, then configuring it with the given action.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.PolymorphicDomainObjectContainer:getByName(java.lang.String)">getByName</link>(name)</literal></td><td><para>Locates an object by name, failing if there is no such object.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.PolymorphicDomainObjectContainer:getByName(java.lang.String, groovy.lang.Closure)">getByName</link>(name, configureClosure)</literal></td><td><para>Locates an object by name, failing if there is no such object. The given configure closure is executed against
the object before it is returned from this method. The object is passed to the closure as its delegate.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.PolymorphicDomainObjectContainer:getByName(java.lang.String, org.gradle.api.Action)">getByName</link>(name, configureAction)</literal></td><td><para>Locates an object by name, failing if there is no such object. The given configure action is executed against
the object before it is returned from this method.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.PolymorphicDomainObjectContainer:maybeCreate(java.lang.String)">maybeCreate</link>(name)</literal></td><td><para>Looks for an item with the given name, creating and adding it to this container if it does not exist.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.PolymorphicDomainObjectContainer:maybeCreate(java.lang.String, java.lang.Class)">maybeCreate</link>(name, type)</literal></td><td><para>Looks for an item with the given name and type, creating and adding it to this container if it does not exist.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.PolymorphicDomainObjectContainer:named(java.lang.String)">named</link>(name)</literal></td><td><para>Locates a object by name, failing if there is no such object.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.PolymorphicDomainObjectContainer:named(java.lang.String, java.lang.Class)">named</link>(name, type)</literal></td><td><para>Locates a object by name and type, failing if there is no such object.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.PolymorphicDomainObjectContainer:named(java.lang.String, java.lang.Class, org.gradle.api.Action)">named</link>(name, type, configurationAction)</literal></td><td><para>Locates a object by name and type, failing if there is no such object.
The given configure action is executed against the object before it is returned from the provider.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.PolymorphicDomainObjectContainer:named(java.lang.String, org.gradle.api.Action)">named</link>(name, configurationAction)</literal></td><td><para>Locates a object by name, failing if there is no such object.
The given configure action is executed against the object before it is returned from the provider.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.PolymorphicDomainObjectContainer:named(org.gradle.api.specs.Spec)">named</link>(nameFilter)</literal></td><td><caution>Incubating</caution><para>Returns a collection containing the objects with names matching the provided filter.
The returned collection is live, so that when matching objects are added to this collection,
they are also visible in the filtered collection.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.PolymorphicDomainObjectContainer:register(java.lang.String)">register</link>(name)</literal></td><td><para>Defines a new object, which will be created when it is required. A object is 'required' when the object is located using query methods such as <apilink class="org.gradle.api.NamedDomainObjectCollection" method="getByName(java.lang.String)"/> or when <apilink class="org.gradle.api.provider.Provider" method="get()"/> is called on the return value of this method.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.PolymorphicDomainObjectContainer:register(java.lang.String, org.gradle.api.Action)">register</link>(name, configurationAction)</literal></td><td><para>Defines a new object, which will be created and configured when it is required. An object is 'required' when the object is located using query methods such as <apilink class="org.gradle.api.NamedDomainObjectCollection" method="getByName(java.lang.String)"/> or when <apilink class="org.gradle.api.provider.Provider" method="get()"/> is called on the return value of this method.
</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Method details</title><section id="org.gradle.api.PolymorphicDomainObjectContainer:containerWithType(java.lang.Class)" role="detail"><title><classname><apilink class="org.gradle.api.NamedDomainObjectContainer"/>&lt;<classname>U</classname>&gt;</classname> <literal>containerWithType</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html"><classname>Class</classname></ulink>&lt;<classname>U</classname>&gt;</classname> type)</title><para>Creates a regular container that wraps the polymorphic container presenting all elements of a specified type.
</para><para>
This method is an intermediate operation. It does not change the realized/unrealized state of the elements in the collection.</para></section><section id="org.gradle.api.PolymorphicDomainObjectContainer:create(java.lang.String)" role="detail"><title><classname>T</classname> <literal>create</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name)</title><para>Creates a new item with the given name, adding it to this container.
</para><para>
This operation is eager, the element is realized before being returned.</para></section><section id="org.gradle.api.PolymorphicDomainObjectContainer:create(java.lang.String, groovy.lang.Closure)" role="detail"><title><classname>T</classname> <literal>create</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> configureClosure)</title><para>Creates a new item with the given name, adding it to this container, then configuring it with the given closure.
</para><para>
This operation is eager, the element is realized before being returned.</para></section><section id="org.gradle.api.PolymorphicDomainObjectContainer:create(java.lang.String, java.lang.Class)" role="detail"><title><classname>U</classname> <literal>create</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html"><classname>Class</classname></ulink>&lt;<classname>U</classname>&gt;</classname> type)</title><para>Creates a domain object with the specified name and type, and adds it to the container.
</para><para>
This operation is eager, the element is realized before being returned.</para></section><section id="org.gradle.api.PolymorphicDomainObjectContainer:create(java.lang.String, java.lang.Class, org.gradle.api.Action)" role="detail"><title><classname>U</classname> <literal>create</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html"><classname>Class</classname></ulink>&lt;<classname>U</classname>&gt;</classname> type, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <classname>U</classname>&gt;</classname> configuration)</title><para>Creates a domain object with the specified name and type, adds it to the container, and configures
it with the specified action.
</para><para>
This operation is eager, the element is realized before being returned.</para></section><section id="org.gradle.api.PolymorphicDomainObjectContainer:create(java.lang.String, org.gradle.api.Action)" role="detail"><title><classname>T</classname> <literal>create</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <classname>T</classname>&gt;</classname> configureAction)</title><para>Creates a new item with the given name, adding it to this container, then configuring it with the given action.
</para><para>
This operation is eager, the element is realized before being returned.</para></section><section id="org.gradle.api.PolymorphicDomainObjectContainer:getByName(java.lang.String)" role="detail"><title><classname>T</classname> <literal>getByName</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name)</title><para>Locates an object by name, failing if there is no such object.
</para><para>
This operation is eager and will cause the returned element to be realized.</para></section><section id="org.gradle.api.PolymorphicDomainObjectContainer:getByName(java.lang.String, groovy.lang.Closure)" role="detail"><title><classname>T</classname> <literal>getByName</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> configureClosure)</title><para>Locates an object by name, failing if there is no such object. The given configure closure is executed against
the object before it is returned from this method. The object is passed to the closure as its delegate.
</para><para>
This operation is eager and will cause the returned element to be realized.</para></section><section id="org.gradle.api.PolymorphicDomainObjectContainer:getByName(java.lang.String, org.gradle.api.Action)" role="detail"><title><classname>T</classname> <literal>getByName</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <classname>T</classname>&gt;</classname> configureAction)</title><para>Locates an object by name, failing if there is no such object. The given configure action is executed against
the object before it is returned from this method.
</para><para>
This operation is eager and will cause the returned element to be realized.</para></section><section id="org.gradle.api.PolymorphicDomainObjectContainer:maybeCreate(java.lang.String)" role="detail"><title><classname>T</classname> <literal>maybeCreate</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name)</title><para>Looks for an item with the given name, creating and adding it to this container if it does not exist.
</para><para>
This operation is eager, the element is realized before being returned.</para></section><section id="org.gradle.api.PolymorphicDomainObjectContainer:maybeCreate(java.lang.String, java.lang.Class)" role="detail"><title><classname>U</classname> <literal>maybeCreate</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html"><classname>Class</classname></ulink>&lt;<classname>U</classname>&gt;</classname> type)</title><para>Looks for an item with the given name and type, creating and adding it to this container if it does not exist.
</para><para>
This operation is eager, the element is realized before being returned.</para></section><section id="org.gradle.api.PolymorphicDomainObjectContainer:named(java.lang.String)" role="detail"><title><classname><apilink class="org.gradle.api.NamedDomainObjectProvider"/>&lt;<classname>T</classname>&gt;</classname> <literal>named</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name)</title><para>Locates a object by name, failing if there is no such object.
</para><para>
This method is lazy and will not cause the returned element to be realized.</para></section><section id="org.gradle.api.PolymorphicDomainObjectContainer:named(java.lang.String, java.lang.Class)" role="detail"><title><classname><apilink class="org.gradle.api.NamedDomainObjectProvider"/>&lt;<classname>S</classname>&gt;</classname> <literal>named</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html"><classname>Class</classname></ulink>&lt;<classname>S</classname>&gt;</classname> type)</title><para>Locates a object by name and type, failing if there is no such object.
</para><para>
This method is lazy and will not cause the returned element to be realized.</para></section><section id="org.gradle.api.PolymorphicDomainObjectContainer:named(java.lang.String, java.lang.Class, org.gradle.api.Action)" role="detail"><title><classname><apilink class="org.gradle.api.NamedDomainObjectProvider"/>&lt;<classname>S</classname>&gt;</classname> <literal>named</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html"><classname>Class</classname></ulink>&lt;<classname>S</classname>&gt;</classname> type, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <classname>S</classname>&gt;</classname> configurationAction)</title><para>Locates a object by name and type, failing if there is no such object.
The given configure action is executed against the object before it is returned from the provider.
</para><para>
This method is lazy and will not cause the returned element to be realized.</para></section><section id="org.gradle.api.PolymorphicDomainObjectContainer:named(java.lang.String, org.gradle.api.Action)" role="detail"><title><classname><apilink class="org.gradle.api.NamedDomainObjectProvider"/>&lt;<classname>T</classname>&gt;</classname> <literal>named</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <classname>T</classname>&gt;</classname> configurationAction)</title><para>Locates a object by name, failing if there is no such object.
The given configure action is executed against the object before it is returned from the provider.
</para><para>
This method is lazy and will not cause the returned element to be realized.</para></section><section id="org.gradle.api.PolymorphicDomainObjectContainer:named(org.gradle.api.specs.Spec)" role="detail"><title><classname><apilink class="org.gradle.api.NamedDomainObjectCollection"/>&lt;<classname>T</classname>&gt;</classname> <literal>named</literal>(<classname><apilink class="org.gradle.api.specs.Spec"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> nameFilter)</title><caution><para>Note: This method is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Returns a collection containing the objects with names matching the provided filter.
The returned collection is live, so that when matching objects are added to this collection,
they are also visible in the filtered collection.
</para><para>
This method is an intermediate operation. It does not change the realized/unrealized state of the elements in the collection.</para></section><section id="org.gradle.api.PolymorphicDomainObjectContainer:register(java.lang.String)" role="detail"><title><classname><apilink class="org.gradle.api.NamedDomainObjectProvider"/>&lt;<classname>T</classname>&gt;</classname> <literal>register</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name)</title><para>Defines a new object, which will be created when it is required. A object is 'required' when the object is located using query methods such as <apilink class="org.gradle.api.NamedDomainObjectCollection" method="getByName(java.lang.String)"/> or when <apilink class="org.gradle.api.provider.Provider" method="get()"/> is called on the return value of this method.
</para><para>
It is generally more efficient to use this method instead of <apilink class="org.gradle.api.NamedDomainObjectContainer" method="create(java.lang.String)"/>, as that method will eagerly create the object, regardless of whether that object is required for the current build or not.
This method, on the other hand, will defer creation until required.
</para><para>
This operation is lazy, the returned element is NOT realized.
A <apilink class="org.gradle.api.NamedDomainObjectProvider"/> is returned, allowing to continue to use it with other lazy APIs.</para></section><section id="org.gradle.api.PolymorphicDomainObjectContainer:register(java.lang.String, org.gradle.api.Action)" role="detail"><title><classname><apilink class="org.gradle.api.NamedDomainObjectProvider"/>&lt;<classname>T</classname>&gt;</classname> <literal>register</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <classname>T</classname>&gt;</classname> configurationAction)</title><para>Defines a new object, which will be created and configured when it is required. An object is 'required' when the object is located using query methods such as <apilink class="org.gradle.api.NamedDomainObjectCollection" method="getByName(java.lang.String)"/> or when <apilink class="org.gradle.api.provider.Provider" method="get()"/> is called on the return value of this method.
</para><para>
It is generally more efficient to use this method instead of <apilink class="org.gradle.api.NamedDomainObjectContainer" method="create(java.lang.String, org.gradle.api.Action)"/> or <apilink class="org.gradle.api.NamedDomainObjectContainer" method="create(java.lang.String)"/>, as those methods will eagerly create and configure the object, regardless of whether that object is required for the current build or not.
This method, on the other hand, will defer creation and configuration until required.
</para><para>
This operation is lazy, the returned element is NOT realized.
A <apilink class="org.gradle.api.NamedDomainObjectProvider"/> is returned, allowing to continue to use it with other lazy APIs.</para></section></section></chapter><chapter id="org.gradle.api.tasks.TaskContainer"><title>TaskContainer</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.tasks.TaskContainer" style="javadoc"/></seg></seglistitem></segmentedlist><para>A <literal>TaskContainer</literal> is responsible for managing a set of <apilink class="org.gradle.api.Task"/> instances.</para><para>You can obtain a <literal>TaskContainer</literal> instance by calling <apilink class="org.gradle.api.Project" method="getTasks()"/>, or using the
<literal>tasks</literal> property in your build script.</para><section><title>Properties</title><para>No properties</para></section><section><title>Methods</title><table><title>Methods - TaskContainer</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.tasks.TaskContainer:containerWithType(java.lang.Class)">containerWithType</link>(type)</literal></td><td><para>Creates a regular container that wraps the polymorphic container presenting all elements of a specified type.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.TaskContainer:create(java.lang.String)">create</link>(name)</literal></td><td><caution>Deprecated</caution><para>Creates a <apilink class="org.gradle.api.Task"/> with the given name and adds it to this container.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.TaskContainer:create(java.lang.String, groovy.lang.Closure)">create</link>(name, configureClosure)</literal></td><td><caution>Deprecated</caution><para>Creates a <apilink class="org.gradle.api.Task"/> with the given name adds it to this container. The given closure is used to configure
the task before it is returned by this method.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.TaskContainer:create(java.lang.String, java.lang.Class)">create</link>(name, type)</literal></td><td><caution>Deprecated</caution><para>Creates a <apilink class="org.gradle.api.Task"/> with the given name and type, and adds it to this container.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.TaskContainer:create(java.lang.String, java.lang.Class, java.lang.Object[])">create</link>(name, type, constructorArgs)</literal></td><td><caution>Deprecated</caution><para>Creates a <apilink class="org.gradle.api.Task"/> with the given name and type, passing the given arguments to the <literal>@Inject</literal>-annotated constructor,
and adds it to this container.  All values passed to the task constructor must be non-null; otherwise a
<literal>NullPointerException</literal> will be thrown</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.TaskContainer:create(java.lang.String, java.lang.Class, org.gradle.api.Action)">create</link>(name, type, configuration)</literal></td><td><caution>Deprecated</caution><para>Creates a <apilink class="org.gradle.api.Task"/> with the given name and type, configures it with the given action, and adds it to this container.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.TaskContainer:create(java.lang.String, org.gradle.api.Action)">create</link>(name, configuration)</literal></td><td><caution>Deprecated</caution><para>Creates a <apilink class="org.gradle.api.Task"/> with the given name and of type <apilink class="org.gradle.api.DefaultTask"/>, configures it with the given action, and adds it to this container.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.TaskContainer:create(java.util.Map)">create</link>(options)</literal></td><td><caution>Deprecated</caution><para>Creates a <apilink class="org.gradle.api.Task"/> and adds it to this container. A map of creation options can be passed to this method
to control how the task is created. The following options are available:</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.TaskContainer:create(java.util.Map, groovy.lang.Closure)">create</link>(options, configureClosure)</literal></td><td><caution>Deprecated</caution><para>Creates a <apilink class="org.gradle.api.Task"/> adds it to this container. A map of creation options can be passed to this method to
control how the task is created. See <apilink class="org.gradle.api.tasks.TaskContainer" method="create(java.util.Map)"/> for the list of options available. The given
closure is used to configure the task before it is returned by this method.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.TaskContainer:findByPath(java.lang.String)">findByPath</link>(path)</literal></td><td><para>Locates a task by path. You can supply a task name, a relative path, or an absolute path. Relative paths are
interpreted relative to the project for this container. This method returns null if no task with the given path
exists.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.TaskContainer:getByName(java.lang.String)">getByName</link>(name)</literal></td><td><para>Locates an object by name, failing if there is no such object.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.TaskContainer:getByName(java.lang.String, groovy.lang.Closure)">getByName</link>(name, configureClosure)</literal></td><td><para>Locates an object by name, failing if there is no such object. The given configure closure is executed against
the object before it is returned from this method. The object is passed to the closure as its delegate.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.TaskContainer:getByName(java.lang.String, org.gradle.api.Action)">getByName</link>(name, configureAction)</literal></td><td><para>Locates an object by name, failing if there is no such object. The given configure action is executed against
the object before it is returned from this method.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.TaskContainer:getByPath(java.lang.String)">getByPath</link>(path)</literal></td><td><para>Locates a task by path. You can supply a task name, a relative path, or an absolute path. Relative paths are
interpreted relative to the project for this container. This method throws an exception if no task with the given
path exists.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.TaskContainer:maybeCreate(java.lang.String)">maybeCreate</link>(name)</literal></td><td><para>Looks for an item with the given name, creating and adding it to this container if it does not exist.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.TaskContainer:maybeCreate(java.lang.String, java.lang.Class)">maybeCreate</link>(name, type)</literal></td><td><para>Looks for an item with the given name and type, creating and adding it to this container if it does not exist.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.TaskContainer:named(java.lang.String)">named</link>(name)</literal></td><td><para>Locates a task by name, without triggering its creation or configuration, failing if there is no such object.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.TaskContainer:named(java.lang.String, java.lang.Class)">named</link>(name, type)</literal></td><td><para>Locates a object by name and type, failing if there is no such object.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.TaskContainer:named(java.lang.String, java.lang.Class, org.gradle.api.Action)">named</link>(name, type, configurationAction)</literal></td><td><para>Locates a object by name and type, failing if there is no such object.
The given configure action is executed against the object before it is returned from the provider.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.TaskContainer:named(java.lang.String, org.gradle.api.Action)">named</link>(name, configurationAction)</literal></td><td><para>Locates a object by name, failing if there is no such object.
The given configure action is executed against the object before it is returned from the provider.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.TaskContainer:named(org.gradle.api.specs.Spec)">named</link>(nameFilter)</literal></td><td><para>Returns a collection containing the objects with names matching the provided filter.
The returned collection is live, so that when matching objects are added to this collection,
they are also visible in the filtered collection.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.TaskContainer:register(java.lang.String)">register</link>(name)</literal></td><td><para>Defines a new task, which will be created when it is required. A task is 'required' when the task is located using query methods such as <apilink class="org.gradle.api.tasks.TaskCollection" method="getByName(java.lang.String)"/>, when the task is added to the task graph for execution or when <apilink class="org.gradle.api.provider.Provider" method="get()"/> is called on the return value of this method.

</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.TaskContainer:register(java.lang.String, java.lang.Class)">register</link>(name, type)</literal></td><td><para>Defines a new task, which will be created when it is required. A task is 'required' when the task is located using query methods such as <apilink class="org.gradle.api.tasks.TaskCollection" method="getByName(java.lang.String)"/>, when the task is added to the task graph for execution or when <apilink class="org.gradle.api.provider.Provider" method="get()"/> is called on the return value of this method.

</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.TaskContainer:register(java.lang.String, java.lang.Class, java.lang.Object[])">register</link>(name, type, constructorArgs)</literal></td><td><para>Defines a new task, which will be created when it is required passing the given arguments to the <literal>@Inject</literal>-annotated constructor. A task is 'required' when the task is located using query methods such as <apilink class="org.gradle.api.tasks.TaskCollection" method="getByName(java.lang.String)"/>, when the task is added to the task graph for execution or when <apilink class="org.gradle.api.provider.Provider" method="get()"/> is called on the return value of this method. All values passed to the task constructor must be non-null; otherwise a <literal>NullPointerException</literal> will be thrown

</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.TaskContainer:register(java.lang.String, java.lang.Class, org.gradle.api.Action)">register</link>(name, type, configurationAction)</literal></td><td><para>Defines a new task, which will be created and configured when it is required. A task is 'required' when the task is located using query methods such as <apilink class="org.gradle.api.tasks.TaskCollection" method="getByName(java.lang.String)"/>, when the task is added to the task graph for execution or when <apilink class="org.gradle.api.provider.Provider" method="get()"/> is called on the return value of this method.

</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.TaskContainer:register(java.lang.String, org.gradle.api.Action)">register</link>(name, configurationAction)</literal></td><td><para>Defines a new task, which will be created and configured when it is required. A task is 'required' when the task is located using query methods such as <apilink class="org.gradle.api.tasks.TaskCollection" method="getByName(java.lang.String)"/>, when the task is added to the task graph for execution or when <apilink class="org.gradle.api.provider.Provider" method="get()"/> is called on the return value of this method.

</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.TaskContainer:replace(java.lang.String)">replace</link>(name)</literal></td><td><para>Creates a <apilink class="org.gradle.api.Task"/> with the given name and adds it to this container, replacing any existing task with the
same name.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.TaskContainer:replace(java.lang.String, java.lang.Class)">replace</link>(name, type)</literal></td><td><para>Creates a <apilink class="org.gradle.api.Task"/> with the given name and type, and adds it to this container, replacing any existing
task of the same name.</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Method details</title><section id="org.gradle.api.tasks.TaskContainer:containerWithType(java.lang.Class)" role="detail"><title><classname><apilink class="org.gradle.api.NamedDomainObjectContainer"/>&lt;<classname>U</classname>&gt;</classname> <literal>containerWithType</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html"><classname>Class</classname></ulink>&lt;<classname>U</classname>&gt;</classname> type)</title><para>Creates a regular container that wraps the polymorphic container presenting all elements of a specified type.
</para><para>
This method is an intermediate operation. It does not change the realized/unrealized state of the elements in the collection.</para></section><section id="org.gradle.api.tasks.TaskContainer:create(java.lang.String)" role="detail"><title><apilink class="org.gradle.api.Task"/> <literal>create</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name)</title><caution><para>Note: This method is <ulink url="../userguide/feature_lifecycle.html">deprecated</ulink> and will be removed in the next major version of Gradle.</para></caution><para>Creates a <apilink class="org.gradle.api.Task"/> with the given name and adds it to this container.</para><para>After the task is added, it is made available as a property of the project, so that you can reference the task
by name in your build file.</para></section><section id="org.gradle.api.tasks.TaskContainer:create(java.lang.String, groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.Task"/> <literal>create</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> configureClosure)</title><caution><para>Note: This method is <ulink url="../userguide/feature_lifecycle.html">deprecated</ulink> and will be removed in the next major version of Gradle.</para></caution><para>Creates a <apilink class="org.gradle.api.Task"/> with the given name adds it to this container. The given closure is used to configure
the task before it is returned by this method.</para><para>After the task is added, it is made available as a property of the project, so that you can reference the task
by name in your build file.</para></section><section id="org.gradle.api.tasks.TaskContainer:create(java.lang.String, java.lang.Class)" role="detail"><title><classname>T</classname> <literal>create</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html"><classname>Class</classname></ulink>&lt;<classname>T</classname>&gt;</classname> type)</title><caution><para>Note: This method is <ulink url="../userguide/feature_lifecycle.html">deprecated</ulink> and will be removed in the next major version of Gradle.</para></caution><para>Creates a <apilink class="org.gradle.api.Task"/> with the given name and type, and adds it to this container.</para><para>After the task is added, it is made available as a property of the project, so that you can reference the task
by name in your build file.</para></section><section id="org.gradle.api.tasks.TaskContainer:create(java.lang.String, java.lang.Class, java.lang.Object[])" role="detail"><title><classname>T</classname> <literal>create</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html"><classname>Class</classname></ulink>&lt;<classname>T</classname>&gt;</classname> type, <classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink>...</classname> constructorArgs)</title><caution><para>Note: This method is <ulink url="../userguide/feature_lifecycle.html">deprecated</ulink> and will be removed in the next major version of Gradle.</para></caution><para>Creates a <apilink class="org.gradle.api.Task"/> with the given name and type, passing the given arguments to the <literal>@Inject</literal>-annotated constructor,
and adds it to this container.  All values passed to the task constructor must be non-null; otherwise a
<literal>NullPointerException</literal> will be thrown</para><para>After the task is added, it is made available as a property of the project, so that you can reference the task
by name in your build file.</para></section><section id="org.gradle.api.tasks.TaskContainer:create(java.lang.String, java.lang.Class, org.gradle.api.Action)" role="detail"><title><classname>T</classname> <literal>create</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html"><classname>Class</classname></ulink>&lt;<classname>T</classname>&gt;</classname> type, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <classname>T</classname>&gt;</classname> configuration)</title><caution><para>Note: This method is <ulink url="../userguide/feature_lifecycle.html">deprecated</ulink> and will be removed in the next major version of Gradle.</para></caution><para>Creates a <apilink class="org.gradle.api.Task"/> with the given name and type, configures it with the given action, and adds it to this container.</para><para>After the task is added, it is made available as a property of the project, so that you can reference the task
by name in your build file.</para></section><section id="org.gradle.api.tasks.TaskContainer:create(java.lang.String, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.Task"/> <literal>create</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.Task"/>&gt;</classname> configuration)</title><caution><para>Note: This method is <ulink url="../userguide/feature_lifecycle.html">deprecated</ulink> and will be removed in the next major version of Gradle.</para></caution><para>Creates a <apilink class="org.gradle.api.Task"/> with the given name and of type <apilink class="org.gradle.api.DefaultTask"/>, configures it with the given action, and adds it to this container.</para><para>After the task is added, it is made available as a property of the project, so that you can reference the task
by name in your build file.</para></section><section id="org.gradle.api.tasks.TaskContainer:create(java.util.Map)" role="detail"><title><apilink class="org.gradle.api.Task"/> <literal>create</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, ?&gt;</classname> options)</title><caution><para>Note: This method is <ulink url="../userguide/feature_lifecycle.html">deprecated</ulink> and will be removed in the next major version of Gradle.</para></caution><para>Creates a <apilink class="org.gradle.api.Task"/> and adds it to this container. A map of creation options can be passed to this method
to control how the task is created. The following options are available:</para><table><para><UNHANDLED-ELEMENT>&lt;caption&gt;Permitted map keys&lt;/caption&gt;</UNHANDLED-ELEMENT>

</para><thead><tr><td>Option</td><td>Description</td><td>Default Value</td></tr></thead><tr><td><literal><literal>name</literal></literal></td><td>The name of the task to create.</td><td>None.
Must be specified.</td></tr><tr><td><literal><literal>type</literal></literal></td><td>The class of the task to
create.</td><td><apilink class="org.gradle.api.DefaultTask"/></td></tr><tr><td><literal><literal>action</literal></literal></td><td>The closure or <apilink class="org.gradle.api.Action"/> to
execute when the task executes. See <apilink class="org.gradle.api.Task" method="doFirst(org.gradle.api.Action)"/>.</td><td><literal>null</literal></td></tr><tr><td><literal><literal>overwrite</literal></literal></td><td>Replace an existing
task?</td><td><literal>false</literal></td></tr><tr><td><literal><literal>dependsOn</literal></literal></td><td>The dependencies of the task. See <ulink url="../Task.html#dependencies">here</ulink> for more details.</td><td><literal>[]</literal></td></tr><tr><td><literal><literal>group</literal></literal></td><td>The group of the task.</td><td><literal>null
</literal></td></tr><tr><td><literal><literal>description</literal></literal></td><td>The description of the task.</td><td>
<literal>null</literal></td></tr><tr><td><literal><literal>constructorArgs</literal></literal></td><td>The arguments to pass to the task class constructor.</td><td>
<literal>null</literal></td></tr></table><para>After the task is added, it is made available as a property of the project, so that you can reference the task
by name in your build file.</para><para>If a task with the given name already exists in this container and the <literal><literal>overwrite</literal></literal>
option is not set to true, an exception is thrown.</para></section><section id="org.gradle.api.tasks.TaskContainer:create(java.util.Map, groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.Task"/> <literal>create</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, ?&gt;</classname> options, <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> configureClosure)</title><caution><para>Note: This method is <ulink url="../userguide/feature_lifecycle.html">deprecated</ulink> and will be removed in the next major version of Gradle.</para></caution><para>Creates a <apilink class="org.gradle.api.Task"/> adds it to this container. A map of creation options can be passed to this method to
control how the task is created. See <apilink class="org.gradle.api.tasks.TaskContainer" method="create(java.util.Map)"/> for the list of options available. The given
closure is used to configure the task before it is returned by this method.</para><para>After the task is added, it is made available as a property of the project, so that you can reference the task
by name in your build file.</para></section><section id="org.gradle.api.tasks.TaskContainer:findByPath(java.lang.String)" role="detail"><title><apilink class="org.gradle.api.Task"/> <literal>findByPath</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> path)</title><para>Locates a task by path. You can supply a task name, a relative path, or an absolute path. Relative paths are
interpreted relative to the project for this container. This method returns null if no task with the given path
exists.</para></section><section id="org.gradle.api.tasks.TaskContainer:getByName(java.lang.String)" role="detail"><title><classname>T</classname> <literal>getByName</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name)</title><para>Locates an object by name, failing if there is no such object.
</para><para>
This operation is eager and will cause the returned element to be realized.</para></section><section id="org.gradle.api.tasks.TaskContainer:getByName(java.lang.String, groovy.lang.Closure)" role="detail"><title><classname>T</classname> <literal>getByName</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> configureClosure)</title><para>Locates an object by name, failing if there is no such object. The given configure closure is executed against
the object before it is returned from this method. The object is passed to the closure as its delegate.
</para><para>
This operation is eager and will cause the returned element to be realized.</para></section><section id="org.gradle.api.tasks.TaskContainer:getByName(java.lang.String, org.gradle.api.Action)" role="detail"><title><classname>T</classname> <literal>getByName</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <classname>T</classname>&gt;</classname> configureAction)</title><para>Locates an object by name, failing if there is no such object. The given configure action is executed against
the object before it is returned from this method.
</para><para>
This operation is eager and will cause the returned element to be realized.</para></section><section id="org.gradle.api.tasks.TaskContainer:getByPath(java.lang.String)" role="detail"><title><apilink class="org.gradle.api.Task"/> <literal>getByPath</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> path)</title><para>Locates a task by path. You can supply a task name, a relative path, or an absolute path. Relative paths are
interpreted relative to the project for this container. This method throws an exception if no task with the given
path exists.</para></section><section id="org.gradle.api.tasks.TaskContainer:maybeCreate(java.lang.String)" role="detail"><title><classname>T</classname> <literal>maybeCreate</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name)</title><para>Looks for an item with the given name, creating and adding it to this container if it does not exist.
</para><para>
This operation is eager, the element is realized before being returned.</para></section><section id="org.gradle.api.tasks.TaskContainer:maybeCreate(java.lang.String, java.lang.Class)" role="detail"><title><classname>U</classname> <literal>maybeCreate</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html"><classname>Class</classname></ulink>&lt;<classname>U</classname>&gt;</classname> type)</title><para>Looks for an item with the given name and type, creating and adding it to this container if it does not exist.
</para><para>
This operation is eager, the element is realized before being returned.</para></section><section id="org.gradle.api.tasks.TaskContainer:named(java.lang.String)" role="detail"><title><classname><apilink class="org.gradle.api.tasks.TaskProvider"/>&lt;<classname>T</classname>&gt;</classname> <literal>named</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name)</title><para>Locates a task by name, without triggering its creation or configuration, failing if there is no such object.</para></section><section id="org.gradle.api.tasks.TaskContainer:named(java.lang.String, java.lang.Class)" role="detail"><title><classname><apilink class="org.gradle.api.tasks.TaskProvider"/>&lt;<classname>S</classname>&gt;</classname> <literal>named</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html"><classname>Class</classname></ulink>&lt;<classname>S</classname>&gt;</classname> type)</title><para>Locates a object by name and type, failing if there is no such object.
</para><para>
This method is lazy and will not cause the returned element to be realized.</para></section><section id="org.gradle.api.tasks.TaskContainer:named(java.lang.String, java.lang.Class, org.gradle.api.Action)" role="detail"><title><classname><apilink class="org.gradle.api.tasks.TaskProvider"/>&lt;<classname>S</classname>&gt;</classname> <literal>named</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html"><classname>Class</classname></ulink>&lt;<classname>S</classname>&gt;</classname> type, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <classname>S</classname>&gt;</classname> configurationAction)</title><para>Locates a object by name and type, failing if there is no such object.
The given configure action is executed against the object before it is returned from the provider.
</para><para>
This method is lazy and will not cause the returned element to be realized.</para></section><section id="org.gradle.api.tasks.TaskContainer:named(java.lang.String, org.gradle.api.Action)" role="detail"><title><classname><apilink class="org.gradle.api.tasks.TaskProvider"/>&lt;<classname>T</classname>&gt;</classname> <literal>named</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <classname>T</classname>&gt;</classname> configurationAction)</title><para>Locates a object by name, failing if there is no such object.
The given configure action is executed against the object before it is returned from the provider.
</para><para>
This method is lazy and will not cause the returned element to be realized.</para></section><section id="org.gradle.api.tasks.TaskContainer:named(org.gradle.api.specs.Spec)" role="detail"><title><classname><apilink class="org.gradle.api.tasks.TaskCollection"/>&lt;<classname>T</classname>&gt;</classname> <literal>named</literal>(<classname><apilink class="org.gradle.api.specs.Spec"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> nameFilter)</title><para>Returns a collection containing the objects with names matching the provided filter.
The returned collection is live, so that when matching objects are added to this collection,
they are also visible in the filtered collection.
</para><para>
This method is an intermediate operation. It does not change the realized/unrealized state of the elements in the collection.</para></section><section id="org.gradle.api.tasks.TaskContainer:register(java.lang.String)" role="detail"><title><classname><apilink class="org.gradle.api.tasks.TaskProvider"/>&lt;<apilink class="org.gradle.api.Task"/>&gt;</classname> <literal>register</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name)</title><para>Defines a new task, which will be created when it is required. A task is 'required' when the task is located using query methods such as <apilink class="org.gradle.api.tasks.TaskCollection" method="getByName(java.lang.String)"/>, when the task is added to the task graph for execution or when <apilink class="org.gradle.api.provider.Provider" method="get()"/> is called on the return value of this method.

</para><para>It is generally more efficient to use this method instead of <apilink class="org.gradle.api.tasks.TaskContainer" method="create(java.lang.String)"/>, as that method will eagerly create the task, regardless of whether that task is required for the current build or not. This method, on the other hand, will defer creation until required.</para></section><section id="org.gradle.api.tasks.TaskContainer:register(java.lang.String, java.lang.Class)" role="detail"><title><classname><apilink class="org.gradle.api.tasks.TaskProvider"/>&lt;<classname>T</classname>&gt;</classname> <literal>register</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html"><classname>Class</classname></ulink>&lt;<classname>T</classname>&gt;</classname> type)</title><para>Defines a new task, which will be created when it is required. A task is 'required' when the task is located using query methods such as <apilink class="org.gradle.api.tasks.TaskCollection" method="getByName(java.lang.String)"/>, when the task is added to the task graph for execution or when <apilink class="org.gradle.api.provider.Provider" method="get()"/> is called on the return value of this method.

</para><para>It is generally more efficient to use this method instead of <apilink class="org.gradle.api.tasks.TaskContainer" method="create(java.lang.String, java.lang.Class, org.gradle.api.Action)"/> or <apilink class="org.gradle.api.tasks.TaskContainer" method="create(java.lang.String, java.lang.Class)"/>, as those methods will eagerly create and configure the task, regardless of whether that task is required for the current build or not. This method, on the other hand, will defer creation until required.</para></section><section id="org.gradle.api.tasks.TaskContainer:register(java.lang.String, java.lang.Class, java.lang.Object[])" role="detail"><title><classname><apilink class="org.gradle.api.tasks.TaskProvider"/>&lt;<classname>T</classname>&gt;</classname> <literal>register</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html"><classname>Class</classname></ulink>&lt;<classname>T</classname>&gt;</classname> type, <classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink>...</classname> constructorArgs)</title><para>Defines a new task, which will be created when it is required passing the given arguments to the <literal>@Inject</literal>-annotated constructor. A task is 'required' when the task is located using query methods such as <apilink class="org.gradle.api.tasks.TaskCollection" method="getByName(java.lang.String)"/>, when the task is added to the task graph for execution or when <apilink class="org.gradle.api.provider.Provider" method="get()"/> is called on the return value of this method. All values passed to the task constructor must be non-null; otherwise a <literal>NullPointerException</literal> will be thrown

</para><para>It is generally more efficient to use this method instead of <apilink class="org.gradle.api.tasks.TaskContainer" method="create(java.lang.String, java.lang.Class, org.gradle.api.Action)"/> or <apilink class="org.gradle.api.tasks.TaskContainer" method="create(java.lang.String, java.lang.Class)"/>, as those methods will eagerly create and configure the task, regardless of whether that task is required for the current build or not. This method, on the other hand, will defer creation until required.</para></section><section id="org.gradle.api.tasks.TaskContainer:register(java.lang.String, java.lang.Class, org.gradle.api.Action)" role="detail"><title><classname><apilink class="org.gradle.api.tasks.TaskProvider"/>&lt;<classname>T</classname>&gt;</classname> <literal>register</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html"><classname>Class</classname></ulink>&lt;<classname>T</classname>&gt;</classname> type, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <classname>T</classname>&gt;</classname> configurationAction)</title><para>Defines a new task, which will be created and configured when it is required. A task is 'required' when the task is located using query methods such as <apilink class="org.gradle.api.tasks.TaskCollection" method="getByName(java.lang.String)"/>, when the task is added to the task graph for execution or when <apilink class="org.gradle.api.provider.Provider" method="get()"/> is called on the return value of this method.

</para><para>It is generally more efficient to use this method instead of <apilink class="org.gradle.api.tasks.TaskContainer" method="create(java.lang.String, java.lang.Class, org.gradle.api.Action)"/> or <apilink class="org.gradle.api.tasks.TaskContainer" method="create(java.lang.String, java.lang.Class)"/>, as those methods will eagerly create and configure the task, regardless of whether that task is required for the current build or not. This method, on the other hand, will defer creation and configuration until required.</para></section><section id="org.gradle.api.tasks.TaskContainer:register(java.lang.String, org.gradle.api.Action)" role="detail"><title><classname><apilink class="org.gradle.api.tasks.TaskProvider"/>&lt;<apilink class="org.gradle.api.Task"/>&gt;</classname> <literal>register</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.Task"/>&gt;</classname> configurationAction)</title><para>Defines a new task, which will be created and configured when it is required. A task is 'required' when the task is located using query methods such as <apilink class="org.gradle.api.tasks.TaskCollection" method="getByName(java.lang.String)"/>, when the task is added to the task graph for execution or when <apilink class="org.gradle.api.provider.Provider" method="get()"/> is called on the return value of this method.

</para><para>It is generally more efficient to use this method instead of <apilink class="org.gradle.api.NamedDomainObjectContainer" method="create(java.lang.String, org.gradle.api.Action)"/> or <apilink class="org.gradle.api.tasks.TaskContainer" method="create(java.lang.String)"/>, as those methods will eagerly create and configure the task, regardless of whether that task is required for the current build or not. This method, on the other hand, will defer creation and configuration until required.</para></section><section id="org.gradle.api.tasks.TaskContainer:replace(java.lang.String)" role="detail"><title><apilink class="org.gradle.api.Task"/> <literal>replace</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name)</title><para>Creates a <apilink class="org.gradle.api.Task"/> with the given name and adds it to this container, replacing any existing task with the
same name.</para><para>After the task is added, it is made available as a property of the project, so that you can reference the task
by name in your build file.</para></section><section id="org.gradle.api.tasks.TaskContainer:replace(java.lang.String, java.lang.Class)" role="detail"><title><classname>T</classname> <literal>replace</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html"><classname>Class</classname></ulink>&lt;<classname>T</classname>&gt;</classname> type)</title><para>Creates a <apilink class="org.gradle.api.Task"/> with the given name and type, and adds it to this container, replacing any existing
task of the same name.</para><para>After the task is added, it is made available as a property of the project, so that you can reference the task
by name in your build file.</para></section></section></chapter><chapter id="org.gradle.api.Task"><title>Task</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.Task" style="javadoc"/></seg></seglistitem></segmentedlist><para>A <literal>Task</literal> represents a single atomic piece of work for a build, such as compiling classes or generating
javadoc.</para><para>Each task belongs to a <apilink class="org.gradle.api.Project"/>. You can use the various methods on <apilink class="org.gradle.api.tasks.TaskContainer"/> to create and lookup task instances. For example, <apilink class="org.gradle.api.tasks.TaskContainer" method="create(java.lang.String)"/> creates an empty task with the given name. You can also use the
<literal>task</literal> keyword in your build file: </para><programlisting language="java">
task myTask
task myTask { configure closure }
task myTask(type: SomeType)
task myTask(type: SomeType) { configure closure }
</programlisting><para>Each task has a name, which can be used to refer to the task within its owning project, and a fully qualified
path, which is unique across all tasks in all projects. The path is the concatenation of the owning project's path
and the task's name. Path elements are separated using the <literal>:</literal>
character.</para><section><title>Task Actions</title><para>A <literal>Task</literal> is made up of a sequence of <apilink class="org.gradle.api.Action"/> objects. When the task is executed, each of the
actions is executed in turn, by calling <apilink class="org.gradle.api.Action" method="execute(T)"/>. You can add actions to a task by calling <apilink class="org.gradle.api.Task" method="doFirst(org.gradle.api.Action)"/> or <apilink class="org.gradle.api.Task" method="doLast(org.gradle.api.Action)"/>.</para><para>Groovy closures can also be used to provide a task action. When the action is executed, the closure is called with
the task as parameter.  You can add action closures to a task by calling <apilink class="org.gradle.api.Task" method="doFirst(groovy.lang.Closure)"/> or
<apilink class="org.gradle.api.Task" method="doLast(groovy.lang.Closure)"/>.</para><para>There are 2 special exceptions which a task action can throw to abort execution and continue without failing the
build. A task action can abort execution of the action and continue to the next action of the task by throwing a
<apilink class="org.gradle.api.tasks.StopActionException"/>. A task action can abort execution of the task and continue to the
next task by throwing a <apilink class="org.gradle.api.tasks.StopExecutionException"/>. Using these exceptions allows you to
have precondition actions which skip execution of the task, or part of the task, if not true.</para></section><section><title>Task Dependencies and Task Ordering</title><para>A task may have dependencies on other tasks or might be scheduled to always run after another task.
Gradle ensures that all task dependencies and ordering rules are honored when executing tasks, so that the task is executed after
all of its dependencies and any "must run after" tasks have been executed.</para><para>Dependencies to a task are controlled using <apilink class="org.gradle.api.Task" method="dependsOn(java.lang.Object[])"/> or <apilink class="org.gradle.api.Task" method="setDependsOn(java.lang.Iterable)"/>,
and <apilink class="org.gradle.api.Task" method="mustRunAfter(java.lang.Object[])"/>, <apilink class="org.gradle.api.Task" method="setMustRunAfter(java.lang.Iterable)"/>, <apilink class="org.gradle.api.Task" method="shouldRunAfter(java.lang.Object[])"/> and
<apilink class="org.gradle.api.Task" method="setShouldRunAfter(java.lang.Iterable)"/> are used to specify ordering between tasks. You can use objects of any of
the following types to specify dependencies and ordering:</para><itemizedlist><listitem>A <literal>String</literal>, <literal>CharSequence</literal> or <literal>groovy.lang.GString</literal> task path or name. A relative path is interpreted relative to the task's <apilink class="org.gradle.api.Project"/>. This
allows you to refer to tasks in other projects. These task references will not cause task creation.</listitem><listitem>A <apilink class="org.gradle.api.Task"/>.</listitem><listitem>A <apilink class="org.gradle.api.tasks.TaskDependency"/> object.</listitem><listitem>A <apilink class="org.gradle.api.tasks.TaskReference"/> object.</listitem><listitem>A <apilink class="org.gradle.api.Buildable"/> object.</listitem><listitem>A <apilink class="org.gradle.api.file.RegularFileProperty"/> or <apilink class="org.gradle.api.file.DirectoryProperty"/>.</listitem><listitem>A <apilink class="org.gradle.api.provider.Provider"/> object. May contain any of the types listed here.</listitem><listitem>A <literal>Iterable</literal>, <literal>Collection</literal>, <literal>Map</literal> or array. May contain any of the types listed here. The elements of the
iterable/collection/map/array are recursively converted to tasks.</listitem><listitem>A <literal>Callable</literal>. The <literal>call()</literal> method may return any of the types listed here. Its return value is
recursively converted to tasks. A <literal>null</literal> return value is treated as an empty collection.</listitem><listitem>A Groovy <literal>Closure</literal> or Kotlin function. The closure may take a <literal>Task</literal> as parameter.
The closure or function may return any of the types listed here. Its return value is
recursively converted to tasks. A <literal>null</literal> return value is treated as an empty collection.</listitem><listitem>Anything else is treated as an error.</listitem></itemizedlist></section><section><title>Using a Task in a Build File</title><section><title>Dynamic Properties</title><para>A <literal>Task</literal> has 4 'scopes' for properties. You can access these properties by name from the build file or by
calling the <apilink class="org.gradle.api.Task" method="property(java.lang.String)"/> method. You can change the value of these properties by calling the <apilink class="org.gradle.api.Task" method="setProperty(java.lang.String, java.lang.Object)"/> method.</para><itemizedlist><listitem>The <literal>Task</literal> object itself. This includes any property getters and setters declared by the <literal>Task</literal>
implementation class.  The properties of this scope are readable or writable based on the presence of the
corresponding getter and setter methods.</listitem><listitem>The <emphasis>extensions</emphasis> added to the task by plugins. Each extension is available as a read-only property with the same
name as the extension.</listitem><listitem>The <emphasis>extra properties</emphasis> of the task. Each task object maintains a map of additional properties. These
are arbitrary name -&gt; value pairs which you can use to dynamically add properties to a task object.  Once defined, the properties
of this scope are readable and writable.</listitem></itemizedlist></section><section><title>Parallel Execution</title><para>
By default, tasks are not executed in parallel unless a task is waiting on asynchronous work and another task (which
is not dependent) is ready to execute.

Parallel execution can be enabled by the <literal>--parallel</literal> flag when the build is initiated.
In parallel mode, the tasks of different projects (i.e. in a multi project build) are able to be executed in parallel.</para></section></section><section><title>Properties</title><table><title>Properties - Task</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.Task:actions"><literal>actions</literal></link></td><td><para>The sequence of <apilink class="org.gradle.api.Action"/> objects which will be executed by this task, in the order of
execution.</para></td></tr><tr><td><link linkend="org.gradle.api.Task:ant"><literal>ant</literal></link></td><td><para>The <literal>AntBuilder</literal> for this task.  You can use this in your build file to execute ant
tasks.</para></td></tr><tr><td><link linkend="org.gradle.api.Task:dependsOn"><literal>dependsOn</literal></link></td><td><para>The dependencies of this task.</para></td></tr><tr><td><link linkend="org.gradle.api.Task:description"><literal>description</literal></link></td><td><para>The description of this task.</para></td></tr><tr><td><link linkend="org.gradle.api.Task:destroyables"><literal>destroyables</literal></link></td><td><para>The destroyables of this task.</para></td></tr><tr><td><link linkend="org.gradle.api.Task:didWork"><literal>didWork</literal></link></td><td><para>Checks if the task actually did any work.  Even if a Task executes, it may determine that it has nothing to
do.  For example, a compilation task may determine that source files have not changed since the last time a the
task was run.</para></td></tr><tr><td><link linkend="org.gradle.api.Task:enabled"><literal>enabled</literal></link></td><td><para>Returns if this task is enabled or not.</para></td></tr><tr><td><link linkend="org.gradle.api.Task:extensions"><literal>extensions</literal></link></td><td><para>The container of extensions.</para></td></tr><tr><td><link linkend="org.gradle.api.Task:finalizedBy"><literal>finalizedBy</literal></link></td><td><para>Returns tasks that finalize this task.</para></td></tr><tr><td><link linkend="org.gradle.api.Task:group"><literal>group</literal></link></td><td><para>The task group which this task belongs to. The task group is used in reports and user interfaces to
group related tasks together when presenting a list of tasks to the user.</para></td></tr><tr><td><link linkend="org.gradle.api.Task:inputs"><literal>inputs</literal></link></td><td><para>The inputs of this task.</para></td></tr><tr><td><link linkend="org.gradle.api.Task:localState"><literal>localState</literal></link></td><td><para>The local state of this task.</para></td></tr><tr><td><link linkend="org.gradle.api.Task:logger"><literal>logger</literal></link></td><td><para>The logger for this task. You can use this in your build file to write log messages.</para></td></tr><tr><td><link linkend="org.gradle.api.Task:logging"><literal>logging</literal></link></td><td><para>The <apilink class="org.gradle.api.logging.LoggingManager"/> which can be used to receive logging and to control the
standard output/error capture for this task. By default, System.out is redirected to the Gradle logging system at
the QUIET log level, and System.err is redirected at the ERROR log level.</para></td></tr><tr><td><link linkend="org.gradle.api.Task:mustRunAfter"><literal>mustRunAfter</literal></link></td><td><para>Returns tasks that this task must run after.</para></td></tr><tr><td><link linkend="org.gradle.api.Task:name"><literal>name</literal></link></td><td><para>The name of this task. The name uniquely identifies the task within its <apilink class="org.gradle.api.Project"/>.</para></td></tr><tr><td><link linkend="org.gradle.api.Task:outputs"><literal>outputs</literal></link></td><td><para>The outputs of this task.</para></td></tr><tr><td><link linkend="org.gradle.api.Task:path"><literal>path</literal></link></td><td><para>The path of the task, which is a fully qualified name for the task. The path of a task is the path of
its <apilink class="org.gradle.api.Project"/> plus the name of the task, separated by <literal>:</literal>.</para></td></tr><tr><td><link linkend="org.gradle.api.Task:project"><literal>project</literal></link></td><td><para>The <apilink class="org.gradle.api.Project"/> which this task belongs to.</para></td></tr><tr><td><link linkend="org.gradle.api.Task:shouldRunAfter"><literal>shouldRunAfter</literal></link></td><td><para>Returns tasks that this task should run after.</para></td></tr><tr><td><link linkend="org.gradle.api.Task:state"><literal>state</literal></link></td><td><para>The execution state of this task. This provides information about the execution of this task, such as
whether it has executed, been skipped, has failed, etc.</para></td></tr><tr><td><link linkend="org.gradle.api.Task:taskDependencies"><literal>taskDependencies</literal></link></td><td><para>Returns a <apilink class="org.gradle.api.tasks.TaskDependency"/> which contains all the tasks that this task depends on.</para></td></tr><tr><td><link linkend="org.gradle.api.Task:temporaryDir"><literal>temporaryDir</literal></link></td><td><para>Returns a directory which this task can use to write temporary files to. Each task instance is provided with a
separate temporary directory. There are no guarantees that the contents of this directory will be kept beyond the
execution of the task.</para></td></tr><tr><td><link linkend="org.gradle.api.Task:timeout"><literal>timeout</literal></link></td><td><para>The timeout of this task.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - Task</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.Task:dependsOn(java.lang.Object[])">dependsOn</link>(paths)</literal></td><td><para>Adds the given dependencies to this task. See <ulink url="./Task.html#dependencies">here</ulink> for a description of the types
of objects which can be used as task dependencies.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.Task:doFirst(groovy.lang.Closure)">doFirst</link>(action)</literal></td><td><para>Adds the given closure to the beginning of this task's action list. The closure is passed this task as a
parameter when executed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.Task:doFirst(java.lang.String, org.gradle.api.Action)">doFirst</link>(actionName, action)</literal></td><td><para>Adds the given <apilink class="org.gradle.api.Action"/> to the beginning of this task's action list.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.Task:doFirst(org.gradle.api.Action)">doFirst</link>(action)</literal></td><td><para>Adds the given <apilink class="org.gradle.api.Action"/> to the beginning of this task's action list.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.Task:doLast(groovy.lang.Closure)">doLast</link>(action)</literal></td><td><para>Adds the given closure to the end of this task's action list.  The closure is passed this task as a parameter
when executed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.Task:doLast(java.lang.String, org.gradle.api.Action)">doLast</link>(actionName, action)</literal></td><td><para>Adds the given <apilink class="org.gradle.api.Action"/> to the end of this task's action list.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.Task:doLast(org.gradle.api.Action)">doLast</link>(action)</literal></td><td><para>Adds the given <apilink class="org.gradle.api.Action"/> to the end of this task's action list.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.Task:doNotTrackState(java.lang.String)">doNotTrackState</link>(reasonNotToTrackState)</literal></td><td><para>Do not track the state of the task.

</para></td></tr><tr><td><literal><link linkend="org.gradle.api.Task:finalizedBy(java.lang.Object[])">finalizedBy</link>(paths)</literal></td><td><para>Adds the given finalizer tasks for this task.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.Task:hasProperty(java.lang.String)">hasProperty</link>(propertyName)</literal></td><td><para>Determines if this task has the given property. See <link linkend="org.gradle.api.Task.properties">here</link> for details of the
properties which are available for a task.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.Task:mustRunAfter(java.lang.Object[])">mustRunAfter</link>(paths)</literal></td><td><para>Specifies that this task must run after all of the supplied tasks.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.Task:onlyIf(groovy.lang.Closure)">onlyIf</link>(onlyIfClosure)</literal></td><td><para>Execute the task only if the given closure returns true.  The closure will be evaluated at task execution
time, not during configuration.  The closure will be passed a single parameter, this task. If the closure returns
false, the task will be skipped.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.Task:onlyIf(java.lang.String, org.gradle.api.specs.Spec)">onlyIf</link>(onlyIfReason, onlyIfSpec)</literal></td><td><caution>Incubating</caution><para>Execute the task only if the given spec is satisfied. The spec will be evaluated at task execution time, not
during configuration. If the Spec is not satisfied, the task will be skipped.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.Task:onlyIf(org.gradle.api.specs.Spec)">onlyIf</link>(onlyIfSpec)</literal></td><td><para>Execute the task only if the given spec is satisfied. The spec will be evaluated at task execution time, not
during configuration. If the Spec is not satisfied, the task will be skipped.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.Task:property(java.lang.String)">property</link>(propertyName)</literal></td><td><para>Returns the value of the given property of this task.  This method locates a property as follows:</para></td></tr><tr><td><literal><link linkend="org.gradle.api.Task:setProperty(java.lang.String, java.lang.Object)">setProperty</link>(name, value)</literal></td><td><para>Sets a property of this task.  This method searches for a property with the given name in the following
locations, and sets the property on the first location where it finds the property.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.Task:shouldRunAfter(java.lang.Object[])">shouldRunAfter</link>(paths)</literal></td><td><para>Specifies that this task should run after all of the supplied tasks.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.Task:usesService(org.gradle.api.provider.Provider)">usesService</link>(service)</literal></td><td><para>Registers a <apilink class="org.gradle.api.services.BuildService"/> that is used by this task so
<apilink class="org.gradle.api.services.BuildServiceRegistration" method="getMaxParallelUsages()"/> can be honored.
</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.Task:actions" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/List.html"><classname>List</classname></ulink>&lt;<apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.Task"/>&gt;&gt;</classname> <literal>actions</literal></title><para>The sequence of <apilink class="org.gradle.api.Action"/> objects which will be executed by this task, in the order of
execution.</para></section><section id="org.gradle.api.Task:ant" role="detail"><title><apilink class="org.gradle.api.AntBuilder"/> <literal>ant</literal> (read-only)</title><para>The <literal>AntBuilder</literal> for this task.  You can use this in your build file to execute ant
tasks.</para></section><section id="org.gradle.api.Task:dependsOn" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink>&gt;</classname> <literal>dependsOn</literal></title><para>The dependencies of this task.</para></section><section id="org.gradle.api.Task:description" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>description</literal></title><para>The description of this task.</para></section><section id="org.gradle.api.Task:destroyables" role="detail"><title><apilink class="org.gradle.api.tasks.TaskDestroyables"/> <literal>destroyables</literal> (read-only)</title><para>The destroyables of this task.</para></section><section id="org.gradle.api.Task:didWork" role="detail"><title><classname>boolean</classname> <literal>didWork</literal></title><para>Checks if the task actually did any work.  Even if a Task executes, it may determine that it has nothing to
do.  For example, a compilation task may determine that source files have not changed since the last time a the
task was run.</para></section><section id="org.gradle.api.Task:enabled" role="detail"><title><classname>boolean</classname> <literal>enabled</literal></title><para>Returns if this task is enabled or not.</para></section><section id="org.gradle.api.Task:extensions" role="detail"><title><apilink class="org.gradle.api.plugins.ExtensionContainer"/> <literal>extensions</literal> (read-only)</title><para>The container of extensions.</para></section><section id="org.gradle.api.Task:finalizedBy" role="detail"><title><apilink class="org.gradle.api.tasks.TaskDependency"/> <literal>finalizedBy</literal></title><para>Returns tasks that finalize this task.</para></section><section id="org.gradle.api.Task:group" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>group</literal></title><para>The task group which this task belongs to. The task group is used in reports and user interfaces to
group related tasks together when presenting a list of tasks to the user.</para></section><section id="org.gradle.api.Task:inputs" role="detail"><title><apilink class="org.gradle.api.tasks.TaskInputs"/> <literal>inputs</literal> (read-only)</title><para>The inputs of this task.</para></section><section id="org.gradle.api.Task:localState" role="detail"><title><apilink class="org.gradle.api.tasks.TaskLocalState"/> <literal>localState</literal> (read-only)</title><para>The local state of this task.</para></section><section id="org.gradle.api.Task:logger" role="detail"><title><apilink class="org.gradle.api.logging.Logger"/> <literal>logger</literal> (read-only)</title><para>The logger for this task. You can use this in your build file to write log messages.</para></section><section id="org.gradle.api.Task:logging" role="detail"><title><apilink class="org.gradle.api.logging.LoggingManager"/> <literal>logging</literal> (read-only)</title><para>The <apilink class="org.gradle.api.logging.LoggingManager"/> which can be used to receive logging and to control the
standard output/error capture for this task. By default, System.out is redirected to the Gradle logging system at
the QUIET log level, and System.err is redirected at the ERROR log level.</para></section><section id="org.gradle.api.Task:mustRunAfter" role="detail"><title><apilink class="org.gradle.api.tasks.TaskDependency"/> <literal>mustRunAfter</literal></title><para>Returns tasks that this task must run after.</para></section><section id="org.gradle.api.Task:name" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>name</literal> (read-only)</title><para>The name of this task. The name uniquely identifies the task within its <apilink class="org.gradle.api.Project"/>.</para></section><section id="org.gradle.api.Task:outputs" role="detail"><title><apilink class="org.gradle.api.tasks.TaskOutputs"/> <literal>outputs</literal> (read-only)</title><para>The outputs of this task.</para></section><section id="org.gradle.api.Task:path" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>path</literal> (read-only)</title><para>The path of the task, which is a fully qualified name for the task. The path of a task is the path of
its <apilink class="org.gradle.api.Project"/> plus the name of the task, separated by <literal>:</literal>.</para></section><section id="org.gradle.api.Task:project" role="detail"><title><apilink class="org.gradle.api.Project"/> <literal>project</literal> (read-only)</title><para>The <apilink class="org.gradle.api.Project"/> which this task belongs to.</para><para>Calling this method from a task action is not supported when configuration caching is enabled.</para></section><section id="org.gradle.api.Task:shouldRunAfter" role="detail"><title><apilink class="org.gradle.api.tasks.TaskDependency"/> <literal>shouldRunAfter</literal></title><para>Returns tasks that this task should run after.</para></section><section id="org.gradle.api.Task:state" role="detail"><title><apilink class="org.gradle.api.tasks.TaskState"/> <literal>state</literal> (read-only)</title><para>The execution state of this task. This provides information about the execution of this task, such as
whether it has executed, been skipped, has failed, etc.</para></section><section id="org.gradle.api.Task:taskDependencies" role="detail"><title><apilink class="org.gradle.api.tasks.TaskDependency"/> <literal>taskDependencies</literal> (read-only)</title><para>Returns a <apilink class="org.gradle.api.tasks.TaskDependency"/> which contains all the tasks that this task depends on.</para><para>Calling this method from a task action is not supported when configuration caching is enabled.</para></section><section id="org.gradle.api.Task:temporaryDir" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>temporaryDir</literal> (read-only)</title><para>Returns a directory which this task can use to write temporary files to. Each task instance is provided with a
separate temporary directory. There are no guarantees that the contents of this directory will be kept beyond the
execution of the task.</para></section><section id="org.gradle.api.Task:timeout" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html"><classname>Duration</classname></ulink>&gt;</classname> <literal>timeout</literal></title><para>The timeout of this task.</para><programlisting language="java">
  task myTask {
      timeout = Duration.ofMinutes(10)
  }
</programlisting><para>
The Thread executing this task will be interrupted if the task takes longer than the specified amount of time to run.
In order for a task to work properly with this feature, it needs to react to interrupts and must clean up any resources it opened.
</para><para>By default, tasks never time out.</para></section></section><section><title>Method details</title><section id="org.gradle.api.Task:dependsOn(java.lang.Object[])" role="detail"><title><apilink class="org.gradle.api.Task"/> <literal>dependsOn</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink>...</classname> paths)</title><para>Adds the given dependencies to this task. See <ulink url="./Task.html#dependencies">here</ulink> for a description of the types
of objects which can be used as task dependencies.</para></section><section id="org.gradle.api.Task:doFirst(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.Task"/> <literal>doFirst</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> action)</title><para>Adds the given closure to the beginning of this task's action list. The closure is passed this task as a
parameter when executed.</para></section><section id="org.gradle.api.Task:doFirst(java.lang.String, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.Task"/> <literal>doFirst</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> actionName, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.Task"/>&gt;</classname> action)</title><para>Adds the given <apilink class="org.gradle.api.Action"/> to the beginning of this task's action list.</para></section><section id="org.gradle.api.Task:doFirst(org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.Task"/> <literal>doFirst</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.Task"/>&gt;</classname> action)</title><para>Adds the given <apilink class="org.gradle.api.Action"/> to the beginning of this task's action list.</para></section><section id="org.gradle.api.Task:doLast(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.Task"/> <literal>doLast</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> action)</title><para>Adds the given closure to the end of this task's action list.  The closure is passed this task as a parameter
when executed.</para></section><section id="org.gradle.api.Task:doLast(java.lang.String, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.Task"/> <literal>doLast</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> actionName, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.Task"/>&gt;</classname> action)</title><para>Adds the given <apilink class="org.gradle.api.Action"/> to the end of this task's action list.</para></section><section id="org.gradle.api.Task:doLast(org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.Task"/> <literal>doLast</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.Task"/>&gt;</classname> action)</title><para>Adds the given <apilink class="org.gradle.api.Action"/> to the end of this task's action list.</para></section><section id="org.gradle.api.Task:doNotTrackState(java.lang.String)" role="detail"><title><classname>void</classname> <literal>doNotTrackState</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> reasonNotToTrackState)</title><para>Do not track the state of the task.

</para><para>Instructs Gradle to treat the task as untracked.</para></section><section id="org.gradle.api.Task:finalizedBy(java.lang.Object[])" role="detail"><title><apilink class="org.gradle.api.Task"/> <literal>finalizedBy</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink>...</classname> paths)</title><para>Adds the given finalizer tasks for this task.</para><programlisting language="java">
task taskY {
    finalizedBy "taskX"
}
</programlisting><para>See <ulink url="./Task.html#dependencies">here</ulink> for a description of the types of objects which can be used to specify
a finalizer task.</para></section><section id="org.gradle.api.Task:hasProperty(java.lang.String)" role="detail"><title><classname>boolean</classname> <literal>hasProperty</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> propertyName)</title><para>Determines if this task has the given property. See <link linkend="org.gradle.api.Task.properties">here</link> for details of the
properties which are available for a task.</para></section><section id="org.gradle.api.Task:mustRunAfter(java.lang.Object[])" role="detail"><title><apilink class="org.gradle.api.Task"/> <literal>mustRunAfter</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink>...</classname> paths)</title><para>Specifies that this task must run after all of the supplied tasks.</para><programlisting language="java">
task taskY {
    mustRunAfter "taskX"
}
</programlisting><para>For each supplied task, this action adds a task 'ordering', and does not specify a 'dependency' between the tasks.
As such, it is still possible to execute 'taskY' without first executing the 'taskX' in the example.</para><para>See <ulink url="./Task.html#dependencies">here</ulink> for a description of the types of objects which can be used to specify
an ordering relationship.</para></section><section id="org.gradle.api.Task:onlyIf(groovy.lang.Closure)" role="detail"><title><classname>void</classname> <literal>onlyIf</literal>(<classname><ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink>&lt;?&gt;</classname> onlyIfClosure)</title><para>Execute the task only if the given closure returns true.  The closure will be evaluated at task execution
time, not during configuration.  The closure will be passed a single parameter, this task. If the closure returns
false, the task will be skipped.</para><para>You may add multiple such predicates. The task is skipped if any of the predicates return false.</para><para>Typical usage:<literal>myTask.onlyIf { isProductionEnvironment() }</literal></para></section><section id="org.gradle.api.Task:onlyIf(java.lang.String, org.gradle.api.specs.Spec)" role="detail"><title><classname>void</classname> <literal>onlyIf</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> onlyIfReason, <classname><apilink class="org.gradle.api.specs.Spec"/>&lt;? super <apilink class="org.gradle.api.Task"/>&gt;</classname> onlyIfSpec)</title><caution><para>Note: This method is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Execute the task only if the given spec is satisfied. The spec will be evaluated at task execution time, not
during configuration. If the Spec is not satisfied, the task will be skipped.</para><para>You may add multiple such predicates. The task is skipped if any of the predicates return false.</para><para>Typical usage (from Java):</para><programlisting language="java">myTask.onlyIf("run only in production environment", new Spec&lt;Task&gt;() {
   boolean isSatisfiedBy(Task task) {
      return isProductionEnvironment();
   }
});
</programlisting></section><section id="org.gradle.api.Task:onlyIf(org.gradle.api.specs.Spec)" role="detail"><title><classname>void</classname> <literal>onlyIf</literal>(<classname><apilink class="org.gradle.api.specs.Spec"/>&lt;? super <apilink class="org.gradle.api.Task"/>&gt;</classname> onlyIfSpec)</title><para>Execute the task only if the given spec is satisfied. The spec will be evaluated at task execution time, not
during configuration. If the Spec is not satisfied, the task will be skipped.</para><para>You may add multiple such predicates. The task is skipped if any of the predicates return false.</para><para>Typical usage (from Java):</para><programlisting language="java">myTask.onlyIf(new Spec&lt;Task&gt;() {
   boolean isSatisfiedBy(Task task) {
      return isProductionEnvironment();
   }
});
</programlisting></section><section id="org.gradle.api.Task:property(java.lang.String)" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> <literal>property</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> propertyName)</title><para>Returns the value of the given property of this task.  This method locates a property as follows:</para><orderedlist><listitem>If this task object has a property with the given name, return the value of the property.</listitem><listitem>If this task has an extension with the given name, return the extension. </listitem><listitem>If this task has an extra property with the given name, return the value of the property.</listitem><listitem>If not found, throw <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/MissingPropertyException.html"><classname>MissingPropertyException</classname></ulink></listitem></orderedlist></section><section id="org.gradle.api.Task:setProperty(java.lang.String, java.lang.Object)" role="detail"><title><classname>void</classname> <literal>setProperty</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> value)</title><para>Sets a property of this task.  This method searches for a property with the given name in the following
locations, and sets the property on the first location where it finds the property.</para><orderedlist><listitem>The task object itself.  For example, the <literal>enabled</literal> project property.</listitem><listitem>The task's extra properties.</listitem></orderedlist><para>

If the property is not found, a <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/MissingPropertyException.html"><classname>MissingPropertyException</classname></ulink> is thrown.</para></section><section id="org.gradle.api.Task:shouldRunAfter(java.lang.Object[])" role="detail"><title><apilink class="org.gradle.api.tasks.TaskDependency"/> <literal>shouldRunAfter</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink>...</classname> paths)</title><para>Specifies that this task should run after all of the supplied tasks.</para><programlisting language="java">
task taskY {
    shouldRunAfter "taskX"
}
</programlisting><para>For each supplied task, this action adds a task 'ordering', and does not specify a 'dependency' between the tasks.
As such, it is still possible to execute 'taskY' without first executing the 'taskX' in the example.</para><para>See <ulink url="./Task.html#dependencies">here</ulink> for a description of the types of objects which can be used to specify
an ordering relationship.</para></section><section id="org.gradle.api.Task:usesService(org.gradle.api.provider.Provider)" role="detail"><title><classname>void</classname> <literal>usesService</literal>(<classname><apilink class="org.gradle.api.provider.Provider"/>&lt;? extends <apilink class="org.gradle.api.services.BuildService"/>&lt;?&gt;&gt;</classname> service)</title><para>Registers a <apilink class="org.gradle.api.services.BuildService"/> that is used by this task so
<apilink class="org.gradle.api.services.BuildServiceRegistration" method="getMaxParallelUsages()"/> can be honored.
</para><para>
This is not necessary for task properties declared as <apilink class="org.gradle.api.services.ServiceReference"/>s.
</para></section></section></chapter><chapter id="org.gradle.api.initialization.Settings"><title>Settings</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.initialization.Settings" style="javadoc"/></seg></seglistitem></segmentedlist><para>Declares the configuration required to instantiate and configure the hierarchy of <apilink class="org.gradle.api.Project"/> instances which are to participate in a build.</para><para>There is a one-to-one correspondence between a <literal>Settings</literal> instance and a <literal><literal>settings.gradle</literal></literal> settings file. Before Gradle assembles the projects for a build, it creates a
<literal>Settings</literal> instance and executes the settings file against it.</para><section><title>Assembling a Multi-Project Build</title><para>One of the purposes of the <literal>Settings</literal> object is to allow you to declare the projects which are to be
included in the build. You add projects to the build using the <apilink class="org.gradle.api.initialization.Settings" method="include(java.lang.String[])"/> method.  There is always a
root project included in a build.  It is added automatically when the <literal>Settings</literal> object is created.  The
root project's name defaults to the name of the directory containing the settings file. The root project's project
directory defaults to the directory containing the settings file.</para><para>When a project is included in the build, a <apilink class="org.gradle.api.initialization.ProjectDescriptor"/> is created. You can use this descriptor to
change the default values for several properties of the project.</para></section><section><title>Using Settings in a Settings File</title><section><title>Dynamic Properties</title><para>In addition to the properties of this interface, the <literal>Settings</literal> object makes some additional read-only
properties available to the settings script. This includes properties from the following sources:</para><itemizedlist><listitem>Defined in the <literal>gradle.properties</literal> file located in the settings directory of the
build.</listitem><listitem>Defined the <literal>gradle.properties</literal> file located in the user's <literal>.gradle</literal>
directory.</listitem><listitem>Provided on the command-line using the -P option.</listitem></itemizedlist></section></section><section><title>Properties</title><table><title>Properties - Settings</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.initialization.Settings:buildCache"><literal>buildCache</literal></link></td><td><para>The build cache configuration.</para></td></tr><tr><td><link linkend="org.gradle.api.initialization.Settings:caches"><literal>caches</literal></link></td><td><caution>Incubating</caution><para>The configuration for caches stored in the user home directory.</para></td></tr><tr><td><link linkend="org.gradle.api.initialization.Settings:extensions"><literal>extensions</literal></link></td><td><para>The container of extensions.</para></td></tr><tr><td><link linkend="org.gradle.api.initialization.Settings:gradle"><literal>gradle</literal></link></td><td><para>The <apilink class="org.gradle.api.invocation.Gradle"/> instance for the current build.</para></td></tr><tr><td><link linkend="org.gradle.api.initialization.Settings:pluginManager"><literal>pluginManager</literal></link></td><td><para>The plugin manager for this plugin aware object.</para></td></tr><tr><td><link linkend="org.gradle.api.initialization.Settings:plugins"><literal>plugins</literal></link></td><td><para>The container of plugins that have been applied to this object.
</para></td></tr><tr><td><link linkend="org.gradle.api.initialization.Settings:rootDir"><literal>rootDir</literal></link></td><td><para>The root directory of the build. The root directory is the project directory of the root project.</para></td></tr><tr><td><link linkend="org.gradle.api.initialization.Settings:rootProject"><literal>rootProject</literal></link></td><td><para>The root project of the build.</para></td></tr><tr><td><link linkend="org.gradle.api.initialization.Settings:settings"><literal>settings</literal></link></td><td><para>Returns this settings object.</para></td></tr><tr><td><link linkend="org.gradle.api.initialization.Settings:settingsDir"><literal>settingsDir</literal></link></td><td><para>The settings directory of the build. The settings directory is the directory containing the settings
file.</para></td></tr><tr><td><link linkend="org.gradle.api.initialization.Settings:startParameter"><literal>startParameter</literal></link></td><td><para>The set of parameters used to invoke this instance of Gradle.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - Settings</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.initialization.Settings:apply(groovy.lang.Closure)">apply</link>(closure)</literal></td><td><para>Applies zero or more plugins or scripts.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.initialization.Settings:apply(java.util.Map)">apply</link>(options)</literal></td><td><para>Applies a plugin or script, using the given options provided as a map. Does nothing if the plugin has already been applied.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.initialization.Settings:apply(org.gradle.api.Action)">apply</link>(action)</literal></td><td><para>Applies zero or more plugins or scripts.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.initialization.Settings:buildCache(org.gradle.api.Action)">buildCache</link>(action)</literal></td><td><para>Configures build cache.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.initialization.Settings:caches(org.gradle.api.Action)">caches</link>(cachesConfiguration)</literal></td><td><caution>Incubating</caution><para>Configures the settings for caches stored in the user home directory.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.initialization.Settings:findProject(java.io.File)">findProject</link>(projectDir)</literal></td><td><para>Returns the project with the given project directory.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.initialization.Settings:findProject(java.lang.String)">findProject</link>(path)</literal></td><td><para>Returns the project with the given path.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.initialization.Settings:include(java.lang.Iterable)">include</link>(projectPaths)</literal></td><td><para>Adds the given projects to the build. Each path in the supplied list is treated as the path of a project to
add to the build. Note that these path are not file paths, but instead specify the location of the new project in
the project hierarchy. As such, the supplied paths must use the ':' character as separator (and NOT '/').</para></td></tr><tr><td><literal><link linkend="org.gradle.api.initialization.Settings:include(java.lang.String[])">include</link>(projectPaths)</literal></td><td><para>Adds the given projects to the build. Each path in the supplied list is treated as the path of a project to
add to the build. Note that these path are not file paths, but instead specify the location of the new project in
the project hierarchy. As such, the supplied paths must use the ':' character as separator (and NOT '/').</para></td></tr><tr><td><literal><link linkend="org.gradle.api.initialization.Settings:includeBuild(java.lang.Object)">includeBuild</link>(rootProject)</literal></td><td><para>Includes a build at the specified path to the composite build.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.initialization.Settings:includeBuild(java.lang.Object, org.gradle.api.Action)">includeBuild</link>(rootProject, configuration)</literal></td><td><para>Includes a build at the specified path to the composite build, with the supplied configuration.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.initialization.Settings:includeFlat(java.lang.Iterable)">includeFlat</link>(projectNames)</literal></td><td><para>Adds the given projects to the build. Each name in the supplied list is treated as the name of a project to
add to the build.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.initialization.Settings:includeFlat(java.lang.String[])">includeFlat</link>(projectNames)</literal></td><td><para>Adds the given projects to the build. Each name in the supplied list is treated as the name of a project to
add to the build.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.initialization.Settings:project(java.io.File)">project</link>(projectDir)</literal></td><td><para>Returns the project with the given project directory.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.initialization.Settings:project(java.lang.String)">project</link>(path)</literal></td><td><para>Returns the project with the given path.</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.initialization.Settings:buildCache" role="detail"><title><apilink class="org.gradle.caching.configuration.BuildCacheConfiguration"/> <literal>buildCache</literal> (read-only)</title><para>The build cache configuration.</para></section><section id="org.gradle.api.initialization.Settings:caches" role="detail"><title><apilink class="org.gradle.api.cache.CacheConfigurations"/> <literal>caches</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The configuration for caches stored in the user home directory.</para></section><section id="org.gradle.api.initialization.Settings:extensions" role="detail"><title><apilink class="org.gradle.api.plugins.ExtensionContainer"/> <literal>extensions</literal> (read-only)</title><para>The container of extensions.</para></section><section id="org.gradle.api.initialization.Settings:gradle" role="detail"><title><apilink class="org.gradle.api.invocation.Gradle"/> <literal>gradle</literal> (read-only)</title><para>The <apilink class="org.gradle.api.invocation.Gradle"/> instance for the current build.</para></section><section id="org.gradle.api.initialization.Settings:pluginManager" role="detail"><title><apilink class="org.gradle.api.plugins.PluginManager"/> <literal>pluginManager</literal> (read-only)</title><para>The plugin manager for this plugin aware object.</para></section><section id="org.gradle.api.initialization.Settings:plugins" role="detail"><title><apilink class="org.gradle.api.plugins.PluginContainer"/> <literal>plugins</literal> (read-only)</title><para>The container of plugins that have been applied to this object.
</para><para>
While not deprecated, it is preferred to use the methods of this interface or the <apilink class="org.gradle.api.plugins.PluginAware" method="getPluginManager()"/> than use the plugin container.
</para><para>
Use one of the 'apply' methods on this interface or on the <apilink class="org.gradle.api.plugins.PluginAware" method="getPluginManager()"/> to apply plugins instead of applying via the plugin container.
</para><para>
Use <apilink class="org.gradle.api.plugins.PluginManager" method="hasPlugin(java.lang.String)"/> or similar to query for the application of plugins instead of doing so via the plugin container.</para></section><section id="org.gradle.api.initialization.Settings:rootDir" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>rootDir</literal> (read-only)</title><para>The root directory of the build. The root directory is the project directory of the root project.</para></section><section id="org.gradle.api.initialization.Settings:rootProject" role="detail"><title><apilink class="org.gradle.api.initialization.ProjectDescriptor"/> <literal>rootProject</literal> (read-only)</title><para>The root project of the build.</para></section><section id="org.gradle.api.initialization.Settings:settings" role="detail"><title><apilink class="org.gradle.api.initialization.Settings"/> <literal>settings</literal> (read-only)</title><para>Returns this settings object.</para></section><section id="org.gradle.api.initialization.Settings:settingsDir" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>settingsDir</literal> (read-only)</title><para>The settings directory of the build. The settings directory is the directory containing the settings
file.</para></section><section id="org.gradle.api.initialization.Settings:startParameter" role="detail"><title><apilink class="org.gradle.StartParameter"/> <literal>startParameter</literal> (read-only)</title><para>The set of parameters used to invoke this instance of Gradle.</para></section></section><section><title>Method details</title><section id="org.gradle.api.initialization.Settings:apply(groovy.lang.Closure)" role="detail"><title><classname>void</classname> <literal>apply</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> closure)</title><para>Applies zero or more plugins or scripts.
</para><para>
The given closure is used to configure an <apilink class="org.gradle.api.plugins.ObjectConfigurationAction"/>, which "builds" the plugin application.
</para><para>
This method differs from <apilink class="org.gradle.api.plugins.PluginAware" method="apply(java.util.Map)"/> in that it allows methods of the configuration action to be invoked more than once.</para></section><section id="org.gradle.api.initialization.Settings:apply(java.util.Map)" role="detail"><title><classname>void</classname> <literal>apply</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, ?&gt;</classname> options)</title><para>Applies a plugin or script, using the given options provided as a map. Does nothing if the plugin has already been applied.
</para><para>
The given map is applied as a series of method calls to a newly created <apilink class="org.gradle.api.plugins.ObjectConfigurationAction"/>.
That is, each key in the map is expected to be the name of a method <apilink class="org.gradle.api.plugins.ObjectConfigurationAction"/> and the value to be compatible arguments to that method.

</para><para>The following options are available:</para><itemizedlist><listitem><literal>from</literal>: A script to apply. Accepts any path supported by <apilink class="org.gradle.api.Project" method="uri(java.lang.Object)"/>.</listitem><listitem><literal>plugin</literal>: The id or implementation class of the plugin to apply.</listitem><listitem><literal>to</literal>: The target delegate object or objects. The default is this plugin aware object. Use this to configure objects other than this object.</listitem></itemizedlist></section><section id="org.gradle.api.initialization.Settings:apply(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>apply</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.plugins.ObjectConfigurationAction"/>&gt;</classname> action)</title><para>Applies zero or more plugins or scripts.
</para><para>
The given closure is used to configure an <apilink class="org.gradle.api.plugins.ObjectConfigurationAction"/>, which "builds" the plugin application.
</para><para>
This method differs from <apilink class="org.gradle.api.plugins.PluginAware" method="apply(java.util.Map)"/> in that it allows methods of the configuration action to be invoked more than once.</para></section><section id="org.gradle.api.initialization.Settings:buildCache(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>buildCache</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.caching.configuration.BuildCacheConfiguration"/>&gt;</classname> action)</title><para>Configures build cache.</para></section><section id="org.gradle.api.initialization.Settings:caches(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>caches</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.cache.CacheConfigurations"/>&gt;</classname> cachesConfiguration)</title><caution><para>Note: This method is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Configures the settings for caches stored in the user home directory.</para></section><section id="org.gradle.api.initialization.Settings:findProject(java.io.File)" role="detail"><title><apilink class="org.gradle.api.initialization.ProjectDescriptor"/> <literal>findProject</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> projectDir)</title><para>Returns the project with the given project directory.</para></section><section id="org.gradle.api.initialization.Settings:findProject(java.lang.String)" role="detail"><title><apilink class="org.gradle.api.initialization.ProjectDescriptor"/> <literal>findProject</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> path)</title><para>Returns the project with the given path.</para></section><section id="org.gradle.api.initialization.Settings:include(java.lang.Iterable)" role="detail"><title><classname>void</classname> <literal>include</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> projectPaths)</title><para>Adds the given projects to the build. Each path in the supplied list is treated as the path of a project to
add to the build. Note that these path are not file paths, but instead specify the location of the new project in
the project hierarchy. As such, the supplied paths must use the ':' character as separator (and NOT '/').</para><para>The last element of the supplied path is used as the project name. The supplied path is converted to a project
directory relative to the root project directory. The project directory can be altered by changing the 'projectDir'
property after the project has been included (see <apilink class="org.gradle.api.initialization.ProjectDescriptor" method="setProjectDir(java.io.File)"/>)</para><para>As an example, the path <literal>a:b</literal> adds a project with path <literal>:a:b</literal>, name <literal>b</literal> and project
directory <literal>$rootDir/a/b</literal>. It also adds the a project with path <literal>:a</literal>, name <literal>a</literal> and project
directory <literal>$rootDir/a</literal>, if it does not exist already.</para><para>Some common examples of using the project path are:</para><programlisting language="java">
  // include two projects, 'foo' and 'foo:bar'
  // directories are inferred by replacing ':' with '/'
  include(['foo:bar'])

  // include one project whose project dir does not match the logical project path
  include(['baz'])
  project(':baz').projectDir = file('foo/baz')

  // include many projects whose project dirs do not match the logical project paths
  file('subprojects').eachDir { dir -&gt;
    include([dir.name])
    project(":${dir.name}").projectDir = dir
  }
</programlisting></section><section id="org.gradle.api.initialization.Settings:include(java.lang.String[])" role="detail"><title><classname>void</classname> <literal>include</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>...</classname> projectPaths)</title><para>Adds the given projects to the build. Each path in the supplied list is treated as the path of a project to
add to the build. Note that these path are not file paths, but instead specify the location of the new project in
the project hierarchy. As such, the supplied paths must use the ':' character as separator (and NOT '/').</para><para>The last element of the supplied path is used as the project name. The supplied path is converted to a project
directory relative to the root project directory. The project directory can be altered by changing the 'projectDir'
property after the project has been included (see <apilink class="org.gradle.api.initialization.ProjectDescriptor" method="setProjectDir(java.io.File)"/>)</para><para>As an example, the path <literal>a:b</literal> adds a project with path <literal>:a:b</literal>, name <literal>b</literal> and project
directory <literal>$rootDir/a/b</literal>. It also adds the a project with path <literal>:a</literal>, name <literal>a</literal> and project
directory <literal>$rootDir/a</literal>, if it does not exist already.</para><para>Some common examples of using the project path are:</para><programlisting language="java">
  // include two projects, 'foo' and 'foo:bar'
  // directories are inferred by replacing ':' with '/'
  include 'foo:bar'

  // include one project whose project dir does not match the logical project path
  include 'baz'
  project(':baz').projectDir = file('foo/baz')

  // include many projects whose project dirs do not match the logical project paths
  file('subprojects').eachDir { dir -&gt;
    include dir.name
    project(":${dir.name}").projectDir = dir
  }
</programlisting></section><section id="org.gradle.api.initialization.Settings:includeBuild(java.lang.Object)" role="detail"><title><classname>void</classname> <literal>includeBuild</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> rootProject)</title><para>Includes a build at the specified path to the composite build.</para></section><section id="org.gradle.api.initialization.Settings:includeBuild(java.lang.Object, org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>includeBuild</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> rootProject, <classname><apilink class="org.gradle.api.Action"/>&lt;<apilink class="org.gradle.api.initialization.ConfigurableIncludedBuild"/>&gt;</classname> configuration)</title><para>Includes a build at the specified path to the composite build, with the supplied configuration.</para></section><section id="org.gradle.api.initialization.Settings:includeFlat(java.lang.Iterable)" role="detail"><title><classname>void</classname> <literal>includeFlat</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> projectNames)</title><para>Adds the given projects to the build. Each name in the supplied list is treated as the name of a project to
add to the build.</para><para>The supplied name is converted to a project directory relative to the <emphasis>parent</emphasis> directory of the root
project directory.</para><para>As an example, the name <literal>a</literal> add a project with path <literal>:a</literal>, name <literal>a</literal> and project directory
<literal>$rootDir/../a</literal>.</para></section><section id="org.gradle.api.initialization.Settings:includeFlat(java.lang.String[])" role="detail"><title><classname>void</classname> <literal>includeFlat</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>...</classname> projectNames)</title><para>Adds the given projects to the build. Each name in the supplied list is treated as the name of a project to
add to the build.</para><para>The supplied name is converted to a project directory relative to the <emphasis>parent</emphasis> directory of the root
project directory.</para><para>As an example, the name <literal>a</literal> add a project with path <literal>:a</literal>, name <literal>a</literal> and project directory
<literal>$rootDir/../a</literal>.</para></section><section id="org.gradle.api.initialization.Settings:project(java.io.File)" role="detail"><title><apilink class="org.gradle.api.initialization.ProjectDescriptor"/> <literal>project</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> projectDir)</title><para>Returns the project with the given project directory.</para></section><section id="org.gradle.api.initialization.Settings:project(java.lang.String)" role="detail"><title><apilink class="org.gradle.api.initialization.ProjectDescriptor"/> <literal>project</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> path)</title><para>Returns the project with the given path.</para></section></section></chapter><chapter id="org.gradle.caching.configuration.BuildCacheConfiguration"><title>BuildCacheConfiguration</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.caching.configuration.BuildCacheConfiguration" style="javadoc"/></seg></seglistitem></segmentedlist><para>Configuration for the <ulink url="https://docs.gradle.org/current/userguide/build_cache.html">build cache</ulink> for an entire Gradle build.</para><section><title>Properties</title><table><title>Properties - BuildCacheConfiguration</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.caching.configuration.BuildCacheConfiguration:local"><literal>local</literal></link></td><td><para>The local directory cache configuration.</para></td></tr><tr><td><link linkend="org.gradle.caching.configuration.BuildCacheConfiguration:remote"><literal>remote</literal></link></td><td><para>The remote cache configuration.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - BuildCacheConfiguration</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.caching.configuration.BuildCacheConfiguration:local(org.gradle.api.Action)">local</link>(configuration)</literal></td><td><para>Executes the given action against the local configuration.</para></td></tr><tr><td><literal><link linkend="org.gradle.caching.configuration.BuildCacheConfiguration:remote(java.lang.Class)">remote</link>(type)</literal></td><td><para>Configures a remote cache with the given type.
</para></td></tr><tr><td><literal><link linkend="org.gradle.caching.configuration.BuildCacheConfiguration:remote(java.lang.Class, org.gradle.api.Action)">remote</link>(type, configuration)</literal></td><td><para>Configures a remote cache with the given type.
</para></td></tr><tr><td><literal><link linkend="org.gradle.caching.configuration.BuildCacheConfiguration:remote(org.gradle.api.Action)">remote</link>(configuration)</literal></td><td><para>Executes the given action against the currently configured remote cache.</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.caching.configuration.BuildCacheConfiguration:local" role="detail"><title><apilink class="org.gradle.caching.local.DirectoryBuildCache"/> <literal>local</literal> (read-only)</title><para>The local directory cache configuration.</para></section><section id="org.gradle.caching.configuration.BuildCacheConfiguration:remote" role="detail"><title><apilink class="org.gradle.caching.configuration.BuildCache"/> <literal>remote</literal> (read-only)</title><para>The remote cache configuration.</para></section></section><section><title>Method details</title><section id="org.gradle.caching.configuration.BuildCacheConfiguration:local(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>local</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.caching.local.DirectoryBuildCache"/>&gt;</classname> configuration)</title><para>Executes the given action against the local configuration.</para></section><section id="org.gradle.caching.configuration.BuildCacheConfiguration:remote(java.lang.Class)" role="detail"><title><classname>T</classname> <literal>remote</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html"><classname>Class</classname></ulink>&lt;<classname>T</classname>&gt;</classname> type)</title><para>Configures a remote cache with the given type.
</para><para>
If a remote build cache has already been configured with a different type, this method replaces it.
</para><para>
Storing ("push") in the remote build cache is disabled by default.
</para></section><section id="org.gradle.caching.configuration.BuildCacheConfiguration:remote(java.lang.Class, org.gradle.api.Action)" role="detail"><title><classname>T</classname> <literal>remote</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html"><classname>Class</classname></ulink>&lt;<classname>T</classname>&gt;</classname> type, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <classname>T</classname>&gt;</classname> configuration)</title><para>Configures a remote cache with the given type.
</para><para>
If a remote build cache has already been configured with a <emphasis>different</emphasis> type, this method replaces it.
</para><para>
If a remote build cache has already been configured with the <emphasis>same</emphasis>, this method configures it.
</para><para>
Storing ("push") in the remote build cache is disabled by default.
</para></section><section id="org.gradle.caching.configuration.BuildCacheConfiguration:remote(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>remote</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.caching.configuration.BuildCache"/>&gt;</classname> configuration)</title><para>Executes the given action against the currently configured remote cache.</para></section></section></chapter><chapter id="org.gradle.caching.configuration.BuildCache"><title>BuildCache</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.caching.configuration.BuildCache" style="javadoc"/></seg></seglistitem></segmentedlist><segmentedlist><segtitle>Known Subtypes</segtitle><seglistitem><seg><simplelist columns="1" type="vert"><member><apilink class="org.gradle.caching.configuration.AbstractBuildCache"/></member></simplelist></seg></seglistitem></segmentedlist><para>Configuration object for a build cache.</para><section><title>Properties</title><table><title>Properties - BuildCache</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.caching.configuration.BuildCache:enabled"><literal>enabled</literal></link></td><td><para>Whether the build cache is enabled.</para></td></tr><tr><td><link linkend="org.gradle.caching.configuration.BuildCache:push"><literal>push</literal></link></td><td><para>Whether a given build can store outputs in the build cache.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.caching.configuration.BuildCache:enabled" role="detail"><title><classname>boolean</classname> <literal>enabled</literal></title><para>Whether the build cache is enabled.</para></section><section id="org.gradle.caching.configuration.BuildCache:push" role="detail"><title><classname>boolean</classname> <literal>push</literal></title><para>Whether a given build can store outputs in the build cache.</para></section></section></chapter><chapter id="org.gradle.caching.configuration.AbstractBuildCache"><title>AbstractBuildCache</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.caching.configuration.AbstractBuildCache" style="javadoc"/></seg></seglistitem></segmentedlist><segmentedlist><segtitle>Known Subtypes</segtitle><seglistitem><seg><simplelist columns="1" type="vert"><member><apilink class="org.gradle.caching.local.DirectoryBuildCache"/></member><member><apilink class="org.gradle.caching.http.HttpBuildCache"/></member></simplelist></seg></seglistitem></segmentedlist><para>Base implementation for build cache service configuration.</para><section><title>Properties</title><table><title>Properties - AbstractBuildCache</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.caching.configuration.AbstractBuildCache:enabled"><literal>enabled</literal></link></td><td><para>Whether the build cache is enabled.</para></td></tr><tr><td><link linkend="org.gradle.caching.configuration.AbstractBuildCache:push"><literal>push</literal></link></td><td><para>Whether a given build can store outputs in the build cache.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.caching.configuration.AbstractBuildCache:enabled" role="detail"><title><classname>boolean</classname> <literal>enabled</literal></title><para>Whether the build cache is enabled.</para></section><section id="org.gradle.caching.configuration.AbstractBuildCache:push" role="detail"><title><classname>boolean</classname> <literal>push</literal></title><para>Whether a given build can store outputs in the build cache.</para></section></section></chapter><chapter id="org.gradle.caching.local.DirectoryBuildCache"><title>DirectoryBuildCache</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.caching.local.DirectoryBuildCache" style="javadoc"/></seg></seglistitem></segmentedlist><para>Configuration object for the local directory build cache.</para><section><title>Properties</title><table><title>Properties - DirectoryBuildCache</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.caching.local.DirectoryBuildCache:directory"><literal>directory</literal></link></td><td><para>The directory to use to store the build cache.</para></td></tr><tr><td><link linkend="org.gradle.caching.local.DirectoryBuildCache:enabled"><literal>enabled</literal></link></td><td><para>Whether the build cache is enabled.</para></td></tr><tr><td><link linkend="org.gradle.caching.local.DirectoryBuildCache:push"><literal>push</literal></link></td><td><para>Whether a given build can store outputs in the build cache.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.caching.local.DirectoryBuildCache:directory" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> <literal>directory</literal></title><para>The directory to use to store the build cache.</para></section><section id="org.gradle.caching.local.DirectoryBuildCache:enabled" role="detail"><title><classname>boolean</classname> <literal>enabled</literal></title><para>Whether the build cache is enabled.</para></section><section id="org.gradle.caching.local.DirectoryBuildCache:push" role="detail"><title><classname>boolean</classname> <literal>push</literal></title><para>Whether a given build can store outputs in the build cache.</para></section></section></chapter><chapter id="org.gradle.api.initialization.IncludedBuild"><title>IncludedBuild</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.initialization.IncludedBuild" style="javadoc"/></seg></seglistitem></segmentedlist><para>A build that is included in the composite.</para><section><title>Properties</title><table><title>Properties - IncludedBuild</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.initialization.IncludedBuild:name"><literal>name</literal></link></td><td><para>The name of the included build.</para></td></tr><tr><td><link linkend="org.gradle.api.initialization.IncludedBuild:projectDir"><literal>projectDir</literal></link></td><td><para>The root directory of the included build.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - IncludedBuild</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.initialization.IncludedBuild:task(java.lang.String)">task</link>(path)</literal></td><td><para>Produces a reference to a task in the included build.</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.initialization.IncludedBuild:name" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>name</literal> (read-only)</title><para>The name of the included build.</para></section><section id="org.gradle.api.initialization.IncludedBuild:projectDir" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>projectDir</literal> (read-only)</title><para>The root directory of the included build.</para></section></section><section><title>Method details</title><section id="org.gradle.api.initialization.IncludedBuild:task(java.lang.String)" role="detail"><title><apilink class="org.gradle.api.tasks.TaskReference"/> <literal>task</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> path)</title><para>Produces a reference to a task in the included build.</para></section></section></chapter><chapter id="org.gradle.api.file.BuildLayout"><title>BuildLayout</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.file.BuildLayout" style="javadoc"/></seg></seglistitem></segmentedlist><caution><para>Note: This class is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Provides access to important locations for a Gradle build.
</para><para>
An instance of this type can be injected into a settings plugin by
annotating a public constructor or method with <literal>javax.inject.Inject</literal>.
It is also available via <apilink class="org.gradle.api.initialization.Settings" method="getLayout()"/>.
</para><para>
<emphasis>Note:</emphasis> This interface is not intended for implementation by build script or plugin authors.</para><section><title>Properties</title><table><title>Properties - BuildLayout</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.file.BuildLayout:rootDirectory"><literal>rootDirectory</literal></link></td><td><caution>Incubating</caution><para>The root directory of the build.
</para></td></tr><tr><td><link linkend="org.gradle.api.file.BuildLayout:settingsDirectory"><literal>settingsDirectory</literal></link></td><td><caution>Incubating</caution><para>The settings directory.
</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.file.BuildLayout:rootDirectory" role="detail"><title><apilink class="org.gradle.api.file.Directory"/> <literal>rootDirectory</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The root directory of the build.
</para><para>
The root directory is the project directory of the root project.</para></section><section id="org.gradle.api.file.BuildLayout:settingsDirectory" role="detail"><title><apilink class="org.gradle.api.file.Directory"/> <literal>settingsDirectory</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The settings directory.
</para><para>
The settings directory is the directory containing the settings file.</para></section></section></chapter><chapter id="org.gradle.api.Script"><title>Script</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.Script" style="javadoc"/></seg></seglistitem></segmentedlist><para>This interface is implemented by all Gradle Groovy DSL scripts to add in some Gradle-specific methods. As your compiled
script class will implement this interface, you can use the methods and properties declared by this interface
directly in your script.</para><para>Generally, a <literal>Script</literal> object will have a delegate object attached to it. For example, a build script will
have a <apilink class="org.gradle.api.Project"/> instance attached to it, and an initialization script will have a <apilink class="org.gradle.api.invocation.Gradle"/> instance attached to it. Any property reference or method call which is not found
on this <literal>Script</literal> object is forwarded to the delegate object.</para><section><title>Properties</title><table><title>Properties - Script</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.Script:buildscript"><literal>buildscript</literal></link></td><td><para>The script handler for this script. You can use this handler to manage the classpath used to compile and
execute this script.</para></td></tr><tr><td><link linkend="org.gradle.api.Script:logger"><literal>logger</literal></link></td><td><para>The logger for this script. You can use this in your script to write log messages.</para></td></tr><tr><td><link linkend="org.gradle.api.Script:logging"><literal>logging</literal></link></td><td><para>The <apilink class="org.gradle.api.logging.LoggingManager"/> which can be used to receive logging and to control the
standard output/error capture for this script. By default, System.out is redirected to the Gradle logging system
at the QUIET log level, and System.err is redirected at the ERROR log level.</para></td></tr><tr><td><link linkend="org.gradle.api.Script:resources"><literal>resources</literal></link></td><td><para>Provides access to resource-specific utility methods, for example factory methods that create various resources.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - Script</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.Script:apply(groovy.lang.Closure)">apply</link>(closure)</literal></td><td><para>Configures the delegate object for this script using plugins or scripts.

</para></td></tr><tr><td><literal><link linkend="org.gradle.api.Script:apply(java.util.Map)">apply</link>(options)</literal></td><td><para>Configures the delegate object for this script using plugins or scripts.

</para></td></tr><tr><td><literal><link linkend="org.gradle.api.Script:copy(groovy.lang.Closure)">copy</link>(closure)</literal></td><td><para>Copy the specified files.  The given closure is used to configure a <apilink class="org.gradle.api.file.CopySpec"/>, which
is then used to copy the files. Example:
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.Script:copySpec(groovy.lang.Closure)">copySpec</link>(closure)</literal></td><td><para>Creates a <apilink class="org.gradle.api.file.CopySpec"/> which can later be used to copy files or create an archive. The
given closure is used to configure the <apilink class="org.gradle.api.file.CopySpec"/> before it is returned by this
method.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.Script:delete(java.lang.Object[])">delete</link>(paths)</literal></td><td><para>Deletes files and directories.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.Script:file(java.lang.Object)">file</link>(path)</literal></td><td><para>Resolves a file path relative to the directory containing this script. This works as described for <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/></para></td></tr><tr><td><literal><link linkend="org.gradle.api.Script:file(java.lang.Object, org.gradle.api.PathValidation)">file</link>(path, validation)</literal></td><td><para>Resolves a file path relative to the directory containing this script and validates it using the given scheme.
See <apilink class="org.gradle.api.PathValidation"/> for the list of possible validations.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.Script:fileTree(java.lang.Object)">fileTree</link>(baseDir)</literal></td><td><para>Creates a new <literal>ConfigurableFileTree</literal> using the given base directory. The given baseDir path is evaluated
as per <apilink class="org.gradle.api.Script" method="file(java.lang.Object)"/>.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.Script:fileTree(java.lang.Object, groovy.lang.Closure)">fileTree</link>(baseDir, configureClosure)</literal></td><td><para>Creates a new <literal>ConfigurableFileTree</literal> using the given base directory. The given baseDir path is evaluated
as per <apilink class="org.gradle.api.Script" method="file(java.lang.Object)"/>. The closure will be used to configure the new file tree.
The file tree is passed to the closure as its delegate.  Example:</para></td></tr><tr><td><literal><link linkend="org.gradle.api.Script:fileTree(java.util.Map)">fileTree</link>(args)</literal></td><td><para>Creates a new <literal>ConfigurableFileTree</literal> using the provided map of arguments.  The map will be applied as
properties on the new file tree.  Example:</para></td></tr><tr><td><literal><link linkend="org.gradle.api.Script:files(java.lang.Object, groovy.lang.Closure)">files</link>(paths, configureClosure)</literal></td><td><para>Creates a new <literal>ConfigurableFileCollection</literal> using the given paths. The file collection is configured
using the given closure. This method works as described for <apilink class="org.gradle.api.Project" method="files(java.lang.Object, groovy.lang.Closure)"/>.
Relative paths are resolved relative to the directory containing this script.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.Script:files(java.lang.Object[])">files</link>(paths)</literal></td><td><para>Returns a <apilink class="org.gradle.api.file.ConfigurableFileCollection"/> containing the given files. This works as described for <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/>. Relative paths are resolved relative to the directory containing this script.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.Script:mkdir(java.lang.Object)">mkdir</link>(path)</literal></td><td><para>Creates a directory and returns a file pointing to it.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.Script:relativePath(java.lang.Object)">relativePath</link>(path)</literal></td><td><para>Returns the relative path from the directory containing this script to the given path. The given path object
is (logically) resolved as described for <apilink class="org.gradle.api.Script" method="file(java.lang.Object)"/>, from which a relative path is calculated.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.Script:tarTree(java.lang.Object)">tarTree</link>(tarPath)</literal></td><td><para>Creates a new <literal>FileTree</literal> which contains the contents of the given TAR file. The given tarPath path can be:
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.Script:uri(java.lang.Object)">uri</link>(path)</literal></td><td><para>Resolves a file path to a URI, relative to the directory containing this script. Evaluates the provided path
object as described for <apilink class="org.gradle.api.Script" method="file(java.lang.Object)"/>, with the exception that any URI scheme is supported, not just
'file:' URIs.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.Script:zipTree(java.lang.Object)">zipTree</link>(zipPath)</literal></td><td><para>Creates a new <literal>FileTree</literal> which contains the contents of the given ZIP file. The given zipPath path is
evaluated as per <apilink class="org.gradle.api.Script" method="file(java.lang.Object)"/>. You can combine this method with the <apilink class="org.gradle.api.Script" method="copy(groovy.lang.Closure)"/>
method to unzip a ZIP file.</para></td></tr></table></section><section><title>Script blocks</title><table><title>Script blocks - Script</title><thead><tr><td>Block</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.Script:buildscript(groovy.lang.Closure)"><literal>buildscript</literal></link></td><td><para>Configures the classpath for this script.

</para></td></tr></table></section><section><title>Property details</title><section id="org.gradle.api.Script:buildscript" role="detail"><title><apilink class="org.gradle.api.initialization.dsl.ScriptHandler"/> <literal>buildscript</literal> (read-only)</title><para>The script handler for this script. You can use this handler to manage the classpath used to compile and
execute this script.</para></section><section id="org.gradle.api.Script:logger" role="detail"><title><apilink class="org.gradle.api.logging.Logger"/> <literal>logger</literal> (read-only)</title><para>The logger for this script. You can use this in your script to write log messages.</para></section><section id="org.gradle.api.Script:logging" role="detail"><title><apilink class="org.gradle.api.logging.LoggingManager"/> <literal>logging</literal> (read-only)</title><para>The <apilink class="org.gradle.api.logging.LoggingManager"/> which can be used to receive logging and to control the
standard output/error capture for this script. By default, System.out is redirected to the Gradle logging system
at the QUIET log level, and System.err is redirected at the ERROR log level.</para></section><section id="org.gradle.api.Script:resources" role="detail"><title><apilink class="org.gradle.api.resources.ResourceHandler"/> <literal>resources</literal> (read-only)</title><para>Provides access to resource-specific utility methods, for example factory methods that create various resources.</para></section></section><section><title>Method details</title><section id="org.gradle.api.Script:apply(groovy.lang.Closure)" role="detail"><title><classname>void</classname> <literal>apply</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> closure)</title><para>Configures the delegate object for this script using plugins or scripts.

</para><para>The given closure is used to configure an <apilink class="org.gradle.api.plugins.ObjectConfigurationAction"/> which is
then used to configure the delegate object.</para></section><section id="org.gradle.api.Script:apply(java.util.Map)" role="detail"><title><classname>void</classname> <literal>apply</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, ?&gt;</classname> options)</title><para>Configures the delegate object for this script using plugins or scripts.

</para><para>The following options are available:</para><itemizedlist><listitem><literal>from</literal>: A script to apply to the delegate object. Accepts any path supported by <apilink class="org.gradle.api.Script" method="uri(java.lang.Object)"/>.</listitem><listitem><literal>plugin</literal>: The id or implementation class of the plugin to apply to the delegate object.</listitem><listitem><literal>to</literal>: The target delegate object or objects.</listitem></itemizedlist><para>For more detail, see <apilink class="org.gradle.api.plugins.ObjectConfigurationAction"/>.</para></section><section id="org.gradle.api.Script:copy(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.WorkResult"/> <literal>copy</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> closure)</title><para>Copy the specified files.  The given closure is used to configure a <apilink class="org.gradle.api.file.CopySpec"/>, which
is then used to copy the files. Example:
</para><programlisting language="java">
copy {
   from configurations.runtimeClasspath
   into 'build/deploy/lib'
}
</programlisting><para>
Note that CopySpecs can be nested:
</para><programlisting language="java">
copy {
   into 'build/webroot'
   exclude '**/.svn/**'
   from('src/main/webapp') {
      include '**/*.jsp'
      filter(ReplaceTokens, tokens:[copyright:'2009', version:'2.3.1'])
   }
   from('src/main/js') {
      include '**/*.js'
   }
}
</programlisting></section><section id="org.gradle.api.Script:copySpec(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.file.CopySpec"/> <literal>copySpec</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> closure)</title><para>Creates a <apilink class="org.gradle.api.file.CopySpec"/> which can later be used to copy files or create an archive. The
given closure is used to configure the <apilink class="org.gradle.api.file.CopySpec"/> before it is returned by this
method.</para></section><section id="org.gradle.api.Script:delete(java.lang.Object[])" role="detail"><title><classname>boolean</classname> <literal>delete</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink>...</classname> paths)</title><para>Deletes files and directories.</para></section><section id="org.gradle.api.Script:file(java.lang.Object)" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>file</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> path)</title><para>Resolves a file path relative to the directory containing this script. This works as described for <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/></para></section><section id="org.gradle.api.Script:file(java.lang.Object, org.gradle.api.PathValidation)" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>file</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> path, <apilink class="org.gradle.api.PathValidation"/> validation)</title><para>Resolves a file path relative to the directory containing this script and validates it using the given scheme.
See <apilink class="org.gradle.api.PathValidation"/> for the list of possible validations.</para></section><section id="org.gradle.api.Script:fileTree(java.lang.Object)" role="detail"><title><apilink class="org.gradle.api.file.ConfigurableFileTree"/> <literal>fileTree</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> baseDir)</title><para>Creates a new <literal>ConfigurableFileTree</literal> using the given base directory. The given baseDir path is evaluated
as per <apilink class="org.gradle.api.Script" method="file(java.lang.Object)"/>.</para><para>The returned file tree is lazy, so that it scans for files only when the contents of the file tree are
queried. The file tree is also live, so that it scans for files each time the contents of the file tree are
queried.</para></section><section id="org.gradle.api.Script:fileTree(java.lang.Object, groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.file.ConfigurableFileTree"/> <literal>fileTree</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> baseDir, <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> configureClosure)</title><para>Creates a new <literal>ConfigurableFileTree</literal> using the given base directory. The given baseDir path is evaluated
as per <apilink class="org.gradle.api.Script" method="file(java.lang.Object)"/>. The closure will be used to configure the new file tree.
The file tree is passed to the closure as its delegate.  Example:</para><programlisting language="java">
fileTree('src') {
   exclude '**/.svn/**'
}.copy { into 'dest'}
</programlisting><para>The returned file tree is lazy, so that it scans for files only when the contents of the file tree are
queried. The file tree is also live, so that it scans for files each time the contents of the file tree are
queried.</para></section><section id="org.gradle.api.Script:fileTree(java.util.Map)" role="detail"><title><apilink class="org.gradle.api.file.ConfigurableFileTree"/> <literal>fileTree</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, ?&gt;</classname> args)</title><para>Creates a new <literal>ConfigurableFileTree</literal> using the provided map of arguments.  The map will be applied as
properties on the new file tree.  Example:</para><programlisting language="java">
fileTree(dir:'src', excludes:['**/ignore/**','**/.svn/**'])
</programlisting><para>The returned file tree is lazy, so that it scans for files only when the contents of the file tree are
queried. The file tree is also live, so that it scans for files each time the contents of the file tree are
queried.</para></section><section id="org.gradle.api.Script:files(java.lang.Object, groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.file.ConfigurableFileCollection"/> <literal>files</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> paths, <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> configureClosure)</title><para>Creates a new <literal>ConfigurableFileCollection</literal> using the given paths. The file collection is configured
using the given closure. This method works as described for <apilink class="org.gradle.api.Project" method="files(java.lang.Object, groovy.lang.Closure)"/>.
Relative paths are resolved relative to the directory containing this script.</para></section><section id="org.gradle.api.Script:files(java.lang.Object[])" role="detail"><title><apilink class="org.gradle.api.file.ConfigurableFileCollection"/> <literal>files</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink>...</classname> paths)</title><para>Returns a <apilink class="org.gradle.api.file.ConfigurableFileCollection"/> containing the given files. This works as described for <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/>. Relative paths are resolved relative to the directory containing this script.</para></section><section id="org.gradle.api.Script:mkdir(java.lang.Object)" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>mkdir</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> path)</title><para>Creates a directory and returns a file pointing to it.</para></section><section id="org.gradle.api.Script:relativePath(java.lang.Object)" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>relativePath</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> path)</title><para>Returns the relative path from the directory containing this script to the given path. The given path object
is (logically) resolved as described for <apilink class="org.gradle.api.Script" method="file(java.lang.Object)"/>, from which a relative path is calculated.</para></section><section id="org.gradle.api.Script:tarTree(java.lang.Object)" role="detail"><title><apilink class="org.gradle.api.file.FileTree"/> <literal>tarTree</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> tarPath)</title><para>Creates a new <literal>FileTree</literal> which contains the contents of the given TAR file. The given tarPath path can be:
</para><itemizedlist><listitem>an instance of <apilink class="org.gradle.api.resources.Resource"/></listitem><listitem>any other object is evaluated as per <apilink class="org.gradle.api.Script" method="file(java.lang.Object)"/></listitem></itemizedlist><para>

The returned file tree is lazy, so that it scans for files only when the contents of the file tree are
queried. The file tree is also live, so that it scans for files each time the contents of the file tree are
queried.
</para><para>
Unless custom implementation of resources is passed, the tar tree attempts to guess the compression based on the file extension.
</para><para>
You can combine this method with the <apilink class="org.gradle.api.Script" method="copy(groovy.lang.Closure)"/>
method to untar a TAR file:

</para><programlisting language="java">
task untar(type: Copy) {
  from tarTree('someCompressedTar.gzip')

  //tar tree attempts to guess the compression based on the file extension
  //however if you must specify the compression explicitly you can:
  from tarTree(resources.gzip('someTar.ext'))

  //in case you work with unconventionally compressed tars
  //you can provide your own implementation of a ReadableResource:
  //from tarTree(yourOwnResource as ReadableResource)

  into 'dest'
}
</programlisting></section><section id="org.gradle.api.Script:uri(java.lang.Object)" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/net/URI.html"><classname>URI</classname></ulink> <literal>uri</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> path)</title><para>Resolves a file path to a URI, relative to the directory containing this script. Evaluates the provided path
object as described for <apilink class="org.gradle.api.Script" method="file(java.lang.Object)"/>, with the exception that any URI scheme is supported, not just
'file:' URIs.</para></section><section id="org.gradle.api.Script:zipTree(java.lang.Object)" role="detail"><title><apilink class="org.gradle.api.file.FileTree"/> <literal>zipTree</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> zipPath)</title><para>Creates a new <literal>FileTree</literal> which contains the contents of the given ZIP file. The given zipPath path is
evaluated as per <apilink class="org.gradle.api.Script" method="file(java.lang.Object)"/>. You can combine this method with the <apilink class="org.gradle.api.Script" method="copy(groovy.lang.Closure)"/>
method to unzip a ZIP file.</para><para>The returned file tree is lazy, so that it scans for files only when the contents of the file tree are
queried. The file tree is also live, so that it scans for files each time the contents of the file tree are
queried.</para></section></section><section><title>Script block details</title><section id="org.gradle.api.Script:buildscript(groovy.lang.Closure)" role="detail"><title><literal>buildscript</literal> { }</title><para>Configures the classpath for this script.

</para><para>The given closure is executed against this script's <apilink class="org.gradle.api.initialization.dsl.ScriptHandler"/>. The <apilink class="org.gradle.api.initialization.dsl.ScriptHandler"/> is passed
to the closure as the closure's delegate.</para><segmentedlist><segtitle>Delegates to</segtitle><seglistitem><seg><apilink class="org.gradle.api.initialization.dsl.ScriptHandler"/> from <link linkend="org.gradle.api.Script:buildscript"><literal>buildscript</literal></link></seg></seglistitem></segmentedlist></section></section></chapter><chapter id="org.gradle.api.file.SourceDirectorySet"><title>SourceDirectorySet</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.file.SourceDirectorySet" style="javadoc"/></seg></seglistitem></segmentedlist><segmentedlist><segtitle>Known Subtypes</segtitle><seglistitem><seg><simplelist columns="1" type="vert"><member><apilink class="org.gradle.api.tasks.GroovySourceDirectorySet"/></member><member><apilink class="org.gradle.api.tasks.ScalaSourceDirectorySet"/></member><member><apilink class="org.gradle.api.plugins.antlr.AntlrSourceDirectorySet"/></member></simplelist></seg></seglistitem></segmentedlist><para>A <literal>SourceDirectorySet</literal> represents a set of source files composed from a set of source directories, along
with associated include and exclude patterns.
</para><para>
<literal>SourceDirectorySet</literal> extends <apilink class="org.gradle.api.file.FileTree"/>. The contents of the file tree represent the source files of this set,
arranged in a hierarchy. The file tree is live and reflects changes to the source directories and their contents.
</para><para>
You can create an instance of <literal>SourceDirectorySet</literal> using the <apilink class="org.gradle.api.model.ObjectFactory" method="sourceDirectorySet(java.lang.String, java.lang.String)"/>
method.
</para><para>
You can filter the <emphasis>files</emphasis> that are obtainable in this set using patterns via <UNHANDLED-LINK>#include(Spec)</UNHANDLED-LINK>
and <UNHANDLED-LINK>#include(Spec)</UNHANDLED-LINK> (or any overload of these methods).  The set of included source directories themselves are
<emphasis>not filtered</emphasis>.</para><section><title>Properties</title><table><title>Properties - SourceDirectorySet</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.file.SourceDirectorySet:classesDirectory"><literal>classesDirectory</literal></link></td><td><para>The directory property that is bound to the task that produces the output via <apilink class="org.gradle.api.file.SourceDirectorySet" method="compiledBy(org.gradle.api.tasks.TaskProvider, java.util.function.Function)"/>.
Use this as part of a classpath or input to another task to ensure that the output is created before it is used.

Note: To define the path of the output folder use <apilink class="org.gradle.api.file.SourceDirectorySet" method="getDestinationDirectory()"/></para></td></tr><tr><td><link linkend="org.gradle.api.file.SourceDirectorySet:destinationDirectory"><literal>destinationDirectory</literal></link></td><td><para>Configure the directory to assemble the compiled classes into.</para></td></tr><tr><td><link linkend="org.gradle.api.file.SourceDirectorySet:filter"><literal>filter</literal></link></td><td><para>The filter used to select the source from the source directories. These filter patterns are applied after
the include and exclude patterns of this source directory set. Generally, the filter patterns are used to
restrict the contents to certain types of files, eg <literal>*.java</literal>.</para></td></tr><tr><td><link linkend="org.gradle.api.file.SourceDirectorySet:srcDirs"><literal>srcDirs</literal></link></td><td><para>The source directories that make up this set.
</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - SourceDirectorySet</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.file.SourceDirectorySet:compiledBy(org.gradle.api.tasks.TaskProvider, java.util.function.Function)">compiledBy</link>(taskProvider, mapping)</literal></td><td><para>Define the task responsible for processing the source.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.file.SourceDirectorySet:source(org.gradle.api.file.SourceDirectorySet)">source</link>(source)</literal></td><td><para>Adds the given source to this set.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.file.SourceDirectorySet:srcDir(java.lang.Object)">srcDir</link>(srcPath)</literal></td><td><para>Adds the given source directory to this set. The given directory does not need to exist. Directories that do not exist are ignored.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.file.SourceDirectorySet:srcDirs(java.lang.Object[])">srcDirs</link>(srcPaths)</literal></td><td><para>Adds the given source directories to this set. The given directories do not need to exist. Directories that do not exist are ignored.</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.file.SourceDirectorySet:classesDirectory" role="detail"><title><classname><apilink class="org.gradle.api.provider.Provider"/>&lt;<apilink class="org.gradle.api.file.Directory"/>&gt;</classname> <literal>classesDirectory</literal></title><para>The directory property that is bound to the task that produces the output via <apilink class="org.gradle.api.file.SourceDirectorySet" method="compiledBy(org.gradle.api.tasks.TaskProvider, java.util.function.Function)"/>.
Use this as part of a classpath or input to another task to ensure that the output is created before it is used.

Note: To define the path of the output folder use <apilink class="org.gradle.api.file.SourceDirectorySet" method="getDestinationDirectory()"/></para><segmentedlist><segtitle>Default with <literal>java-base</literal> plugin</segtitle><seglistitem><seg><literal><replaceable>${project.layout.buildDirectory}</replaceable>/classes/<replaceable>${sourceDirectorySet.name}</replaceable>/<replaceable>${sourceSet.name}</replaceable></literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.file.SourceDirectorySet:destinationDirectory" role="detail"><title><apilink class="org.gradle.api.file.DirectoryProperty"/> <literal>destinationDirectory</literal></title><para>Configure the directory to assemble the compiled classes into.</para><segmentedlist><segtitle>Default with <literal>java-base</literal> plugin</segtitle><seglistitem><seg><literal><replaceable>${project.layout.buildDirectory}</replaceable>/classes/<replaceable>${sourceDirectorySet.name}</replaceable>/<replaceable>${sourceSet.name}</replaceable></literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.file.SourceDirectorySet:filter" role="detail"><title><apilink class="org.gradle.api.tasks.util.PatternFilterable"/> <literal>filter</literal> (read-only)</title><para>The filter used to select the source from the source directories. These filter patterns are applied after
the include and exclude patterns of this source directory set. Generally, the filter patterns are used to
restrict the contents to certain types of files, eg <literal>*.java</literal>.</para></section><section id="org.gradle.api.file.SourceDirectorySet:srcDirs" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink>&gt;</classname> <literal>srcDirs</literal></title><para>The source directories that make up this set.
</para><para>
Note that filtering via patterns using <UNHANDLED-LINK>#exclude(Spec)</UNHANDLED-LINK> and <UNHANDLED-LINK>#include(Spec)</UNHANDLED-LINK> (or any overload of these methods) only
filters <emphasis>files</emphasis> within the <apilink class="org.gradle.api.file.DirectoryTree"/>s returned by this method and <emphasis>does not filter</emphasis>
the set of source directory trees themselves.  This result should agree with <apilink class="org.gradle.api.file.SourceDirectorySet" method="getSrcDirTrees()"/>.
</para><para>
Does not filter source directories that do not exist.</para><segmentedlist><segtitle>Default with <literal>java-base</literal> plugin</segtitle><seglistitem><seg><literal>src/<replaceable>${sourceSet.name}</replaceable>/<replaceable>${sourceDirectorySet.name}</replaceable></literal></seg></seglistitem></segmentedlist></section></section><section><title>Method details</title><section id="org.gradle.api.file.SourceDirectorySet:compiledBy(org.gradle.api.tasks.TaskProvider, java.util.function.Function)" role="detail"><title><classname>void</classname> <literal>compiledBy</literal>(<classname><apilink class="org.gradle.api.tasks.TaskProvider"/>&lt;<classname>T</classname>&gt;</classname> taskProvider, <classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/function/Function.html"><classname>Function</classname></ulink>&lt;<classname>T</classname>, <apilink class="org.gradle.api.file.DirectoryProperty"/>&gt;</classname> mapping)</title><para>Define the task responsible for processing the source.</para></section><section id="org.gradle.api.file.SourceDirectorySet:source(org.gradle.api.file.SourceDirectorySet)" role="detail"><title><apilink class="org.gradle.api.file.SourceDirectorySet"/> <literal>source</literal>(<apilink class="org.gradle.api.file.SourceDirectorySet"/> source)</title><para>Adds the given source to this set.</para></section><section id="org.gradle.api.file.SourceDirectorySet:srcDir(java.lang.Object)" role="detail"><title><apilink class="org.gradle.api.file.SourceDirectorySet"/> <literal>srcDir</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> srcPath)</title><para>Adds the given source directory to this set. The given directory does not need to exist. Directories that do not exist are ignored.</para></section><section id="org.gradle.api.file.SourceDirectorySet:srcDirs(java.lang.Object[])" role="detail"><title><apilink class="org.gradle.api.file.SourceDirectorySet"/> <literal>srcDirs</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink>...</classname> srcPaths)</title><para>Adds the given source directories to this set. The given directories do not need to exist. Directories that do not exist are ignored.</para></section></section></chapter><chapter id="org.gradle.api.tasks.GroovySourceDirectorySet"><title>GroovySourceDirectorySet</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.tasks.GroovySourceDirectorySet" style="javadoc"/></seg></seglistitem></segmentedlist><para>Represents a Groovy source set.</para><section><title>Properties</title><table><title>Properties - GroovySourceDirectorySet</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.tasks.GroovySourceDirectorySet:classesDirectory"><literal>classesDirectory</literal></link></td><td><para>The directory property that is bound to the task that produces the output via <apilink class="org.gradle.api.file.SourceDirectorySet" method="compiledBy(org.gradle.api.tasks.TaskProvider, java.util.function.Function)"/>.
Use this as part of a classpath or input to another task to ensure that the output is created before it is used.

Note: To define the path of the output folder use <apilink class="org.gradle.api.file.SourceDirectorySet" method="getDestinationDirectory()"/></para></td></tr><tr><td><link linkend="org.gradle.api.tasks.GroovySourceDirectorySet:destinationDirectory"><literal>destinationDirectory</literal></link></td><td><para>Configure the directory to assemble the compiled classes into.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.GroovySourceDirectorySet:filter"><literal>filter</literal></link></td><td><para>The filter used to select the source from the source directories. These filter patterns are applied after
the include and exclude patterns of this source directory set. Generally, the filter patterns are used to
restrict the contents to certain types of files, eg <literal>*.java</literal>.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.GroovySourceDirectorySet:srcDirs"><literal>srcDirs</literal></link></td><td><para>The source directories that make up this set.
</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - GroovySourceDirectorySet</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.tasks.GroovySourceDirectorySet:compiledBy(org.gradle.api.tasks.TaskProvider, java.util.function.Function)">compiledBy</link>(taskProvider, mapping)</literal></td><td><para>Define the task responsible for processing the source.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.GroovySourceDirectorySet:source(org.gradle.api.file.SourceDirectorySet)">source</link>(source)</literal></td><td><para>Adds the given source to this set.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.GroovySourceDirectorySet:srcDir(java.lang.Object)">srcDir</link>(srcPath)</literal></td><td><para>Adds the given source directory to this set. The given directory does not need to exist. Directories that do not exist are ignored.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.GroovySourceDirectorySet:srcDirs(java.lang.Object[])">srcDirs</link>(srcPaths)</literal></td><td><para>Adds the given source directories to this set. The given directories do not need to exist. Directories that do not exist are ignored.</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.tasks.GroovySourceDirectorySet:classesDirectory" role="detail"><title><classname><apilink class="org.gradle.api.provider.Provider"/>&lt;<apilink class="org.gradle.api.file.Directory"/>&gt;</classname> <literal>classesDirectory</literal></title><para>The directory property that is bound to the task that produces the output via <apilink class="org.gradle.api.file.SourceDirectorySet" method="compiledBy(org.gradle.api.tasks.TaskProvider, java.util.function.Function)"/>.
Use this as part of a classpath or input to another task to ensure that the output is created before it is used.

Note: To define the path of the output folder use <apilink class="org.gradle.api.file.SourceDirectorySet" method="getDestinationDirectory()"/></para><segmentedlist><segtitle>Default with <literal>java-base</literal> plugin</segtitle><seglistitem><seg><literal><replaceable>${project.layout.buildDirectory}</replaceable>/classes/<replaceable>${sourceDirectorySet.name}</replaceable>/<replaceable>${sourceSet.name}</replaceable></literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.GroovySourceDirectorySet:destinationDirectory" role="detail"><title><apilink class="org.gradle.api.file.DirectoryProperty"/> <literal>destinationDirectory</literal></title><para>Configure the directory to assemble the compiled classes into.</para><segmentedlist><segtitle>Default with <literal>java-base</literal> plugin</segtitle><seglistitem><seg><literal><replaceable>${project.layout.buildDirectory}</replaceable>/classes/<replaceable>${sourceDirectorySet.name}</replaceable>/<replaceable>${sourceSet.name}</replaceable></literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.GroovySourceDirectorySet:filter" role="detail"><title><apilink class="org.gradle.api.tasks.util.PatternFilterable"/> <literal>filter</literal> (read-only)</title><para>The filter used to select the source from the source directories. These filter patterns are applied after
the include and exclude patterns of this source directory set. Generally, the filter patterns are used to
restrict the contents to certain types of files, eg <literal>*.java</literal>.</para></section><section id="org.gradle.api.tasks.GroovySourceDirectorySet:srcDirs" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink>&gt;</classname> <literal>srcDirs</literal></title><para>The source directories that make up this set.
</para><para>
Note that filtering via patterns using <UNHANDLED-LINK>#exclude(Spec)</UNHANDLED-LINK> and <UNHANDLED-LINK>#include(Spec)</UNHANDLED-LINK> (or any overload of these methods) only
filters <emphasis>files</emphasis> within the <apilink class="org.gradle.api.file.DirectoryTree"/>s returned by this method and <emphasis>does not filter</emphasis>
the set of source directory trees themselves.  This result should agree with <apilink class="org.gradle.api.file.SourceDirectorySet" method="getSrcDirTrees()"/>.
</para><para>
Does not filter source directories that do not exist.</para><segmentedlist><segtitle>Default with <literal>java-base</literal> plugin</segtitle><seglistitem><seg><literal>src/<replaceable>${sourceSet.name}</replaceable>/<replaceable>${sourceDirectorySet.name}</replaceable></literal></seg></seglistitem></segmentedlist></section></section><section><title>Method details</title><section id="org.gradle.api.tasks.GroovySourceDirectorySet:compiledBy(org.gradle.api.tasks.TaskProvider, java.util.function.Function)" role="detail"><title><classname>void</classname> <literal>compiledBy</literal>(<classname><apilink class="org.gradle.api.tasks.TaskProvider"/>&lt;<classname>T</classname>&gt;</classname> taskProvider, <classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/function/Function.html"><classname>Function</classname></ulink>&lt;<classname>T</classname>, <apilink class="org.gradle.api.file.DirectoryProperty"/>&gt;</classname> mapping)</title><para>Define the task responsible for processing the source.</para></section><section id="org.gradle.api.tasks.GroovySourceDirectorySet:source(org.gradle.api.file.SourceDirectorySet)" role="detail"><title><apilink class="org.gradle.api.file.SourceDirectorySet"/> <literal>source</literal>(<apilink class="org.gradle.api.file.SourceDirectorySet"/> source)</title><para>Adds the given source to this set.</para></section><section id="org.gradle.api.tasks.GroovySourceDirectorySet:srcDir(java.lang.Object)" role="detail"><title><apilink class="org.gradle.api.file.SourceDirectorySet"/> <literal>srcDir</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> srcPath)</title><para>Adds the given source directory to this set. The given directory does not need to exist. Directories that do not exist are ignored.</para></section><section id="org.gradle.api.tasks.GroovySourceDirectorySet:srcDirs(java.lang.Object[])" role="detail"><title><apilink class="org.gradle.api.file.SourceDirectorySet"/> <literal>srcDirs</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink>...</classname> srcPaths)</title><para>Adds the given source directories to this set. The given directories do not need to exist. Directories that do not exist are ignored.</para></section></section></chapter><chapter id="org.gradle.api.tasks.ScalaSourceDirectorySet"><title>ScalaSourceDirectorySet</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.tasks.ScalaSourceDirectorySet" style="javadoc"/></seg></seglistitem></segmentedlist><para>A <literal>ScalaSourceDirectorySet</literal> defines the properties and methods added to a <apilink class="org.gradle.api.tasks.SourceSet"/> by the <literal>ScalaPlugin</literal>.</para><section><title>Properties</title><table><title>Properties - ScalaSourceDirectorySet</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.tasks.ScalaSourceDirectorySet:classesDirectory"><literal>classesDirectory</literal></link></td><td><para>The directory property that is bound to the task that produces the output via <apilink class="org.gradle.api.file.SourceDirectorySet" method="compiledBy(org.gradle.api.tasks.TaskProvider, java.util.function.Function)"/>.
Use this as part of a classpath or input to another task to ensure that the output is created before it is used.

Note: To define the path of the output folder use <apilink class="org.gradle.api.file.SourceDirectorySet" method="getDestinationDirectory()"/></para></td></tr><tr><td><link linkend="org.gradle.api.tasks.ScalaSourceDirectorySet:destinationDirectory"><literal>destinationDirectory</literal></link></td><td><para>Configure the directory to assemble the compiled classes into.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.ScalaSourceDirectorySet:filter"><literal>filter</literal></link></td><td><para>The filter used to select the source from the source directories. These filter patterns are applied after
the include and exclude patterns of this source directory set. Generally, the filter patterns are used to
restrict the contents to certain types of files, eg <literal>*.java</literal>.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.ScalaSourceDirectorySet:srcDirs"><literal>srcDirs</literal></link></td><td><para>The source directories that make up this set.
</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - ScalaSourceDirectorySet</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.tasks.ScalaSourceDirectorySet:compiledBy(org.gradle.api.tasks.TaskProvider, java.util.function.Function)">compiledBy</link>(taskProvider, mapping)</literal></td><td><para>Define the task responsible for processing the source.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.ScalaSourceDirectorySet:source(org.gradle.api.file.SourceDirectorySet)">source</link>(source)</literal></td><td><para>Adds the given source to this set.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.ScalaSourceDirectorySet:srcDir(java.lang.Object)">srcDir</link>(srcPath)</literal></td><td><para>Adds the given source directory to this set. The given directory does not need to exist. Directories that do not exist are ignored.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.ScalaSourceDirectorySet:srcDirs(java.lang.Object[])">srcDirs</link>(srcPaths)</literal></td><td><para>Adds the given source directories to this set. The given directories do not need to exist. Directories that do not exist are ignored.</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.tasks.ScalaSourceDirectorySet:classesDirectory" role="detail"><title><classname><apilink class="org.gradle.api.provider.Provider"/>&lt;<apilink class="org.gradle.api.file.Directory"/>&gt;</classname> <literal>classesDirectory</literal></title><para>The directory property that is bound to the task that produces the output via <apilink class="org.gradle.api.file.SourceDirectorySet" method="compiledBy(org.gradle.api.tasks.TaskProvider, java.util.function.Function)"/>.
Use this as part of a classpath or input to another task to ensure that the output is created before it is used.

Note: To define the path of the output folder use <apilink class="org.gradle.api.file.SourceDirectorySet" method="getDestinationDirectory()"/></para><segmentedlist><segtitle>Default with <literal>java-base</literal> plugin</segtitle><seglistitem><seg><literal><replaceable>${project.layout.buildDirectory}</replaceable>/classes/<replaceable>${sourceDirectorySet.name}</replaceable>/<replaceable>${sourceSet.name}</replaceable></literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.ScalaSourceDirectorySet:destinationDirectory" role="detail"><title><apilink class="org.gradle.api.file.DirectoryProperty"/> <literal>destinationDirectory</literal></title><para>Configure the directory to assemble the compiled classes into.</para><segmentedlist><segtitle>Default with <literal>java-base</literal> plugin</segtitle><seglistitem><seg><literal><replaceable>${project.layout.buildDirectory}</replaceable>/classes/<replaceable>${sourceDirectorySet.name}</replaceable>/<replaceable>${sourceSet.name}</replaceable></literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.ScalaSourceDirectorySet:filter" role="detail"><title><apilink class="org.gradle.api.tasks.util.PatternFilterable"/> <literal>filter</literal> (read-only)</title><para>The filter used to select the source from the source directories. These filter patterns are applied after
the include and exclude patterns of this source directory set. Generally, the filter patterns are used to
restrict the contents to certain types of files, eg <literal>*.java</literal>.</para></section><section id="org.gradle.api.tasks.ScalaSourceDirectorySet:srcDirs" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink>&gt;</classname> <literal>srcDirs</literal></title><para>The source directories that make up this set.
</para><para>
Note that filtering via patterns using <UNHANDLED-LINK>#exclude(Spec)</UNHANDLED-LINK> and <UNHANDLED-LINK>#include(Spec)</UNHANDLED-LINK> (or any overload of these methods) only
filters <emphasis>files</emphasis> within the <apilink class="org.gradle.api.file.DirectoryTree"/>s returned by this method and <emphasis>does not filter</emphasis>
the set of source directory trees themselves.  This result should agree with <apilink class="org.gradle.api.file.SourceDirectorySet" method="getSrcDirTrees()"/>.
</para><para>
Does not filter source directories that do not exist.</para><segmentedlist><segtitle>Default with <literal>java-base</literal> plugin</segtitle><seglistitem><seg><literal>src/<replaceable>${sourceSet.name}</replaceable>/<replaceable>${sourceDirectorySet.name}</replaceable></literal></seg></seglistitem></segmentedlist></section></section><section><title>Method details</title><section id="org.gradle.api.tasks.ScalaSourceDirectorySet:compiledBy(org.gradle.api.tasks.TaskProvider, java.util.function.Function)" role="detail"><title><classname>void</classname> <literal>compiledBy</literal>(<classname><apilink class="org.gradle.api.tasks.TaskProvider"/>&lt;<classname>T</classname>&gt;</classname> taskProvider, <classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/function/Function.html"><classname>Function</classname></ulink>&lt;<classname>T</classname>, <apilink class="org.gradle.api.file.DirectoryProperty"/>&gt;</classname> mapping)</title><para>Define the task responsible for processing the source.</para></section><section id="org.gradle.api.tasks.ScalaSourceDirectorySet:source(org.gradle.api.file.SourceDirectorySet)" role="detail"><title><apilink class="org.gradle.api.file.SourceDirectorySet"/> <literal>source</literal>(<apilink class="org.gradle.api.file.SourceDirectorySet"/> source)</title><para>Adds the given source to this set.</para></section><section id="org.gradle.api.tasks.ScalaSourceDirectorySet:srcDir(java.lang.Object)" role="detail"><title><apilink class="org.gradle.api.file.SourceDirectorySet"/> <literal>srcDir</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> srcPath)</title><para>Adds the given source directory to this set. The given directory does not need to exist. Directories that do not exist are ignored.</para></section><section id="org.gradle.api.tasks.ScalaSourceDirectorySet:srcDirs(java.lang.Object[])" role="detail"><title><apilink class="org.gradle.api.file.SourceDirectorySet"/> <literal>srcDirs</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink>...</classname> srcPaths)</title><para>Adds the given source directories to this set. The given directories do not need to exist. Directories that do not exist are ignored.</para></section></section></chapter><chapter id="org.gradle.api.plugins.antlr.AntlrSourceDirectorySet"><title>AntlrSourceDirectorySet</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.plugins.antlr.AntlrSourceDirectorySet" style="javadoc"/></seg></seglistitem></segmentedlist><para>Contract for a Gradle extension that acts as a handler for what I call a virtual directory mapping,
injecting a virtual directory named 'antlr' into the project's various <apilink class="org.gradle.api.tasks.SourceSet"/>.</para><section><title>Properties</title><table><title>Properties - AntlrSourceDirectorySet</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.plugins.antlr.AntlrSourceDirectorySet:classesDirectory"><literal>classesDirectory</literal></link></td><td><para>The directory property that is bound to the task that produces the output via <apilink class="org.gradle.api.file.SourceDirectorySet" method="compiledBy(org.gradle.api.tasks.TaskProvider, java.util.function.Function)"/>.
Use this as part of a classpath or input to another task to ensure that the output is created before it is used.

Note: To define the path of the output folder use <apilink class="org.gradle.api.file.SourceDirectorySet" method="getDestinationDirectory()"/></para></td></tr><tr><td><link linkend="org.gradle.api.plugins.antlr.AntlrSourceDirectorySet:destinationDirectory"><literal>destinationDirectory</literal></link></td><td><para>Configure the directory to assemble the compiled classes into.</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.antlr.AntlrSourceDirectorySet:filter"><literal>filter</literal></link></td><td><para>The filter used to select the source from the source directories. These filter patterns are applied after
the include and exclude patterns of this source directory set. Generally, the filter patterns are used to
restrict the contents to certain types of files, eg <literal>*.java</literal>.</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.antlr.AntlrSourceDirectorySet:srcDirs"><literal>srcDirs</literal></link></td><td><para>The source directories that make up this set.
</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - AntlrSourceDirectorySet</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.plugins.antlr.AntlrSourceDirectorySet:compiledBy(org.gradle.api.tasks.TaskProvider, java.util.function.Function)">compiledBy</link>(taskProvider, mapping)</literal></td><td><para>Define the task responsible for processing the source.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.plugins.antlr.AntlrSourceDirectorySet:source(org.gradle.api.file.SourceDirectorySet)">source</link>(source)</literal></td><td><para>Adds the given source to this set.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.plugins.antlr.AntlrSourceDirectorySet:srcDir(java.lang.Object)">srcDir</link>(srcPath)</literal></td><td><para>Adds the given source directory to this set. The given directory does not need to exist. Directories that do not exist are ignored.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.plugins.antlr.AntlrSourceDirectorySet:srcDirs(java.lang.Object[])">srcDirs</link>(srcPaths)</literal></td><td><para>Adds the given source directories to this set. The given directories do not need to exist. Directories that do not exist are ignored.</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.plugins.antlr.AntlrSourceDirectorySet:classesDirectory" role="detail"><title><classname><apilink class="org.gradle.api.provider.Provider"/>&lt;<apilink class="org.gradle.api.file.Directory"/>&gt;</classname> <literal>classesDirectory</literal></title><para>The directory property that is bound to the task that produces the output via <apilink class="org.gradle.api.file.SourceDirectorySet" method="compiledBy(org.gradle.api.tasks.TaskProvider, java.util.function.Function)"/>.
Use this as part of a classpath or input to another task to ensure that the output is created before it is used.

Note: To define the path of the output folder use <apilink class="org.gradle.api.file.SourceDirectorySet" method="getDestinationDirectory()"/></para><segmentedlist><segtitle>Default with <literal>java-base</literal> plugin</segtitle><seglistitem><seg><literal><replaceable>${project.layout.buildDirectory}</replaceable>/classes/<replaceable>${sourceDirectorySet.name}</replaceable>/<replaceable>${sourceSet.name}</replaceable></literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.plugins.antlr.AntlrSourceDirectorySet:destinationDirectory" role="detail"><title><apilink class="org.gradle.api.file.DirectoryProperty"/> <literal>destinationDirectory</literal></title><para>Configure the directory to assemble the compiled classes into.</para><segmentedlist><segtitle>Default with <literal>java-base</literal> plugin</segtitle><seglistitem><seg><literal><replaceable>${project.layout.buildDirectory}</replaceable>/classes/<replaceable>${sourceDirectorySet.name}</replaceable>/<replaceable>${sourceSet.name}</replaceable></literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.plugins.antlr.AntlrSourceDirectorySet:filter" role="detail"><title><apilink class="org.gradle.api.tasks.util.PatternFilterable"/> <literal>filter</literal> (read-only)</title><para>The filter used to select the source from the source directories. These filter patterns are applied after
the include and exclude patterns of this source directory set. Generally, the filter patterns are used to
restrict the contents to certain types of files, eg <literal>*.java</literal>.</para></section><section id="org.gradle.api.plugins.antlr.AntlrSourceDirectorySet:srcDirs" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink>&gt;</classname> <literal>srcDirs</literal></title><para>The source directories that make up this set.
</para><para>
Note that filtering via patterns using <UNHANDLED-LINK>#exclude(Spec)</UNHANDLED-LINK> and <UNHANDLED-LINK>#include(Spec)</UNHANDLED-LINK> (or any overload of these methods) only
filters <emphasis>files</emphasis> within the <apilink class="org.gradle.api.file.DirectoryTree"/>s returned by this method and <emphasis>does not filter</emphasis>
the set of source directory trees themselves.  This result should agree with <apilink class="org.gradle.api.file.SourceDirectorySet" method="getSrcDirTrees()"/>.
</para><para>
Does not filter source directories that do not exist.</para><segmentedlist><segtitle>Default with <literal>java-base</literal> plugin</segtitle><seglistitem><seg><literal>src/<replaceable>${sourceSet.name}</replaceable>/<replaceable>${sourceDirectorySet.name}</replaceable></literal></seg></seglistitem></segmentedlist></section></section><section><title>Method details</title><section id="org.gradle.api.plugins.antlr.AntlrSourceDirectorySet:compiledBy(org.gradle.api.tasks.TaskProvider, java.util.function.Function)" role="detail"><title><classname>void</classname> <literal>compiledBy</literal>(<classname><apilink class="org.gradle.api.tasks.TaskProvider"/>&lt;<classname>T</classname>&gt;</classname> taskProvider, <classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/function/Function.html"><classname>Function</classname></ulink>&lt;<classname>T</classname>, <apilink class="org.gradle.api.file.DirectoryProperty"/>&gt;</classname> mapping)</title><para>Define the task responsible for processing the source.</para></section><section id="org.gradle.api.plugins.antlr.AntlrSourceDirectorySet:source(org.gradle.api.file.SourceDirectorySet)" role="detail"><title><apilink class="org.gradle.api.file.SourceDirectorySet"/> <literal>source</literal>(<apilink class="org.gradle.api.file.SourceDirectorySet"/> source)</title><para>Adds the given source to this set.</para></section><section id="org.gradle.api.plugins.antlr.AntlrSourceDirectorySet:srcDir(java.lang.Object)" role="detail"><title><apilink class="org.gradle.api.file.SourceDirectorySet"/> <literal>srcDir</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> srcPath)</title><para>Adds the given source directory to this set. The given directory does not need to exist. Directories that do not exist are ignored.</para></section><section id="org.gradle.api.plugins.antlr.AntlrSourceDirectorySet:srcDirs(java.lang.Object[])" role="detail"><title><apilink class="org.gradle.api.file.SourceDirectorySet"/> <literal>srcDirs</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink>...</classname> srcPaths)</title><para>Adds the given source directories to this set. The given directories do not need to exist. Directories that do not exist are ignored.</para></section></section></chapter><chapter id="org.gradle.api.tasks.SourceSet"><title>SourceSet</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.tasks.SourceSet" style="javadoc"/></seg></seglistitem></segmentedlist><para>A <literal>SourceSet</literal> represents a logical group of Java source and resource files. They
are covered in more detail in the
<ulink url="https://docs.gradle.org/current/userguide/building_java_projects.html#sec:java_source_sets">user manual</ulink>.
</para><para>
The following example shows how you can configure the 'main' source set, which in this
case involves excluding classes whose package begins 'some.unwanted.package' from
compilation of the source files in the 'java' <apilink class="org.gradle.api.file.SourceDirectorySet"/>:

</para><programlisting language="java">
plugins {
    id 'java'
}

sourceSets {
  main {
    java {
      exclude 'some/unwanted/package/**'
    }
  }
}
</programlisting><section><title>Properties</title><table><title>Properties - SourceSet</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.tasks.SourceSet:allJava"><literal>allJava</literal></link></td><td><para>All Java source files for this source set. This includes, for example, source which is directly compiled, and
source which is indirectly compiled through joint compilation.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.SourceSet:allSource"><literal>allSource</literal></link></td><td><para>All source files for this source set.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.SourceSet:compileClasspath"><literal>compileClasspath</literal></link></td><td><para>The classpath used to compile this source.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.SourceSet:extensions"><literal>extensions</literal></link></td><td><para>The container of extensions.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.SourceSet:java"><literal>java</literal></link></td><td><para>The Java source which is to be compiled by the Java compiler into the class output directory.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.SourceSet:name"><literal>name</literal></link></td><td><para>The name of this source set.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.SourceSet:output"><literal>output</literal></link></td><td><para><apilink class="org.gradle.api.tasks.SourceSetOutput"/> is a <apilink class="org.gradle.api.file.FileCollection"/> of all output directories (compiled classes, processed resources, etc.)
and it provides means to configure the default output dirs and register additional output dirs. See examples in <apilink class="org.gradle.api.tasks.SourceSetOutput"/></para></td></tr><tr><td><link linkend="org.gradle.api.tasks.SourceSet:resources"><literal>resources</literal></link></td><td><para>The non-Java resources which are to be copied into the resources output directory.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.SourceSet:runtimeClasspath"><literal>runtimeClasspath</literal></link></td><td><para>The classpath used to execute this source.</para></td></tr></table><section><title>Properties added by the <literal>antlr</literal> plugin</title><titleabbrev><literal>antlr</literal> plugin</titleabbrev><table><title>Properties - <literal>antlr</literal> plugin</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.tasks.SourceSet:antlr"><literal>antlr</literal></link></td><td><para>The <apilink class="org.gradle.api.plugins.antlr.AntlrSourceDirectorySet"/> added by the antlr plugin.</para></td></tr></table></section><section><title>Properties added by the <literal>groovy</literal> plugin</title><titleabbrev><literal>groovy</literal> plugin</titleabbrev><table><title>Properties - <literal>groovy</literal> plugin</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.tasks.SourceSet:groovy"><literal>groovy</literal></link></td><td><para>The <apilink class="org.gradle.api.tasks.GroovySourceDirectorySet"/> added by the groovy plugin.</para></td></tr></table></section><section><title>Properties added by the <literal>scala</literal> plugin</title><titleabbrev><literal>scala</literal> plugin</titleabbrev><table><title>Properties - <literal>scala</literal> plugin</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.tasks.SourceSet:scala"><literal>scala</literal></link></td><td><para>The <apilink class="org.gradle.api.tasks.ScalaSourceDirectorySet"/> added by the scala plugin.</para></td></tr></table></section></section><section><title>Methods</title><table><title>Methods - SourceSet</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.tasks.SourceSet:compiledBy(java.lang.Object[])">compiledBy</link>(taskPaths)</literal></td><td><para>Registers a set of tasks which are responsible for compiling this source set into the classes directory. The
paths are evaluated as per <apilink class="org.gradle.api.Task" method="dependsOn(java.lang.Object[])"/>.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.SourceSet:getCompileTaskName(java.lang.String)">getCompileTaskName</link>(language)</literal></td><td><para>Returns the name of a compile task for this source set.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.SourceSet:getTaskName(java.lang.String, java.lang.String)">getTaskName</link>(verb, target)</literal></td><td><para>Returns the name of a task for this source set.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.SourceSet:java(org.gradle.api.Action)">java</link>(configureAction)</literal></td><td><para>Configures the Java source for this set.

</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.SourceSet:resources(org.gradle.api.Action)">resources</link>(configureAction)</literal></td><td><para>Configures the non-Java resources for this set.

</para></td></tr></table></section><section><title>Script blocks</title><table><title>Script blocks - SourceSet</title><thead><tr><td>Block</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.tasks.SourceSet:java(groovy.lang.Closure)"><literal>java</literal></link></td><td><para>Configures the Java source for this set.

</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.SourceSet:resources(groovy.lang.Closure)"><literal>resources</literal></link></td><td><para>Configures the non-Java resources for this set.

</para></td></tr></table><section><title>Script blocks added by the <literal>antlr</literal> plugin</title><titleabbrev><literal>antlr</literal> plugin</titleabbrev><table><title>Script blocks - <literal>antlr</literal> plugin</title><thead><tr><td>Block</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.tasks.SourceSet:antlr(groovy.lang.Closure)"><literal>antlr</literal></link></td><td><para>Configures the <apilink class="org.gradle.api.plugins.antlr.AntlrSourceDirectorySet"/> added by the antlr plugin.</para></td></tr></table></section><section><title>Script blocks added by the <literal>groovy</literal> plugin</title><titleabbrev><literal>groovy</literal> plugin</titleabbrev><table><title>Script blocks - <literal>groovy</literal> plugin</title><thead><tr><td>Block</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.tasks.SourceSet:groovy(groovy.lang.Closure)"><literal>groovy</literal></link></td><td><para>Configures the <apilink class="org.gradle.api.tasks.GroovySourceDirectorySet"/> added by the groovy plugin.</para></td></tr></table></section><section><title>Script blocks added by the <literal>scala</literal> plugin</title><titleabbrev><literal>scala</literal> plugin</titleabbrev><table><title>Script blocks - <literal>scala</literal> plugin</title><thead><tr><td>Block</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.tasks.SourceSet:scala(groovy.lang.Closure)"><literal>scala</literal></link></td><td><para>Configures the <apilink class="org.gradle.api.tasks.ScalaSourceDirectorySet"/> added by the scala plugin.</para></td></tr></table></section></section><section><title>Property details</title><section id="org.gradle.api.tasks.SourceSet:allJava" role="detail"><title><apilink class="org.gradle.api.file.SourceDirectorySet"/> <literal>allJava</literal> (read-only)</title><para>All Java source files for this source set. This includes, for example, source which is directly compiled, and
source which is indirectly compiled through joint compilation.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>[java]</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.SourceSet:allSource" role="detail"><title><apilink class="org.gradle.api.file.SourceDirectorySet"/> <literal>allSource</literal> (read-only)</title><para>All source files for this source set.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>[java, resources]</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.SourceSet:compileClasspath" role="detail"><title><apilink class="org.gradle.api.file.FileCollection"/> <literal>compileClasspath</literal></title><para>The classpath used to compile this source.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>project.configurations.compileClasspath</literal> (or <literal>project.configurations.testCompileClasspath</literal> for the <literal>test</literal> source set).</seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.SourceSet:extensions" role="detail"><title><apilink class="org.gradle.api.plugins.ExtensionContainer"/> <literal>extensions</literal> (read-only)</title><para>The container of extensions.</para></section><section id="org.gradle.api.tasks.SourceSet:java" role="detail"><title><apilink class="org.gradle.api.file.SourceDirectorySet"/> <literal>java</literal> (read-only)</title><para>The Java source which is to be compiled by the Java compiler into the class output directory.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>[<replaceable>${project.projectDir}</replaceable>/src/<replaceable>${sourceSet.name}</replaceable>/java]</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.SourceSet:name" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>name</literal> (read-only)</title><para>The name of this source set.</para></section><section id="org.gradle.api.tasks.SourceSet:output" role="detail"><title><apilink class="org.gradle.api.tasks.SourceSetOutput"/> <literal>output</literal> (read-only)</title><para><apilink class="org.gradle.api.tasks.SourceSetOutput"/> is a <apilink class="org.gradle.api.file.FileCollection"/> of all output directories (compiled classes, processed resources, etc.)
and it provides means to configure the default output dirs and register additional output dirs. See examples in <apilink class="org.gradle.api.tasks.SourceSetOutput"/></para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg>See <apilink class="org.gradle.api.tasks.SourceSetOutput"/></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.SourceSet:resources" role="detail"><title><apilink class="org.gradle.api.file.SourceDirectorySet"/> <literal>resources</literal> (read-only)</title><para>The non-Java resources which are to be copied into the resources output directory.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>[<replaceable>${project.projectDir}</replaceable>/src/<replaceable>${sourceSet.name}</replaceable>/resources]</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.SourceSet:runtimeClasspath" role="detail"><title><apilink class="org.gradle.api.file.FileCollection"/> <literal>runtimeClasspath</literal></title><para>The classpath used to execute this source.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>sourceSet.output + project.configurations.runtimeClasspath</literal> (or <literal>sourceSet.output + project.configurations.testRuntimeClasspath</literal> for the <literal>test</literal> source set).</seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.SourceSet:antlr" role="detail"><title><apilink class="org.gradle.api.plugins.antlr.AntlrSourceDirectorySet"/> <literal>antlr</literal> (read-only)</title><para>The <apilink class="org.gradle.api.plugins.antlr.AntlrSourceDirectorySet"/> added by the antlr plugin.</para></section><section id="org.gradle.api.tasks.SourceSet:groovy" role="detail"><title><apilink class="org.gradle.api.tasks.GroovySourceDirectorySet"/> <literal>groovy</literal> (read-only)</title><para>The <apilink class="org.gradle.api.tasks.GroovySourceDirectorySet"/> added by the groovy plugin.</para></section><section id="org.gradle.api.tasks.SourceSet:scala" role="detail"><title><apilink class="org.gradle.api.tasks.ScalaSourceDirectorySet"/> <literal>scala</literal> (read-only)</title><para>The <apilink class="org.gradle.api.tasks.ScalaSourceDirectorySet"/> added by the scala plugin.</para></section></section><section><title>Method details</title><section id="org.gradle.api.tasks.SourceSet:compiledBy(java.lang.Object[])" role="detail"><title><apilink class="org.gradle.api.tasks.SourceSet"/> <literal>compiledBy</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink>...</classname> taskPaths)</title><para>Registers a set of tasks which are responsible for compiling this source set into the classes directory. The
paths are evaluated as per <apilink class="org.gradle.api.Task" method="dependsOn(java.lang.Object[])"/>.</para></section><section id="org.gradle.api.tasks.SourceSet:getCompileTaskName(java.lang.String)" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>getCompileTaskName</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> language)</title><para>Returns the name of a compile task for this source set.</para></section><section id="org.gradle.api.tasks.SourceSet:getTaskName(java.lang.String, java.lang.String)" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>getTaskName</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> verb, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> target)</title><para>Returns the name of a task for this source set.</para></section><section id="org.gradle.api.tasks.SourceSet:java(org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.tasks.SourceSet"/> <literal>java</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.SourceDirectorySet"/>&gt;</classname> configureAction)</title><para>Configures the Java source for this set.

</para><para>The given action is used to configure the <apilink class="org.gradle.api.file.SourceDirectorySet"/> which contains the Java source.</para></section><section id="org.gradle.api.tasks.SourceSet:resources(org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.tasks.SourceSet"/> <literal>resources</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.SourceDirectorySet"/>&gt;</classname> configureAction)</title><para>Configures the non-Java resources for this set.

</para><para>The given action is used to configure the <apilink class="org.gradle.api.file.SourceDirectorySet"/> which contains the resources.</para></section></section><section><title>Script block details</title><section id="org.gradle.api.tasks.SourceSet:java(groovy.lang.Closure)" role="detail"><title><literal>java</literal> { }</title><para>Configures the Java source for this set.

</para><para>The given closure is used to configure the <apilink class="org.gradle.api.file.SourceDirectorySet"/> which contains the Java source.</para><segmentedlist><segtitle>Delegates to</segtitle><seglistitem><seg><apilink class="org.gradle.api.file.SourceDirectorySet"/> from <link linkend="org.gradle.api.tasks.SourceSet:java"><literal>java</literal></link></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.SourceSet:resources(groovy.lang.Closure)" role="detail"><title><literal>resources</literal> { }</title><para>Configures the non-Java resources for this set.

</para><para>The given closure is used to configure the <apilink class="org.gradle.api.file.SourceDirectorySet"/> which contains the resources.</para><segmentedlist><segtitle>Delegates to</segtitle><seglistitem><seg><apilink class="org.gradle.api.file.SourceDirectorySet"/> from <link linkend="org.gradle.api.tasks.SourceSet:resources"><literal>resources</literal></link></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.SourceSet:antlr(groovy.lang.Closure)" role="detail"><title><literal>antlr</literal> { }</title><para>Configures the <apilink class="org.gradle.api.plugins.antlr.AntlrSourceDirectorySet"/> added by the antlr plugin.</para><segmentedlist><segtitle>Delegates to</segtitle><seglistitem><seg><apilink class="org.gradle.api.plugins.antlr.AntlrSourceDirectorySet"/> from <link linkend="org.gradle.api.tasks.SourceSet:antlr"><literal>antlr</literal></link></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.SourceSet:groovy(groovy.lang.Closure)" role="detail"><title><literal>groovy</literal> { }</title><para>Configures the <apilink class="org.gradle.api.tasks.GroovySourceDirectorySet"/> added by the groovy plugin.</para><segmentedlist><segtitle>Delegates to</segtitle><seglistitem><seg><apilink class="org.gradle.api.tasks.GroovySourceDirectorySet"/> from <link linkend="org.gradle.api.tasks.SourceSet:groovy"><literal>groovy</literal></link></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.SourceSet:scala(groovy.lang.Closure)" role="detail"><title><literal>scala</literal> { }</title><para>Configures the <apilink class="org.gradle.api.tasks.ScalaSourceDirectorySet"/> added by the scala plugin.</para><segmentedlist><segtitle>Delegates to</segtitle><seglistitem><seg><apilink class="org.gradle.api.tasks.ScalaSourceDirectorySet"/> from <link linkend="org.gradle.api.tasks.SourceSet:scala"><literal>scala</literal></link></seg></seglistitem></segmentedlist></section></section></chapter><chapter id="org.gradle.api.tasks.SourceSetOutput"><title>SourceSetOutput</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.tasks.SourceSetOutput" style="javadoc"/></seg></seglistitem></segmentedlist><para>A collection of all output directories (compiled classes, processed resources, etc.) - notice that <apilink class="org.gradle.api.tasks.SourceSetOutput"/> extends <apilink class="org.gradle.api.file.FileCollection"/>.
</para><para>
Provides output information of the source set. Allows configuring the default output dirs and specify additional output dirs.

</para><programlisting language="java">
plugins {
    id 'java'
}

sourceSets {
  main {
    //if you truly want to override the defaults:
    output.resourcesDir = file('out/bin')
    // Compiled Java classes should use this directory
    java.destinationDirectory.set(file('out/bin'))
  }
}
</programlisting><para>

Working with generated resources.
</para><para>
In general, we recommend generating resources into folders different than the regular resourcesDir and classesDirs.
Usually, it makes the build easier to understand and maintain. Also it gives some additional benefits
because other Gradle plugins can take advantage of the output dirs 'registered' in the SourceSet.output.
For example: Java plugin will use those dirs in calculating class paths and for jarring the content;
IDEA and Eclipse plugins will put those folders on relevant classpath.
</para><para>
An example how to work with generated resources:

</para><programlisting language="java">
plugins {
  id 'java'
}

def generateResourcesTask = tasks.register("generate-resources", GenerateResourcesTask) {
  resourcesDir.set(layout.buildDirectory.dir("generated-resources/main"))
}

// Include all outputs of the `generate-resources` task as outputs of the main sourceSet.
sourceSets {
  main {
    output.dir(generateResourcesTask)
  }
}

abstract class GenerateResourcesTask extends DefaultTask {
  @OutputDirectory
  abstract DirectoryProperty getResourcesDir()

  @TaskAction
  def generateResources() {
    def generated = resourcesDir.file("myGeneratedResource.properties").get().asFile
    generated.text = "message=Stay happy!"
  }
}
</programlisting><para>

Find more information in <apilink class="org.gradle.api.tasks.SourceSetOutput" method="dir(java.lang.Object)"/> and <apilink class="org.gradle.api.tasks.SourceSetOutput" method="getDirs()"/></para><section><title>Properties</title><table><title>Properties - SourceSetOutput</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.tasks.SourceSetOutput:classesDirs"><literal>classesDirs</literal></link></td><td><para>The directories containing compiled classes.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.SourceSetOutput:resourcesDir"><literal>resourcesDir</literal></link></td><td><para>The output directory for resources
</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - SourceSetOutput</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.tasks.SourceSetOutput:dir(java.lang.Object)">dir</link>(dir)</literal></td><td><para>Registers an extra output dir. Useful for generated resources.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.SourceSetOutput:dir(java.util.Map, java.lang.Object)">dir</link>(options, dir)</literal></td><td><para>Registers an extra output dir and the builtBy information. Useful for generated resources.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.SourceSetOutput:getDirs()">getDirs</link>()</literal></td><td><para>Returns all dirs registered with #dir method.
Each file is resolved as <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/>
</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.tasks.SourceSetOutput:classesDirs" role="detail"><title><apilink class="org.gradle.api.file.FileCollection"/> <literal>classesDirs</literal> (read-only)</title><para>The directories containing compiled classes.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg>a file collection of each <literal><replaceable>${project.layout.buildDirectory}</replaceable>/classes/<replaceable>${sourceDirectorySet.name}</replaceable>/<replaceable>${sourceSet.name}</replaceable></literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.SourceSetOutput:resourcesDir" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>resourcesDir</literal></title><para>The output directory for resources
</para><para>
See example at <apilink class="org.gradle.api.tasks.SourceSetOutput"/></para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal><replaceable>${project.layout.buildDirectory}</replaceable>/classes/<replaceable>${sourceSet.name}</replaceable></literal></seg></seglistitem></segmentedlist></section></section><section><title>Method details</title><section id="org.gradle.api.tasks.SourceSetOutput:dir(java.lang.Object)" role="detail"><title><classname>void</classname> <literal>dir</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> dir)</title><para>Registers an extra output dir. Useful for generated resources.
</para><para>
See example at <apilink class="org.gradle.api.tasks.SourceSetOutput"/></para></section><section id="org.gradle.api.tasks.SourceSetOutput:dir(java.util.Map, java.lang.Object)" role="detail"><title><classname>void</classname> <literal>dir</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink>&gt;</classname> options, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> dir)</title><para>Registers an extra output dir and the builtBy information. Useful for generated resources.
</para><para>
See example at <apilink class="org.gradle.api.tasks.SourceSetOutput"/></para></section><section id="org.gradle.api.tasks.SourceSetOutput:getDirs()" role="detail"><title><apilink class="org.gradle.api.file.FileCollection"/> <literal>getDirs</literal>()</title><para>Returns all dirs registered with #dir method.
Each file is resolved as <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/>
</para><para>
See example at <apilink class="org.gradle.api.tasks.SourceSetOutput"/></para></section></section></chapter><chapter id="org.gradle.api.artifacts.Configuration"><title>Configuration</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.artifacts.Configuration" style="javadoc"/></seg></seglistitem></segmentedlist><segmentedlist><segtitle>Known Subtypes</segtitle><seglistitem><seg><simplelist columns="1" type="vert"><member><apilink class="org.gradle.api.artifacts.ConsumableConfiguration"/></member><member><apilink class="org.gradle.api.artifacts.ResolvableConfiguration"/></member><member><apilink class="org.gradle.api.artifacts.DependencyScopeConfiguration"/></member></simplelist></seg></seglistitem></segmentedlist><para>A <literal>Configuration</literal> represents a group of artifacts and their dependencies.
Find more information about declaring dependencies to a configuration
or about managing configurations in docs for <apilink class="org.gradle.api.artifacts.ConfigurationContainer"/>
</para><para>
Configuration is an instance of a <apilink class="org.gradle.api.file.FileCollection"/>
that contains all dependencies (see also <apilink class="org.gradle.api.artifacts.Configuration" method="getAllDependencies()"/>) but not artifacts.
If you want to refer to the artifacts declared in this configuration
please use <apilink class="org.gradle.api.artifacts.Configuration" method="getArtifacts()"/> or <apilink class="org.gradle.api.artifacts.Configuration" method="getAllArtifacts()"/>.
Read more about declaring artifacts in the configuration in docs for <apilink class="org.gradle.api.artifacts.dsl.ArtifactHandler"/>

Please see the <ulink url="https://docs.gradle.org/current/userguide/declaring_dependencies.html">Declaring Dependencies</ulink> User Manual chapter for more information.</para><section><title>Properties</title><table><title>Properties - Configuration</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.artifacts.Configuration:allArtifacts"><literal>allArtifacts</literal></link></td><td><para>The artifacts of this configuration including the artifacts of extended configurations.</para></td></tr><tr><td><link linkend="org.gradle.api.artifacts.Configuration:allDependencies"><literal>allDependencies</literal></link></td><td><para>Gets the complete set of declared dependencies including those contributed by
superconfigurations.
</para></td></tr><tr><td><link linkend="org.gradle.api.artifacts.Configuration:artifacts"><literal>artifacts</literal></link></td><td><para>The artifacts of this configuration excluding the artifacts of extended configurations.</para></td></tr><tr><td><link linkend="org.gradle.api.artifacts.Configuration:buildDependencies"><literal>buildDependencies</literal></link></td><td><para>Returns a <literal>TaskDependency</literal> object containing all required dependencies to build the local dependencies
(e.g. project dependencies) belonging to this configuration or to one of its super configurations.</para></td></tr><tr><td><link linkend="org.gradle.api.artifacts.Configuration:dependencies"><literal>dependencies</literal></link></td><td><para>Gets the set of declared dependencies directly contained in this configuration
(ignoring superconfigurations).
</para></td></tr><tr><td><link linkend="org.gradle.api.artifacts.Configuration:description"><literal>description</literal></link></td><td><para>The description for this configuration.</para></td></tr><tr><td><link linkend="org.gradle.api.artifacts.Configuration:excludeRules"><literal>excludeRules</literal></link></td><td><para>The exclude rules applied for resolving any dependency of this configuration.</para></td></tr><tr><td><link linkend="org.gradle.api.artifacts.Configuration:extendsFrom"><literal>extendsFrom</literal></link></td><td><para>The names of the configurations which this configuration extends from. The artifacts of the super
configurations are also available in this configuration.</para></td></tr><tr><td><link linkend="org.gradle.api.artifacts.Configuration:hierarchy"><literal>hierarchy</literal></link></td><td><para>Gets an ordered set including this configuration and all superconfigurations
recursively.</para></td></tr><tr><td><link linkend="org.gradle.api.artifacts.Configuration:incoming"><literal>incoming</literal></link></td><td><para>Returns a <apilink class="org.gradle.api.artifacts.ResolvableDependencies"/> instance, exposing the results of dependency resolution.
This method is the primary way to consume dependency resolution outputs.</para></td></tr><tr><td><link linkend="org.gradle.api.artifacts.Configuration:resolutionStrategy"><literal>resolutionStrategy</literal></link></td><td><para>The resolution strategy used by this configuration.
The resolution strategy provides extra details on how to resolve this configuration.
See docs for <apilink class="org.gradle.api.artifacts.ResolutionStrategy"/> for more info and examples.</para></td></tr><tr><td><link linkend="org.gradle.api.artifacts.Configuration:resolvedConfiguration"><literal>resolvedConfiguration</literal></link></td><td><para>Returns a <apilink class="org.gradle.api.artifacts.ResolvedConfiguration"/>, a legacy view of the results of dependency resolution.
<emphasis>Avoid this method for new code</emphasis>. Prefer accessing resolution outputs via
<apilink class="org.gradle.api.artifacts.Configuration" method="getIncoming()"/>. This API will be deprecated and removed in future Gradle versions.
</para></td></tr><tr><td><link linkend="org.gradle.api.artifacts.Configuration:state"><literal>state</literal></link></td><td><para>The state of the configuration.</para></td></tr><tr><td><link linkend="org.gradle.api.artifacts.Configuration:transitive"><literal>transitive</literal></link></td><td><para>The transitivity of this configuration. A transitive configuration contains the transitive closure of its
direct dependencies, and all their dependencies. An intransitive configuration contains only the direct
dependencies. The default value is true.</para></td></tr><tr><td><link linkend="org.gradle.api.artifacts.Configuration:visible"><literal>visible</literal></link></td><td><caution>Deprecated</caution><para>This is a legacy property and the value does not affect dependency resolution
in any way. There is no need to read this property and this method will be deprecated
in an upcoming Gradle version.
</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - Configuration</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.artifacts.Configuration:copy()">copy</link>()</literal></td><td><para>Creates a copy of this configuration that only contains the dependencies directly in this configuration
(without contributions from superconfigurations).  The new configuration will be in the
UNRESOLVED state, but will retain all other attributes of this configuration except superconfigurations.
<apilink class="org.gradle.api.artifacts.Configuration" method="getHierarchy()"/> for the copy will not include any superconfigurations.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.Configuration:copy(groovy.lang.Closure)">copy</link>(dependencySpec)</literal></td><td><para>Takes a closure which gets coerced into a <apilink class="org.gradle.api.specs.Spec"/>. Behaves otherwise in the same way as <apilink class="org.gradle.api.artifacts.Configuration" method="copy(org.gradle.api.specs.Spec)"/>
 </para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.Configuration:copy(org.gradle.api.specs.Spec)">copy</link>(dependencySpec)</literal></td><td><para>Creates a copy of this configuration ignoring superconfigurations (see <apilink class="org.gradle.api.artifacts.Configuration" method="copy()"/> but filtering
the dependencies using the specified dependency spec.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.Configuration:copyRecursive()">copyRecursive</link>()</literal></td><td><para>Creates a copy of this configuration that contains the dependencies directly in this configuration
and those derived from superconfigurations.  The new configuration will be in the
UNRESOLVED state, but will retain all other attributes of this configuration except superconfigurations.
<apilink class="org.gradle.api.artifacts.Configuration" method="getHierarchy()"/> for the copy will not include any superconfigurations.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.Configuration:copyRecursive(groovy.lang.Closure)">copyRecursive</link>(dependencySpec)</literal></td><td><para>Takes a closure which gets coerced into a <apilink class="org.gradle.api.specs.Spec"/>. Behaves otherwise in the same way as <apilink class="org.gradle.api.artifacts.Configuration" method="copyRecursive(org.gradle.api.specs.Spec)"/>
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.Configuration:copyRecursive(org.gradle.api.specs.Spec)">copyRecursive</link>(dependencySpec)</literal></td><td><para>Creates a copy of this configuration with dependencies from superconfigurations (see <apilink class="org.gradle.api.artifacts.Configuration" method="copyRecursive()"/>)
but filtering the dependencies using the dependencySpec.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.Configuration:defaultDependencies(org.gradle.api.Action)">defaultDependencies</link>(action)</literal></td><td><para>Execute the given action if the configuration has no defined dependencies when it first participates in
dependency resolution. A <literal>Configuration</literal> will participate in dependency resolution
when:
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.Configuration:exclude(java.util.Map)">exclude</link>(excludeProperties)</literal></td><td><para>Adds an exclude rule to exclude transitive dependencies for all dependencies of this configuration.
You can also add exclude rules per-dependency. See <apilink class="org.gradle.api.artifacts.ModuleDependency" method="exclude(java.util.Map)"/>.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.Configuration:extendsFrom(org.gradle.api.artifacts.Configuration[])">extendsFrom</link>(superConfigs)</literal></td><td><para>Adds the given configurations to the set of configuration which this configuration extends from.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.Configuration:getTaskDependencyFromProjectDependency(boolean, java.lang.String)">getTaskDependencyFromProjectDependency</link>(useDependedOn, taskName)</literal></td><td><para>Returns a TaskDependency object containing dependencies on all tasks with the specified name from project
dependencies related to this configuration or one of its super configurations.  These other projects may be
projects this configuration depends on or projects with a similarly named configuration that depend on this one
based on the useDependOn argument.</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.artifacts.Configuration:allArtifacts" role="detail"><title><apilink class="org.gradle.api.artifacts.PublishArtifactSet"/> <literal>allArtifacts</literal> (read-only)</title><para>The artifacts of this configuration including the artifacts of extended configurations.</para></section><section id="org.gradle.api.artifacts.Configuration:allDependencies" role="detail"><title><apilink class="org.gradle.api.artifacts.DependencySet"/> <literal>allDependencies</literal> (read-only)</title><para>Gets the complete set of declared dependencies including those contributed by
superconfigurations.
</para><para>
This method does not resolve the configuration. Therefore, the return value does not include
transitive dependencies.</para></section><section id="org.gradle.api.artifacts.Configuration:artifacts" role="detail"><title><apilink class="org.gradle.api.artifacts.PublishArtifactSet"/> <literal>artifacts</literal> (read-only)</title><para>The artifacts of this configuration excluding the artifacts of extended configurations.</para></section><section id="org.gradle.api.artifacts.Configuration:buildDependencies" role="detail"><title><apilink class="org.gradle.api.tasks.TaskDependency"/> <literal>buildDependencies</literal> (read-only)</title><para>Returns a <literal>TaskDependency</literal> object containing all required dependencies to build the local dependencies
(e.g. project dependencies) belonging to this configuration or to one of its super configurations.</para></section><section id="org.gradle.api.artifacts.Configuration:dependencies" role="detail"><title><apilink class="org.gradle.api.artifacts.DependencySet"/> <literal>dependencies</literal> (read-only)</title><para>Gets the set of declared dependencies directly contained in this configuration
(ignoring superconfigurations).
</para><para>
This method does not resolve the configuration. Therefore, the return value does not include
transitive dependencies.</para></section><section id="org.gradle.api.artifacts.Configuration:description" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>description</literal></title><para>The description for this configuration.</para></section><section id="org.gradle.api.artifacts.Configuration:excludeRules" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<apilink class="org.gradle.api.artifacts.ExcludeRule"/>&gt;</classname> <literal>excludeRules</literal> (read-only)</title><para>The exclude rules applied for resolving any dependency of this configuration.</para></section><section id="org.gradle.api.artifacts.Configuration:extendsFrom" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<apilink class="org.gradle.api.artifacts.Configuration"/>&gt;</classname> <literal>extendsFrom</literal></title><para>The names of the configurations which this configuration extends from. The artifacts of the super
configurations are also available in this configuration.</para></section><section id="org.gradle.api.artifacts.Configuration:hierarchy" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<apilink class="org.gradle.api.artifacts.Configuration"/>&gt;</classname> <literal>hierarchy</literal> (read-only)</title><para>Gets an ordered set including this configuration and all superconfigurations
recursively.</para></section><section id="org.gradle.api.artifacts.Configuration:incoming" role="detail"><title><apilink class="org.gradle.api.artifacts.ResolvableDependencies"/> <literal>incoming</literal> (read-only)</title><para>Returns a <apilink class="org.gradle.api.artifacts.ResolvableDependencies"/> instance, exposing the results of dependency resolution.
This method is the primary way to consume dependency resolution outputs.</para></section><section id="org.gradle.api.artifacts.Configuration:resolutionStrategy" role="detail"><title><apilink class="org.gradle.api.artifacts.ResolutionStrategy"/> <literal>resolutionStrategy</literal> (read-only)</title><para>The resolution strategy used by this configuration.
The resolution strategy provides extra details on how to resolve this configuration.
See docs for <apilink class="org.gradle.api.artifacts.ResolutionStrategy"/> for more info and examples.</para></section><section id="org.gradle.api.artifacts.Configuration:resolvedConfiguration" role="detail"><title><apilink class="org.gradle.api.artifacts.ResolvedConfiguration"/> <literal>resolvedConfiguration</literal> (read-only)</title><para>Returns a <apilink class="org.gradle.api.artifacts.ResolvedConfiguration"/>, a legacy view of the results of dependency resolution.
<emphasis>Avoid this method for new code</emphasis>. Prefer accessing resolution outputs via
<apilink class="org.gradle.api.artifacts.Configuration" method="getIncoming()"/>. This API will be deprecated and removed in future Gradle versions.
</para><para>
See <apilink class="org.gradle.api.artifacts.ResolvedConfiguration"/> for details on why this API should not be used.</para></section><section id="org.gradle.api.artifacts.Configuration:state" role="detail"><title><classname>State</classname> <literal>state</literal> (read-only)</title><para>The state of the configuration.</para></section><section id="org.gradle.api.artifacts.Configuration:transitive" role="detail"><title><classname>boolean</classname> <literal>transitive</literal></title><para>The transitivity of this configuration. A transitive configuration contains the transitive closure of its
direct dependencies, and all their dependencies. An intransitive configuration contains only the direct
dependencies. The default value is true.</para></section><section id="org.gradle.api.artifacts.Configuration:visible" role="detail"><title><classname>boolean</classname> <literal>visible</literal></title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">deprecated</ulink> and will be removed in the next major version of Gradle.</para></caution><para>This is a legacy property and the value does not affect dependency resolution
in any way. There is no need to read this property and this method will be deprecated
in an upcoming Gradle version.
</para><para>
The value of this property does not dictate in any way the "visibility" of
a configuration, or if it is accessible between projects.</para></section></section><section><title>Method details</title><section id="org.gradle.api.artifacts.Configuration:copy()" role="detail"><title><apilink class="org.gradle.api.artifacts.Configuration"/> <literal>copy</literal>()</title><para>Creates a copy of this configuration that only contains the dependencies directly in this configuration
(without contributions from superconfigurations).  The new configuration will be in the
UNRESOLVED state, but will retain all other attributes of this configuration except superconfigurations.
<apilink class="org.gradle.api.artifacts.Configuration" method="getHierarchy()"/> for the copy will not include any superconfigurations.
</para><para>
This method is only intended for use for specific situations involving resolvable configuration, it is
<emphasis>NOT</emphasis> intended as a general-purpose copying mechanism.</para></section><section id="org.gradle.api.artifacts.Configuration:copy(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.artifacts.Configuration"/> <literal>copy</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> dependencySpec)</title><para>Takes a closure which gets coerced into a <apilink class="org.gradle.api.specs.Spec"/>. Behaves otherwise in the same way as <apilink class="org.gradle.api.artifacts.Configuration" method="copy(org.gradle.api.specs.Spec)"/>
 </para><para>
This method is only intended for use for specific situations involving resolvable configuration, it is
<emphasis>NOT</emphasis> intended as a general-purpose copying mechanism.</para></section><section id="org.gradle.api.artifacts.Configuration:copy(org.gradle.api.specs.Spec)" role="detail"><title><apilink class="org.gradle.api.artifacts.Configuration"/> <literal>copy</literal>(<classname><apilink class="org.gradle.api.specs.Spec"/>&lt;? super <apilink class="org.gradle.api.artifacts.Dependency"/>&gt;</classname> dependencySpec)</title><para>Creates a copy of this configuration ignoring superconfigurations (see <apilink class="org.gradle.api.artifacts.Configuration" method="copy()"/> but filtering
the dependencies using the specified dependency spec.
</para><para>
This method is only intended for use for specific situations involving resolvable configuration, it is
<emphasis>NOT</emphasis> intended as a general-purpose copying mechanism.</para></section><section id="org.gradle.api.artifacts.Configuration:copyRecursive()" role="detail"><title><apilink class="org.gradle.api.artifacts.Configuration"/> <literal>copyRecursive</literal>()</title><para>Creates a copy of this configuration that contains the dependencies directly in this configuration
and those derived from superconfigurations.  The new configuration will be in the
UNRESOLVED state, but will retain all other attributes of this configuration except superconfigurations.
<apilink class="org.gradle.api.artifacts.Configuration" method="getHierarchy()"/> for the copy will not include any superconfigurations.
</para><para>
This method is only intended for use for specific situations involving resolvable configuration, it is
<emphasis>NOT</emphasis> intended as a general-purpose copying mechanism.</para></section><section id="org.gradle.api.artifacts.Configuration:copyRecursive(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.artifacts.Configuration"/> <literal>copyRecursive</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> dependencySpec)</title><para>Takes a closure which gets coerced into a <apilink class="org.gradle.api.specs.Spec"/>. Behaves otherwise in the same way as <apilink class="org.gradle.api.artifacts.Configuration" method="copyRecursive(org.gradle.api.specs.Spec)"/>
</para><para>
This method is only intended for use for specific situations involving resolvable configuration, it is
<emphasis>NOT</emphasis> intended as a general-purpose copying mechanism.</para></section><section id="org.gradle.api.artifacts.Configuration:copyRecursive(org.gradle.api.specs.Spec)" role="detail"><title><apilink class="org.gradle.api.artifacts.Configuration"/> <literal>copyRecursive</literal>(<classname><apilink class="org.gradle.api.specs.Spec"/>&lt;? super <apilink class="org.gradle.api.artifacts.Dependency"/>&gt;</classname> dependencySpec)</title><para>Creates a copy of this configuration with dependencies from superconfigurations (see <apilink class="org.gradle.api.artifacts.Configuration" method="copyRecursive()"/>)
but filtering the dependencies using the dependencySpec.
</para><para>
This method is only intended for use for specific situations involving resolvable configuration, it is
<emphasis>NOT</emphasis> intended as a general-purpose copying mechanism.</para></section><section id="org.gradle.api.artifacts.Configuration:defaultDependencies(org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.artifacts.Configuration"/> <literal>defaultDependencies</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.artifacts.DependencySet"/>&gt;</classname> action)</title><para>Execute the given action if the configuration has no defined dependencies when it first participates in
dependency resolution. A <literal>Configuration</literal> will participate in dependency resolution
when:
</para><itemizedlist><listitem>The <apilink class="org.gradle.api.artifacts.Configuration"/> itself is resolved</listitem><listitem>Another <apilink class="org.gradle.api.artifacts.Configuration"/> that extends this one is resolved</listitem><listitem>Another <apilink class="org.gradle.api.artifacts.Configuration"/> that references this one as a project dependency is resolved</listitem></itemizedlist><para>

This method is useful for specifying default dependencies for a configuration:
</para><programlisting language="java">
configurations { conf }
configurations['conf'].defaultDependencies { dependencies -&gt;
     dependencies.add(owner.project.dependencies.create("org.gradle:my-util:1.0"))
}
</programlisting><para>
A <literal>Configuration</literal> is considered empty even if it extends another, non-empty <literal>Configuration</literal>.
</para><para>
If multiple actions are supplied, each action will be executed until the set of dependencies is no longer empty.
Remaining actions will be ignored.</para></section><section id="org.gradle.api.artifacts.Configuration:exclude(java.util.Map)" role="detail"><title><apilink class="org.gradle.api.artifacts.Configuration"/> <literal>exclude</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> excludeProperties)</title><para>Adds an exclude rule to exclude transitive dependencies for all dependencies of this configuration.
You can also add exclude rules per-dependency. See <apilink class="org.gradle.api.artifacts.ModuleDependency" method="exclude(java.util.Map)"/>.</para></section><section id="org.gradle.api.artifacts.Configuration:extendsFrom(org.gradle.api.artifacts.Configuration[])" role="detail"><title><apilink class="org.gradle.api.artifacts.Configuration"/> <literal>extendsFrom</literal>(<classname><apilink class="org.gradle.api.artifacts.Configuration"/>...</classname> superConfigs)</title><para>Adds the given configurations to the set of configuration which this configuration extends from.
</para><para>
Configurations are only allowed to extend from other configurations in the same project.</para></section><section id="org.gradle.api.artifacts.Configuration:getTaskDependencyFromProjectDependency(boolean, java.lang.String)" role="detail"><title><apilink class="org.gradle.api.tasks.TaskDependency"/> <literal>getTaskDependencyFromProjectDependency</literal>(<classname>boolean</classname> useDependedOn, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> taskName)</title><para>Returns a TaskDependency object containing dependencies on all tasks with the specified name from project
dependencies related to this configuration or one of its super configurations.  These other projects may be
projects this configuration depends on or projects with a similarly named configuration that depend on this one
based on the useDependOn argument.</para></section></section></chapter><chapter id="org.gradle.api.artifacts.ResolutionStrategy"><title>ResolutionStrategy</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.artifacts.ResolutionStrategy" style="javadoc"/></seg></seglistitem></segmentedlist><para>Defines the strategies around dependency resolution.
For example, forcing certain dependency versions, substitutions, conflict resolutions or snapshot timeouts.
</para><para>
Examples:
</para><programlisting language="java">
plugins {
    id 'java' // so that there are some configurations
}

configurations.all {
  resolutionStrategy {
    // fail eagerly on version conflict (includes transitive dependencies)
    // e.g. multiple different versions of the same dependency (group and name are equal)
    failOnVersionConflict()

    // prefer modules that are part of this build (multi-project or composite build) over external modules
    preferProjectModules()

    // force certain versions of dependencies (including transitive)
    //  *append new forced modules:
    force 'asm:asm-all:3.3.1', 'commons-io:commons-io:1.4'
    //  *replace existing forced modules with new ones:
    forcedModules = ['asm:asm-all:3.3.1']

    // add dependency substitution rules
    dependencySubstitution {
      substitute module('org.gradle:api') using project(':api')
      substitute project(':util') using module('org.gradle:util:3.0')
    }

    // cache dynamic versions for 10 minutes
    cacheDynamicVersionsFor 10*60, 'seconds'
    // don't cache changing modules at all
    cacheChangingModulesFor 0, 'seconds'
  }
}
</programlisting><section><title>Properties</title><table><title>Properties - ResolutionStrategy</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.artifacts.ResolutionStrategy:capabilitiesResolution"><literal>capabilitiesResolution</literal></link></td><td><para>The capabilities resolution strategy.</para></td></tr><tr><td><link linkend="org.gradle.api.artifacts.ResolutionStrategy:componentSelection"><literal>componentSelection</literal></link></td><td><para>The currently configured version selection rules object.</para></td></tr><tr><td><link linkend="org.gradle.api.artifacts.ResolutionStrategy:dependencySubstitution"><literal>dependencySubstitution</literal></link></td><td><para>The set of dependency substitution rules that are set for this configuration.</para></td></tr><tr><td><link linkend="org.gradle.api.artifacts.ResolutionStrategy:forcedModules"><literal>forcedModules</literal></link></td><td><para>Returns currently configured forced modules. For more information on forcing versions see <apilink class="org.gradle.api.artifacts.ResolutionStrategy" method="force(java.lang.Object[])"/></para></td></tr></table></section><section><title>Methods</title><table><title>Methods - ResolutionStrategy</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.artifacts.ResolutionStrategy:activateDependencyLocking()">activateDependencyLocking</link>()</literal></td><td><para>Activates dependency locking support in Gradle.
Once turned on a configuration, resolution result can be saved and then reused for subsequent builds.
This enables reproducible builds when using dynamic versions.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.ResolutionStrategy:cacheChangingModulesFor(int, java.lang.String)">cacheChangingModulesFor</link>(value, units)</literal></td><td><para>Sets the length of time that changing modules will be cached, with units expressed as a String.

</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.ResolutionStrategy:cacheChangingModulesFor(int, java.util.concurrent.TimeUnit)">cacheChangingModulesFor</link>(value, units)</literal></td><td><para>Sets the length of time that changing modules will be cached.

</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.ResolutionStrategy:cacheDynamicVersionsFor(int, java.lang.String)">cacheDynamicVersionsFor</link>(value, units)</literal></td><td><para>Sets the length of time that dynamic versions will be cached, with units expressed as a String.

</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.ResolutionStrategy:cacheDynamicVersionsFor(int, java.util.concurrent.TimeUnit)">cacheDynamicVersionsFor</link>(value, units)</literal></td><td><para>Sets the length of time that dynamic versions will be cached.

</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.ResolutionStrategy:componentSelection(org.gradle.api.Action)">componentSelection</link>(action)</literal></td><td><para>The componentSelection block provides rules to filter or prevent certain components from appearing in the resolution result.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.ResolutionStrategy:deactivateDependencyLocking()">deactivateDependencyLocking</link>()</literal></td><td><para>Deactivates dependency locking support in Gradle.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.ResolutionStrategy:dependencySubstitution(org.gradle.api.Action)">dependencySubstitution</link>(action)</literal></td><td><para>Configures the set of dependency substitution rules for this configuration.  The action receives an instance of <apilink class="org.gradle.api.artifacts.DependencySubstitutions"/> which
can then be configured with substitution rules.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.ResolutionStrategy:disableDependencyVerification()">disableDependencyVerification</link>()</literal></td><td><para>Deactivates dependency verification for this configuration.
You should always be careful when disabling verification, and in particular avoid
disabling it for verification of plugins, because a plugin could use this to disable
verification itself.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.ResolutionStrategy:eachDependency(org.gradle.api.Action)">eachDependency</link>(rule)</literal></td><td><para>Adds a dependency substitution rule that is triggered for every dependency (including transitive)
when the configuration is being resolved. The action receives an instance of <apilink class="org.gradle.api.artifacts.DependencyResolveDetails"/>
that can be used to find out what dependency is being resolved and to influence the resolution process.
Example:
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.ResolutionStrategy:enableDependencyVerification()">enableDependencyVerification</link>()</literal></td><td><para>Enabled dependency verification for this configuration.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.ResolutionStrategy:failOnChangingVersions()">failOnChangingVersions</link>()</literal></td><td><para>If this method is called, Gradle will make sure that no changing version participates in resolution.

This can be used in cases you want to make sure your build is reproducible, <emphasis>without</emphasis> relying on
dependency locking.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.ResolutionStrategy:failOnDynamicVersions()">failOnDynamicVersions</link>()</literal></td><td><para>If this method is called, Gradle will make sure that no dynamic version was used in the resulting dependency graph.
In practice, it means that if the resolved dependency graph contains a module and that the versions participating
in the selection of that module contain at least one dynamic version, then resolution will fail if the resolution
result can change because of this version selector.

This can be used in cases you want to make sure your build is reproducible, <emphasis>without</emphasis> relying on
dependency locking.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.ResolutionStrategy:failOnNonReproducibleResolution()">failOnNonReproducibleResolution</link>()</literal></td><td><para>Configures Gradle to fail the build is the resolution result is expected to be unstable, that is to say that
it includes dynamic versions or changing versions and therefore the result may change depending
on when the build is executed.

This method is equivalent to calling both <apilink class="org.gradle.api.artifacts.ResolutionStrategy" method="failOnDynamicVersions()"/> and
<apilink class="org.gradle.api.artifacts.ResolutionStrategy" method="failOnChangingVersions()"/>.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.ResolutionStrategy:failOnVersionConflict()">failOnVersionConflict</link>()</literal></td><td><para>In case of conflict, Gradle by default uses the newest of conflicting versions.
However, you can change this behavior. Use this method to configure the resolution to fail eagerly on any version conflict, e.g.
multiple different versions of the same dependency (group and name are equal) in the same <apilink class="org.gradle.api.artifacts.Configuration"/>.
The check includes both first level and transitive dependencies. See example below:

</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.ResolutionStrategy:force(java.lang.Object[])">force</link>(moduleVersionSelectorNotations)</literal></td><td><para>Allows forcing certain versions of dependencies, including transitive dependencies.
<emphasis>Appends</emphasis> new forced modules to be considered when resolving dependencies.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.ResolutionStrategy:getUseGlobalDependencySubstitutionRules()">getUseGlobalDependencySubstitutionRules</link>()</literal></td><td><para>Gradle implicitly registers dependency substitution rules for all configurations in the whole build
tree to find projects in other included builds. These rules are always active by default.

There are however cases, where a certain configuration should not apply these rules when resolving.
For example, if a binary version of a module should be discovered that is also represented by
a project in another build.

This property may be used to deactivate these global substitution rules.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.ResolutionStrategy:preferProjectModules()">preferProjectModules</link>()</literal></td><td><para>Gradle can resolve conflicts purely by version number or prioritize project dependencies over binary.
The default is <emphasis>by version number</emphasis>.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.ResolutionStrategy:sortArtifacts(SortOrder)">sortArtifacts</link>(sortOrder)</literal></td><td><para>Specifies the ordering for resolved artifacts. Options are:
</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.artifacts.ResolutionStrategy:capabilitiesResolution" role="detail"><title><apilink class="org.gradle.api.artifacts.CapabilitiesResolution"/> <literal>capabilitiesResolution</literal> (read-only)</title><para>The capabilities resolution strategy.</para></section><section id="org.gradle.api.artifacts.ResolutionStrategy:componentSelection" role="detail"><title><apilink class="org.gradle.api.artifacts.ComponentSelectionRules"/> <literal>componentSelection</literal> (read-only)</title><para>The currently configured version selection rules object.</para></section><section id="org.gradle.api.artifacts.ResolutionStrategy:dependencySubstitution" role="detail"><title><apilink class="org.gradle.api.artifacts.DependencySubstitutions"/> <literal>dependencySubstitution</literal> (read-only)</title><para>The set of dependency substitution rules that are set for this configuration.</para></section><section id="org.gradle.api.artifacts.ResolutionStrategy:forcedModules" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<apilink class="org.gradle.api.artifacts.ModuleVersionSelector"/>&gt;</classname> <literal>forcedModules</literal></title><para>Returns currently configured forced modules. For more information on forcing versions see <apilink class="org.gradle.api.artifacts.ResolutionStrategy" method="force(java.lang.Object[])"/></para></section></section><section><title>Method details</title><section id="org.gradle.api.artifacts.ResolutionStrategy:activateDependencyLocking()" role="detail"><title><apilink class="org.gradle.api.artifacts.ResolutionStrategy"/> <literal>activateDependencyLocking</literal>()</title><para>Activates dependency locking support in Gradle.
Once turned on a configuration, resolution result can be saved and then reused for subsequent builds.
This enables reproducible builds when using dynamic versions.</para></section><section id="org.gradle.api.artifacts.ResolutionStrategy:cacheChangingModulesFor(int, java.lang.String)" role="detail"><title><classname>void</classname> <literal>cacheChangingModulesFor</literal>(<classname>int</classname> value, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> units)</title><para>Sets the length of time that changing modules will be cached, with units expressed as a String.

</para><para>A convenience method for <apilink class="org.gradle.api.artifacts.ResolutionStrategy" method="cacheChangingModulesFor(int, java.util.concurrent.TimeUnit)"/> with units expressed as a String.
Units are resolved by calling the <literal>valueOf(String)</literal> method of <ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/TimeUnit.html"><classname>TimeUnit</classname></ulink> with the upper-cased string value.</para></section><section id="org.gradle.api.artifacts.ResolutionStrategy:cacheChangingModulesFor(int, java.util.concurrent.TimeUnit)" role="detail"><title><classname>void</classname> <literal>cacheChangingModulesFor</literal>(<classname>int</classname> value, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/TimeUnit.html"><classname>TimeUnit</classname></ulink> units)</title><para>Sets the length of time that changing modules will be cached.

</para><para>Gradle caches the contents and artifacts of changing modules. By default, these cached values are kept for 24 hours,
after which the cached entry is expired and the module is resolved again.</para><para>Use this method to provide a custom expiry time after which the cached entries for any changing module will be expired.</para></section><section id="org.gradle.api.artifacts.ResolutionStrategy:cacheDynamicVersionsFor(int, java.lang.String)" role="detail"><title><classname>void</classname> <literal>cacheDynamicVersionsFor</literal>(<classname>int</classname> value, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> units)</title><para>Sets the length of time that dynamic versions will be cached, with units expressed as a String.

</para><para>A convenience method for <apilink class="org.gradle.api.artifacts.ResolutionStrategy" method="cacheDynamicVersionsFor(int, java.util.concurrent.TimeUnit)"/> with units expressed as a String.
Units are resolved by calling the <literal>valueOf(String)</literal> method of <ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/TimeUnit.html"><classname>TimeUnit</classname></ulink> with the upper-cased string value.</para></section><section id="org.gradle.api.artifacts.ResolutionStrategy:cacheDynamicVersionsFor(int, java.util.concurrent.TimeUnit)" role="detail"><title><classname>void</classname> <literal>cacheDynamicVersionsFor</literal>(<classname>int</classname> value, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/TimeUnit.html"><classname>TimeUnit</classname></ulink> units)</title><para>Sets the length of time that dynamic versions will be cached.

</para><para>Gradle keeps a cache of dynamic version =&gt; resolved version (ie 2.+ =&gt; 2.3). By default, these cached values are kept for 24 hours, after which the cached entry is expired
and the dynamic version is resolved again.</para><para>Use this method to provide a custom expiry time after which the cached value for any dynamic version will be expired.</para></section><section id="org.gradle.api.artifacts.ResolutionStrategy:componentSelection(org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.artifacts.ResolutionStrategy"/> <literal>componentSelection</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.artifacts.ComponentSelectionRules"/>&gt;</classname> action)</title><para>The componentSelection block provides rules to filter or prevent certain components from appearing in the resolution result.</para></section><section id="org.gradle.api.artifacts.ResolutionStrategy:deactivateDependencyLocking()" role="detail"><title><apilink class="org.gradle.api.artifacts.ResolutionStrategy"/> <literal>deactivateDependencyLocking</literal>()</title><para>Deactivates dependency locking support in Gradle.</para></section><section id="org.gradle.api.artifacts.ResolutionStrategy:dependencySubstitution(org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.artifacts.ResolutionStrategy"/> <literal>dependencySubstitution</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.artifacts.DependencySubstitutions"/>&gt;</classname> action)</title><para>Configures the set of dependency substitution rules for this configuration.  The action receives an instance of <apilink class="org.gradle.api.artifacts.DependencySubstitutions"/> which
can then be configured with substitution rules.
</para><para>Examples:</para><programlisting language="java">
// add dependency substitution rules
configurations.all {
  resolutionStrategy.dependencySubstitution {
    // Substitute project and module dependencies
    substitute module('org.gradle:api') using project(':api')
    substitute project(':util') using module('org.gradle:util:3.0')

    // Substitute one module dependency for another
    substitute module('org.gradle:api:2.0') using module('org.gradle:api:2.1')
  }
}
</programlisting></section><section id="org.gradle.api.artifacts.ResolutionStrategy:disableDependencyVerification()" role="detail"><title><apilink class="org.gradle.api.artifacts.ResolutionStrategy"/> <literal>disableDependencyVerification</literal>()</title><para>Deactivates dependency verification for this configuration.
You should always be careful when disabling verification, and in particular avoid
disabling it for verification of plugins, because a plugin could use this to disable
verification itself.</para></section><section id="org.gradle.api.artifacts.ResolutionStrategy:eachDependency(org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.artifacts.ResolutionStrategy"/> <literal>eachDependency</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.artifacts.DependencyResolveDetails"/>&gt;</classname> rule)</title><para>Adds a dependency substitution rule that is triggered for every dependency (including transitive)
when the configuration is being resolved. The action receives an instance of <apilink class="org.gradle.api.artifacts.DependencyResolveDetails"/>
that can be used to find out what dependency is being resolved and to influence the resolution process.
Example:
</para><programlisting language="java">
configurations {
  compileClasspath.resolutionStrategy {
    eachDependency { DependencyResolveDetails details -&gt;
      //specifying a fixed version for all libraries with 'org.gradle' group
      if (details.requested.group == 'org.gradle') {
        details.useVersion '1.4'
      }
    }
    eachDependency { details -&gt;
      //multiple actions can be specified
      if (details.requested.name == 'groovy-all') {
         //changing the name:
         details.useTarget group: details.requested.group, name: 'groovy', version: details.requested.version
      }
    }
  }
}
</programlisting><para>

The rules are evaluated in order they are declared. Rules are evaluated after forced modules are applied (see <apilink class="org.gradle.api.artifacts.ResolutionStrategy" method="force(java.lang.Object[])"/></para></section><section id="org.gradle.api.artifacts.ResolutionStrategy:enableDependencyVerification()" role="detail"><title><apilink class="org.gradle.api.artifacts.ResolutionStrategy"/> <literal>enableDependencyVerification</literal>()</title><para>Enabled dependency verification for this configuration.</para></section><section id="org.gradle.api.artifacts.ResolutionStrategy:failOnChangingVersions()" role="detail"><title><apilink class="org.gradle.api.artifacts.ResolutionStrategy"/> <literal>failOnChangingVersions</literal>()</title><para>If this method is called, Gradle will make sure that no changing version participates in resolution.

This can be used in cases you want to make sure your build is reproducible, <emphasis>without</emphasis> relying on
dependency locking.</para></section><section id="org.gradle.api.artifacts.ResolutionStrategy:failOnDynamicVersions()" role="detail"><title><apilink class="org.gradle.api.artifacts.ResolutionStrategy"/> <literal>failOnDynamicVersions</literal>()</title><para>If this method is called, Gradle will make sure that no dynamic version was used in the resulting dependency graph.
In practice, it means that if the resolved dependency graph contains a module and that the versions participating
in the selection of that module contain at least one dynamic version, then resolution will fail if the resolution
result can change because of this version selector.

This can be used in cases you want to make sure your build is reproducible, <emphasis>without</emphasis> relying on
dependency locking.</para></section><section id="org.gradle.api.artifacts.ResolutionStrategy:failOnNonReproducibleResolution()" role="detail"><title><apilink class="org.gradle.api.artifacts.ResolutionStrategy"/> <literal>failOnNonReproducibleResolution</literal>()</title><para>Configures Gradle to fail the build is the resolution result is expected to be unstable, that is to say that
it includes dynamic versions or changing versions and therefore the result may change depending
on when the build is executed.

This method is equivalent to calling both <apilink class="org.gradle.api.artifacts.ResolutionStrategy" method="failOnDynamicVersions()"/> and
<apilink class="org.gradle.api.artifacts.ResolutionStrategy" method="failOnChangingVersions()"/>.</para></section><section id="org.gradle.api.artifacts.ResolutionStrategy:failOnVersionConflict()" role="detail"><title><apilink class="org.gradle.api.artifacts.ResolutionStrategy"/> <literal>failOnVersionConflict</literal>()</title><para>In case of conflict, Gradle by default uses the newest of conflicting versions.
However, you can change this behavior. Use this method to configure the resolution to fail eagerly on any version conflict, e.g.
multiple different versions of the same dependency (group and name are equal) in the same <apilink class="org.gradle.api.artifacts.Configuration"/>.
The check includes both first level and transitive dependencies. See example below:

</para><programlisting language="java">
plugins {
    id 'java' // so that there are some configurations
}

configurations.all {
  resolutionStrategy.failOnVersionConflict()
}
</programlisting></section><section id="org.gradle.api.artifacts.ResolutionStrategy:force(java.lang.Object[])" role="detail"><title><apilink class="org.gradle.api.artifacts.ResolutionStrategy"/> <literal>force</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink>...</classname> moduleVersionSelectorNotations)</title><para>Allows forcing certain versions of dependencies, including transitive dependencies.
<emphasis>Appends</emphasis> new forced modules to be considered when resolving dependencies.
</para><para>
It accepts following notations:
</para><itemizedlist><listitem>String in a format of: 'group:name:version', for example: 'org.gradle:gradle-core:1.0'</listitem><listitem>instance of <apilink class="org.gradle.api.artifacts.ModuleVersionSelector"/></listitem><listitem>any collection or array of above will be automatically flattened</listitem></itemizedlist><para>
Example:
</para><programlisting language="java">
plugins {
    id 'java' // so that there are some configurations
}

configurations.all {
  resolutionStrategy.force 'asm:asm-all:3.3.1', 'commons-io:commons-io:1.4'
}
</programlisting></section><section id="org.gradle.api.artifacts.ResolutionStrategy:getUseGlobalDependencySubstitutionRules()" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html"><classname>Boolean</classname></ulink>&gt;</classname> <literal>getUseGlobalDependencySubstitutionRules</literal>()</title><para>Gradle implicitly registers dependency substitution rules for all configurations in the whole build
tree to find projects in other included builds. These rules are always active by default.

There are however cases, where a certain configuration should not apply these rules when resolving.
For example, if a binary version of a module should be discovered that is also represented by
a project in another build.

This property may be used to deactivate these global substitution rules.</para></section><section id="org.gradle.api.artifacts.ResolutionStrategy:preferProjectModules()" role="detail"><title><classname>void</classname> <literal>preferProjectModules</literal>()</title><para>Gradle can resolve conflicts purely by version number or prioritize project dependencies over binary.
The default is <emphasis>by version number</emphasis>.</para><para>
This applies to both first level and transitive dependencies. See example below:

</para><programlisting language="java">
plugins {
    id 'java' // so that there are some configurations
}

configurations.all {
  resolutionStrategy.preferProjectModules()
}
</programlisting></section><section id="org.gradle.api.artifacts.ResolutionStrategy:sortArtifacts(SortOrder)" role="detail"><title><classname>void</classname> <literal>sortArtifacts</literal>(<classname>SortOrder</classname> sortOrder)</title><para>Specifies the ordering for resolved artifacts. Options are:
</para><itemizedlist><listitem><UNHANDLED-LINK>SortOrder#DEFAULT</UNHANDLED-LINK> : Don't specify the sort order. Gradle will provide artifacts in the default order.</listitem><listitem><UNHANDLED-LINK>SortOrder#CONSUMER_FIRST</UNHANDLED-LINK> : Artifacts for a consuming component should appear <emphasis>before</emphasis> artifacts for its dependencies.</listitem><listitem><UNHANDLED-LINK>SortOrder#DEPENDENCY_FIRST</UNHANDLED-LINK> : Artifacts for a consuming component should appear <emphasis>after</emphasis> artifacts for its dependencies.</listitem></itemizedlist><para>
A best attempt will be made to sort artifacts according the supplied <classname>SortOrder</classname>, but no guarantees will be made in the presence of dependency cycles.

NOTE: For a particular Gradle version, artifact ordering will be consistent. Multiple resolves for the same inputs will result in the
same outputs in the same order.</para></section></section></chapter><chapter id="org.gradle.api.artifacts.ComponentSelectionRules"><title>ComponentSelectionRules</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.artifacts.ComponentSelectionRules" style="javadoc"/></seg></seglistitem></segmentedlist><para>Represents a container for component selection rules.  Rules can be applied as part of the
resolutionStrategy of a configuration and individual components can be explicitly accepted
or rejected by rule.  Components that are neither accepted or rejected will be subject to
the default version matching strategies.

</para><programlisting language="java">
    configurations {
        conf {
            resolutionStrategy {
                componentSelection {
                    all { ComponentSelection selection -&gt;
                        if (selection.candidate.module == 'someModule' &amp;&amp; selection.candidate.version == '1.1') {
                            selection.reject("bad version '1.1' for 'someModule'")
                        }
                    }
                    all { ComponentSelection selection -&gt;
                        if (selection.candidate.module == 'someModule' &amp;&amp; selection.getDescriptor(IvyModuleDescriptor)?.branch == 'testing') {
                            if (selection.metadata == null || selection.metadata.status != 'milestone') {
                                selection.reject("only use milestones for someModule:testing")
                            }
                        }
                    }
                    withModule("org.sample:api") { ComponentSelection selection -&gt;
                        if (selection.candidate.version == "1.1") {
                            selection.reject("known bad version")
                        }
                    }
                }
            }
        }
    }
</programlisting><section><title>Properties</title><para>No properties</para></section><section><title>Methods</title><table><title>Methods - ComponentSelectionRules</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.artifacts.ComponentSelectionRules:all(groovy.lang.Closure)">all</link>(closure)</literal></td><td><para>Adds a component selection rule that will apply to all resolved components.

Each rule will receive a <apilink class="org.gradle.api.artifacts.ComponentSelection"/> object as an argument.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.ComponentSelectionRules:all(java.lang.Object)">all</link>(ruleSource)</literal></td><td><para>Adds a rule-source backed component selection rule that will apply to all resolved components.

The ruleSource provides the rule as exactly one rule method annotated with <apilink class="org.gradle.model.Mutate"/>.

This rule method:
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.ComponentSelectionRules:all(org.gradle.api.Action)">all</link>(selectionAction)</literal></td><td><para>Adds a simple component selection rule that will apply to all resolved components.
Each rule will receive a <apilink class="org.gradle.api.artifacts.ComponentSelection"/> object as an argument.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.ComponentSelectionRules:withModule(java.lang.Object, groovy.lang.Closure)">withModule</link>(id, closure)</literal></td><td><para>Adds a component selection rule that will apply to the specified module.

Each rule will receive a <apilink class="org.gradle.api.artifacts.ComponentSelection"/> object as an argument.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.ComponentSelectionRules:withModule(java.lang.Object, java.lang.Object)">withModule</link>(id, ruleSource)</literal></td><td><para>Adds a rule-source backed component selection rule that will apply to the specified module.

The ruleSource provides the rule as exactly one rule method annotated with <apilink class="org.gradle.model.Mutate"/>.

This rule method:
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.ComponentSelectionRules:withModule(java.lang.Object, org.gradle.api.Action)">withModule</link>(id, selectionAction)</literal></td><td><para>Adds a component selection rule that will apply to the specified module.
Each rule will receive a <apilink class="org.gradle.api.artifacts.ComponentSelection"/> object as an argument.</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Method details</title><section id="org.gradle.api.artifacts.ComponentSelectionRules:all(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.artifacts.ComponentSelectionRules"/> <literal>all</literal>(<classname><ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink>&lt;?&gt;</classname> closure)</title><para>Adds a component selection rule that will apply to all resolved components.

Each rule will receive a <apilink class="org.gradle.api.artifacts.ComponentSelection"/> object as an argument.</para></section><section id="org.gradle.api.artifacts.ComponentSelectionRules:all(java.lang.Object)" role="detail"><title><apilink class="org.gradle.api.artifacts.ComponentSelectionRules"/> <literal>all</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> ruleSource)</title><para>Adds a rule-source backed component selection rule that will apply to all resolved components.

The ruleSource provides the rule as exactly one rule method annotated with <apilink class="org.gradle.model.Mutate"/>.

This rule method:
</para><itemizedlist><listitem>must return void.</listitem><listitem>must have <apilink class="org.gradle.api.artifacts.ComponentSelection"/> as its parameter.</listitem></itemizedlist></section><section id="org.gradle.api.artifacts.ComponentSelectionRules:all(org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.artifacts.ComponentSelectionRules"/> <literal>all</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.artifacts.ComponentSelection"/>&gt;</classname> selectionAction)</title><para>Adds a simple component selection rule that will apply to all resolved components.
Each rule will receive a <apilink class="org.gradle.api.artifacts.ComponentSelection"/> object as an argument.</para></section><section id="org.gradle.api.artifacts.ComponentSelectionRules:withModule(java.lang.Object, groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.artifacts.ComponentSelectionRules"/> <literal>withModule</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> id, <classname><ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink>&lt;?&gt;</classname> closure)</title><para>Adds a component selection rule that will apply to the specified module.

Each rule will receive a <apilink class="org.gradle.api.artifacts.ComponentSelection"/> object as an argument.</para></section><section id="org.gradle.api.artifacts.ComponentSelectionRules:withModule(java.lang.Object, java.lang.Object)" role="detail"><title><apilink class="org.gradle.api.artifacts.ComponentSelectionRules"/> <literal>withModule</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> id, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> ruleSource)</title><para>Adds a rule-source backed component selection rule that will apply to the specified module.

The ruleSource provides the rule as exactly one rule method annotated with <apilink class="org.gradle.model.Mutate"/>.

This rule method:
</para><itemizedlist><listitem>must return void.</listitem><listitem>must have <apilink class="org.gradle.api.artifacts.ComponentSelection"/> as its parameter.</listitem></itemizedlist></section><section id="org.gradle.api.artifacts.ComponentSelectionRules:withModule(java.lang.Object, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.artifacts.ComponentSelectionRules"/> <literal>withModule</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> id, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.artifacts.ComponentSelection"/>&gt;</classname> selectionAction)</title><para>Adds a component selection rule that will apply to the specified module.
Each rule will receive a <apilink class="org.gradle.api.artifacts.ComponentSelection"/> object as an argument.</para></section></section></chapter><chapter id="org.gradle.api.artifacts.DependencySubstitutions"><title>DependencySubstitutions</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.artifacts.DependencySubstitutions" style="javadoc"/></seg></seglistitem></segmentedlist><para>Allows replacing dependencies with other dependencies.</para><section><title>Properties</title><para>No properties</para></section><section><title>Methods</title><table><title>Methods - DependencySubstitutions</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.artifacts.DependencySubstitutions:all(org.gradle.api.Action)">all</link>(rule)</literal></td><td><para>Adds a dependency substitution rule that is triggered for every dependency (including transitive)
when the configuration is being resolved. The action receives an instance of <apilink class="org.gradle.api.artifacts.DependencySubstitution"/>
that can be used to find out what dependency is being resolved and to influence the resolution process.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.DependencySubstitutions:module(java.lang.String)">module</link>(notation)</literal></td><td><para>Create a ModuleComponentSelector from the provided input string. Strings must be in the format "{group}:{module}:{version}".</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.DependencySubstitutions:project(java.lang.String)">project</link>(path)</literal></td><td><para>Create a ProjectComponentSelector from the provided input string. Strings must be in the format ":path".</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.DependencySubstitutions:substitute(org.gradle.api.artifacts.component.ComponentSelector)">substitute</link>(substitutedDependency)</literal></td><td><para>DSL-friendly mechanism to construct a dependency substitution for dependencies matching the provided selector.
</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Method details</title><section id="org.gradle.api.artifacts.DependencySubstitutions:all(org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.artifacts.DependencySubstitutions"/> <literal>all</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.artifacts.DependencySubstitution"/>&gt;</classname> rule)</title><para>Adds a dependency substitution rule that is triggered for every dependency (including transitive)
when the configuration is being resolved. The action receives an instance of <apilink class="org.gradle.api.artifacts.DependencySubstitution"/>
that can be used to find out what dependency is being resolved and to influence the resolution process.
</para><para>
Example:
</para><programlisting language="java">
configurations { main }
// add dependency substitution rules
configurations.main.resolutionStrategy.dependencySubstitution {
  // Use a rule to change the dependency module while leaving group + version intact
  all { DependencySubstitution dependency -&gt;
    if (dependency.requested instanceof ModuleComponentSelector &amp;&amp; dependency.requested.module == 'groovy-all') {
      dependency.useTarget dependency.requested.group + ':groovy:' + dependency.requested.version
    }
  }
  // Use a rule to replace all missing projects with module dependencies
  all { DependencySubstitution dependency -&gt;
   if (dependency.requested instanceof ProjectComponentSelector) {
      def targetProject = findProject(":${dependency.requested.path}")
      if (targetProject == null) {
        dependency.useTarget "org.myorg:" + dependency.requested.path + ":+"
      }
    }
  }
}
</programlisting><para>

The rules are evaluated in order they are declared. Rules are evaluated after forced modules are applied (see <apilink class="org.gradle.api.artifacts.ResolutionStrategy" method="force(java.lang.Object[])"/></para></section><section id="org.gradle.api.artifacts.DependencySubstitutions:module(java.lang.String)" role="detail"><title><apilink class="org.gradle.api.artifacts.component.ComponentSelector"/> <literal>module</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> notation)</title><para>Create a ModuleComponentSelector from the provided input string. Strings must be in the format "{group}:{module}:{version}".</para></section><section id="org.gradle.api.artifacts.DependencySubstitutions:project(java.lang.String)" role="detail"><title><apilink class="org.gradle.api.artifacts.component.ComponentSelector"/> <literal>project</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> path)</title><para>Create a ProjectComponentSelector from the provided input string. Strings must be in the format ":path".</para></section><section id="org.gradle.api.artifacts.DependencySubstitutions:substitute(org.gradle.api.artifacts.component.ComponentSelector)" role="detail"><title><classname>Substitution</classname> <literal>substitute</literal>(<apilink class="org.gradle.api.artifacts.component.ComponentSelector"/> substitutedDependency)</title><para>DSL-friendly mechanism to construct a dependency substitution for dependencies matching the provided selector.
</para><para>
Examples:
</para><programlisting language="java">
configurations { main }
configurations.main.resolutionStrategy.dependencySubstitution {
  // Substitute project and module dependencies
  substitute module('org.gradle:api') using project(':api')
  substitute project(':util') using module('org.gradle:util:3.0')

  // Substitute one module dependency for another
  substitute module('org.gradle:api:2.0') using module('org.gradle:api:2.1')
}
</programlisting></section></section></chapter><chapter id="org.gradle.api.artifacts.ConsumableConfiguration"><title>ConsumableConfiguration</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.artifacts.ConsumableConfiguration" style="javadoc"/></seg></seglistitem></segmentedlist><caution><para>Note: This class is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>A <apilink class="org.gradle.api.artifacts.Configuration"/> which can be consumed via Publishing and Dependency Management.</para><section><title>Properties</title><table><title>Properties - ConsumableConfiguration</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.artifacts.ConsumableConfiguration:allArtifacts"><literal>allArtifacts</literal></link></td><td><para>The artifacts of this configuration including the artifacts of extended configurations.</para></td></tr><tr><td><link linkend="org.gradle.api.artifacts.ConsumableConfiguration:allDependencies"><literal>allDependencies</literal></link></td><td><para>Gets the complete set of declared dependencies including those contributed by
superconfigurations.
</para></td></tr><tr><td><link linkend="org.gradle.api.artifacts.ConsumableConfiguration:artifacts"><literal>artifacts</literal></link></td><td><para>The artifacts of this configuration excluding the artifacts of extended configurations.</para></td></tr><tr><td><link linkend="org.gradle.api.artifacts.ConsumableConfiguration:buildDependencies"><literal>buildDependencies</literal></link></td><td><para>Returns a <literal>TaskDependency</literal> object containing all required dependencies to build the local dependencies
(e.g. project dependencies) belonging to this configuration or to one of its super configurations.</para></td></tr><tr><td><link linkend="org.gradle.api.artifacts.ConsumableConfiguration:dependencies"><literal>dependencies</literal></link></td><td><para>Gets the set of declared dependencies directly contained in this configuration
(ignoring superconfigurations).
</para></td></tr><tr><td><link linkend="org.gradle.api.artifacts.ConsumableConfiguration:description"><literal>description</literal></link></td><td><para>The description for this configuration.</para></td></tr><tr><td><link linkend="org.gradle.api.artifacts.ConsumableConfiguration:excludeRules"><literal>excludeRules</literal></link></td><td><para>The exclude rules applied for resolving any dependency of this configuration.</para></td></tr><tr><td><link linkend="org.gradle.api.artifacts.ConsumableConfiguration:extendsFrom"><literal>extendsFrom</literal></link></td><td><para>The names of the configurations which this configuration extends from. The artifacts of the super
configurations are also available in this configuration.</para></td></tr><tr><td><link linkend="org.gradle.api.artifacts.ConsumableConfiguration:hierarchy"><literal>hierarchy</literal></link></td><td><para>Gets an ordered set including this configuration and all superconfigurations
recursively.</para></td></tr><tr><td><link linkend="org.gradle.api.artifacts.ConsumableConfiguration:incoming"><literal>incoming</literal></link></td><td><para>Returns a <apilink class="org.gradle.api.artifacts.ResolvableDependencies"/> instance, exposing the results of dependency resolution.
This method is the primary way to consume dependency resolution outputs.</para></td></tr><tr><td><link linkend="org.gradle.api.artifacts.ConsumableConfiguration:resolutionStrategy"><literal>resolutionStrategy</literal></link></td><td><para>The resolution strategy used by this configuration.
The resolution strategy provides extra details on how to resolve this configuration.
See docs for <apilink class="org.gradle.api.artifacts.ResolutionStrategy"/> for more info and examples.</para></td></tr><tr><td><link linkend="org.gradle.api.artifacts.ConsumableConfiguration:resolvedConfiguration"><literal>resolvedConfiguration</literal></link></td><td><para>Returns a <apilink class="org.gradle.api.artifacts.ResolvedConfiguration"/>, a legacy view of the results of dependency resolution.
<emphasis>Avoid this method for new code</emphasis>. Prefer accessing resolution outputs via
<apilink class="org.gradle.api.artifacts.Configuration" method="getIncoming()"/>. This API will be deprecated and removed in future Gradle versions.
</para></td></tr><tr><td><link linkend="org.gradle.api.artifacts.ConsumableConfiguration:state"><literal>state</literal></link></td><td><para>The state of the configuration.</para></td></tr><tr><td><link linkend="org.gradle.api.artifacts.ConsumableConfiguration:transitive"><literal>transitive</literal></link></td><td><para>The transitivity of this configuration. A transitive configuration contains the transitive closure of its
direct dependencies, and all their dependencies. An intransitive configuration contains only the direct
dependencies. The default value is true.</para></td></tr><tr><td><link linkend="org.gradle.api.artifacts.ConsumableConfiguration:visible"><literal>visible</literal></link></td><td><caution>Deprecated</caution><para>This is a legacy property and the value does not affect dependency resolution
in any way. There is no need to read this property and this method will be deprecated
in an upcoming Gradle version.
</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - ConsumableConfiguration</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.artifacts.ConsumableConfiguration:copy()">copy</link>()</literal></td><td><para>Creates a copy of this configuration that only contains the dependencies directly in this configuration
(without contributions from superconfigurations).  The new configuration will be in the
UNRESOLVED state, but will retain all other attributes of this configuration except superconfigurations.
<apilink class="org.gradle.api.artifacts.Configuration" method="getHierarchy()"/> for the copy will not include any superconfigurations.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.ConsumableConfiguration:copy(groovy.lang.Closure)">copy</link>(dependencySpec)</literal></td><td><para>Takes a closure which gets coerced into a <apilink class="org.gradle.api.specs.Spec"/>. Behaves otherwise in the same way as <apilink class="org.gradle.api.artifacts.Configuration" method="copy(org.gradle.api.specs.Spec)"/>
 </para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.ConsumableConfiguration:copy(org.gradle.api.specs.Spec)">copy</link>(dependencySpec)</literal></td><td><para>Creates a copy of this configuration ignoring superconfigurations (see <apilink class="org.gradle.api.artifacts.Configuration" method="copy()"/> but filtering
the dependencies using the specified dependency spec.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.ConsumableConfiguration:copyRecursive()">copyRecursive</link>()</literal></td><td><para>Creates a copy of this configuration that contains the dependencies directly in this configuration
and those derived from superconfigurations.  The new configuration will be in the
UNRESOLVED state, but will retain all other attributes of this configuration except superconfigurations.
<apilink class="org.gradle.api.artifacts.Configuration" method="getHierarchy()"/> for the copy will not include any superconfigurations.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.ConsumableConfiguration:copyRecursive(groovy.lang.Closure)">copyRecursive</link>(dependencySpec)</literal></td><td><para>Takes a closure which gets coerced into a <apilink class="org.gradle.api.specs.Spec"/>. Behaves otherwise in the same way as <apilink class="org.gradle.api.artifacts.Configuration" method="copyRecursive(org.gradle.api.specs.Spec)"/>
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.ConsumableConfiguration:copyRecursive(org.gradle.api.specs.Spec)">copyRecursive</link>(dependencySpec)</literal></td><td><para>Creates a copy of this configuration with dependencies from superconfigurations (see <apilink class="org.gradle.api.artifacts.Configuration" method="copyRecursive()"/>)
but filtering the dependencies using the dependencySpec.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.ConsumableConfiguration:defaultDependencies(org.gradle.api.Action)">defaultDependencies</link>(action)</literal></td><td><para>Execute the given action if the configuration has no defined dependencies when it first participates in
dependency resolution. A <literal>Configuration</literal> will participate in dependency resolution
when:
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.ConsumableConfiguration:exclude(java.util.Map)">exclude</link>(excludeProperties)</literal></td><td><para>Adds an exclude rule to exclude transitive dependencies for all dependencies of this configuration.
You can also add exclude rules per-dependency. See <apilink class="org.gradle.api.artifacts.ModuleDependency" method="exclude(java.util.Map)"/>.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.ConsumableConfiguration:extendsFrom(org.gradle.api.artifacts.Configuration[])">extendsFrom</link>(superConfigs)</literal></td><td><para>Adds the given configurations to the set of configuration which this configuration extends from.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.ConsumableConfiguration:getTaskDependencyFromProjectDependency(boolean, java.lang.String)">getTaskDependencyFromProjectDependency</link>(useDependedOn, taskName)</literal></td><td><para>Returns a TaskDependency object containing dependencies on all tasks with the specified name from project
dependencies related to this configuration or one of its super configurations.  These other projects may be
projects this configuration depends on or projects with a similarly named configuration that depend on this one
based on the useDependOn argument.</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.artifacts.ConsumableConfiguration:allArtifacts" role="detail"><title><apilink class="org.gradle.api.artifacts.PublishArtifactSet"/> <literal>allArtifacts</literal> (read-only)</title><para>The artifacts of this configuration including the artifacts of extended configurations.</para></section><section id="org.gradle.api.artifacts.ConsumableConfiguration:allDependencies" role="detail"><title><apilink class="org.gradle.api.artifacts.DependencySet"/> <literal>allDependencies</literal> (read-only)</title><para>Gets the complete set of declared dependencies including those contributed by
superconfigurations.
</para><para>
This method does not resolve the configuration. Therefore, the return value does not include
transitive dependencies.</para></section><section id="org.gradle.api.artifacts.ConsumableConfiguration:artifacts" role="detail"><title><apilink class="org.gradle.api.artifacts.PublishArtifactSet"/> <literal>artifacts</literal> (read-only)</title><para>The artifacts of this configuration excluding the artifacts of extended configurations.</para></section><section id="org.gradle.api.artifacts.ConsumableConfiguration:buildDependencies" role="detail"><title><apilink class="org.gradle.api.tasks.TaskDependency"/> <literal>buildDependencies</literal> (read-only)</title><para>Returns a <literal>TaskDependency</literal> object containing all required dependencies to build the local dependencies
(e.g. project dependencies) belonging to this configuration or to one of its super configurations.</para></section><section id="org.gradle.api.artifacts.ConsumableConfiguration:dependencies" role="detail"><title><apilink class="org.gradle.api.artifacts.DependencySet"/> <literal>dependencies</literal> (read-only)</title><para>Gets the set of declared dependencies directly contained in this configuration
(ignoring superconfigurations).
</para><para>
This method does not resolve the configuration. Therefore, the return value does not include
transitive dependencies.</para></section><section id="org.gradle.api.artifacts.ConsumableConfiguration:description" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>description</literal></title><para>The description for this configuration.</para></section><section id="org.gradle.api.artifacts.ConsumableConfiguration:excludeRules" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<apilink class="org.gradle.api.artifacts.ExcludeRule"/>&gt;</classname> <literal>excludeRules</literal> (read-only)</title><para>The exclude rules applied for resolving any dependency of this configuration.</para></section><section id="org.gradle.api.artifacts.ConsumableConfiguration:extendsFrom" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<apilink class="org.gradle.api.artifacts.Configuration"/>&gt;</classname> <literal>extendsFrom</literal></title><para>The names of the configurations which this configuration extends from. The artifacts of the super
configurations are also available in this configuration.</para></section><section id="org.gradle.api.artifacts.ConsumableConfiguration:hierarchy" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<apilink class="org.gradle.api.artifacts.Configuration"/>&gt;</classname> <literal>hierarchy</literal> (read-only)</title><para>Gets an ordered set including this configuration and all superconfigurations
recursively.</para></section><section id="org.gradle.api.artifacts.ConsumableConfiguration:incoming" role="detail"><title><apilink class="org.gradle.api.artifacts.ResolvableDependencies"/> <literal>incoming</literal> (read-only)</title><para>Returns a <apilink class="org.gradle.api.artifacts.ResolvableDependencies"/> instance, exposing the results of dependency resolution.
This method is the primary way to consume dependency resolution outputs.</para></section><section id="org.gradle.api.artifacts.ConsumableConfiguration:resolutionStrategy" role="detail"><title><apilink class="org.gradle.api.artifacts.ResolutionStrategy"/> <literal>resolutionStrategy</literal> (read-only)</title><para>The resolution strategy used by this configuration.
The resolution strategy provides extra details on how to resolve this configuration.
See docs for <apilink class="org.gradle.api.artifacts.ResolutionStrategy"/> for more info and examples.</para></section><section id="org.gradle.api.artifacts.ConsumableConfiguration:resolvedConfiguration" role="detail"><title><apilink class="org.gradle.api.artifacts.ResolvedConfiguration"/> <literal>resolvedConfiguration</literal> (read-only)</title><para>Returns a <apilink class="org.gradle.api.artifacts.ResolvedConfiguration"/>, a legacy view of the results of dependency resolution.
<emphasis>Avoid this method for new code</emphasis>. Prefer accessing resolution outputs via
<apilink class="org.gradle.api.artifacts.Configuration" method="getIncoming()"/>. This API will be deprecated and removed in future Gradle versions.
</para><para>
See <apilink class="org.gradle.api.artifacts.ResolvedConfiguration"/> for details on why this API should not be used.</para></section><section id="org.gradle.api.artifacts.ConsumableConfiguration:state" role="detail"><title><classname>State</classname> <literal>state</literal> (read-only)</title><para>The state of the configuration.</para></section><section id="org.gradle.api.artifacts.ConsumableConfiguration:transitive" role="detail"><title><classname>boolean</classname> <literal>transitive</literal></title><para>The transitivity of this configuration. A transitive configuration contains the transitive closure of its
direct dependencies, and all their dependencies. An intransitive configuration contains only the direct
dependencies. The default value is true.</para></section><section id="org.gradle.api.artifacts.ConsumableConfiguration:visible" role="detail"><title><classname>boolean</classname> <literal>visible</literal></title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">deprecated</ulink> and will be removed in the next major version of Gradle.</para></caution><para>This is a legacy property and the value does not affect dependency resolution
in any way. There is no need to read this property and this method will be deprecated
in an upcoming Gradle version.
</para><para>
The value of this property does not dictate in any way the "visibility" of
a configuration, or if it is accessible between projects.</para></section></section><section><title>Method details</title><section id="org.gradle.api.artifacts.ConsumableConfiguration:copy()" role="detail"><title><apilink class="org.gradle.api.artifacts.Configuration"/> <literal>copy</literal>()</title><para>Creates a copy of this configuration that only contains the dependencies directly in this configuration
(without contributions from superconfigurations).  The new configuration will be in the
UNRESOLVED state, but will retain all other attributes of this configuration except superconfigurations.
<apilink class="org.gradle.api.artifacts.Configuration" method="getHierarchy()"/> for the copy will not include any superconfigurations.
</para><para>
This method is only intended for use for specific situations involving resolvable configuration, it is
<emphasis>NOT</emphasis> intended as a general-purpose copying mechanism.</para></section><section id="org.gradle.api.artifacts.ConsumableConfiguration:copy(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.artifacts.Configuration"/> <literal>copy</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> dependencySpec)</title><para>Takes a closure which gets coerced into a <apilink class="org.gradle.api.specs.Spec"/>. Behaves otherwise in the same way as <apilink class="org.gradle.api.artifacts.Configuration" method="copy(org.gradle.api.specs.Spec)"/>
 </para><para>
This method is only intended for use for specific situations involving resolvable configuration, it is
<emphasis>NOT</emphasis> intended as a general-purpose copying mechanism.</para></section><section id="org.gradle.api.artifacts.ConsumableConfiguration:copy(org.gradle.api.specs.Spec)" role="detail"><title><apilink class="org.gradle.api.artifacts.Configuration"/> <literal>copy</literal>(<classname><apilink class="org.gradle.api.specs.Spec"/>&lt;? super <apilink class="org.gradle.api.artifacts.Dependency"/>&gt;</classname> dependencySpec)</title><para>Creates a copy of this configuration ignoring superconfigurations (see <apilink class="org.gradle.api.artifacts.Configuration" method="copy()"/> but filtering
the dependencies using the specified dependency spec.
</para><para>
This method is only intended for use for specific situations involving resolvable configuration, it is
<emphasis>NOT</emphasis> intended as a general-purpose copying mechanism.</para></section><section id="org.gradle.api.artifacts.ConsumableConfiguration:copyRecursive()" role="detail"><title><apilink class="org.gradle.api.artifacts.Configuration"/> <literal>copyRecursive</literal>()</title><para>Creates a copy of this configuration that contains the dependencies directly in this configuration
and those derived from superconfigurations.  The new configuration will be in the
UNRESOLVED state, but will retain all other attributes of this configuration except superconfigurations.
<apilink class="org.gradle.api.artifacts.Configuration" method="getHierarchy()"/> for the copy will not include any superconfigurations.
</para><para>
This method is only intended for use for specific situations involving resolvable configuration, it is
<emphasis>NOT</emphasis> intended as a general-purpose copying mechanism.</para></section><section id="org.gradle.api.artifacts.ConsumableConfiguration:copyRecursive(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.artifacts.Configuration"/> <literal>copyRecursive</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> dependencySpec)</title><para>Takes a closure which gets coerced into a <apilink class="org.gradle.api.specs.Spec"/>. Behaves otherwise in the same way as <apilink class="org.gradle.api.artifacts.Configuration" method="copyRecursive(org.gradle.api.specs.Spec)"/>
</para><para>
This method is only intended for use for specific situations involving resolvable configuration, it is
<emphasis>NOT</emphasis> intended as a general-purpose copying mechanism.</para></section><section id="org.gradle.api.artifacts.ConsumableConfiguration:copyRecursive(org.gradle.api.specs.Spec)" role="detail"><title><apilink class="org.gradle.api.artifacts.Configuration"/> <literal>copyRecursive</literal>(<classname><apilink class="org.gradle.api.specs.Spec"/>&lt;? super <apilink class="org.gradle.api.artifacts.Dependency"/>&gt;</classname> dependencySpec)</title><para>Creates a copy of this configuration with dependencies from superconfigurations (see <apilink class="org.gradle.api.artifacts.Configuration" method="copyRecursive()"/>)
but filtering the dependencies using the dependencySpec.
</para><para>
This method is only intended for use for specific situations involving resolvable configuration, it is
<emphasis>NOT</emphasis> intended as a general-purpose copying mechanism.</para></section><section id="org.gradle.api.artifacts.ConsumableConfiguration:defaultDependencies(org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.artifacts.Configuration"/> <literal>defaultDependencies</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.artifacts.DependencySet"/>&gt;</classname> action)</title><para>Execute the given action if the configuration has no defined dependencies when it first participates in
dependency resolution. A <literal>Configuration</literal> will participate in dependency resolution
when:
</para><itemizedlist><listitem>The <apilink class="org.gradle.api.artifacts.Configuration"/> itself is resolved</listitem><listitem>Another <apilink class="org.gradle.api.artifacts.Configuration"/> that extends this one is resolved</listitem><listitem>Another <apilink class="org.gradle.api.artifacts.Configuration"/> that references this one as a project dependency is resolved</listitem></itemizedlist><para>

This method is useful for specifying default dependencies for a configuration:
</para><programlisting language="java">
configurations { conf }
configurations['conf'].defaultDependencies { dependencies -&gt;
     dependencies.add(owner.project.dependencies.create("org.gradle:my-util:1.0"))
}
</programlisting><para>
A <literal>Configuration</literal> is considered empty even if it extends another, non-empty <literal>Configuration</literal>.
</para><para>
If multiple actions are supplied, each action will be executed until the set of dependencies is no longer empty.
Remaining actions will be ignored.</para></section><section id="org.gradle.api.artifacts.ConsumableConfiguration:exclude(java.util.Map)" role="detail"><title><apilink class="org.gradle.api.artifacts.Configuration"/> <literal>exclude</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> excludeProperties)</title><para>Adds an exclude rule to exclude transitive dependencies for all dependencies of this configuration.
You can also add exclude rules per-dependency. See <apilink class="org.gradle.api.artifacts.ModuleDependency" method="exclude(java.util.Map)"/>.</para></section><section id="org.gradle.api.artifacts.ConsumableConfiguration:extendsFrom(org.gradle.api.artifacts.Configuration[])" role="detail"><title><apilink class="org.gradle.api.artifacts.Configuration"/> <literal>extendsFrom</literal>(<classname><apilink class="org.gradle.api.artifacts.Configuration"/>...</classname> superConfigs)</title><para>Adds the given configurations to the set of configuration which this configuration extends from.
</para><para>
Configurations are only allowed to extend from other configurations in the same project.</para></section><section id="org.gradle.api.artifacts.ConsumableConfiguration:getTaskDependencyFromProjectDependency(boolean, java.lang.String)" role="detail"><title><apilink class="org.gradle.api.tasks.TaskDependency"/> <literal>getTaskDependencyFromProjectDependency</literal>(<classname>boolean</classname> useDependedOn, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> taskName)</title><para>Returns a TaskDependency object containing dependencies on all tasks with the specified name from project
dependencies related to this configuration or one of its super configurations.  These other projects may be
projects this configuration depends on or projects with a similarly named configuration that depend on this one
based on the useDependOn argument.</para></section></section></chapter><chapter id="org.gradle.api.artifacts.ResolvableConfiguration"><title>ResolvableConfiguration</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.artifacts.ResolvableConfiguration" style="javadoc"/></seg></seglistitem></segmentedlist><caution><para>Note: This class is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>A <apilink class="org.gradle.api.artifacts.Configuration"/> which performs dependency resolution to build dependency graphs
and resolve artifacts.</para><section><title>Properties</title><table><title>Properties - ResolvableConfiguration</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.artifacts.ResolvableConfiguration:allArtifacts"><literal>allArtifacts</literal></link></td><td><para>The artifacts of this configuration including the artifacts of extended configurations.</para></td></tr><tr><td><link linkend="org.gradle.api.artifacts.ResolvableConfiguration:allDependencies"><literal>allDependencies</literal></link></td><td><para>Gets the complete set of declared dependencies including those contributed by
superconfigurations.
</para></td></tr><tr><td><link linkend="org.gradle.api.artifacts.ResolvableConfiguration:artifacts"><literal>artifacts</literal></link></td><td><para>The artifacts of this configuration excluding the artifacts of extended configurations.</para></td></tr><tr><td><link linkend="org.gradle.api.artifacts.ResolvableConfiguration:buildDependencies"><literal>buildDependencies</literal></link></td><td><para>Returns a <literal>TaskDependency</literal> object containing all required dependencies to build the local dependencies
(e.g. project dependencies) belonging to this configuration or to one of its super configurations.</para></td></tr><tr><td><link linkend="org.gradle.api.artifacts.ResolvableConfiguration:dependencies"><literal>dependencies</literal></link></td><td><para>Gets the set of declared dependencies directly contained in this configuration
(ignoring superconfigurations).
</para></td></tr><tr><td><link linkend="org.gradle.api.artifacts.ResolvableConfiguration:description"><literal>description</literal></link></td><td><para>The description for this configuration.</para></td></tr><tr><td><link linkend="org.gradle.api.artifacts.ResolvableConfiguration:excludeRules"><literal>excludeRules</literal></link></td><td><para>The exclude rules applied for resolving any dependency of this configuration.</para></td></tr><tr><td><link linkend="org.gradle.api.artifacts.ResolvableConfiguration:extendsFrom"><literal>extendsFrom</literal></link></td><td><para>The names of the configurations which this configuration extends from. The artifacts of the super
configurations are also available in this configuration.</para></td></tr><tr><td><link linkend="org.gradle.api.artifacts.ResolvableConfiguration:hierarchy"><literal>hierarchy</literal></link></td><td><para>Gets an ordered set including this configuration and all superconfigurations
recursively.</para></td></tr><tr><td><link linkend="org.gradle.api.artifacts.ResolvableConfiguration:incoming"><literal>incoming</literal></link></td><td><para>Returns a <apilink class="org.gradle.api.artifacts.ResolvableDependencies"/> instance, exposing the results of dependency resolution.
This method is the primary way to consume dependency resolution outputs.</para></td></tr><tr><td><link linkend="org.gradle.api.artifacts.ResolvableConfiguration:resolutionStrategy"><literal>resolutionStrategy</literal></link></td><td><para>The resolution strategy used by this configuration.
The resolution strategy provides extra details on how to resolve this configuration.
See docs for <apilink class="org.gradle.api.artifacts.ResolutionStrategy"/> for more info and examples.</para></td></tr><tr><td><link linkend="org.gradle.api.artifacts.ResolvableConfiguration:resolvedConfiguration"><literal>resolvedConfiguration</literal></link></td><td><para>Returns a <apilink class="org.gradle.api.artifacts.ResolvedConfiguration"/>, a legacy view of the results of dependency resolution.
<emphasis>Avoid this method for new code</emphasis>. Prefer accessing resolution outputs via
<apilink class="org.gradle.api.artifacts.Configuration" method="getIncoming()"/>. This API will be deprecated and removed in future Gradle versions.
</para></td></tr><tr><td><link linkend="org.gradle.api.artifacts.ResolvableConfiguration:state"><literal>state</literal></link></td><td><para>The state of the configuration.</para></td></tr><tr><td><link linkend="org.gradle.api.artifacts.ResolvableConfiguration:transitive"><literal>transitive</literal></link></td><td><para>The transitivity of this configuration. A transitive configuration contains the transitive closure of its
direct dependencies, and all their dependencies. An intransitive configuration contains only the direct
dependencies. The default value is true.</para></td></tr><tr><td><link linkend="org.gradle.api.artifacts.ResolvableConfiguration:visible"><literal>visible</literal></link></td><td><caution>Deprecated</caution><para>This is a legacy property and the value does not affect dependency resolution
in any way. There is no need to read this property and this method will be deprecated
in an upcoming Gradle version.
</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - ResolvableConfiguration</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.artifacts.ResolvableConfiguration:copy()">copy</link>()</literal></td><td><para>Creates a copy of this configuration that only contains the dependencies directly in this configuration
(without contributions from superconfigurations).  The new configuration will be in the
UNRESOLVED state, but will retain all other attributes of this configuration except superconfigurations.
<apilink class="org.gradle.api.artifacts.Configuration" method="getHierarchy()"/> for the copy will not include any superconfigurations.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.ResolvableConfiguration:copy(groovy.lang.Closure)">copy</link>(dependencySpec)</literal></td><td><para>Takes a closure which gets coerced into a <apilink class="org.gradle.api.specs.Spec"/>. Behaves otherwise in the same way as <apilink class="org.gradle.api.artifacts.Configuration" method="copy(org.gradle.api.specs.Spec)"/>
 </para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.ResolvableConfiguration:copy(org.gradle.api.specs.Spec)">copy</link>(dependencySpec)</literal></td><td><para>Creates a copy of this configuration ignoring superconfigurations (see <apilink class="org.gradle.api.artifacts.Configuration" method="copy()"/> but filtering
the dependencies using the specified dependency spec.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.ResolvableConfiguration:copyRecursive()">copyRecursive</link>()</literal></td><td><para>Creates a copy of this configuration that contains the dependencies directly in this configuration
and those derived from superconfigurations.  The new configuration will be in the
UNRESOLVED state, but will retain all other attributes of this configuration except superconfigurations.
<apilink class="org.gradle.api.artifacts.Configuration" method="getHierarchy()"/> for the copy will not include any superconfigurations.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.ResolvableConfiguration:copyRecursive(groovy.lang.Closure)">copyRecursive</link>(dependencySpec)</literal></td><td><para>Takes a closure which gets coerced into a <apilink class="org.gradle.api.specs.Spec"/>. Behaves otherwise in the same way as <apilink class="org.gradle.api.artifacts.Configuration" method="copyRecursive(org.gradle.api.specs.Spec)"/>
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.ResolvableConfiguration:copyRecursive(org.gradle.api.specs.Spec)">copyRecursive</link>(dependencySpec)</literal></td><td><para>Creates a copy of this configuration with dependencies from superconfigurations (see <apilink class="org.gradle.api.artifacts.Configuration" method="copyRecursive()"/>)
but filtering the dependencies using the dependencySpec.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.ResolvableConfiguration:defaultDependencies(org.gradle.api.Action)">defaultDependencies</link>(action)</literal></td><td><para>Execute the given action if the configuration has no defined dependencies when it first participates in
dependency resolution. A <literal>Configuration</literal> will participate in dependency resolution
when:
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.ResolvableConfiguration:exclude(java.util.Map)">exclude</link>(excludeProperties)</literal></td><td><para>Adds an exclude rule to exclude transitive dependencies for all dependencies of this configuration.
You can also add exclude rules per-dependency. See <apilink class="org.gradle.api.artifacts.ModuleDependency" method="exclude(java.util.Map)"/>.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.ResolvableConfiguration:extendsFrom(org.gradle.api.artifacts.Configuration[])">extendsFrom</link>(superConfigs)</literal></td><td><para>Adds the given configurations to the set of configuration which this configuration extends from.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.ResolvableConfiguration:getTaskDependencyFromProjectDependency(boolean, java.lang.String)">getTaskDependencyFromProjectDependency</link>(useDependedOn, taskName)</literal></td><td><para>Returns a TaskDependency object containing dependencies on all tasks with the specified name from project
dependencies related to this configuration or one of its super configurations.  These other projects may be
projects this configuration depends on or projects with a similarly named configuration that depend on this one
based on the useDependOn argument.</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.artifacts.ResolvableConfiguration:allArtifacts" role="detail"><title><apilink class="org.gradle.api.artifacts.PublishArtifactSet"/> <literal>allArtifacts</literal> (read-only)</title><para>The artifacts of this configuration including the artifacts of extended configurations.</para></section><section id="org.gradle.api.artifacts.ResolvableConfiguration:allDependencies" role="detail"><title><apilink class="org.gradle.api.artifacts.DependencySet"/> <literal>allDependencies</literal> (read-only)</title><para>Gets the complete set of declared dependencies including those contributed by
superconfigurations.
</para><para>
This method does not resolve the configuration. Therefore, the return value does not include
transitive dependencies.</para></section><section id="org.gradle.api.artifacts.ResolvableConfiguration:artifacts" role="detail"><title><apilink class="org.gradle.api.artifacts.PublishArtifactSet"/> <literal>artifacts</literal> (read-only)</title><para>The artifacts of this configuration excluding the artifacts of extended configurations.</para></section><section id="org.gradle.api.artifacts.ResolvableConfiguration:buildDependencies" role="detail"><title><apilink class="org.gradle.api.tasks.TaskDependency"/> <literal>buildDependencies</literal> (read-only)</title><para>Returns a <literal>TaskDependency</literal> object containing all required dependencies to build the local dependencies
(e.g. project dependencies) belonging to this configuration or to one of its super configurations.</para></section><section id="org.gradle.api.artifacts.ResolvableConfiguration:dependencies" role="detail"><title><apilink class="org.gradle.api.artifacts.DependencySet"/> <literal>dependencies</literal> (read-only)</title><para>Gets the set of declared dependencies directly contained in this configuration
(ignoring superconfigurations).
</para><para>
This method does not resolve the configuration. Therefore, the return value does not include
transitive dependencies.</para></section><section id="org.gradle.api.artifacts.ResolvableConfiguration:description" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>description</literal></title><para>The description for this configuration.</para></section><section id="org.gradle.api.artifacts.ResolvableConfiguration:excludeRules" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<apilink class="org.gradle.api.artifacts.ExcludeRule"/>&gt;</classname> <literal>excludeRules</literal> (read-only)</title><para>The exclude rules applied for resolving any dependency of this configuration.</para></section><section id="org.gradle.api.artifacts.ResolvableConfiguration:extendsFrom" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<apilink class="org.gradle.api.artifacts.Configuration"/>&gt;</classname> <literal>extendsFrom</literal></title><para>The names of the configurations which this configuration extends from. The artifacts of the super
configurations are also available in this configuration.</para></section><section id="org.gradle.api.artifacts.ResolvableConfiguration:hierarchy" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<apilink class="org.gradle.api.artifacts.Configuration"/>&gt;</classname> <literal>hierarchy</literal> (read-only)</title><para>Gets an ordered set including this configuration and all superconfigurations
recursively.</para></section><section id="org.gradle.api.artifacts.ResolvableConfiguration:incoming" role="detail"><title><apilink class="org.gradle.api.artifacts.ResolvableDependencies"/> <literal>incoming</literal> (read-only)</title><para>Returns a <apilink class="org.gradle.api.artifacts.ResolvableDependencies"/> instance, exposing the results of dependency resolution.
This method is the primary way to consume dependency resolution outputs.</para></section><section id="org.gradle.api.artifacts.ResolvableConfiguration:resolutionStrategy" role="detail"><title><apilink class="org.gradle.api.artifacts.ResolutionStrategy"/> <literal>resolutionStrategy</literal> (read-only)</title><para>The resolution strategy used by this configuration.
The resolution strategy provides extra details on how to resolve this configuration.
See docs for <apilink class="org.gradle.api.artifacts.ResolutionStrategy"/> for more info and examples.</para></section><section id="org.gradle.api.artifacts.ResolvableConfiguration:resolvedConfiguration" role="detail"><title><apilink class="org.gradle.api.artifacts.ResolvedConfiguration"/> <literal>resolvedConfiguration</literal> (read-only)</title><para>Returns a <apilink class="org.gradle.api.artifacts.ResolvedConfiguration"/>, a legacy view of the results of dependency resolution.
<emphasis>Avoid this method for new code</emphasis>. Prefer accessing resolution outputs via
<apilink class="org.gradle.api.artifacts.Configuration" method="getIncoming()"/>. This API will be deprecated and removed in future Gradle versions.
</para><para>
See <apilink class="org.gradle.api.artifacts.ResolvedConfiguration"/> for details on why this API should not be used.</para></section><section id="org.gradle.api.artifacts.ResolvableConfiguration:state" role="detail"><title><classname>State</classname> <literal>state</literal> (read-only)</title><para>The state of the configuration.</para></section><section id="org.gradle.api.artifacts.ResolvableConfiguration:transitive" role="detail"><title><classname>boolean</classname> <literal>transitive</literal></title><para>The transitivity of this configuration. A transitive configuration contains the transitive closure of its
direct dependencies, and all their dependencies. An intransitive configuration contains only the direct
dependencies. The default value is true.</para></section><section id="org.gradle.api.artifacts.ResolvableConfiguration:visible" role="detail"><title><classname>boolean</classname> <literal>visible</literal></title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">deprecated</ulink> and will be removed in the next major version of Gradle.</para></caution><para>This is a legacy property and the value does not affect dependency resolution
in any way. There is no need to read this property and this method will be deprecated
in an upcoming Gradle version.
</para><para>
The value of this property does not dictate in any way the "visibility" of
a configuration, or if it is accessible between projects.</para></section></section><section><title>Method details</title><section id="org.gradle.api.artifacts.ResolvableConfiguration:copy()" role="detail"><title><apilink class="org.gradle.api.artifacts.Configuration"/> <literal>copy</literal>()</title><para>Creates a copy of this configuration that only contains the dependencies directly in this configuration
(without contributions from superconfigurations).  The new configuration will be in the
UNRESOLVED state, but will retain all other attributes of this configuration except superconfigurations.
<apilink class="org.gradle.api.artifacts.Configuration" method="getHierarchy()"/> for the copy will not include any superconfigurations.
</para><para>
This method is only intended for use for specific situations involving resolvable configuration, it is
<emphasis>NOT</emphasis> intended as a general-purpose copying mechanism.</para></section><section id="org.gradle.api.artifacts.ResolvableConfiguration:copy(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.artifacts.Configuration"/> <literal>copy</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> dependencySpec)</title><para>Takes a closure which gets coerced into a <apilink class="org.gradle.api.specs.Spec"/>. Behaves otherwise in the same way as <apilink class="org.gradle.api.artifacts.Configuration" method="copy(org.gradle.api.specs.Spec)"/>
 </para><para>
This method is only intended for use for specific situations involving resolvable configuration, it is
<emphasis>NOT</emphasis> intended as a general-purpose copying mechanism.</para></section><section id="org.gradle.api.artifacts.ResolvableConfiguration:copy(org.gradle.api.specs.Spec)" role="detail"><title><apilink class="org.gradle.api.artifacts.Configuration"/> <literal>copy</literal>(<classname><apilink class="org.gradle.api.specs.Spec"/>&lt;? super <apilink class="org.gradle.api.artifacts.Dependency"/>&gt;</classname> dependencySpec)</title><para>Creates a copy of this configuration ignoring superconfigurations (see <apilink class="org.gradle.api.artifacts.Configuration" method="copy()"/> but filtering
the dependencies using the specified dependency spec.
</para><para>
This method is only intended for use for specific situations involving resolvable configuration, it is
<emphasis>NOT</emphasis> intended as a general-purpose copying mechanism.</para></section><section id="org.gradle.api.artifacts.ResolvableConfiguration:copyRecursive()" role="detail"><title><apilink class="org.gradle.api.artifacts.Configuration"/> <literal>copyRecursive</literal>()</title><para>Creates a copy of this configuration that contains the dependencies directly in this configuration
and those derived from superconfigurations.  The new configuration will be in the
UNRESOLVED state, but will retain all other attributes of this configuration except superconfigurations.
<apilink class="org.gradle.api.artifacts.Configuration" method="getHierarchy()"/> for the copy will not include any superconfigurations.
</para><para>
This method is only intended for use for specific situations involving resolvable configuration, it is
<emphasis>NOT</emphasis> intended as a general-purpose copying mechanism.</para></section><section id="org.gradle.api.artifacts.ResolvableConfiguration:copyRecursive(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.artifacts.Configuration"/> <literal>copyRecursive</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> dependencySpec)</title><para>Takes a closure which gets coerced into a <apilink class="org.gradle.api.specs.Spec"/>. Behaves otherwise in the same way as <apilink class="org.gradle.api.artifacts.Configuration" method="copyRecursive(org.gradle.api.specs.Spec)"/>
</para><para>
This method is only intended for use for specific situations involving resolvable configuration, it is
<emphasis>NOT</emphasis> intended as a general-purpose copying mechanism.</para></section><section id="org.gradle.api.artifacts.ResolvableConfiguration:copyRecursive(org.gradle.api.specs.Spec)" role="detail"><title><apilink class="org.gradle.api.artifacts.Configuration"/> <literal>copyRecursive</literal>(<classname><apilink class="org.gradle.api.specs.Spec"/>&lt;? super <apilink class="org.gradle.api.artifacts.Dependency"/>&gt;</classname> dependencySpec)</title><para>Creates a copy of this configuration with dependencies from superconfigurations (see <apilink class="org.gradle.api.artifacts.Configuration" method="copyRecursive()"/>)
but filtering the dependencies using the dependencySpec.
</para><para>
This method is only intended for use for specific situations involving resolvable configuration, it is
<emphasis>NOT</emphasis> intended as a general-purpose copying mechanism.</para></section><section id="org.gradle.api.artifacts.ResolvableConfiguration:defaultDependencies(org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.artifacts.Configuration"/> <literal>defaultDependencies</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.artifacts.DependencySet"/>&gt;</classname> action)</title><para>Execute the given action if the configuration has no defined dependencies when it first participates in
dependency resolution. A <literal>Configuration</literal> will participate in dependency resolution
when:
</para><itemizedlist><listitem>The <apilink class="org.gradle.api.artifacts.Configuration"/> itself is resolved</listitem><listitem>Another <apilink class="org.gradle.api.artifacts.Configuration"/> that extends this one is resolved</listitem><listitem>Another <apilink class="org.gradle.api.artifacts.Configuration"/> that references this one as a project dependency is resolved</listitem></itemizedlist><para>

This method is useful for specifying default dependencies for a configuration:
</para><programlisting language="java">
configurations { conf }
configurations['conf'].defaultDependencies { dependencies -&gt;
     dependencies.add(owner.project.dependencies.create("org.gradle:my-util:1.0"))
}
</programlisting><para>
A <literal>Configuration</literal> is considered empty even if it extends another, non-empty <literal>Configuration</literal>.
</para><para>
If multiple actions are supplied, each action will be executed until the set of dependencies is no longer empty.
Remaining actions will be ignored.</para></section><section id="org.gradle.api.artifacts.ResolvableConfiguration:exclude(java.util.Map)" role="detail"><title><apilink class="org.gradle.api.artifacts.Configuration"/> <literal>exclude</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> excludeProperties)</title><para>Adds an exclude rule to exclude transitive dependencies for all dependencies of this configuration.
You can also add exclude rules per-dependency. See <apilink class="org.gradle.api.artifacts.ModuleDependency" method="exclude(java.util.Map)"/>.</para></section><section id="org.gradle.api.artifacts.ResolvableConfiguration:extendsFrom(org.gradle.api.artifacts.Configuration[])" role="detail"><title><apilink class="org.gradle.api.artifacts.Configuration"/> <literal>extendsFrom</literal>(<classname><apilink class="org.gradle.api.artifacts.Configuration"/>...</classname> superConfigs)</title><para>Adds the given configurations to the set of configuration which this configuration extends from.
</para><para>
Configurations are only allowed to extend from other configurations in the same project.</para></section><section id="org.gradle.api.artifacts.ResolvableConfiguration:getTaskDependencyFromProjectDependency(boolean, java.lang.String)" role="detail"><title><apilink class="org.gradle.api.tasks.TaskDependency"/> <literal>getTaskDependencyFromProjectDependency</literal>(<classname>boolean</classname> useDependedOn, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> taskName)</title><para>Returns a TaskDependency object containing dependencies on all tasks with the specified name from project
dependencies related to this configuration or one of its super configurations.  These other projects may be
projects this configuration depends on or projects with a similarly named configuration that depend on this one
based on the useDependOn argument.</para></section></section></chapter><chapter id="org.gradle.api.artifacts.DependencyScopeConfiguration"><title>DependencyScopeConfiguration</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.artifacts.DependencyScopeConfiguration" style="javadoc"/></seg></seglistitem></segmentedlist><caution><para>Note: This class is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>A <apilink class="org.gradle.api.artifacts.Configuration"/> which collects dependencies, dependency constraints, and exclude rules.</para><section><title>Properties</title><table><title>Properties - DependencyScopeConfiguration</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.artifacts.DependencyScopeConfiguration:allArtifacts"><literal>allArtifacts</literal></link></td><td><para>The artifacts of this configuration including the artifacts of extended configurations.</para></td></tr><tr><td><link linkend="org.gradle.api.artifacts.DependencyScopeConfiguration:allDependencies"><literal>allDependencies</literal></link></td><td><para>Gets the complete set of declared dependencies including those contributed by
superconfigurations.
</para></td></tr><tr><td><link linkend="org.gradle.api.artifacts.DependencyScopeConfiguration:artifacts"><literal>artifacts</literal></link></td><td><para>The artifacts of this configuration excluding the artifacts of extended configurations.</para></td></tr><tr><td><link linkend="org.gradle.api.artifacts.DependencyScopeConfiguration:buildDependencies"><literal>buildDependencies</literal></link></td><td><para>Returns a <literal>TaskDependency</literal> object containing all required dependencies to build the local dependencies
(e.g. project dependencies) belonging to this configuration or to one of its super configurations.</para></td></tr><tr><td><link linkend="org.gradle.api.artifacts.DependencyScopeConfiguration:dependencies"><literal>dependencies</literal></link></td><td><para>Gets the set of declared dependencies directly contained in this configuration
(ignoring superconfigurations).
</para></td></tr><tr><td><link linkend="org.gradle.api.artifacts.DependencyScopeConfiguration:description"><literal>description</literal></link></td><td><para>The description for this configuration.</para></td></tr><tr><td><link linkend="org.gradle.api.artifacts.DependencyScopeConfiguration:excludeRules"><literal>excludeRules</literal></link></td><td><para>The exclude rules applied for resolving any dependency of this configuration.</para></td></tr><tr><td><link linkend="org.gradle.api.artifacts.DependencyScopeConfiguration:extendsFrom"><literal>extendsFrom</literal></link></td><td><para>The names of the configurations which this configuration extends from. The artifacts of the super
configurations are also available in this configuration.</para></td></tr><tr><td><link linkend="org.gradle.api.artifacts.DependencyScopeConfiguration:hierarchy"><literal>hierarchy</literal></link></td><td><para>Gets an ordered set including this configuration and all superconfigurations
recursively.</para></td></tr><tr><td><link linkend="org.gradle.api.artifacts.DependencyScopeConfiguration:incoming"><literal>incoming</literal></link></td><td><para>Returns a <apilink class="org.gradle.api.artifacts.ResolvableDependencies"/> instance, exposing the results of dependency resolution.
This method is the primary way to consume dependency resolution outputs.</para></td></tr><tr><td><link linkend="org.gradle.api.artifacts.DependencyScopeConfiguration:resolutionStrategy"><literal>resolutionStrategy</literal></link></td><td><para>The resolution strategy used by this configuration.
The resolution strategy provides extra details on how to resolve this configuration.
See docs for <apilink class="org.gradle.api.artifacts.ResolutionStrategy"/> for more info and examples.</para></td></tr><tr><td><link linkend="org.gradle.api.artifacts.DependencyScopeConfiguration:resolvedConfiguration"><literal>resolvedConfiguration</literal></link></td><td><para>Returns a <apilink class="org.gradle.api.artifacts.ResolvedConfiguration"/>, a legacy view of the results of dependency resolution.
<emphasis>Avoid this method for new code</emphasis>. Prefer accessing resolution outputs via
<apilink class="org.gradle.api.artifacts.Configuration" method="getIncoming()"/>. This API will be deprecated and removed in future Gradle versions.
</para></td></tr><tr><td><link linkend="org.gradle.api.artifacts.DependencyScopeConfiguration:state"><literal>state</literal></link></td><td><para>The state of the configuration.</para></td></tr><tr><td><link linkend="org.gradle.api.artifacts.DependencyScopeConfiguration:transitive"><literal>transitive</literal></link></td><td><para>The transitivity of this configuration. A transitive configuration contains the transitive closure of its
direct dependencies, and all their dependencies. An intransitive configuration contains only the direct
dependencies. The default value is true.</para></td></tr><tr><td><link linkend="org.gradle.api.artifacts.DependencyScopeConfiguration:visible"><literal>visible</literal></link></td><td><caution>Deprecated</caution><para>This is a legacy property and the value does not affect dependency resolution
in any way. There is no need to read this property and this method will be deprecated
in an upcoming Gradle version.
</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - DependencyScopeConfiguration</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.artifacts.DependencyScopeConfiguration:copy()">copy</link>()</literal></td><td><para>Creates a copy of this configuration that only contains the dependencies directly in this configuration
(without contributions from superconfigurations).  The new configuration will be in the
UNRESOLVED state, but will retain all other attributes of this configuration except superconfigurations.
<apilink class="org.gradle.api.artifacts.Configuration" method="getHierarchy()"/> for the copy will not include any superconfigurations.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.DependencyScopeConfiguration:copy(groovy.lang.Closure)">copy</link>(dependencySpec)</literal></td><td><para>Takes a closure which gets coerced into a <apilink class="org.gradle.api.specs.Spec"/>. Behaves otherwise in the same way as <apilink class="org.gradle.api.artifacts.Configuration" method="copy(org.gradle.api.specs.Spec)"/>
 </para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.DependencyScopeConfiguration:copy(org.gradle.api.specs.Spec)">copy</link>(dependencySpec)</literal></td><td><para>Creates a copy of this configuration ignoring superconfigurations (see <apilink class="org.gradle.api.artifacts.Configuration" method="copy()"/> but filtering
the dependencies using the specified dependency spec.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.DependencyScopeConfiguration:copyRecursive()">copyRecursive</link>()</literal></td><td><para>Creates a copy of this configuration that contains the dependencies directly in this configuration
and those derived from superconfigurations.  The new configuration will be in the
UNRESOLVED state, but will retain all other attributes of this configuration except superconfigurations.
<apilink class="org.gradle.api.artifacts.Configuration" method="getHierarchy()"/> for the copy will not include any superconfigurations.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.DependencyScopeConfiguration:copyRecursive(groovy.lang.Closure)">copyRecursive</link>(dependencySpec)</literal></td><td><para>Takes a closure which gets coerced into a <apilink class="org.gradle.api.specs.Spec"/>. Behaves otherwise in the same way as <apilink class="org.gradle.api.artifacts.Configuration" method="copyRecursive(org.gradle.api.specs.Spec)"/>
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.DependencyScopeConfiguration:copyRecursive(org.gradle.api.specs.Spec)">copyRecursive</link>(dependencySpec)</literal></td><td><para>Creates a copy of this configuration with dependencies from superconfigurations (see <apilink class="org.gradle.api.artifacts.Configuration" method="copyRecursive()"/>)
but filtering the dependencies using the dependencySpec.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.DependencyScopeConfiguration:defaultDependencies(org.gradle.api.Action)">defaultDependencies</link>(action)</literal></td><td><para>Execute the given action if the configuration has no defined dependencies when it first participates in
dependency resolution. A <literal>Configuration</literal> will participate in dependency resolution
when:
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.DependencyScopeConfiguration:exclude(java.util.Map)">exclude</link>(excludeProperties)</literal></td><td><para>Adds an exclude rule to exclude transitive dependencies for all dependencies of this configuration.
You can also add exclude rules per-dependency. See <apilink class="org.gradle.api.artifacts.ModuleDependency" method="exclude(java.util.Map)"/>.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.DependencyScopeConfiguration:extendsFrom(org.gradle.api.artifacts.Configuration[])">extendsFrom</link>(superConfigs)</literal></td><td><para>Adds the given configurations to the set of configuration which this configuration extends from.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.DependencyScopeConfiguration:getTaskDependencyFromProjectDependency(boolean, java.lang.String)">getTaskDependencyFromProjectDependency</link>(useDependedOn, taskName)</literal></td><td><para>Returns a TaskDependency object containing dependencies on all tasks with the specified name from project
dependencies related to this configuration or one of its super configurations.  These other projects may be
projects this configuration depends on or projects with a similarly named configuration that depend on this one
based on the useDependOn argument.</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.artifacts.DependencyScopeConfiguration:allArtifacts" role="detail"><title><apilink class="org.gradle.api.artifacts.PublishArtifactSet"/> <literal>allArtifacts</literal> (read-only)</title><para>The artifacts of this configuration including the artifacts of extended configurations.</para></section><section id="org.gradle.api.artifacts.DependencyScopeConfiguration:allDependencies" role="detail"><title><apilink class="org.gradle.api.artifacts.DependencySet"/> <literal>allDependencies</literal> (read-only)</title><para>Gets the complete set of declared dependencies including those contributed by
superconfigurations.
</para><para>
This method does not resolve the configuration. Therefore, the return value does not include
transitive dependencies.</para></section><section id="org.gradle.api.artifacts.DependencyScopeConfiguration:artifacts" role="detail"><title><apilink class="org.gradle.api.artifacts.PublishArtifactSet"/> <literal>artifacts</literal> (read-only)</title><para>The artifacts of this configuration excluding the artifacts of extended configurations.</para></section><section id="org.gradle.api.artifacts.DependencyScopeConfiguration:buildDependencies" role="detail"><title><apilink class="org.gradle.api.tasks.TaskDependency"/> <literal>buildDependencies</literal> (read-only)</title><para>Returns a <literal>TaskDependency</literal> object containing all required dependencies to build the local dependencies
(e.g. project dependencies) belonging to this configuration or to one of its super configurations.</para></section><section id="org.gradle.api.artifacts.DependencyScopeConfiguration:dependencies" role="detail"><title><apilink class="org.gradle.api.artifacts.DependencySet"/> <literal>dependencies</literal> (read-only)</title><para>Gets the set of declared dependencies directly contained in this configuration
(ignoring superconfigurations).
</para><para>
This method does not resolve the configuration. Therefore, the return value does not include
transitive dependencies.</para></section><section id="org.gradle.api.artifacts.DependencyScopeConfiguration:description" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>description</literal></title><para>The description for this configuration.</para></section><section id="org.gradle.api.artifacts.DependencyScopeConfiguration:excludeRules" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<apilink class="org.gradle.api.artifacts.ExcludeRule"/>&gt;</classname> <literal>excludeRules</literal> (read-only)</title><para>The exclude rules applied for resolving any dependency of this configuration.</para></section><section id="org.gradle.api.artifacts.DependencyScopeConfiguration:extendsFrom" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<apilink class="org.gradle.api.artifacts.Configuration"/>&gt;</classname> <literal>extendsFrom</literal></title><para>The names of the configurations which this configuration extends from. The artifacts of the super
configurations are also available in this configuration.</para></section><section id="org.gradle.api.artifacts.DependencyScopeConfiguration:hierarchy" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<apilink class="org.gradle.api.artifacts.Configuration"/>&gt;</classname> <literal>hierarchy</literal> (read-only)</title><para>Gets an ordered set including this configuration and all superconfigurations
recursively.</para></section><section id="org.gradle.api.artifacts.DependencyScopeConfiguration:incoming" role="detail"><title><apilink class="org.gradle.api.artifacts.ResolvableDependencies"/> <literal>incoming</literal> (read-only)</title><para>Returns a <apilink class="org.gradle.api.artifacts.ResolvableDependencies"/> instance, exposing the results of dependency resolution.
This method is the primary way to consume dependency resolution outputs.</para></section><section id="org.gradle.api.artifacts.DependencyScopeConfiguration:resolutionStrategy" role="detail"><title><apilink class="org.gradle.api.artifacts.ResolutionStrategy"/> <literal>resolutionStrategy</literal> (read-only)</title><para>The resolution strategy used by this configuration.
The resolution strategy provides extra details on how to resolve this configuration.
See docs for <apilink class="org.gradle.api.artifacts.ResolutionStrategy"/> for more info and examples.</para></section><section id="org.gradle.api.artifacts.DependencyScopeConfiguration:resolvedConfiguration" role="detail"><title><apilink class="org.gradle.api.artifacts.ResolvedConfiguration"/> <literal>resolvedConfiguration</literal> (read-only)</title><para>Returns a <apilink class="org.gradle.api.artifacts.ResolvedConfiguration"/>, a legacy view of the results of dependency resolution.
<emphasis>Avoid this method for new code</emphasis>. Prefer accessing resolution outputs via
<apilink class="org.gradle.api.artifacts.Configuration" method="getIncoming()"/>. This API will be deprecated and removed in future Gradle versions.
</para><para>
See <apilink class="org.gradle.api.artifacts.ResolvedConfiguration"/> for details on why this API should not be used.</para></section><section id="org.gradle.api.artifacts.DependencyScopeConfiguration:state" role="detail"><title><classname>State</classname> <literal>state</literal> (read-only)</title><para>The state of the configuration.</para></section><section id="org.gradle.api.artifacts.DependencyScopeConfiguration:transitive" role="detail"><title><classname>boolean</classname> <literal>transitive</literal></title><para>The transitivity of this configuration. A transitive configuration contains the transitive closure of its
direct dependencies, and all their dependencies. An intransitive configuration contains only the direct
dependencies. The default value is true.</para></section><section id="org.gradle.api.artifacts.DependencyScopeConfiguration:visible" role="detail"><title><classname>boolean</classname> <literal>visible</literal></title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">deprecated</ulink> and will be removed in the next major version of Gradle.</para></caution><para>This is a legacy property and the value does not affect dependency resolution
in any way. There is no need to read this property and this method will be deprecated
in an upcoming Gradle version.
</para><para>
The value of this property does not dictate in any way the "visibility" of
a configuration, or if it is accessible between projects.</para></section></section><section><title>Method details</title><section id="org.gradle.api.artifacts.DependencyScopeConfiguration:copy()" role="detail"><title><apilink class="org.gradle.api.artifacts.Configuration"/> <literal>copy</literal>()</title><para>Creates a copy of this configuration that only contains the dependencies directly in this configuration
(without contributions from superconfigurations).  The new configuration will be in the
UNRESOLVED state, but will retain all other attributes of this configuration except superconfigurations.
<apilink class="org.gradle.api.artifacts.Configuration" method="getHierarchy()"/> for the copy will not include any superconfigurations.
</para><para>
This method is only intended for use for specific situations involving resolvable configuration, it is
<emphasis>NOT</emphasis> intended as a general-purpose copying mechanism.</para></section><section id="org.gradle.api.artifacts.DependencyScopeConfiguration:copy(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.artifacts.Configuration"/> <literal>copy</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> dependencySpec)</title><para>Takes a closure which gets coerced into a <apilink class="org.gradle.api.specs.Spec"/>. Behaves otherwise in the same way as <apilink class="org.gradle.api.artifacts.Configuration" method="copy(org.gradle.api.specs.Spec)"/>
 </para><para>
This method is only intended for use for specific situations involving resolvable configuration, it is
<emphasis>NOT</emphasis> intended as a general-purpose copying mechanism.</para></section><section id="org.gradle.api.artifacts.DependencyScopeConfiguration:copy(org.gradle.api.specs.Spec)" role="detail"><title><apilink class="org.gradle.api.artifacts.Configuration"/> <literal>copy</literal>(<classname><apilink class="org.gradle.api.specs.Spec"/>&lt;? super <apilink class="org.gradle.api.artifacts.Dependency"/>&gt;</classname> dependencySpec)</title><para>Creates a copy of this configuration ignoring superconfigurations (see <apilink class="org.gradle.api.artifacts.Configuration" method="copy()"/> but filtering
the dependencies using the specified dependency spec.
</para><para>
This method is only intended for use for specific situations involving resolvable configuration, it is
<emphasis>NOT</emphasis> intended as a general-purpose copying mechanism.</para></section><section id="org.gradle.api.artifacts.DependencyScopeConfiguration:copyRecursive()" role="detail"><title><apilink class="org.gradle.api.artifacts.Configuration"/> <literal>copyRecursive</literal>()</title><para>Creates a copy of this configuration that contains the dependencies directly in this configuration
and those derived from superconfigurations.  The new configuration will be in the
UNRESOLVED state, but will retain all other attributes of this configuration except superconfigurations.
<apilink class="org.gradle.api.artifacts.Configuration" method="getHierarchy()"/> for the copy will not include any superconfigurations.
</para><para>
This method is only intended for use for specific situations involving resolvable configuration, it is
<emphasis>NOT</emphasis> intended as a general-purpose copying mechanism.</para></section><section id="org.gradle.api.artifacts.DependencyScopeConfiguration:copyRecursive(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.artifacts.Configuration"/> <literal>copyRecursive</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> dependencySpec)</title><para>Takes a closure which gets coerced into a <apilink class="org.gradle.api.specs.Spec"/>. Behaves otherwise in the same way as <apilink class="org.gradle.api.artifacts.Configuration" method="copyRecursive(org.gradle.api.specs.Spec)"/>
</para><para>
This method is only intended for use for specific situations involving resolvable configuration, it is
<emphasis>NOT</emphasis> intended as a general-purpose copying mechanism.</para></section><section id="org.gradle.api.artifacts.DependencyScopeConfiguration:copyRecursive(org.gradle.api.specs.Spec)" role="detail"><title><apilink class="org.gradle.api.artifacts.Configuration"/> <literal>copyRecursive</literal>(<classname><apilink class="org.gradle.api.specs.Spec"/>&lt;? super <apilink class="org.gradle.api.artifacts.Dependency"/>&gt;</classname> dependencySpec)</title><para>Creates a copy of this configuration with dependencies from superconfigurations (see <apilink class="org.gradle.api.artifacts.Configuration" method="copyRecursive()"/>)
but filtering the dependencies using the dependencySpec.
</para><para>
This method is only intended for use for specific situations involving resolvable configuration, it is
<emphasis>NOT</emphasis> intended as a general-purpose copying mechanism.</para></section><section id="org.gradle.api.artifacts.DependencyScopeConfiguration:defaultDependencies(org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.artifacts.Configuration"/> <literal>defaultDependencies</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.artifacts.DependencySet"/>&gt;</classname> action)</title><para>Execute the given action if the configuration has no defined dependencies when it first participates in
dependency resolution. A <literal>Configuration</literal> will participate in dependency resolution
when:
</para><itemizedlist><listitem>The <apilink class="org.gradle.api.artifacts.Configuration"/> itself is resolved</listitem><listitem>Another <apilink class="org.gradle.api.artifacts.Configuration"/> that extends this one is resolved</listitem><listitem>Another <apilink class="org.gradle.api.artifacts.Configuration"/> that references this one as a project dependency is resolved</listitem></itemizedlist><para>

This method is useful for specifying default dependencies for a configuration:
</para><programlisting language="java">
configurations { conf }
configurations['conf'].defaultDependencies { dependencies -&gt;
     dependencies.add(owner.project.dependencies.create("org.gradle:my-util:1.0"))
}
</programlisting><para>
A <literal>Configuration</literal> is considered empty even if it extends another, non-empty <literal>Configuration</literal>.
</para><para>
If multiple actions are supplied, each action will be executed until the set of dependencies is no longer empty.
Remaining actions will be ignored.</para></section><section id="org.gradle.api.artifacts.DependencyScopeConfiguration:exclude(java.util.Map)" role="detail"><title><apilink class="org.gradle.api.artifacts.Configuration"/> <literal>exclude</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> excludeProperties)</title><para>Adds an exclude rule to exclude transitive dependencies for all dependencies of this configuration.
You can also add exclude rules per-dependency. See <apilink class="org.gradle.api.artifacts.ModuleDependency" method="exclude(java.util.Map)"/>.</para></section><section id="org.gradle.api.artifacts.DependencyScopeConfiguration:extendsFrom(org.gradle.api.artifacts.Configuration[])" role="detail"><title><apilink class="org.gradle.api.artifacts.Configuration"/> <literal>extendsFrom</literal>(<classname><apilink class="org.gradle.api.artifacts.Configuration"/>...</classname> superConfigs)</title><para>Adds the given configurations to the set of configuration which this configuration extends from.
</para><para>
Configurations are only allowed to extend from other configurations in the same project.</para></section><section id="org.gradle.api.artifacts.DependencyScopeConfiguration:getTaskDependencyFromProjectDependency(boolean, java.lang.String)" role="detail"><title><apilink class="org.gradle.api.tasks.TaskDependency"/> <literal>getTaskDependencyFromProjectDependency</literal>(<classname>boolean</classname> useDependedOn, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> taskName)</title><para>Returns a TaskDependency object containing dependencies on all tasks with the specified name from project
dependencies related to this configuration or one of its super configurations.  These other projects may be
projects this configuration depends on or projects with a similarly named configuration that depend on this one
based on the useDependOn argument.</para></section></section></chapter><chapter id="org.gradle.api.artifacts.query.ArtifactResolutionQuery"><title>ArtifactResolutionQuery</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.artifacts.query.ArtifactResolutionQuery" style="javadoc"/></seg></seglistitem></segmentedlist><para>A builder to construct a query that can resolve selected software artifacts of the specified components.
</para><para>
This is a legacy API and is in maintenance mode. In future versions of Gradle,
this API will be deprecated and removed. New code should not use this API. Prefer
<UNHANDLED-LINK>ArtifactView.ViewConfiguration#withVariantReselection()</UNHANDLED-LINK> for resolving
sources and javadoc.

</para><programlisting language="java">
plugins {
    id 'java'
}

task resolveCompileSources {
    doLast {
        def componentIds = configurations.compileClasspath.incoming.resolutionResult.allDependencies.collect { it.selected.id }

        def result = dependencies.createArtifactResolutionQuery()
                                 .forComponents(componentIds)
                                 .withArtifacts(JvmLibrary, SourcesArtifact, JavadocArtifact)
                                 .execute()

        for (component in result.resolvedComponents) {
            component.getArtifacts(SourcesArtifact).each { println "Source artifact for ${component.id}: ${it.file}" }
        }
    }
}
</programlisting><section><title>Properties</title><para>No properties</para></section><section><title>Methods</title><table><title>Methods - ArtifactResolutionQuery</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.artifacts.query.ArtifactResolutionQuery:execute()">execute</link>()</literal></td><td><para>Actually execute the query, returning a query result.
Note that <apilink class="org.gradle.api.artifacts.query.ArtifactResolutionQuery" method="withArtifacts(java.lang.Class, java.lang.Class[])"/> must be called before executing the query.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.query.ArtifactResolutionQuery:forComponents(java.lang.Iterable)">forComponents</link>(componentIds)</literal></td><td><para>Specifies the set of components to include in the result.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.query.ArtifactResolutionQuery:forComponents(org.gradle.api.artifacts.component.ComponentIdentifier[])">forComponents</link>(componentIds)</literal></td><td><para>Specifies the set of components to include in the result.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.query.ArtifactResolutionQuery:forModule(java.lang.String, java.lang.String, java.lang.String)">forModule</link>(group, name, version)</literal></td><td><para>Specifies a module component to include in the result using its GAV coordinates.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.query.ArtifactResolutionQuery:withArtifacts(java.lang.Class, java.lang.Class[])">withArtifacts</link>(componentType, artifactTypes)</literal></td><td><para>Defines the type of component that is expected in the result, and the artifacts to retrieve for components of this type.

Presently, only a single component type and set of artifacts is permitted.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.query.ArtifactResolutionQuery:withArtifacts(java.lang.Class, java.util.Collection)">withArtifacts</link>(componentType, artifactTypes)</literal></td><td><para>Defines the type of component that is expected in the result, and the artifacts to retrieve for components of this type.

Presently, only a single component type and set of artifacts is permitted.</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Method details</title><section id="org.gradle.api.artifacts.query.ArtifactResolutionQuery:execute()" role="detail"><title><apilink class="org.gradle.api.artifacts.result.ArtifactResolutionResult"/> <literal>execute</literal>()</title><para>Actually execute the query, returning a query result.
Note that <apilink class="org.gradle.api.artifacts.query.ArtifactResolutionQuery" method="withArtifacts(java.lang.Class, java.lang.Class[])"/> must be called before executing the query.</para></section><section id="org.gradle.api.artifacts.query.ArtifactResolutionQuery:forComponents(java.lang.Iterable)" role="detail"><title><apilink class="org.gradle.api.artifacts.query.ArtifactResolutionQuery"/> <literal>forComponents</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;? extends <apilink class="org.gradle.api.artifacts.component.ComponentIdentifier"/>&gt;</classname> componentIds)</title><para>Specifies the set of components to include in the result.</para></section><section id="org.gradle.api.artifacts.query.ArtifactResolutionQuery:forComponents(org.gradle.api.artifacts.component.ComponentIdentifier[])" role="detail"><title><apilink class="org.gradle.api.artifacts.query.ArtifactResolutionQuery"/> <literal>forComponents</literal>(<classname><apilink class="org.gradle.api.artifacts.component.ComponentIdentifier"/>...</classname> componentIds)</title><para>Specifies the set of components to include in the result.</para></section><section id="org.gradle.api.artifacts.query.ArtifactResolutionQuery:forModule(java.lang.String, java.lang.String, java.lang.String)" role="detail"><title><apilink class="org.gradle.api.artifacts.query.ArtifactResolutionQuery"/> <literal>forModule</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> group, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> version)</title><para>Specifies a module component to include in the result using its GAV coordinates.</para></section><section id="org.gradle.api.artifacts.query.ArtifactResolutionQuery:withArtifacts(java.lang.Class, java.lang.Class[])" role="detail"><title><apilink class="org.gradle.api.artifacts.query.ArtifactResolutionQuery"/> <literal>withArtifacts</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html"><classname>Class</classname></ulink>&lt;? extends <apilink class="org.gradle.api.component.Component"/>&gt;</classname> componentType, <classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html"><classname>Class</classname></ulink>&lt;? extends <apilink class="org.gradle.api.component.Artifact"/>&gt;...</classname> artifactTypes)</title><para>Defines the type of component that is expected in the result, and the artifacts to retrieve for components of this type.

Presently, only a single component type and set of artifacts is permitted.</para></section><section id="org.gradle.api.artifacts.query.ArtifactResolutionQuery:withArtifacts(java.lang.Class, java.util.Collection)" role="detail"><title><apilink class="org.gradle.api.artifacts.query.ArtifactResolutionQuery"/> <literal>withArtifacts</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html"><classname>Class</classname></ulink>&lt;? extends <apilink class="org.gradle.api.component.Component"/>&gt;</classname> componentType, <classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Collection.html"><classname>Collection</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html"><classname>Class</classname></ulink>&lt;? extends <apilink class="org.gradle.api.component.Artifact"/>&gt;&gt;</classname> artifactTypes)</title><para>Defines the type of component that is expected in the result, and the artifacts to retrieve for components of this type.

Presently, only a single component type and set of artifacts is permitted.</para></section></section></chapter><chapter id="org.gradle.api.artifacts.ComponentSelection"><title>ComponentSelection</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.artifacts.ComponentSelection" style="javadoc"/></seg></seglistitem></segmentedlist><para>Represents a tuple of the component selector of a module and a candidate version
to be evaluated in a component selection rule.</para><section><title>Properties</title><table><title>Properties - ComponentSelection</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.artifacts.ComponentSelection:candidate"><literal>candidate</literal></link></td><td><para>Gets the candidate version of the module.</para></td></tr><tr><td><link linkend="org.gradle.api.artifacts.ComponentSelection:metadata"><literal>metadata</literal></link></td><td><para>Gets the metadata of the component.
</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - ComponentSelection</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.artifacts.ComponentSelection:getDescriptor(java.lang.Class)">getDescriptor</link>(descriptorClass)</literal></td><td><para>Used to access a specific descriptor format.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.ComponentSelection:reject(java.lang.String)">reject</link>(reason)</literal></td><td><para>Rejects the candidate for the resolution.</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.artifacts.ComponentSelection:candidate" role="detail"><title><apilink class="org.gradle.api.artifacts.component.ModuleComponentIdentifier"/> <literal>candidate</literal> (read-only)</title><para>Gets the candidate version of the module.</para></section><section id="org.gradle.api.artifacts.ComponentSelection:metadata" role="detail"><title><apilink class="org.gradle.api.artifacts.ComponentMetadata"/> <literal>metadata</literal> (read-only)</title><para>Gets the metadata of the component.
</para><para>
The metadata may not be available, in which case <literal>null</literal> is returned.
Unavailable metadata may be caused by a module published without associated metadata.</para></section></section><section><title>Method details</title><section id="org.gradle.api.artifacts.ComponentSelection:getDescriptor(java.lang.Class)" role="detail"><title><classname>T</classname> <literal>getDescriptor</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html"><classname>Class</classname></ulink>&lt;<classname>T</classname>&gt;</classname> descriptorClass)</title><para>Used to access a specific descriptor format.
</para><para>
For an Ivy module, an <apilink class="org.gradle.api.artifacts.ivy.IvyModuleDescriptor"/> can be requested and returned.
</para><para>
If the descriptor type requested does not exist for the module under selection, <literal>null</literal> is returned.</para></section><section id="org.gradle.api.artifacts.ComponentSelection:reject(java.lang.String)" role="detail"><title><classname>void</classname> <literal>reject</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> reason)</title><para>Rejects the candidate for the resolution.</para></section></section></chapter><chapter id="org.gradle.api.artifacts.dsl.DependencyCollector"><title>DependencyCollector</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.artifacts.dsl.DependencyCollector" style="javadoc"/></seg></seglistitem></segmentedlist><para>A <literal>DependencyCollector</literal> is used as part of a dependencies block in the DSL. A collector implements
a single dependency scope and exposes the declared dependencies on <apilink class="org.gradle.api.artifacts.dsl.DependencyCollector" method="getDependencies()"/>.</para><section><title>Properties</title><para>No properties</para></section><section><title>Methods</title><table><title>Methods - DependencyCollector</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.artifacts.dsl.DependencyCollector:add(D, org.gradle.api.Action)">add</link>(dependency, configuration)</literal></td><td><para>Add a dependency and configure it.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.dsl.DependencyCollector:add(java.lang.CharSequence)">add</link>(dependencyNotation)</literal></td><td><para>Add a dependency.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.dsl.DependencyCollector:add(java.lang.CharSequence, org.gradle.api.Action)">add</link>(dependencyNotation, configuration)</literal></td><td><para>Add a dependency and configure it.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.dsl.DependencyCollector:add(org.gradle.api.artifacts.Dependency)">add</link>(dependency)</literal></td><td><para>Add a dependency.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.dsl.DependencyCollector:add(org.gradle.api.file.FileCollection)">add</link>(files)</literal></td><td><para>Add a dependency.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.dsl.DependencyCollector:add(org.gradle.api.file.FileCollection, org.gradle.api.Action)">add</link>(files, configuration)</literal></td><td><para>Add a dependency and configure it.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.dsl.DependencyCollector:add(org.gradle.api.provider.Provider)">add</link>(dependency)</literal></td><td><para>Add a dependency.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.dsl.DependencyCollector:add(org.gradle.api.provider.Provider, org.gradle.api.Action)">add</link>(dependency, configuration)</literal></td><td><para>Add a dependency and configure it.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.dsl.DependencyCollector:add(org.gradle.api.provider.ProviderConvertible)">add</link>(externalModule)</literal></td><td><caution>Incubating</caution><para>Add a dependency.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.dsl.DependencyCollector:add(org.gradle.api.provider.ProviderConvertible, org.gradle.api.Action)">add</link>(externalModule, configuration)</literal></td><td><caution>Incubating</caution><para>Add a dependency and configure it.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.dsl.DependencyCollector:bundle(java.lang.Iterable)">bundle</link>(bundle)</literal></td><td><caution>Incubating</caution><para>Add a bundle.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.dsl.DependencyCollector:bundle(java.lang.Iterable, org.gradle.api.Action)">bundle</link>(bundle, configuration)</literal></td><td><caution>Incubating</caution><para>Add a bundle and configure them.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.dsl.DependencyCollector:bundle(org.gradle.api.provider.Provider)">bundle</link>(bundle)</literal></td><td><caution>Incubating</caution><para>Add a bundle.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.dsl.DependencyCollector:bundle(org.gradle.api.provider.Provider, org.gradle.api.Action)">bundle</link>(bundle, configuration)</literal></td><td><caution>Incubating</caution><para>Add a bundle and configure them.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.dsl.DependencyCollector:bundle(org.gradle.api.provider.ProviderConvertible)">bundle</link>(bundle)</literal></td><td><caution>Incubating</caution><para>Add a bundle.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.dsl.DependencyCollector:bundle(org.gradle.api.provider.ProviderConvertible, org.gradle.api.Action)">bundle</link>(bundle, configuration)</literal></td><td><caution>Incubating</caution><para>Add a bundle and configure them.</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Method details</title><section id="org.gradle.api.artifacts.dsl.DependencyCollector:add(D, org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>add</literal>(<classname>D</classname> dependency, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <classname>D</classname>&gt;</classname> configuration)</title><para>Add a dependency and configure it.</para></section><section id="org.gradle.api.artifacts.dsl.DependencyCollector:add(java.lang.CharSequence)" role="detail"><title><classname>void</classname> <literal>add</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/CharSequence.html"><classname>CharSequence</classname></ulink> dependencyNotation)</title><para>Add a dependency.</para></section><section id="org.gradle.api.artifacts.dsl.DependencyCollector:add(java.lang.CharSequence, org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>add</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/CharSequence.html"><classname>CharSequence</classname></ulink> dependencyNotation, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.artifacts.ExternalModuleDependency"/>&gt;</classname> configuration)</title><para>Add a dependency and configure it.</para></section><section id="org.gradle.api.artifacts.dsl.DependencyCollector:add(org.gradle.api.artifacts.Dependency)" role="detail"><title><classname>void</classname> <literal>add</literal>(<apilink class="org.gradle.api.artifacts.Dependency"/> dependency)</title><para>Add a dependency.</para></section><section id="org.gradle.api.artifacts.dsl.DependencyCollector:add(org.gradle.api.file.FileCollection)" role="detail"><title><classname>void</classname> <literal>add</literal>(<apilink class="org.gradle.api.file.FileCollection"/> files)</title><para>Add a dependency.</para></section><section id="org.gradle.api.artifacts.dsl.DependencyCollector:add(org.gradle.api.file.FileCollection, org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>add</literal>(<apilink class="org.gradle.api.file.FileCollection"/> files, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.artifacts.FileCollectionDependency"/>&gt;</classname> configuration)</title><para>Add a dependency and configure it.</para></section><section id="org.gradle.api.artifacts.dsl.DependencyCollector:add(org.gradle.api.provider.Provider)" role="detail"><title><classname>void</classname> <literal>add</literal>(<classname><apilink class="org.gradle.api.provider.Provider"/>&lt;? extends <apilink class="org.gradle.api.artifacts.Dependency"/>&gt;</classname> dependency)</title><para>Add a dependency.</para></section><section id="org.gradle.api.artifacts.dsl.DependencyCollector:add(org.gradle.api.provider.Provider, org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>add</literal>(<classname><apilink class="org.gradle.api.provider.Provider"/>&lt;? extends <classname>D</classname>&gt;</classname> dependency, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <classname>D</classname>&gt;</classname> configuration)</title><para>Add a dependency and configure it.</para></section><section id="org.gradle.api.artifacts.dsl.DependencyCollector:add(org.gradle.api.provider.ProviderConvertible)" role="detail"><title><classname>void</classname> <literal>add</literal>(<classname><apilink class="org.gradle.api.provider.ProviderConvertible"/>&lt;? extends <apilink class="org.gradle.api.artifacts.MinimalExternalModuleDependency"/>&gt;</classname> externalModule)</title><caution><para>Note: This method is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Add a dependency.</para></section><section id="org.gradle.api.artifacts.dsl.DependencyCollector:add(org.gradle.api.provider.ProviderConvertible, org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>add</literal>(<classname><apilink class="org.gradle.api.provider.ProviderConvertible"/>&lt;? extends <apilink class="org.gradle.api.artifacts.MinimalExternalModuleDependency"/>&gt;</classname> externalModule, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.artifacts.ExternalModuleDependency"/>&gt;</classname> configuration)</title><caution><para>Note: This method is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Add a dependency and configure it.</para></section><section id="org.gradle.api.artifacts.dsl.DependencyCollector:bundle(java.lang.Iterable)" role="detail"><title><classname>void</classname> <literal>bundle</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;? extends <classname>D</classname>&gt;</classname> bundle)</title><caution><para>Note: This method is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Add a bundle.</para></section><section id="org.gradle.api.artifacts.dsl.DependencyCollector:bundle(java.lang.Iterable, org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>bundle</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;? extends <classname>D</classname>&gt;</classname> bundle, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <classname>D</classname>&gt;</classname> configuration)</title><caution><para>Note: This method is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Add a bundle and configure them.</para></section><section id="org.gradle.api.artifacts.dsl.DependencyCollector:bundle(org.gradle.api.provider.Provider)" role="detail"><title><classname>void</classname> <literal>bundle</literal>(<classname><apilink class="org.gradle.api.provider.Provider"/>&lt;? extends <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;? extends <classname>D</classname>&gt;&gt;</classname> bundle)</title><caution><para>Note: This method is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Add a bundle.</para></section><section id="org.gradle.api.artifacts.dsl.DependencyCollector:bundle(org.gradle.api.provider.Provider, org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>bundle</literal>(<classname><apilink class="org.gradle.api.provider.Provider"/>&lt;? extends <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;? extends <classname>D</classname>&gt;&gt;</classname> bundle, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <classname>D</classname>&gt;</classname> configuration)</title><caution><para>Note: This method is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Add a bundle and configure them.</para></section><section id="org.gradle.api.artifacts.dsl.DependencyCollector:bundle(org.gradle.api.provider.ProviderConvertible)" role="detail"><title><classname>void</classname> <literal>bundle</literal>(<classname><apilink class="org.gradle.api.provider.ProviderConvertible"/>&lt;? extends <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;? extends <classname>D</classname>&gt;&gt;</classname> bundle)</title><caution><para>Note: This method is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Add a bundle.</para></section><section id="org.gradle.api.artifacts.dsl.DependencyCollector:bundle(org.gradle.api.provider.ProviderConvertible, org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>bundle</literal>(<classname><apilink class="org.gradle.api.provider.ProviderConvertible"/>&lt;? extends <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;? extends <classname>D</classname>&gt;&gt;</classname> bundle, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <classname>D</classname>&gt;</classname> configuration)</title><caution><para>Note: This method is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Add a bundle and configure them.</para></section></section></chapter><chapter id="org.gradle.api.plugins.ExtraPropertiesExtension"><title>ExtraPropertiesExtension</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.plugins.ExtraPropertiesExtension" style="javadoc"/></seg></seglistitem></segmentedlist><para>Additional, ad-hoc, properties for Gradle domain objects.
</para><para>
Extra properties extensions allow new properties to be added to existing domain objects. They act like maps,
allowing the storage of arbitrary key/value pairs. All <apilink class="org.gradle.api.plugins.ExtensionAware"/> Gradle domain objects intrinsically have an extension
named "<literal>ext</literal>" of this type.
</para><para>
An important feature of extra properties extensions is that all of its properties are exposed for reading and writing via the <apilink class="org.gradle.api.plugins.ExtensionAware"/>
object that owns the extension.

</para><programlisting language="java">
project.ext.set("myProp", "myValue")
assert project.myProp == "myValue"

project.myProp = "anotherValue"
assert project.myProp == "anotherValue"
assert project.ext.get("myProp") == "anotherValue"
</programlisting><para>

Extra properties extension objects support Groovy property syntax. That is, a property can be read via <literal>extension.«name»</literal> and set via
<literal>extension.«name» = "value"</literal>. <emphasis>Wherever possible, the Groovy property syntax should be preferred over the
<apilink class="org.gradle.api.plugins.ExtraPropertiesExtension" method="get(java.lang.String)"/> and <apilink class="org.gradle.api.plugins.ExtraPropertiesExtension" method="set(java.lang.String, java.lang.Object)"/> methods.</emphasis>

</para><programlisting language="java">
project.ext {
  myprop = "a"
}
assert project.myprop == "a"
assert project.ext.myprop == "a"

project.myprop = "b"
assert project.myprop == "b"
assert project.ext.myprop == "b"
</programlisting><para>

You can also use the Groovy accessor syntax to get and set properties on an extra properties extension.

</para><programlisting language="java">
project.ext["otherProp"] = "a"
assert project.otherProp == "a"
assert project.ext["otherProp"] == "a"
</programlisting><para>

The exception that is thrown when an attempt is made to get the value of a property that does not exist is different depending on whether the
Groovy syntax is used or not. If Groovy property syntax is used, the Groovy <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/MissingPropertyException.html"><classname>MissingPropertyException</classname></ulink> will be thrown.
When the <apilink class="org.gradle.api.plugins.ExtraPropertiesExtension" method="get(java.lang.String)"/> method is used, an <classname>UnknownPropertyException</classname> will be thrown.</para><section><title>Properties</title><table><title>Properties - ExtraPropertiesExtension</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.plugins.ExtraPropertiesExtension:properties"><literal>properties</literal></link></td><td><para>Returns all of the registered properties and their current values as a map.

The returned map is detached from the extension. That is, any changes made to the map do not
change the extension from which it originated.

</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - ExtraPropertiesExtension</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.plugins.ExtraPropertiesExtension:get(java.lang.String)">get</link>(name)</literal></td><td><para>Returns the value for the registered property with the given name.

When using an extra properties extension from Groovy, you can also get properties via Groovy's property syntax.
All of the following lines of code are equivalent.

</para></td></tr><tr><td><literal><link linkend="org.gradle.api.plugins.ExtraPropertiesExtension:has(java.lang.String)">has</link>(name)</literal></td><td><para>Returns whether or not the extension has a property registered via the given name.

</para></td></tr><tr><td><literal><link linkend="org.gradle.api.plugins.ExtraPropertiesExtension:set(java.lang.String, java.lang.Object)">set</link>(name, value)</literal></td><td><para>Updates the value for, or creates, the registered property with the given name to the given value.

When using an extra properties extension from Groovy, you can also set properties via Groovy's property syntax.
All of the following lines of code are equivalent.

</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.plugins.ExtraPropertiesExtension:properties" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink>&gt;</classname> <literal>properties</literal> (read-only)</title><para>Returns all of the registered properties and their current values as a map.

The returned map is detached from the extension. That is, any changes made to the map do not
change the extension from which it originated.

</para><programlisting language="java">
project.version = "1.0"

assert project.hasProperty("version")
assert project.ext.properties.containsKey("version") == false

project.ext.foo = "bar"

assert project.ext.properties.containsKey("foo")
assert project.ext.properties.foo == project.ext.foo

assert project.ext.properties.every { key, value -&gt; project.properties[key] == value }
</programlisting></section></section><section><title>Method details</title><section id="org.gradle.api.plugins.ExtraPropertiesExtension:get(java.lang.String)" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> <literal>get</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name)</title><para>Returns the value for the registered property with the given name.

When using an extra properties extension from Groovy, you can also get properties via Groovy's property syntax.
All of the following lines of code are equivalent.

</para><programlisting language="java">
project.ext { foo = "bar" }

assert project.ext.get("foo") == "bar"
assert project.ext.foo == "bar"
assert project.ext["foo"] == "bar"

assert project.foo == "bar"
assert project["foo"] == "bar"
</programlisting><para>

When using the first form, an <classname>UnknownPropertyException</classname> exception will be thrown if the
extension does not have a property called "<literal>foo</literal>". When using the second forms (i.e. Groovy notation),
Groovy's <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/MissingPropertyException.html"><classname>MissingPropertyException</classname></ulink> will be thrown instead.</para></section><section id="org.gradle.api.plugins.ExtraPropertiesExtension:has(java.lang.String)" role="detail"><title><classname>boolean</classname> <literal>has</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name)</title><para>Returns whether or not the extension has a property registered via the given name.

</para><programlisting language="java">
assert project.ext.has("foo") == false
assert project.hasProperty("foo") == false

project.ext.foo = "bar"

assert project.ext.has("foo")
assert project.hasProperty("foo")
</programlisting></section><section id="org.gradle.api.plugins.ExtraPropertiesExtension:set(java.lang.String, java.lang.Object)" role="detail"><title><classname>void</classname> <literal>set</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> value)</title><para>Updates the value for, or creates, the registered property with the given name to the given value.

When using an extra properties extension from Groovy, you can also set properties via Groovy's property syntax.
All of the following lines of code are equivalent.

</para><programlisting language="java">
project.ext.set("foo", "bar")
project.ext.foo = "bar"
project.ext["foo"] = "bar"

// Once the property has been created via the extension, it can be changed by the owner.
project.foo = "bar"
project["foo"] = "bar"
</programlisting></section></section></chapter><chapter id="org.gradle.plugin.use.PluginDependenciesSpec"><title>PluginDependenciesSpec</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.plugin.use.PluginDependenciesSpec" style="javadoc"/></seg></seglistitem></segmentedlist><para>The DSL for declaring plugins to use in a script.
</para><para>
In a build script, the <literal>plugins {}</literal> script block API is of this type.
That is, you can use this API in the body of the plugins script block to declare plugins to be used for the script.
</para><section><title>Relationship with the apply() method</title><para>
The <literal>plugins {}</literal> block serves a similar purpose to the <apilink class="org.gradle.api.plugins.PluginAware" method="apply(java.util.Map)"/> method
that can be used to apply a plugin directly to a <literal>Project</literal> object or similar.
A key difference is that plugins applied via the <literal>plugins {}</literal> block are conceptually applied to the script, and by extension the script target.
At this time there is no observable practical difference between the two approaches with regard to the end result.
</para></section><section><title>Strict Syntax</title><para>
When used in a build script, the <literal>plugins {}</literal> block only allows a strict subset of the full build script programming language.
Only the API of this type can be used, and values must be literal (e.g. constant strings, not variables).
Interpolated strings are permitted for <apilink class="org.gradle.plugin.use.PluginDependencySpec" method="version(java.lang.String)"/>, however replacement values must be sourced from Gradle properties.
Moreover, the <literal>plugins {}</literal> block must be the first code of a build script.
There is one exception to this, in that the <literal>buildscript {</literal>} block (used for declaring script dependencies) must precede it.
</para><para>
This implies the following constraints:
</para><itemizedlist><listitem>Only <apilink class="org.gradle.plugin.use.PluginDependenciesSpec" method="id(java.lang.String)"/>, <apilink class="org.gradle.plugin.use.PluginDependenciesSpec" method="alias(org.gradle.api.provider.Provider)"/>, and <apilink class="org.gradle.plugin.use.PluginDependenciesSpec" method="alias(org.gradle.api.provider.ProviderConvertible)"/> method calls may be top level statements</listitem><listitem><apilink class="org.gradle.plugin.use.PluginDependenciesSpec" method="id(java.lang.String)"/> calls may only be followed by a <apilink class="org.gradle.plugin.use.PluginDependencySpec" method="version(java.lang.String)"/> and/or <apilink class="org.gradle.plugin.use.PluginDependencySpec" method="apply(boolean)"/> method call on the returned object</listitem><listitem><apilink class="org.gradle.plugin.use.PluginDependenciesSpec" method="id(java.lang.String)"/>, <apilink class="org.gradle.plugin.use.PluginDependencySpec" method="version(java.lang.String)"/> and <apilink class="org.gradle.plugin.use.PluginDependencySpec" method="apply(boolean)"/> methods must be called with a literal argument (i.e. not a variable)</listitem><listitem>The <literal>plugins {}</literal> script block must follow any <literal>buildscript {}</literal> script block, but must precede all other logic in the script</listitem></itemizedlist></section><section><title>Available Plugins</title><section><title>Core Plugins</title><para>
Core Gradle plugins are able to be applied using the <literal>plugins {}</literal> block.
Core plugins must be specified without a version number, and can have a <emphasis>qualified</emphasis> or <emphasis>unqualified</emphasis> id.
That is, the <literal>java</literal> plugin can be used via:
</para><programlisting language="java">
plugins {
  id 'java'
}
</programlisting><para>
Or via:
</para><programlisting language="java">
plugins {
  id 'org.gradle.java'
}
</programlisting><para>
Core Gradle plugins use the <literal>org.gradle</literal> namespace.
</para><para>
For the list of available core plugins for a particular Gradle version, please consult the user manual.
</para></section><section><title>Community Plugins</title><para>
Non-core plugins are available from the <ulink url="http://plugins.gradle.org">Gradle Plugin Portal</ulink>.
These plugins are contributed by users of Gradle to extend Gradle's functionality.
Visit <ulink url="http://plugins.gradle.org">plugins.gradle.org</ulink> to browse the available plugins and versions.
</para><para>
To use a community plugin, the fully qualified id must be specified along with a version.
</para></section></section><section><title>Settings Script Usage</title><para>
When used in a settings script, this API sets the default version of a plugin, allowing build scripts to
reference a plugin id without an associated version.
</para><para>
Within a settings script, the "Strict Syntax" rules outlined above do not apply. The `plugins` block may contain
arbitrary code, and version Strings may contain property replacements. It is an error to call the `apply` method
with a value other than `false` (the default).
</para></section><section><title>Properties</title><para>No properties</para></section><section><title>Methods</title><table><title>Methods - PluginDependenciesSpec</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.plugin.use.PluginDependenciesSpec:id(java.lang.String)">id</link>(id)</literal></td><td><para>Add a dependency on the plugin with the given id.

</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Method details</title><section id="org.gradle.plugin.use.PluginDependenciesSpec:id(java.lang.String)" role="detail"><title><apilink class="org.gradle.plugin.use.PluginDependencySpec"/> <literal>id</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> id)</title><para>Add a dependency on the plugin with the given id.

</para><programlisting language="java">
plugins {
    id "org.company.myplugin"
}
</programlisting><para>
Further constraints (e.g. version number) can be specified by the methods of the return value.
</para><programlisting language="java">
plugins {
    id "org.company.myplugin" version "1.3"
}
</programlisting><para>

Plugins are automatically applied to the current script by default. This can be disabled using the <literal>apply false</literal> option:

</para><programlisting language="java">
plugins {
    id "org.company.myplugin" version "1.3" apply false
}
</programlisting><para>

This is useful to reuse task classes from a plugin or to apply it to some other target than the current script.</para></section></section></chapter><chapter id="org.gradle.plugin.use.PluginDependencySpec"><title>PluginDependencySpec</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.plugin.use.PluginDependencySpec" style="javadoc"/></seg></seglistitem></segmentedlist><para>A mutable specification of a dependency on a plugin.
</para><para>
Can be used to specify the version of the plugin to use.
</para><para>
See <apilink class="org.gradle.plugin.use.PluginDependenciesSpec"/> for more information about declaring plugin dependencies.
</para><section><title>Properties</title><para>No properties</para></section><section><title>Methods</title><table><title>Methods - PluginDependencySpec</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.plugin.use.PluginDependencySpec:version(java.lang.String)">version</link>(version)</literal></td><td><para>Specify the version of the plugin to depend on.

</para></td></tr><tr><td><literal><link linkend="org.gradle.plugin.use.PluginDependencySpec:version(org.gradle.api.provider.Provider)">version</link>(version)</literal></td><td><para>Specify the version of the plugin to depend on.

</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Method details</title><section id="org.gradle.plugin.use.PluginDependencySpec:version(java.lang.String)" role="detail"><title><apilink class="org.gradle.plugin.use.PluginDependencySpec"/> <literal>version</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> version)</title><para>Specify the version of the plugin to depend on.

</para><programlisting language="java">
plugins {
    id "org.company.myplugin" version "1.0"
}
</programlisting><para>
By default, dependencies have no (i.e. <literal>null</literal>) version.
</para><para>
Core plugins must not include a version number specification.
Community plugins must include a version number specification.</para></section><section id="org.gradle.plugin.use.PluginDependencySpec:version(org.gradle.api.provider.Provider)" role="detail"><title><apilink class="org.gradle.plugin.use.PluginDependencySpec"/> <literal>version</literal>(<classname><apilink class="org.gradle.api.provider.Provider"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> version)</title><para>Specify the version of the plugin to depend on.

</para><programlisting language="java">
plugins {
    id "org.company.myplugin" version libs.versions.myplugin
}
</programlisting></section></section></chapter><chapter id="org.gradle.plugin.management.PluginManagementSpec"><title>PluginManagementSpec</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.plugin.management.PluginManagementSpec" style="javadoc"/></seg></seglistitem></segmentedlist><para>Configures how plugins are resolved.</para><section><title>Properties</title><para>No properties</para></section><section><title>Methods</title><table><title>Methods - PluginManagementSpec</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.plugin.management.PluginManagementSpec:includeBuild(java.lang.String)">includeBuild</link>(rootProject)</literal></td><td><para>Includes a plugin build at the specified path to the composite build.
Included plugin builds can contribute settings and project plugins.</para></td></tr><tr><td><literal><link linkend="org.gradle.plugin.management.PluginManagementSpec:includeBuild(java.lang.String, org.gradle.api.Action)">includeBuild</link>(rootProject, configuration)</literal></td><td><para>Includes a plugin build at the specified path to the composite build, with the supplied configuration.
Included plugin builds can contribute settings and project plugins.</para></td></tr><tr><td><literal><link linkend="org.gradle.plugin.management.PluginManagementSpec:plugins(org.gradle.api.Action)">plugins</link>(action)</literal></td><td><para>Configure the default plugin versions.</para></td></tr><tr><td><literal><link linkend="org.gradle.plugin.management.PluginManagementSpec:repositories(org.gradle.api.Action)">repositories</link>(repositoriesAction)</literal></td><td><para>Defines the plugin repositories to use.</para></td></tr><tr><td><literal><link linkend="org.gradle.plugin.management.PluginManagementSpec:resolutionStrategy(org.gradle.api.Action)">resolutionStrategy</link>(action)</literal></td><td><para>Configure the plugin resolution strategy.</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Method details</title><section id="org.gradle.plugin.management.PluginManagementSpec:includeBuild(java.lang.String)" role="detail"><title><classname>void</classname> <literal>includeBuild</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> rootProject)</title><para>Includes a plugin build at the specified path to the composite build.
Included plugin builds can contribute settings and project plugins.</para></section><section id="org.gradle.plugin.management.PluginManagementSpec:includeBuild(java.lang.String, org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>includeBuild</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> rootProject, <classname><apilink class="org.gradle.api.Action"/>&lt;<apilink class="org.gradle.api.initialization.ConfigurableIncludedPluginBuild"/>&gt;</classname> configuration)</title><para>Includes a plugin build at the specified path to the composite build, with the supplied configuration.
Included plugin builds can contribute settings and project plugins.</para></section><section id="org.gradle.plugin.management.PluginManagementSpec:plugins(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>plugins</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.plugin.use.PluginDependenciesSpec"/>&gt;</classname> action)</title><para>Configure the default plugin versions.</para></section><section id="org.gradle.plugin.management.PluginManagementSpec:repositories(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>repositories</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.artifacts.dsl.RepositoryHandler"/>&gt;</classname> repositoriesAction)</title><para>Defines the plugin repositories to use.</para></section><section id="org.gradle.plugin.management.PluginManagementSpec:resolutionStrategy(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>resolutionStrategy</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.plugin.management.PluginResolutionStrategy"/>&gt;</classname> action)</title><para>Configure the plugin resolution strategy.</para></section></section></chapter><chapter id="org.gradle.api.provider.ProviderFactory"><title>ProviderFactory</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.provider.ProviderFactory" style="javadoc"/></seg></seglistitem></segmentedlist><para>A factory for creating instances of <apilink class="org.gradle.api.provider.Provider"/>.

</para><para>An instance of the factory can be injected into a task, plugin or other object by annotating a public constructor or property getter method with <literal>javax.inject.Inject</literal>.
It is also available via <apilink class="org.gradle.api.Project" method="getProviders()"/> and <apilink class="org.gradle.api.initialization.Settings" method="getProviders()"/>.</para><section><title>Properties</title><para>No properties</para></section><section><title>Methods</title><table><title>Methods - ProviderFactory</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.provider.ProviderFactory:credentials(java.lang.Class, java.lang.String)">credentials</link>(credentialsType, identity)</literal></td><td><para>Creates a <apilink class="org.gradle.api.provider.Provider"/> for the given <apilink class="org.gradle.api.credentials.Credentials"/> type.

</para></td></tr><tr><td><literal><link linkend="org.gradle.api.provider.ProviderFactory:credentials(java.lang.Class, org.gradle.api.provider.Provider)">credentials</link>(credentialsType, identity)</literal></td><td><para>Creates a <apilink class="org.gradle.api.provider.Provider"/> for the given <apilink class="org.gradle.api.credentials.Credentials"/> type.

</para></td></tr><tr><td><literal><link linkend="org.gradle.api.provider.ProviderFactory:environmentVariable(java.lang.String)">environmentVariable</link>(variableName)</literal></td><td><para>Creates a <apilink class="org.gradle.api.provider.Provider"/> whose value is fetched from the environment variable with the given name.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.provider.ProviderFactory:environmentVariable(org.gradle.api.provider.Provider)">environmentVariable</link>(variableName)</literal></td><td><para>Creates a <apilink class="org.gradle.api.provider.Provider"/> whose value is fetched from the environment variable with the given name.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.provider.ProviderFactory:environmentVariablesPrefixedBy(java.lang.String)">environmentVariablesPrefixedBy</link>(variableNamePrefix)</literal></td><td><para>Creates a <apilink class="org.gradle.api.provider.Provider"/> whose value is a name-to-value map of the environment variables with the names starting with the given prefix.
The prefix comparison is case-sensitive. The returned map is immutable.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.provider.ProviderFactory:environmentVariablesPrefixedBy(org.gradle.api.provider.Provider)">environmentVariablesPrefixedBy</link>(variableNamePrefix)</literal></td><td><para>Creates a <apilink class="org.gradle.api.provider.Provider"/> whose value is a name-to-value map of the environment variables with the names starting with the given prefix.
The prefix comparison is case-sensitive. The returned map is immutable.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.provider.ProviderFactory:exec(org.gradle.api.Action)">exec</link>(action)</literal></td><td><para>Allows lazy access to the output of the external process.

</para></td></tr><tr><td><literal><link linkend="org.gradle.api.provider.ProviderFactory:fileContents(org.gradle.api.file.RegularFile)">fileContents</link>(file)</literal></td><td><para>Allows lazy access to the contents of the given file.

</para></td></tr><tr><td><literal><link linkend="org.gradle.api.provider.ProviderFactory:fileContents(org.gradle.api.provider.Provider)">fileContents</link>(file)</literal></td><td><para>Allows lazy access to the contents of the given file.

</para></td></tr><tr><td><literal><link linkend="org.gradle.api.provider.ProviderFactory:gradlePropertiesPrefixedBy(java.lang.String)">gradlePropertiesPrefixedBy</link>(variableNamePrefix)</literal></td><td><para>Creates a <apilink class="org.gradle.api.provider.Provider"/> whose value is a name-to-value map of the Gradle properties with the names starting with the given prefix.
The prefix comparison is case-sensitive. The returned map is immutable.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.provider.ProviderFactory:gradlePropertiesPrefixedBy(org.gradle.api.provider.Provider)">gradlePropertiesPrefixedBy</link>(variableNamePrefix)</literal></td><td><para>Creates a <apilink class="org.gradle.api.provider.Provider"/> whose value is a name-to-value map of the Gradle properties with the names starting with the given prefix.
The prefix comparison is case-sensitive. The returned map is immutable.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.provider.ProviderFactory:gradleProperty(java.lang.String)">gradleProperty</link>(propertyName)</literal></td><td><para>Creates a <apilink class="org.gradle.api.provider.Provider"/> whose value is fetched from the Gradle property of the given name.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.provider.ProviderFactory:gradleProperty(org.gradle.api.provider.Provider)">gradleProperty</link>(propertyName)</literal></td><td><para>Creates a <apilink class="org.gradle.api.provider.Provider"/> whose value is fetched from the Gradle property of the given name.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.provider.ProviderFactory:javaexec(org.gradle.api.Action)">javaexec</link>(action)</literal></td><td><para>Allows lazy access to the output of the external java process.

</para></td></tr><tr><td><literal><link linkend="org.gradle.api.provider.ProviderFactory:of(java.lang.Class, org.gradle.api.Action)">of</link>(valueSourceType, configuration)</literal></td><td><para>Creates a <apilink class="org.gradle.api.provider.Provider"/> whose value is obtained from the given <apilink class="org.gradle.api.provider.ValueSource"/>.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.provider.ProviderFactory:provider(java.util.concurrent.Callable)">provider</link>(value)</literal></td><td><para>Creates a <apilink class="org.gradle.api.provider.Provider"/> whose value is calculated using the given <ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/Callable.html"><classname>Callable</classname></ulink>.

</para></td></tr><tr><td><literal><link linkend="org.gradle.api.provider.ProviderFactory:systemPropertiesPrefixedBy(java.lang.String)">systemPropertiesPrefixedBy</link>(variableNamePrefix)</literal></td><td><para>Creates a <apilink class="org.gradle.api.provider.Provider"/> whose value is a name-to-value map of the system properties with the names starting with the given prefix.
The prefix comparison is case-sensitive. The returned map is immutable.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.provider.ProviderFactory:systemPropertiesPrefixedBy(org.gradle.api.provider.Provider)">systemPropertiesPrefixedBy</link>(variableNamePrefix)</literal></td><td><para>Creates a <apilink class="org.gradle.api.provider.Provider"/> whose value is a name-to-value map of the system properties with the names starting with the given prefix.
The prefix comparison is case-sensitive. The returned map is immutable.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.provider.ProviderFactory:systemProperty(java.lang.String)">systemProperty</link>(propertyName)</literal></td><td><para>Creates a <apilink class="org.gradle.api.provider.Provider"/> whose value is fetched from system properties using the given property name.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.provider.ProviderFactory:systemProperty(org.gradle.api.provider.Provider)">systemProperty</link>(propertyName)</literal></td><td><para>Creates a <apilink class="org.gradle.api.provider.Provider"/> whose value is fetched from system properties using the given property name.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.provider.ProviderFactory:zip(org.gradle.api.provider.Provider, org.gradle.api.provider.Provider, java.util.function.BiFunction)">zip</link>(first, second, combiner)</literal></td><td><para>Returns a provider which value will be computed by combining a provider value with another
provider value using the supplied combiner function.

</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Method details</title><section id="org.gradle.api.provider.ProviderFactory:credentials(java.lang.Class, java.lang.String)" role="detail"><title><classname><apilink class="org.gradle.api.provider.Provider"/>&lt;<classname>T</classname>&gt;</classname> <literal>credentials</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html"><classname>Class</classname></ulink>&lt;<classname>T</classname>&gt;</classname> credentialsType, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> identity)</title><para>Creates a <apilink class="org.gradle.api.provider.Provider"/> for the given <apilink class="org.gradle.api.credentials.Credentials"/> type.

</para><para>The provider returned by this method should be attached to a task's input property.
This way, the presence of credentials will be validated before any of the tasks are executed if and only if the task with credentials property is to be executed.

</para><para>Values for the requested Credentials type will be sourced from the project's properties using the pattern "identity" + credentials field.
For example, <apilink class="org.gradle.api.credentials.PasswordCredentials"/> provider with identity "myService" will look for properties named "myServiceUsername" and "myServicePassword".

</para><para>The following credential types are currently supported:
</para><itemizedlist><listitem><apilink class="org.gradle.api.credentials.PasswordCredentials"/></listitem><listitem><apilink class="org.gradle.api.credentials.AwsCredentials"/></listitem></itemizedlist></section><section id="org.gradle.api.provider.ProviderFactory:credentials(java.lang.Class, org.gradle.api.provider.Provider)" role="detail"><title><classname><apilink class="org.gradle.api.provider.Provider"/>&lt;<classname>T</classname>&gt;</classname> <literal>credentials</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html"><classname>Class</classname></ulink>&lt;<classname>T</classname>&gt;</classname> credentialsType, <classname><apilink class="org.gradle.api.provider.Provider"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> identity)</title><para>Creates a <apilink class="org.gradle.api.provider.Provider"/> for the given <apilink class="org.gradle.api.credentials.Credentials"/> type.

</para><para>The provider returned by this method should be attached to a task's input property.
This way, the presence of credentials will be validated before any of the tasks are executed if and only if the task with credentials property is to be executed.

</para><para>Values for the requested Credentials type will be sourced from the project's properties using the pattern "identity" + credentials field.
For example, <apilink class="org.gradle.api.credentials.PasswordCredentials"/> provider with identity "myService" will look for properties named "myServiceUsername" and "myServicePassword".

</para><para>The following credential types are currently supported:
</para><itemizedlist><listitem><apilink class="org.gradle.api.credentials.PasswordCredentials"/></listitem><listitem><apilink class="org.gradle.api.credentials.AwsCredentials"/></listitem></itemizedlist></section><section id="org.gradle.api.provider.ProviderFactory:environmentVariable(java.lang.String)" role="detail"><title><classname><apilink class="org.gradle.api.provider.Provider"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>environmentVariable</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> variableName)</title><para>Creates a <apilink class="org.gradle.api.provider.Provider"/> whose value is fetched from the environment variable with the given name.</para></section><section id="org.gradle.api.provider.ProviderFactory:environmentVariable(org.gradle.api.provider.Provider)" role="detail"><title><classname><apilink class="org.gradle.api.provider.Provider"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>environmentVariable</literal>(<classname><apilink class="org.gradle.api.provider.Provider"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> variableName)</title><para>Creates a <apilink class="org.gradle.api.provider.Provider"/> whose value is fetched from the environment variable with the given name.</para></section><section id="org.gradle.api.provider.ProviderFactory:environmentVariablesPrefixedBy(java.lang.String)" role="detail"><title><classname><apilink class="org.gradle.api.provider.Provider"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;&gt;</classname> <literal>environmentVariablesPrefixedBy</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> variableNamePrefix)</title><para>Creates a <apilink class="org.gradle.api.provider.Provider"/> whose value is a name-to-value map of the environment variables with the names starting with the given prefix.
The prefix comparison is case-sensitive. The returned map is immutable.</para></section><section id="org.gradle.api.provider.ProviderFactory:environmentVariablesPrefixedBy(org.gradle.api.provider.Provider)" role="detail"><title><classname><apilink class="org.gradle.api.provider.Provider"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;&gt;</classname> <literal>environmentVariablesPrefixedBy</literal>(<classname><apilink class="org.gradle.api.provider.Provider"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> variableNamePrefix)</title><para>Creates a <apilink class="org.gradle.api.provider.Provider"/> whose value is a name-to-value map of the environment variables with the names starting with the given prefix.
The prefix comparison is case-sensitive. The returned map is immutable.</para></section><section id="org.gradle.api.provider.ProviderFactory:exec(org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.process.ExecOutput"/> <literal>exec</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.process.ExecSpec"/>&gt;</classname> action)</title><para>Allows lazy access to the output of the external process.

</para><para>When the process output is read at configuration time it is considered as an input to the
configuration model. Consequent builds will re-execute the process to obtain the output and
check if the cached model is still up-to-date.

</para><para>The process input and output streams cannot be configured.

</para><para>For more sophisticated use cases, like handling execution exceptions, supplying input streams or processing the output in a streaming way, use <apilink class="org.gradle.api.provider.ValueSource"/>.</para></section><section id="org.gradle.api.provider.ProviderFactory:fileContents(org.gradle.api.file.RegularFile)" role="detail"><title><apilink class="org.gradle.api.file.FileContents"/> <literal>fileContents</literal>(<apilink class="org.gradle.api.file.RegularFile"/> file)</title><para>Allows lazy access to the contents of the given file.

</para><para>When the file contents are read at configuration time the file is automatically considered
as an input to the configuration model.</para></section><section id="org.gradle.api.provider.ProviderFactory:fileContents(org.gradle.api.provider.Provider)" role="detail"><title><apilink class="org.gradle.api.file.FileContents"/> <literal>fileContents</literal>(<classname><apilink class="org.gradle.api.provider.Provider"/>&lt;<apilink class="org.gradle.api.file.RegularFile"/>&gt;</classname> file)</title><para>Allows lazy access to the contents of the given file.

</para><para>When the file contents are read at configuration time the file is automatically considered
as an input to the configuration model.</para></section><section id="org.gradle.api.provider.ProviderFactory:gradlePropertiesPrefixedBy(java.lang.String)" role="detail"><title><classname><apilink class="org.gradle.api.provider.Provider"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;&gt;</classname> <literal>gradlePropertiesPrefixedBy</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> variableNamePrefix)</title><para>Creates a <apilink class="org.gradle.api.provider.Provider"/> whose value is a name-to-value map of the Gradle properties with the names starting with the given prefix.
The prefix comparison is case-sensitive. The returned map is immutable.</para></section><section id="org.gradle.api.provider.ProviderFactory:gradlePropertiesPrefixedBy(org.gradle.api.provider.Provider)" role="detail"><title><classname><apilink class="org.gradle.api.provider.Provider"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;&gt;</classname> <literal>gradlePropertiesPrefixedBy</literal>(<classname><apilink class="org.gradle.api.provider.Provider"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> variableNamePrefix)</title><para>Creates a <apilink class="org.gradle.api.provider.Provider"/> whose value is a name-to-value map of the Gradle properties with the names starting with the given prefix.
The prefix comparison is case-sensitive. The returned map is immutable.</para></section><section id="org.gradle.api.provider.ProviderFactory:gradleProperty(java.lang.String)" role="detail"><title><classname><apilink class="org.gradle.api.provider.Provider"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>gradleProperty</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> propertyName)</title><para>Creates a <apilink class="org.gradle.api.provider.Provider"/> whose value is fetched from the Gradle property of the given name.</para></section><section id="org.gradle.api.provider.ProviderFactory:gradleProperty(org.gradle.api.provider.Provider)" role="detail"><title><classname><apilink class="org.gradle.api.provider.Provider"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>gradleProperty</literal>(<classname><apilink class="org.gradle.api.provider.Provider"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> propertyName)</title><para>Creates a <apilink class="org.gradle.api.provider.Provider"/> whose value is fetched from the Gradle property of the given name.</para></section><section id="org.gradle.api.provider.ProviderFactory:javaexec(org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.process.ExecOutput"/> <literal>javaexec</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.process.JavaExecSpec"/>&gt;</classname> action)</title><para>Allows lazy access to the output of the external java process.

</para><para>When the process output is read at configuration time it is considered as an input to the
configuration model. Consequent builds will re-execute the process to obtain the output and
check if the cached model is still up-to-date.

</para><para>The process input and output streams cannot be configured.

</para><para>For more sophisticated use cases, like handling execution exceptions, supplying input streams or processing the output in a streaming way, use <apilink class="org.gradle.api.provider.ValueSource"/>.</para></section><section id="org.gradle.api.provider.ProviderFactory:of(java.lang.Class, org.gradle.api.Action)" role="detail"><title><classname><apilink class="org.gradle.api.provider.Provider"/>&lt;<classname>T</classname>&gt;</classname> <literal>of</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html"><classname>Class</classname></ulink>&lt;? extends <apilink class="org.gradle.api.provider.ValueSource"/>&lt;<classname>T</classname>, <classname>P</classname>&gt;&gt;</classname> valueSourceType, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.provider.ValueSourceSpec"/>&lt;<classname>P</classname>&gt;&gt;</classname> configuration)</title><para>Creates a <apilink class="org.gradle.api.provider.Provider"/> whose value is obtained from the given <apilink class="org.gradle.api.provider.ValueSource"/>.</para></section><section id="org.gradle.api.provider.ProviderFactory:provider(java.util.concurrent.Callable)" role="detail"><title><classname><apilink class="org.gradle.api.provider.Provider"/>&lt;<classname>T</classname>&gt;</classname> <literal>provider</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/Callable.html"><classname>Callable</classname></ulink>&lt;? extends <classname>T</classname>&gt;</classname> value)</title><para>Creates a <apilink class="org.gradle.api.provider.Provider"/> whose value is calculated using the given <ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/Callable.html"><classname>Callable</classname></ulink>.

</para><para>The provider is live and will call the <ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/Callable.html"><classname>Callable</classname></ulink> each time its value is queried. The <ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/Callable.html"><classname>Callable</classname></ulink> may return <literal>null</literal>, in which case the provider is considered to have no value.</para></section><section id="org.gradle.api.provider.ProviderFactory:systemPropertiesPrefixedBy(java.lang.String)" role="detail"><title><classname><apilink class="org.gradle.api.provider.Provider"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;&gt;</classname> <literal>systemPropertiesPrefixedBy</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> variableNamePrefix)</title><para>Creates a <apilink class="org.gradle.api.provider.Provider"/> whose value is a name-to-value map of the system properties with the names starting with the given prefix.
The prefix comparison is case-sensitive. The returned map is immutable.</para></section><section id="org.gradle.api.provider.ProviderFactory:systemPropertiesPrefixedBy(org.gradle.api.provider.Provider)" role="detail"><title><classname><apilink class="org.gradle.api.provider.Provider"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;&gt;</classname> <literal>systemPropertiesPrefixedBy</literal>(<classname><apilink class="org.gradle.api.provider.Provider"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> variableNamePrefix)</title><para>Creates a <apilink class="org.gradle.api.provider.Provider"/> whose value is a name-to-value map of the system properties with the names starting with the given prefix.
The prefix comparison is case-sensitive. The returned map is immutable.</para></section><section id="org.gradle.api.provider.ProviderFactory:systemProperty(java.lang.String)" role="detail"><title><classname><apilink class="org.gradle.api.provider.Provider"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>systemProperty</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> propertyName)</title><para>Creates a <apilink class="org.gradle.api.provider.Provider"/> whose value is fetched from system properties using the given property name.</para></section><section id="org.gradle.api.provider.ProviderFactory:systemProperty(org.gradle.api.provider.Provider)" role="detail"><title><classname><apilink class="org.gradle.api.provider.Provider"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>systemProperty</literal>(<classname><apilink class="org.gradle.api.provider.Provider"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> propertyName)</title><para>Creates a <apilink class="org.gradle.api.provider.Provider"/> whose value is fetched from system properties using the given property name.</para></section><section id="org.gradle.api.provider.ProviderFactory:zip(org.gradle.api.provider.Provider, org.gradle.api.provider.Provider, java.util.function.BiFunction)" role="detail"><title><classname><apilink class="org.gradle.api.provider.Provider"/>&lt;<classname>R</classname>&gt;</classname> <literal>zip</literal>(<classname><apilink class="org.gradle.api.provider.Provider"/>&lt;<classname>A</classname>&gt;</classname> first, <classname><apilink class="org.gradle.api.provider.Provider"/>&lt;<classname>B</classname>&gt;</classname> second, <classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/function/BiFunction.html"><classname>BiFunction</classname></ulink>&lt;? super <classname>A</classname>, ? super <classname>B</classname>, ? extends <classname>R</classname>&gt;</classname> combiner)</title><para>Returns a provider which value will be computed by combining a provider value with another
provider value using the supplied combiner function.

</para><para>The resulting provider will be live, so that each time it is queried, it queries both supplied providers
and applies the combiner to the results. Whenever any of the providers has no value, the new provider
will also have no value and the combiner will not be called.

</para><para>If the supplied providers represents a task or the output of a task, the resulting provider
will carry the dependency information.</para></section></section></chapter><chapter id="org.gradle.work.InputChanges"><title>InputChanges</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.work.InputChanges" style="javadoc"/></seg></seglistitem></segmentedlist><para>Provides access to any input files that need to be processed by an incremental work action.

</para><para>
An incremental work action is one that accepts a single <apilink class="org.gradle.work.InputChanges"/> parameter.
The work action can then query what changed for an input parameter since the last execution to only process the changes.

The following example shows a task which reverses the text in each of its input files.
It demonstrates how to use <apilink class="org.gradle.work.InputChanges"/> to only process the changed files.

</para><programlisting language="java">
abstract class IncrementalReverseTask extends DefaultTask {
    @Incremental
    @InputDirectory
    abstract DirectoryProperty getInputDir()

    @OutputDirectory
    abstract DirectoryProperty getOutputDir()

    @TaskAction
    void execute(InputChanges inputChanges) {
        inputChanges.getFileChanges(inputDir).each { change -&gt;
            if (change.fileType == FileType.DIRECTORY) return

            def targetFile = outputDir.file(change.normalizedPath).get().asFile
            if (change.changeType == ChangeType.REMOVED) {
                targetFile.delete()
            } else {
                targetFile.text = change.file.text.reverse()
            }
        }
    }
}
</programlisting><para>
In the case where Gradle is unable to determine which input files need to be reprocessed, then all of the input files will be reported as <apilink class="org.gradle.work.ChangeType" method="ADDED"/>.
When such a full rebuild happens, the output files of the work are removed prior to executing the work action.
Cases where this occurs include:
</para><itemizedlist><listitem>There is no history available from a previous execution.</listitem><listitem>A non-file input parameter has changed since the previous execution.</listitem><listitem>One or more output files have changed since the previous execution.</listitem></itemizedlist><section><title>Properties</title><table><title>Properties - InputChanges</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.work.InputChanges:incremental"><literal>incremental</literal></link></td><td><para>Indicates if it was possible for Gradle to determine which input files were out of date compared to a previous execution.
Incremental inputs are unavailable when history is unavailable (i.e. this piece of work has never been executed before), or if there are changes to non-file input properties, or output files.
</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - InputChanges</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.work.InputChanges:getFileChanges(org.gradle.api.file.FileCollection)">getFileChanges</link>(parameter)</literal></td><td><para>Changes for a parameter.

</para></td></tr><tr><td><literal><link linkend="org.gradle.work.InputChanges:getFileChanges(org.gradle.api.provider.Provider)">getFileChanges</link>(parameter)</literal></td><td><para>Changes for a parameter.

</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.work.InputChanges:incremental" role="detail"><title><classname>boolean</classname> <literal>incremental</literal> (read-only)</title><para>Indicates if it was possible for Gradle to determine which input files were out of date compared to a previous execution.
Incremental inputs are unavailable when history is unavailable (i.e. this piece of work has never been executed before), or if there are changes to non-file input properties, or output files.
</para><para>
When <literal>true</literal>:
</para><itemizedlist><listitem><apilink class="org.gradle.work.InputChanges" method="getFileChanges(org.gradle.api.file.FileCollection)"/> and <apilink class="org.gradle.work.InputChanges" method="getFileChanges(org.gradle.api.provider.Provider)"/> report changes to the input files compared to the previous execution.</listitem></itemizedlist><para>
When <literal>false</literal>:
</para><itemizedlist><listitem>Every input file is reported via <apilink class="org.gradle.work.InputChanges" method="getFileChanges(org.gradle.api.file.FileCollection)"/> and <apilink class="org.gradle.work.InputChanges" method="getFileChanges(org.gradle.api.provider.Provider)"/> as if it was <apilink class="org.gradle.work.ChangeType" method="ADDED"/>.</listitem></itemizedlist></section></section><section><title>Method details</title><section id="org.gradle.work.InputChanges:getFileChanges(org.gradle.api.file.FileCollection)" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;<apilink class="org.gradle.work.FileChange"/>&gt;</classname> <literal>getFileChanges</literal>(<apilink class="org.gradle.api.file.FileCollection"/> parameter)</title><para>Changes for a parameter.

</para><para>When <apilink class="org.gradle.work.InputChanges" method="isIncremental()"/> is <literal>false</literal>, then all elements of the parameter are returned as <apilink class="org.gradle.work.ChangeType" method="ADDED"/>.</para><para>
    Only input file properties annotated with @<apilink class="org.gradle.work.Incremental"/> or @<apilink class="org.gradle.api.tasks.SkipWhenEmpty"/> can be queried for changes.
</para><para>
    Note that for inputs with <apilink class="org.gradle.api.tasks.PathSensitivity" method="NONE"/>, instead of a <apilink class="org.gradle.work.ChangeType" method="MODIFIED"/> event,
    file modifications can be reported as a pair of an <apilink class="org.gradle.work.ChangeType" method="ADDED"/> and a <apilink class="org.gradle.work.ChangeType" method="REMOVED"/> event.
</para></section><section id="org.gradle.work.InputChanges:getFileChanges(org.gradle.api.provider.Provider)" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;<apilink class="org.gradle.work.FileChange"/>&gt;</classname> <literal>getFileChanges</literal>(<classname><apilink class="org.gradle.api.provider.Provider"/>&lt;? extends <apilink class="org.gradle.api.file.FileSystemLocation"/>&gt;</classname> parameter)</title><para>Changes for a parameter.

</para><para>When <apilink class="org.gradle.work.InputChanges" method="isIncremental()"/> is <literal>false</literal>, then all elements of the parameter are returned as <apilink class="org.gradle.work.ChangeType" method="ADDED"/>.</para><para>
    This method allows querying properties of type <apilink class="org.gradle.api.file.RegularFileProperty"/> and <apilink class="org.gradle.api.file.DirectoryProperty"/> for changes.
    These two types are typically used for @<apilink class="org.gradle.api.tasks.InputFile"/> and @<apilink class="org.gradle.api.tasks.InputDirectory"/> properties.
</para><para>
    Only input file properties annotated with @<apilink class="org.gradle.work.Incremental"/> or @<apilink class="org.gradle.api.tasks.SkipWhenEmpty"/> can be queried for changes.
</para><para>
    Note that for inputs with <apilink class="org.gradle.api.tasks.PathSensitivity" method="NONE"/>, instead of a <apilink class="org.gradle.work.ChangeType" method="MODIFIED"/> event,
    file modifications can be reported as a pair of an <apilink class="org.gradle.work.ChangeType" method="ADDED"/> and a <apilink class="org.gradle.work.ChangeType" method="REMOVED"/> event.
</para></section></section></chapter><chapter id="org.gradle.api.distribution.Distribution"><title>Distribution</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.distribution.Distribution" style="javadoc"/></seg></seglistitem></segmentedlist><para>A distribution allows to bundle an application or a library including dependencies, sources...</para><section><title>Properties</title><table><title>Properties - Distribution</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.distribution.Distribution:contents"><literal>contents</literal></link></td><td><para>The contents of the distribution.</para></td></tr><tr><td><link linkend="org.gradle.api.distribution.Distribution:distributionBaseName"><literal>distributionBaseName</literal></link></td><td><para>The baseName of the distribution, used in naming the distribution archives.
</para></td></tr><tr><td><link linkend="org.gradle.api.distribution.Distribution:name"><literal>name</literal></link></td><td><para>The name of this distribution.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - Distribution</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.distribution.Distribution:contents(org.gradle.api.Action)">contents</link>(action)</literal></td><td><para>Configures the contents of the distribution.
</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.distribution.Distribution:contents" role="detail"><title><apilink class="org.gradle.api.file.CopySpec"/> <literal>contents</literal> (read-only)</title><para>The contents of the distribution.</para></section><section id="org.gradle.api.distribution.Distribution:distributionBaseName" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>distributionBaseName</literal></title><para>The baseName of the distribution, used in naming the distribution archives.
</para><para>
If the <apilink class="org.gradle.api.distribution.Distribution" method="getName()"/> of this distribution is "<literal>main</literal>" this defaults to the project's name.
Otherwise it is "<literal>$project.name-$this.name</literal>".</para></section><section id="org.gradle.api.distribution.Distribution:name" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>name</literal> (read-only)</title><para>The name of this distribution.</para></section></section><section><title>Method details</title><section id="org.gradle.api.distribution.Distribution:contents(org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.file.CopySpec"/> <literal>contents</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.CopySpec"/>&gt;</classname> action)</title><para>Configures the contents of the distribution.
</para><para>
Can be used to configure the contents of the distribution:
</para><programlisting language="java">
plugins {
    id 'distribution'
}

distributions {
    main {
        contents {
            from "src/readme"
        }
    }
}
</programlisting><para>
The DSL inside the <literal>contents{</literal> } block is the same DSL used for Copy tasks.</para></section></section></chapter><chapter id="org.gradle.api.publish.ivy.IvyPublication"><title>IvyPublication</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.publish.ivy.IvyPublication" style="javadoc"/></seg></seglistitem></segmentedlist><para>An <literal>IvyPublication</literal> is the representation/configuration of how Gradle should publish something in Ivy format, to an Ivy repository.

You directly add a named Ivy publication the project's <literal>publishing.publications</literal> container by providing <apilink class="org.gradle.api.publish.ivy.IvyPublication"/> as the type.
</para><programlisting language="java">
publishing {
  publications {
    myPublicationName(IvyPublication) {
      // Configure the publication here
    }
  }
}
</programlisting><para>
The Ivy module identifying attributes of the publication are mapped as follows:
</para><itemizedlist><listitem><literal>module</literal> - <literal>project.name</literal></listitem><listitem><literal>organisation</literal> - <literal>project.group</literal></listitem><listitem><literal>revision</literal> - <literal>project.version</literal></listitem><listitem><literal>status</literal> - <literal>project.status</literal></listitem></itemizedlist><para>
For certain common use cases, it's often sufficient to specify the component to publish, using (<apilink class="org.gradle.api.publish.ivy.IvyPublication" method="from(org.gradle.api.component.SoftwareComponent)"/>.
The published component is used to determine which artifacts to publish, and which configurations and dependencies should be listed in the generated ivy descriptor file.
</para><para>
You can add configurations to the generated ivy descriptor file, by supplying a Closure to the <apilink class="org.gradle.api.publish.ivy.IvyPublication" method="configurations(org.gradle.api.Action)"/> method.
</para><para>
To add additional artifacts to the set published, use the <apilink class="org.gradle.api.publish.ivy.IvyPublication" method="artifact(java.lang.Object)"/> and <apilink class="org.gradle.api.publish.ivy.IvyPublication" method="artifact(java.lang.Object, org.gradle.api.Action)"/> methods.
You can also completely replace the set of published artifacts using <apilink class="org.gradle.api.publish.ivy.IvyPublication" method="setArtifacts(java.lang.Iterable)"/>.
Together, these methods give you full control over the artifacts to be published.
</para><para>
In addition, <apilink class="org.gradle.api.publish.ivy.IvyModuleDescriptorSpec"/> provides configuration methods to customize licenses, authors, and the description to be published in the Ivy module descriptor.
</para><para>
For any other tweaks to the publication, it is possible to modify the generated Ivy descriptor file prior to publication. This is done using
the <apilink class="org.gradle.api.publish.ivy.IvyModuleDescriptorSpec" method="withXml(org.gradle.api.Action)"/> method, normally via a Closure passed to the <apilink class="org.gradle.api.publish.ivy.IvyPublication" method="descriptor(org.gradle.api.Action)"/> method.
</para><programlisting language="java">
// Example of publishing a java component with an added source jar and custom module description
plugins {
    id 'java'
    id 'ivy-publish'
}

task sourceJar(type: Jar) {
  from sourceSets.main.allJava
}

publishing {
  publications {
    myPublication(IvyPublication) {
      from components.java
      artifact(sourceJar) {
        type = "source"
        extension = "src.jar"
        conf = "runtime"
      }
      descriptor {
        license {
          name = "Custom License"
        }
        author {
          name = "Custom Name"
        }
        description {
          text = "Custom Description"
        }
      }
    }
  }
}
</programlisting><section><title>Properties</title><table><title>Properties - IvyPublication</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.publish.ivy.IvyPublication:artifacts"><literal>artifacts</literal></link></td><td><para>The complete set of artifacts for this publication.

</para></td></tr><tr><td><link linkend="org.gradle.api.publish.ivy.IvyPublication:configurations"><literal>configurations</literal></link></td><td><para>The complete set of configurations for this publication.</para></td></tr><tr><td><link linkend="org.gradle.api.publish.ivy.IvyPublication:descriptor"><literal>descriptor</literal></link></td><td><para>The module descriptor that will be published.</para></td></tr><tr><td><link linkend="org.gradle.api.publish.ivy.IvyPublication:module"><literal>module</literal></link></td><td><para>The module for this publication.</para></td></tr><tr><td><link linkend="org.gradle.api.publish.ivy.IvyPublication:organisation"><literal>organisation</literal></link></td><td><para>The organisation for this publication.</para></td></tr><tr><td><link linkend="org.gradle.api.publish.ivy.IvyPublication:revision"><literal>revision</literal></link></td><td><para>The revision for this publication.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - IvyPublication</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.publish.ivy.IvyPublication:artifact(java.lang.Object)">artifact</link>(source)</literal></td><td><para>Creates a custom <apilink class="org.gradle.api.publish.ivy.IvyArtifact"/> to be included in the publication.

The <literal>artifact</literal> method can take a variety of input:
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.publish.ivy.IvyPublication:artifact(java.lang.Object, org.gradle.api.Action)">artifact</link>(source, config)</literal></td><td><para>Creates an <apilink class="org.gradle.api.publish.ivy.IvyArtifact"/> to be included in the publication, which is configured by the associated action.

The first parameter is used to create a custom artifact and add it to the publication, as per <apilink class="org.gradle.api.publish.ivy.IvyPublication" method="artifact(java.lang.Object)"/>.
The created <apilink class="org.gradle.api.publish.ivy.IvyArtifact"/> is then configured using the supplied action.
This method also accepts the configure action as a closure argument, by type coercion.

</para></td></tr><tr><td><literal><link linkend="org.gradle.api.publish.ivy.IvyPublication:configurations(org.gradle.api.Action)">configurations</link>(config)</literal></td><td><para>Defines some <apilink class="org.gradle.api.publish.ivy.IvyConfiguration"/>s that should be included in the published ivy module descriptor file.

The following example demonstrates how to add a "testCompile" configuration, and a "testRuntime" configuration that extends it.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.publish.ivy.IvyPublication:descriptor(org.gradle.api.Action)">descriptor</link>(configure)</literal></td><td><para>Configures the descriptor that will be published.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.publish.ivy.IvyPublication:from(org.gradle.api.component.SoftwareComponent)">from</link>(component)</literal></td><td><para>Provides the software component that should be published.

</para></td></tr><tr><td><literal><link linkend="org.gradle.api.publish.ivy.IvyPublication:suppressAllIvyMetadataWarnings()">suppressAllIvyMetadataWarnings</link>()</literal></td><td><para>Silences all the compatibility warnings for the Ivy publication.

Warnings are emitted when Gradle features are used that cannot be mapped completely to Ivy xml.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.publish.ivy.IvyPublication:suppressIvyMetadataWarningsFor(java.lang.String)">suppressIvyMetadataWarningsFor</link>(variantName)</literal></td><td><para>Silences the compatibility warnings for the Ivy publication for the specified variant.

Warnings are emitted when Gradle features are used that cannot be mapped completely to Ivy xml.</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.publish.ivy.IvyPublication:artifacts" role="detail"><title><apilink class="org.gradle.api.publish.ivy.IvyArtifactSet"/> <literal>artifacts</literal></title><para>The complete set of artifacts for this publication.

</para><para>
Setting this property will clear any previously added artifacts and create artifacts from the specified sources.
Each supplied source is interpreted as per <apilink class="org.gradle.api.publish.ivy.IvyPublication" method="artifact(java.lang.Object)"/>.

For example, to exclude the dependencies declared by a component and instead use a custom set of artifacts:
</para><programlisting language="java">
plugins {
    id 'java'
    id 'ivy-publish'
}

task sourceJar(type: Jar) {
  archiveClassifier = "source"
}

publishing {
  publications {
    ivy(IvyPublication) {
      from components.java
      artifacts = ["my-custom-jar.jar", sourceJar]
    }
  }
}
</programlisting></section><section id="org.gradle.api.publish.ivy.IvyPublication:configurations" role="detail"><title><apilink class="org.gradle.api.publish.ivy.IvyConfigurationContainer"/> <literal>configurations</literal> (read-only)</title><para>The complete set of configurations for this publication.</para></section><section id="org.gradle.api.publish.ivy.IvyPublication:descriptor" role="detail"><title><apilink class="org.gradle.api.publish.ivy.IvyModuleDescriptorSpec"/> <literal>descriptor</literal> (read-only)</title><para>The module descriptor that will be published.</para></section><section id="org.gradle.api.publish.ivy.IvyPublication:module" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>module</literal></title><para>The module for this publication.</para></section><section id="org.gradle.api.publish.ivy.IvyPublication:organisation" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>organisation</literal></title><para>The organisation for this publication.</para></section><section id="org.gradle.api.publish.ivy.IvyPublication:revision" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>revision</literal></title><para>The revision for this publication.</para></section></section><section><title>Method details</title><section id="org.gradle.api.publish.ivy.IvyPublication:artifact(java.lang.Object)" role="detail"><title><apilink class="org.gradle.api.publish.ivy.IvyArtifact"/> <literal>artifact</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> source)</title><para>Creates a custom <apilink class="org.gradle.api.publish.ivy.IvyArtifact"/> to be included in the publication.

The <literal>artifact</literal> method can take a variety of input:
</para><itemizedlist><listitem>A <apilink class="org.gradle.api.artifacts.PublishArtifact"/> instance. Name, type, extension and classifier values are taken from the supplied instance.</listitem><listitem>An <apilink class="org.gradle.api.tasks.bundling.AbstractArchiveTask"/> instance. Name, type, extension and classifier values are taken from the supplied instance.</listitem><listitem>Anything that can be resolved to a <ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> via the <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/> method.
         Name, extension and classifier values are interpolated from the file name.</listitem><listitem>A <ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink> that contains a 'source' entry that can be resolved as any of the other input types, including file.
        This map can contain additional attributes to further configure the constructed artifact.</listitem></itemizedlist><para>

The following example demonstrates the addition of various custom artifacts.
</para><programlisting language="java">
plugins {
    id 'ivy-publish'
}

task sourceJar(type: Jar) {
  archiveClassifier = "source"
}

task genDocs {
  doLast {
    // Generate 'my-docs-file.htm'
  }
}

publishing {
  publications {
    ivy(IvyPublication) {
      artifact sourceJar // Publish the output of the sourceJar task
      artifact 'my-file-name.jar' // Publish a file created outside of the build
      artifact source: 'my-docs-file.htm', classifier: 'docs', extension: 'html', builtBy: genDocs // Publish a file generated by the 'genDocs' task
    }
  }
}
</programlisting></section><section id="org.gradle.api.publish.ivy.IvyPublication:artifact(java.lang.Object, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.publish.ivy.IvyArtifact"/> <literal>artifact</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> source, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.publish.ivy.IvyArtifact"/>&gt;</classname> config)</title><para>Creates an <apilink class="org.gradle.api.publish.ivy.IvyArtifact"/> to be included in the publication, which is configured by the associated action.

The first parameter is used to create a custom artifact and add it to the publication, as per <apilink class="org.gradle.api.publish.ivy.IvyPublication" method="artifact(java.lang.Object)"/>.
The created <apilink class="org.gradle.api.publish.ivy.IvyArtifact"/> is then configured using the supplied action.
This method also accepts the configure action as a closure argument, by type coercion.

</para><programlisting language="java">
plugins {
    id 'ivy-publish'
}

task sourceJar(type: Jar) {
  archiveClassifier = "source"
}

task genDocs {
  doLast {
    // Generate 'my-docs-file.htm'
  }
}

publishing {
  publications {
    ivy(IvyPublication) {
      artifact(sourceJar) {
        // These values will be used instead of the values from the task. The task values will not be updated.
        classifier = "src"
        extension = "zip"
        conf = "runtime-&gt;default"
      }
      artifact("my-docs-file.htm") {
        type = "documentation"
        extension = "html"
        builtBy genDocs
      }
    }
  }
}
</programlisting></section><section id="org.gradle.api.publish.ivy.IvyPublication:configurations(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>configurations</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.publish.ivy.IvyConfigurationContainer"/>&gt;</classname> config)</title><para>Defines some <apilink class="org.gradle.api.publish.ivy.IvyConfiguration"/>s that should be included in the published ivy module descriptor file.

The following example demonstrates how to add a "testCompile" configuration, and a "testRuntime" configuration that extends it.
</para><programlisting language="java">
plugins {
    id 'java'
    id 'ivy-publish'
}

publishing {
  publications {
    ivy(IvyPublication) {
      configurations {
          testCompile {}
          testRuntime {
              extend "testCompile"
          }
      }
    }
  }
}
</programlisting></section><section id="org.gradle.api.publish.ivy.IvyPublication:descriptor(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>descriptor</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.publish.ivy.IvyModuleDescriptorSpec"/>&gt;</classname> configure)</title><para>Configures the descriptor that will be published.
</para><para>
The descriptor XML can be modified by using the <apilink class="org.gradle.api.publish.ivy.IvyModuleDescriptorSpec" method="withXml(org.gradle.api.Action)"/> method.</para></section><section id="org.gradle.api.publish.ivy.IvyPublication:from(org.gradle.api.component.SoftwareComponent)" role="detail"><title><classname>void</classname> <literal>from</literal>(<apilink class="org.gradle.api.component.SoftwareComponent"/> component)</title><para>Provides the software component that should be published.

</para><itemizedlist><listitem>Any artifacts declared by the component will be included in the publication.</listitem><listitem>The dependencies declared by the component will be included in the published meta-data.</listitem></itemizedlist><para>

Currently 2 types of component are supported: 'components.java' (added by the JavaPlugin) and 'components.web' (added by the WarPlugin).
For any individual IvyPublication, only a single component can be provided in this way.

The following example demonstrates how to publish the 'java' component to a ivy repository.
</para><programlisting language="java">
plugins {
    id 'java'
    id 'ivy-publish'
}

publishing {
  publications {
    ivy(IvyPublication) {
      from components.java
    }
  }
}
</programlisting></section><section id="org.gradle.api.publish.ivy.IvyPublication:suppressAllIvyMetadataWarnings()" role="detail"><title><classname>void</classname> <literal>suppressAllIvyMetadataWarnings</literal>()</title><para>Silences all the compatibility warnings for the Ivy publication.

Warnings are emitted when Gradle features are used that cannot be mapped completely to Ivy xml.</para></section><section id="org.gradle.api.publish.ivy.IvyPublication:suppressIvyMetadataWarningsFor(java.lang.String)" role="detail"><title><classname>void</classname> <literal>suppressIvyMetadataWarningsFor</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> variantName)</title><para>Silences the compatibility warnings for the Ivy publication for the specified variant.

Warnings are emitted when Gradle features are used that cannot be mapped completely to Ivy xml.</para></section></section></chapter><chapter id="org.gradle.api.publish.ivy.IvyArtifactSet"><title>IvyArtifactSet</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.publish.ivy.IvyArtifactSet" style="javadoc"/></seg></seglistitem></segmentedlist><para>A Collection of <apilink class="org.gradle.api.publish.ivy.IvyArtifact"/>s to be included in an <apilink class="org.gradle.api.publish.ivy.IvyPublication"/>.

Being a <apilink class="org.gradle.api.DomainObjectSet"/>, an <literal>IvyArtifactSet</literal> provides convenient methods for querying, filtering, and applying actions to the set of <apilink class="org.gradle.api.publish.ivy.IvyArtifact"/>s.

</para><programlisting language="java">
plugins {
    id 'ivy-publish'
}

def publication = publishing.publications.create("my-pub", IvyPublication)
def artifacts = publication.artifacts

artifacts.matching({
    it.type == "source"
}).all({
    it.extension = "src.jar"
})
</programlisting><section><title>Properties</title><para>No properties</para></section><section><title>Methods</title><table><title>Methods - IvyArtifactSet</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.publish.ivy.IvyArtifactSet:artifact(java.lang.Object)">artifact</link>(source)</literal></td><td><para>Creates and adds a <apilink class="org.gradle.api.publish.ivy.IvyArtifact"/> to the set.

The semantics of this method are the same as <apilink class="org.gradle.api.publish.ivy.IvyPublication" method="artifact(java.lang.Object)"/>.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.publish.ivy.IvyArtifactSet:artifact(java.lang.Object, org.gradle.api.Action)">artifact</link>(source, config)</literal></td><td><para>Creates and adds a <apilink class="org.gradle.api.publish.ivy.IvyArtifact"/> to the set, which is configured by the associated action.

The semantics of this method are the same as <apilink class="org.gradle.api.publish.ivy.IvyPublication" method="artifact(java.lang.Object, org.gradle.api.Action)"/>.</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Method details</title><section id="org.gradle.api.publish.ivy.IvyArtifactSet:artifact(java.lang.Object)" role="detail"><title><apilink class="org.gradle.api.publish.ivy.IvyArtifact"/> <literal>artifact</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> source)</title><para>Creates and adds a <apilink class="org.gradle.api.publish.ivy.IvyArtifact"/> to the set.

The semantics of this method are the same as <apilink class="org.gradle.api.publish.ivy.IvyPublication" method="artifact(java.lang.Object)"/>.</para></section><section id="org.gradle.api.publish.ivy.IvyArtifactSet:artifact(java.lang.Object, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.publish.ivy.IvyArtifact"/> <literal>artifact</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> source, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.publish.ivy.IvyArtifact"/>&gt;</classname> config)</title><para>Creates and adds a <apilink class="org.gradle.api.publish.ivy.IvyArtifact"/> to the set, which is configured by the associated action.

The semantics of this method are the same as <apilink class="org.gradle.api.publish.ivy.IvyPublication" method="artifact(java.lang.Object, org.gradle.api.Action)"/>.</para></section></section></chapter><chapter id="org.gradle.api.publish.ivy.IvyModuleDescriptorSpec"><title>IvyModuleDescriptorSpec</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.publish.ivy.IvyModuleDescriptorSpec" style="javadoc"/></seg></seglistitem></segmentedlist><para>The descriptor of any Ivy publication.
</para><para>
Corresponds to the <ulink url="http://ant.apache.org/ivy/history/latest-milestone/ivyfile.html">XML version of the Ivy Module Descriptor</ulink>.
</para><para>
The <apilink class="org.gradle.api.publish.ivy.IvyModuleDescriptorSpec" method="withXml(org.gradle.api.Action)"/> method can be used to modify the descriptor after it has been generated according to the publication data.
However, the preferred way to customize the project information to be published is to use the dedicated configuration methods exposed by this class, e.g.
<apilink class="org.gradle.api.publish.ivy.IvyModuleDescriptorSpec" method="description(org.gradle.api.Action)"/>.</para><section><title>Properties</title><table><title>Properties - IvyModuleDescriptorSpec</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.publish.ivy.IvyModuleDescriptorSpec:branch"><literal>branch</literal></link></td><td><para>The branch for this publication</para></td></tr><tr><td><link linkend="org.gradle.api.publish.ivy.IvyModuleDescriptorSpec:extraInfo"><literal>extraInfo</literal></link></td><td><para>The extra info element spec for this publication</para></td></tr><tr><td><link linkend="org.gradle.api.publish.ivy.IvyModuleDescriptorSpec:status"><literal>status</literal></link></td><td><para>The status for this publication.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - IvyModuleDescriptorSpec</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.publish.ivy.IvyModuleDescriptorSpec:author(org.gradle.api.Action)">author</link>(action)</literal></td><td><para>Creates, configures and adds an author to this publication.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.publish.ivy.IvyModuleDescriptorSpec:description(org.gradle.api.Action)">description</link>(action)</literal></td><td><para>Configures the description for this publication.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.publish.ivy.IvyModuleDescriptorSpec:extraInfo(java.lang.String, java.lang.String, java.lang.String)">extraInfo</link>(namespace, elementName, value)</literal></td><td><para>Adds a new extra info element to the publication</para></td></tr><tr><td><literal><link linkend="org.gradle.api.publish.ivy.IvyModuleDescriptorSpec:license(org.gradle.api.Action)">license</link>(action)</literal></td><td><para>Creates, configures and adds a license to this publication.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.publish.ivy.IvyModuleDescriptorSpec:withXml(org.gradle.api.Action)">withXml</link>(action)</literal></td><td><para>Allow configuration of the descriptor, after it has been generated according to the input data.

</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.publish.ivy.IvyModuleDescriptorSpec:branch" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>branch</literal></title><para>The branch for this publication</para></section><section id="org.gradle.api.publish.ivy.IvyModuleDescriptorSpec:extraInfo" role="detail"><title><apilink class="org.gradle.api.publish.ivy.IvyExtraInfoSpec"/> <literal>extraInfo</literal> (read-only)</title><para>The extra info element spec for this publication</para></section><section id="org.gradle.api.publish.ivy.IvyModuleDescriptorSpec:status" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>status</literal></title><para>The status for this publication.</para></section></section><section><title>Method details</title><section id="org.gradle.api.publish.ivy.IvyModuleDescriptorSpec:author(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>author</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.publish.ivy.IvyModuleDescriptorAuthor"/>&gt;</classname> action)</title><para>Creates, configures and adds an author to this publication.</para></section><section id="org.gradle.api.publish.ivy.IvyModuleDescriptorSpec:description(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>description</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.publish.ivy.IvyModuleDescriptorDescription"/>&gt;</classname> action)</title><para>Configures the description for this publication.</para></section><section id="org.gradle.api.publish.ivy.IvyModuleDescriptorSpec:extraInfo(java.lang.String, java.lang.String, java.lang.String)" role="detail"><title><classname>void</classname> <literal>extraInfo</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> namespace, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> elementName, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> value)</title><para>Adds a new extra info element to the publication</para></section><section id="org.gradle.api.publish.ivy.IvyModuleDescriptorSpec:license(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>license</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.publish.ivy.IvyModuleDescriptorLicense"/>&gt;</classname> action)</title><para>Creates, configures and adds a license to this publication.</para></section><section id="org.gradle.api.publish.ivy.IvyModuleDescriptorSpec:withXml(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>withXml</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.XmlProvider"/>&gt;</classname> action)</title><para>Allow configuration of the descriptor, after it has been generated according to the input data.

</para><programlisting language="java">
plugins {
    id 'ivy-publish'
}

publishing {
  publications {
    ivy(IvyPublication) {
      descriptor {
        withXml {
          asNode().dependencies.dependency.find { it.@org == "junit" }.@rev = "4.10"
        }
      }
    }
  }
}
</programlisting><para>

Note that due to Gradle's internal type conversion system, you can pass a Groovy closure to this method and
it will be automatically converted to an <literal>Action</literal>.
</para><para>
Each action/closure passed to this method will be stored as a callback, and executed when the publication
that this descriptor is attached to is published.
</para><para>
For details on the structure of the XML to be modified, see <ulink url="http://ant.apache.org/ivy/history/latest-milestone/ivyfile.html">the
Ivy Module Descriptor reference</ulink>.</para></section></section></chapter><chapter id="org.gradle.api.publish.PublicationArtifact"><title>PublicationArtifact</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.publish.PublicationArtifact" style="javadoc"/></seg></seglistitem></segmentedlist><segmentedlist><segtitle>Known Subtypes</segtitle><seglistitem><seg><simplelist columns="1" type="vert"><member><apilink class="org.gradle.api.publish.ivy.IvyArtifact"/></member><member><apilink class="org.gradle.api.publish.maven.MavenArtifact"/></member></simplelist></seg></seglistitem></segmentedlist><para>An artifact published as part of a <apilink class="org.gradle.api.publish.Publication"/>.</para><section><title>Properties</title><table><title>Properties - PublicationArtifact</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.publish.PublicationArtifact:buildDependencies"><literal>buildDependencies</literal></link></td><td><para>Returns a dependency which contains the tasks which build this artifact. All <literal>Buildable</literal> implementations
must ensure that the returned dependency object is live, so that it tracks changes to the dependencies of this
buildable.</para></td></tr><tr><td><link linkend="org.gradle.api.publish.PublicationArtifact:file"><literal>file</literal></link></td><td><para>The actual file contents to publish.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - PublicationArtifact</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.publish.PublicationArtifact:builtBy(java.lang.Object[])">builtBy</link>(tasks)</literal></td><td><para>Registers some tasks which build this artifact.</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.publish.PublicationArtifact:buildDependencies" role="detail"><title><apilink class="org.gradle.api.tasks.TaskDependency"/> <literal>buildDependencies</literal> (read-only)</title><para>Returns a dependency which contains the tasks which build this artifact. All <literal>Buildable</literal> implementations
must ensure that the returned dependency object is live, so that it tracks changes to the dependencies of this
buildable.</para></section><section id="org.gradle.api.publish.PublicationArtifact:file" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>file</literal> (read-only)</title><para>The actual file contents to publish.</para></section></section><section><title>Method details</title><section id="org.gradle.api.publish.PublicationArtifact:builtBy(java.lang.Object[])" role="detail"><title><classname>void</classname> <literal>builtBy</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink>...</classname> tasks)</title><para>Registers some tasks which build this artifact.</para></section></section></chapter><chapter id="org.gradle.api.publish.ivy.IvyArtifact"><title>IvyArtifact</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.publish.ivy.IvyArtifact" style="javadoc"/></seg></seglistitem></segmentedlist><para>An artifact published as part of a <apilink class="org.gradle.api.publish.ivy.IvyPublication"/>.</para><section><title>Properties</title><table><title>Properties - IvyArtifact</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.publish.ivy.IvyArtifact:buildDependencies"><literal>buildDependencies</literal></link></td><td><para>Returns a dependency which contains the tasks which build this artifact. All <literal>Buildable</literal> implementations
must ensure that the returned dependency object is live, so that it tracks changes to the dependencies of this
buildable.</para></td></tr><tr><td><link linkend="org.gradle.api.publish.ivy.IvyArtifact:classifier"><literal>classifier</literal></link></td><td><para>The classifier used to publish the artifact file.
A <literal>null</literal> value (the default) indicates that this artifact will be published without a classifier.</para></td></tr><tr><td><link linkend="org.gradle.api.publish.ivy.IvyArtifact:conf"><literal>conf</literal></link></td><td><para>A comma separated list of public configurations in which this artifact is published.
The '*' wildcard is used to designate that the artifact is published in all public configurations.
A <literal>null</literal> value (the default) indicates that this artifact will be published without a conf attribute.</para></td></tr><tr><td><link linkend="org.gradle.api.publish.ivy.IvyArtifact:extension"><literal>extension</literal></link></td><td><para>The extension used to publish the artifact file, never <literal>null</literal>.
For an artifact without an extension, this value will be an empty String.</para></td></tr><tr><td><link linkend="org.gradle.api.publish.ivy.IvyArtifact:file"><literal>file</literal></link></td><td><para>The actual file contents to publish.</para></td></tr><tr><td><link linkend="org.gradle.api.publish.ivy.IvyArtifact:name"><literal>name</literal></link></td><td><para>The name used to publish the artifact file, never <literal>null</literal>.
Defaults to the name of the module that this artifact belongs to.</para></td></tr><tr><td><link linkend="org.gradle.api.publish.ivy.IvyArtifact:type"><literal>type</literal></link></td><td><para>The type used to publish the artifact file, never <literal>null</literal>.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - IvyArtifact</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.publish.ivy.IvyArtifact:builtBy(java.lang.Object[])">builtBy</link>(tasks)</literal></td><td><para>Registers some tasks which build this artifact.</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.publish.ivy.IvyArtifact:buildDependencies" role="detail"><title><apilink class="org.gradle.api.tasks.TaskDependency"/> <literal>buildDependencies</literal> (read-only)</title><para>Returns a dependency which contains the tasks which build this artifact. All <literal>Buildable</literal> implementations
must ensure that the returned dependency object is live, so that it tracks changes to the dependencies of this
buildable.</para></section><section id="org.gradle.api.publish.ivy.IvyArtifact:classifier" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>classifier</literal></title><para>The classifier used to publish the artifact file.
A <literal>null</literal> value (the default) indicates that this artifact will be published without a classifier.</para></section><section id="org.gradle.api.publish.ivy.IvyArtifact:conf" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>conf</literal></title><para>A comma separated list of public configurations in which this artifact is published.
The '*' wildcard is used to designate that the artifact is published in all public configurations.
A <literal>null</literal> value (the default) indicates that this artifact will be published without a conf attribute.</para></section><section id="org.gradle.api.publish.ivy.IvyArtifact:extension" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>extension</literal></title><para>The extension used to publish the artifact file, never <literal>null</literal>.
For an artifact without an extension, this value will be an empty String.</para></section><section id="org.gradle.api.publish.ivy.IvyArtifact:file" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>file</literal> (read-only)</title><para>The actual file contents to publish.</para></section><section id="org.gradle.api.publish.ivy.IvyArtifact:name" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>name</literal></title><para>The name used to publish the artifact file, never <literal>null</literal>.
Defaults to the name of the module that this artifact belongs to.</para></section><section id="org.gradle.api.publish.ivy.IvyArtifact:type" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>type</literal></title><para>The type used to publish the artifact file, never <literal>null</literal>.</para></section></section><section><title>Method details</title><section id="org.gradle.api.publish.ivy.IvyArtifact:builtBy(java.lang.Object[])" role="detail"><title><classname>void</classname> <literal>builtBy</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink>...</classname> tasks)</title><para>Registers some tasks which build this artifact.</para></section></section></chapter><chapter id="org.gradle.api.publish.ivy.IvyModuleDescriptorAuthor"><title>IvyModuleDescriptorAuthor</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.publish.ivy.IvyModuleDescriptorAuthor" style="javadoc"/></seg></seglistitem></segmentedlist><para>An author of an Ivy publication.</para><section><title>Properties</title><table><title>Properties - IvyModuleDescriptorAuthor</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.publish.ivy.IvyModuleDescriptorAuthor:name"><literal>name</literal></link></td><td><para>The name of this author.</para></td></tr><tr><td><link linkend="org.gradle.api.publish.ivy.IvyModuleDescriptorAuthor:url"><literal>url</literal></link></td><td><para>The URL of this author.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.publish.ivy.IvyModuleDescriptorAuthor:name" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>name</literal></title><para>The name of this author.</para></section><section id="org.gradle.api.publish.ivy.IvyModuleDescriptorAuthor:url" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>url</literal></title><para>The URL of this author.</para></section></section></chapter><chapter id="org.gradle.api.publish.ivy.IvyModuleDescriptorLicense"><title>IvyModuleDescriptorLicense</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.publish.ivy.IvyModuleDescriptorLicense" style="javadoc"/></seg></seglistitem></segmentedlist><para>A license of an Ivy publication.</para><section><title>Properties</title><table><title>Properties - IvyModuleDescriptorLicense</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.publish.ivy.IvyModuleDescriptorLicense:name"><literal>name</literal></link></td><td><para>The name of this license.</para></td></tr><tr><td><link linkend="org.gradle.api.publish.ivy.IvyModuleDescriptorLicense:url"><literal>url</literal></link></td><td><para>The URL of this license.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.publish.ivy.IvyModuleDescriptorLicense:name" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>name</literal></title><para>The name of this license.</para></section><section id="org.gradle.api.publish.ivy.IvyModuleDescriptorLicense:url" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>url</literal></title><para>The URL of this license.</para></section></section></chapter><chapter id="org.gradle.api.publish.ivy.IvyModuleDescriptorDescription"><title>IvyModuleDescriptorDescription</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.publish.ivy.IvyModuleDescriptorDescription" style="javadoc"/></seg></seglistitem></segmentedlist><para>The description of an Ivy publication.</para><section><title>Properties</title><table><title>Properties - IvyModuleDescriptorDescription</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.publish.ivy.IvyModuleDescriptorDescription:homepage"><literal>homepage</literal></link></td><td><para>The homepage of the publication of this description.</para></td></tr><tr><td><link linkend="org.gradle.api.publish.ivy.IvyModuleDescriptorDescription:text"><literal>text</literal></link></td><td><para>The text of this description.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.publish.ivy.IvyModuleDescriptorDescription:homepage" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>homepage</literal></title><para>The homepage of the publication of this description.</para></section><section id="org.gradle.api.publish.ivy.IvyModuleDescriptorDescription:text" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>text</literal></title><para>The text of this description.</para></section></section></chapter><chapter id="org.gradle.api.publish.maven.MavenPublication"><title>MavenPublication</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.publish.maven.MavenPublication" style="javadoc"/></seg></seglistitem></segmentedlist><para>A <literal>MavenPublication</literal> is the representation/configuration of how Gradle should publish something in Maven format.

You directly add a named Maven publication the project's <literal>publishing.publications</literal> container by providing <apilink class="org.gradle.api.publish.maven.MavenPublication"/> as the type.
</para><programlisting language="java">
publishing {
  publications {
    myPublicationName(MavenPublication) {
      // Configure the publication here
    }
  }
}
</programlisting><para>

The default Maven POM identifying attributes are mapped as follows:
</para><itemizedlist><listitem><literal>groupId</literal> - <literal>project.group</literal></listitem><listitem><literal>artifactId</literal> - <literal>project.name</literal></listitem><listitem><literal>version</literal> - <literal>project.version</literal></listitem></itemizedlist><para>
For certain common use cases, it's often sufficient to specify the component to publish, and nothing more (<apilink class="org.gradle.api.publish.maven.MavenPublication" method="from(org.gradle.api.component.SoftwareComponent)"/>.
The published component is used to determine which artifacts to publish, and which dependencies should be listed in the generated POM file.
</para><para>
To add additional artifacts to the set published, use the <apilink class="org.gradle.api.publish.maven.MavenPublication" method="artifact(java.lang.Object)"/> and <apilink class="org.gradle.api.publish.maven.MavenPublication" method="artifact(java.lang.Object, org.gradle.api.Action)"/> methods.
You can also completely replace the set of published artifacts using <apilink class="org.gradle.api.publish.maven.MavenPublication" method="setArtifacts(java.lang.Iterable)"/>.
Together, these methods give you full control over what artifacts will be published.
</para><para>
To customize the metadata published in the generated POM, set properties, e.g. <apilink class="org.gradle.api.publish.maven.MavenPom" method="getDescription()"/>, on the POM returned via the <apilink class="org.gradle.api.publish.maven.MavenPublication" method="getPom()"/>
method or directly by an action (or closure) passed into <apilink class="org.gradle.api.publish.maven.MavenPublication" method="pom(org.gradle.api.Action)"/>.
As a last resort, it is possible to modify the generated POM using the <apilink class="org.gradle.api.publish.maven.MavenPom" method="withXml(org.gradle.api.Action)"/> method.
</para><programlisting language="java">
// Example of publishing a Java module with a source artifact and a customized POM
plugins {
    id 'java'
    id 'maven-publish'
}

task sourceJar(type: Jar) {
  from sourceSets.main.allJava
  archiveClassifier = "sources"
}

publishing {
  publications {
    myPublication(MavenPublication) {
      from components.java
      artifact sourceJar
      pom {
        name = "Demo"
        description = "A demonstration of Maven POM customization"
        url = "http://www.example.com/project"
        licenses {
          license {
            name = "The Apache License, Version 2.0"
            url = "http://www.apache.org/licenses/LICENSE-2.0.txt"
          }
        }
        developers {
          developer {
            id = "johnd"
            name = "John Doe"
            email = "john.doe@example.com"
          }
        }
        scm {
          connection = "scm:svn:http://subversion.example.com/svn/project/trunk/"
          developerConnection = "scm:svn:https://subversion.example.com/svn/project/trunk/"
          url = "http://subversion.example.com/svn/project/trunk/"
        }
      }
    }
  }
}
</programlisting><section><title>Properties</title><table><title>Properties - MavenPublication</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.publish.maven.MavenPublication:artifactId"><literal>artifactId</literal></link></td><td><para>The artifactId for this publication.</para></td></tr><tr><td><link linkend="org.gradle.api.publish.maven.MavenPublication:artifacts"><literal>artifacts</literal></link></td><td><para>The complete set of artifacts for this publication.</para></td></tr><tr><td><link linkend="org.gradle.api.publish.maven.MavenPublication:groupId"><literal>groupId</literal></link></td><td><para>The groupId for this publication.</para></td></tr><tr><td><link linkend="org.gradle.api.publish.maven.MavenPublication:pom"><literal>pom</literal></link></td><td><para>The POM that will be published.</para></td></tr><tr><td><link linkend="org.gradle.api.publish.maven.MavenPublication:version"><literal>version</literal></link></td><td><para>The version for this publication.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - MavenPublication</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.publish.maven.MavenPublication:artifact(java.lang.Object)">artifact</link>(source)</literal></td><td><para>Creates a custom <apilink class="org.gradle.api.publish.maven.MavenArtifact"/> to be included in the publication.

The <literal>artifact</literal> method can take a variety of input:
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.publish.maven.MavenPublication:artifact(java.lang.Object, org.gradle.api.Action)">artifact</link>(source, config)</literal></td><td><para>Creates an <apilink class="org.gradle.api.publish.maven.MavenArtifact"/> to be included in the publication, which is configured by the associated action.

The first parameter is used to create a custom artifact and add it to the publication, as per <apilink class="org.gradle.api.publish.maven.MavenPublication" method="artifact(java.lang.Object)"/>.
The created <apilink class="org.gradle.api.publish.maven.MavenArtifact"/> is then configured using the supplied action, which can override the extension or classifier of the artifact.
This method also accepts the configure action as a closure argument, by type coercion.

</para></td></tr><tr><td><literal><link linkend="org.gradle.api.publish.maven.MavenPublication:from(org.gradle.api.component.SoftwareComponent)">from</link>(component)</literal></td><td><para>Provides the software component that should be published.

</para></td></tr><tr><td><literal><link linkend="org.gradle.api.publish.maven.MavenPublication:pom(org.gradle.api.Action)">pom</link>(configure)</literal></td><td><para>Configures the POM that will be published.

The supplied action will be executed against the <apilink class="org.gradle.api.publish.maven.MavenPublication" method="getPom()"/> result. This method also accepts a closure argument, by type coercion.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.publish.maven.MavenPublication:setArtifacts(java.lang.Iterable)">setArtifacts</link>(sources)</literal></td><td><para>Clears any previously added artifacts from <apilink class="org.gradle.api.publish.maven.MavenPublication" method="getArtifacts()"/> and creates artifacts from the specified sources.
Each supplied source is interpreted as per <apilink class="org.gradle.api.publish.maven.MavenPublication" method="artifact(java.lang.Object)"/>.

For example, to exclude the dependencies declared by a component and instead use a custom set of artifacts:
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.publish.maven.MavenPublication:suppressAllPomMetadataWarnings()">suppressAllPomMetadataWarnings</link>()</literal></td><td><para>Silences all the compatibility warnings for the Maven publication.

Warnings are emitted when Gradle features are used that cannot be mapped completely to Maven POM.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.publish.maven.MavenPublication:suppressPomMetadataWarningsFor(java.lang.String)">suppressPomMetadataWarningsFor</link>(variantName)</literal></td><td><para>Silences the compatibility warnings for the Maven publication for the specified variant.

Warnings are emitted when Gradle features are used that cannot be mapped completely to Maven POM.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.publish.maven.MavenPublication:versionMapping(org.gradle.api.Action)">versionMapping</link>(configureAction)</literal></td><td><para>Configures the version mapping strategy.

For example, to use resolved versions for runtime dependencies:
</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.publish.maven.MavenPublication:artifactId" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>artifactId</literal></title><para>The artifactId for this publication.</para></section><section id="org.gradle.api.publish.maven.MavenPublication:artifacts" role="detail"><title><apilink class="org.gradle.api.publish.maven.MavenArtifactSet"/> <literal>artifacts</literal></title><para>The complete set of artifacts for this publication.</para></section><section id="org.gradle.api.publish.maven.MavenPublication:groupId" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>groupId</literal></title><para>The groupId for this publication.</para></section><section id="org.gradle.api.publish.maven.MavenPublication:pom" role="detail"><title><apilink class="org.gradle.api.publish.maven.MavenPom"/> <literal>pom</literal> (read-only)</title><para>The POM that will be published.</para></section><section id="org.gradle.api.publish.maven.MavenPublication:version" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>version</literal></title><para>The version for this publication.</para></section></section><section><title>Method details</title><section id="org.gradle.api.publish.maven.MavenPublication:artifact(java.lang.Object)" role="detail"><title><apilink class="org.gradle.api.publish.maven.MavenArtifact"/> <literal>artifact</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> source)</title><para>Creates a custom <apilink class="org.gradle.api.publish.maven.MavenArtifact"/> to be included in the publication.

The <literal>artifact</literal> method can take a variety of input:
</para><itemizedlist><listitem>A <apilink class="org.gradle.api.artifacts.PublishArtifact"/> instance. Extension and classifier values are taken from the wrapped instance.</listitem><listitem>An <apilink class="org.gradle.api.tasks.bundling.AbstractArchiveTask"/> instance. Extension and classifier values are taken from the wrapped instance.</listitem><listitem>Anything that can be resolved to a <ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> via the <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/> method.
         Extension and classifier values are interpolated from the file name.</listitem><listitem>A <ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink> that contains a 'source' entry that can be resolved as any of the other input types, including file.
        This map can contain a 'classifier' and an 'extension' entry to further configure the constructed artifact.</listitem></itemizedlist><para>

The following example demonstrates the addition of various custom artifacts.
</para><programlisting language="java">
plugins {
    id 'maven-publish'
}

task sourceJar(type: Jar) {
  archiveClassifier = "sources"
}

publishing {
  publications {
    maven(MavenPublication) {
      artifact sourceJar // Publish the output of the sourceJar task
      artifact 'my-file-name.jar' // Publish a file created outside of the build
      artifact source: sourceJar, classifier: 'src', extension: 'zip'
    }
  }
}
</programlisting></section><section id="org.gradle.api.publish.maven.MavenPublication:artifact(java.lang.Object, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.publish.maven.MavenArtifact"/> <literal>artifact</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> source, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.publish.maven.MavenArtifact"/>&gt;</classname> config)</title><para>Creates an <apilink class="org.gradle.api.publish.maven.MavenArtifact"/> to be included in the publication, which is configured by the associated action.

The first parameter is used to create a custom artifact and add it to the publication, as per <apilink class="org.gradle.api.publish.maven.MavenPublication" method="artifact(java.lang.Object)"/>.
The created <apilink class="org.gradle.api.publish.maven.MavenArtifact"/> is then configured using the supplied action, which can override the extension or classifier of the artifact.
This method also accepts the configure action as a closure argument, by type coercion.

</para><programlisting language="java">
plugins {
    id 'maven-publish'
}

task sourceJar(type: Jar) {
  archiveClassifier = "sources"
}

publishing {
  publications {
    maven(MavenPublication) {
      artifact(sourceJar) {
        // These values will be used instead of the values from the task. The task values will not be updated.
        classifier = "src"
        extension = "zip"
      }
      artifact("my-docs-file.htm") {
        classifier = "documentation"
        extension = "html"
      }
    }
  }
}
</programlisting></section><section id="org.gradle.api.publish.maven.MavenPublication:from(org.gradle.api.component.SoftwareComponent)" role="detail"><title><classname>void</classname> <literal>from</literal>(<apilink class="org.gradle.api.component.SoftwareComponent"/> component)</title><para>Provides the software component that should be published.

</para><itemizedlist><listitem>Any artifacts declared by the component will be included in the publication.</listitem><listitem>The dependencies declared by the component will be included in the published meta-data.</listitem></itemizedlist><para>

Currently 3 types of component are supported: 'components.java' (added by the JavaPlugin), 'components.web' (added by the WarPlugin)
and `components.javaPlatform` (added by the JavaPlatformPlugin).

For any individual MavenPublication, only a single component can be provided in this way.

The following example demonstrates how to publish the 'java' component to a Maven repository.
</para><programlisting language="java">
plugins {
    id 'java'
    id 'maven-publish'
}

publishing {
  publications {
    maven(MavenPublication) {
      from components.java
    }
  }
}
</programlisting></section><section id="org.gradle.api.publish.maven.MavenPublication:pom(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>pom</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.publish.maven.MavenPom"/>&gt;</classname> configure)</title><para>Configures the POM that will be published.

The supplied action will be executed against the <apilink class="org.gradle.api.publish.maven.MavenPublication" method="getPom()"/> result. This method also accepts a closure argument, by type coercion.</para></section><section id="org.gradle.api.publish.maven.MavenPublication:setArtifacts(java.lang.Iterable)" role="detail"><title><classname>void</classname> <literal>setArtifacts</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;?&gt;</classname> sources)</title><para>Clears any previously added artifacts from <apilink class="org.gradle.api.publish.maven.MavenPublication" method="getArtifacts()"/> and creates artifacts from the specified sources.
Each supplied source is interpreted as per <apilink class="org.gradle.api.publish.maven.MavenPublication" method="artifact(java.lang.Object)"/>.

For example, to exclude the dependencies declared by a component and instead use a custom set of artifacts:
</para><programlisting language="java">
plugins {
    id 'java'
    id 'maven-publish'
}

task sourceJar(type: Jar) {
  archiveClassifier = "sources"
}

publishing {
  publications {
    maven(MavenPublication) {
      from components.java
      artifacts = ["my-custom-jar.jar", sourceJar]
    }
  }
}
</programlisting></section><section id="org.gradle.api.publish.maven.MavenPublication:suppressAllPomMetadataWarnings()" role="detail"><title><classname>void</classname> <literal>suppressAllPomMetadataWarnings</literal>()</title><para>Silences all the compatibility warnings for the Maven publication.

Warnings are emitted when Gradle features are used that cannot be mapped completely to Maven POM.</para></section><section id="org.gradle.api.publish.maven.MavenPublication:suppressPomMetadataWarningsFor(java.lang.String)" role="detail"><title><classname>void</classname> <literal>suppressPomMetadataWarningsFor</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> variantName)</title><para>Silences the compatibility warnings for the Maven publication for the specified variant.

Warnings are emitted when Gradle features are used that cannot be mapped completely to Maven POM.</para></section><section id="org.gradle.api.publish.maven.MavenPublication:versionMapping(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>versionMapping</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.publish.VersionMappingStrategy"/>&gt;</classname> configureAction)</title><para>Configures the version mapping strategy.

For example, to use resolved versions for runtime dependencies:
</para><programlisting language="java">
plugins {
    id 'java'
    id 'maven-publish'
}

publishing {
  publications {
    maven(MavenPublication) {
      from components.java
      versionMapping {
        usage('java-runtime'){
          fromResolutionResult()
        }
      }
    }
  }
}
</programlisting></section></section></chapter><chapter id="org.gradle.api.publish.maven.MavenArtifactSet"><title>MavenArtifactSet</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.publish.maven.MavenArtifactSet" style="javadoc"/></seg></seglistitem></segmentedlist><para>A Collection of <apilink class="org.gradle.api.publish.maven.MavenArtifact"/>s to be included in a <apilink class="org.gradle.api.publish.maven.MavenPublication"/>.

Being a <apilink class="org.gradle.api.DomainObjectSet"/>, a <literal>MavenArtifactSet</literal> provides convenient methods for querying, filtering, and applying actions to the set of <apilink class="org.gradle.api.publish.maven.MavenArtifact"/>s.

</para><programlisting language="java">
plugins {
    id 'maven-publish'
}

def publication = publishing.publications.create("name", MavenPublication)
def artifacts = publication.artifacts

artifacts.matching({
    it.classifier == "classy"
}).all({
    it.extension = "ext"
})
</programlisting><section><title>Properties</title><para>No properties</para></section><section><title>Methods</title><table><title>Methods - MavenArtifactSet</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.publish.maven.MavenArtifactSet:artifact(java.lang.Object)">artifact</link>(source)</literal></td><td><para>Creates and adds a <apilink class="org.gradle.api.publish.maven.MavenArtifact"/> to the set.

The semantics of this method are the same as <apilink class="org.gradle.api.publish.maven.MavenPublication" method="artifact(java.lang.Object)"/>.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.publish.maven.MavenArtifactSet:artifact(java.lang.Object, org.gradle.api.Action)">artifact</link>(source, config)</literal></td><td><para>Creates and adds a <apilink class="org.gradle.api.publish.maven.MavenArtifact"/> to the set, which is configured by the associated action.

The semantics of this method are the same as <apilink class="org.gradle.api.publish.maven.MavenPublication" method="artifact(java.lang.Object, org.gradle.api.Action)"/>.</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Method details</title><section id="org.gradle.api.publish.maven.MavenArtifactSet:artifact(java.lang.Object)" role="detail"><title><apilink class="org.gradle.api.publish.maven.MavenArtifact"/> <literal>artifact</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> source)</title><para>Creates and adds a <apilink class="org.gradle.api.publish.maven.MavenArtifact"/> to the set.

The semantics of this method are the same as <apilink class="org.gradle.api.publish.maven.MavenPublication" method="artifact(java.lang.Object)"/>.</para></section><section id="org.gradle.api.publish.maven.MavenArtifactSet:artifact(java.lang.Object, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.publish.maven.MavenArtifact"/> <literal>artifact</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> source, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.publish.maven.MavenArtifact"/>&gt;</classname> config)</title><para>Creates and adds a <apilink class="org.gradle.api.publish.maven.MavenArtifact"/> to the set, which is configured by the associated action.

The semantics of this method are the same as <apilink class="org.gradle.api.publish.maven.MavenPublication" method="artifact(java.lang.Object, org.gradle.api.Action)"/>.</para></section></section></chapter><chapter id="org.gradle.api.publish.maven.MavenPom"><title>MavenPom</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.publish.maven.MavenPom" style="javadoc"/></seg></seglistitem></segmentedlist><para>The POM for a Maven publication.

</para><para>The <apilink class="org.gradle.api.publish.maven.MavenPom" method="withXml(org.gradle.api.Action)"/> method can be used to modify the
descriptor after it has been generated according to the publication data.
However, the preferred way to customize the project information to be published
is to use the dedicated properties exposed by this class, e.g.
<apilink class="org.gradle.api.publish.maven.MavenPom" method="getDescription()"/>. Please refer to the official
<ulink url="https://maven.apache.org/pom.html">POM Reference</ulink> for detailed
information about the individual properties.</para><section><title>Properties</title><table><title>Properties - MavenPom</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.publish.maven.MavenPom:description"><literal>description</literal></link></td><td><para>A short, human-readable description for the publication represented by this POM.</para></td></tr><tr><td><link linkend="org.gradle.api.publish.maven.MavenPom:inceptionYear"><literal>inceptionYear</literal></link></td><td><para>The year the project producing the publication represented by this POM was first created.</para></td></tr><tr><td><link linkend="org.gradle.api.publish.maven.MavenPom:name"><literal>name</literal></link></td><td><para>The name for the publication represented by this POM.</para></td></tr><tr><td><link linkend="org.gradle.api.publish.maven.MavenPom:packaging"><literal>packaging</literal></link></td><td><para>The packaging (for example: jar, war) for the publication represented by this POM.</para></td></tr><tr><td><link linkend="org.gradle.api.publish.maven.MavenPom:url"><literal>url</literal></link></td><td><para>The URL of the home page for the project producing the publication represented by this POM.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - MavenPom</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.publish.maven.MavenPom:ciManagement(org.gradle.api.Action)">ciManagement</link>(action)</literal></td><td><para>Configures the CI management for the publication represented by this POM.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.publish.maven.MavenPom:contributors(org.gradle.api.Action)">contributors</link>(action)</literal></td><td><para>Configures the contributors for the publication represented by this POM.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.publish.maven.MavenPom:developers(org.gradle.api.Action)">developers</link>(action)</literal></td><td><para>Configures the developers for the publication represented by this POM.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.publish.maven.MavenPom:distributionManagement(org.gradle.api.Action)">distributionManagement</link>(action)</literal></td><td><para>Configures the distribution management for the publication represented by this POM.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.publish.maven.MavenPom:issueManagement(org.gradle.api.Action)">issueManagement</link>(action)</literal></td><td><para>Configures the issue management for the publication represented by this POM.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.publish.maven.MavenPom:licenses(org.gradle.api.Action)">licenses</link>(action)</literal></td><td><para>Configures the licenses for the publication represented by this POM.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.publish.maven.MavenPom:mailingLists(org.gradle.api.Action)">mailingLists</link>(action)</literal></td><td><para>Configures the mailing lists for the publication represented by this POM.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.publish.maven.MavenPom:organization(org.gradle.api.Action)">organization</link>(action)</literal></td><td><para>Configures the organization for the publication represented by this POM.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.publish.maven.MavenPom:scm(org.gradle.api.Action)">scm</link>(action)</literal></td><td><para>Configures the SCM (source control management) for the publication represented by this POM.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.publish.maven.MavenPom:withXml(org.gradle.api.Action)">withXml</link>(action)</literal></td><td><para>Allows configuration of the POM, after it has been generated according to the input data.

</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.publish.maven.MavenPom:description" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>description</literal></title><para>A short, human-readable description for the publication represented by this POM.</para></section><section id="org.gradle.api.publish.maven.MavenPom:inceptionYear" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>inceptionYear</literal></title><para>The year the project producing the publication represented by this POM was first created.</para></section><section id="org.gradle.api.publish.maven.MavenPom:name" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>name</literal></title><para>The name for the publication represented by this POM.</para></section><section id="org.gradle.api.publish.maven.MavenPom:packaging" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>packaging</literal></title><para>The packaging (for example: jar, war) for the publication represented by this POM.</para></section><section id="org.gradle.api.publish.maven.MavenPom:url" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>url</literal></title><para>The URL of the home page for the project producing the publication represented by this POM.</para></section></section><section><title>Method details</title><section id="org.gradle.api.publish.maven.MavenPom:ciManagement(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>ciManagement</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.publish.maven.MavenPomCiManagement"/>&gt;</classname> action)</title><para>Configures the CI management for the publication represented by this POM.</para></section><section id="org.gradle.api.publish.maven.MavenPom:contributors(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>contributors</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.publish.maven.MavenPomContributorSpec"/>&gt;</classname> action)</title><para>Configures the contributors for the publication represented by this POM.</para></section><section id="org.gradle.api.publish.maven.MavenPom:developers(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>developers</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.publish.maven.MavenPomDeveloperSpec"/>&gt;</classname> action)</title><para>Configures the developers for the publication represented by this POM.</para></section><section id="org.gradle.api.publish.maven.MavenPom:distributionManagement(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>distributionManagement</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.publish.maven.MavenPomDistributionManagement"/>&gt;</classname> action)</title><para>Configures the distribution management for the publication represented by this POM.</para></section><section id="org.gradle.api.publish.maven.MavenPom:issueManagement(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>issueManagement</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.publish.maven.MavenPomIssueManagement"/>&gt;</classname> action)</title><para>Configures the issue management for the publication represented by this POM.</para></section><section id="org.gradle.api.publish.maven.MavenPom:licenses(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>licenses</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.publish.maven.MavenPomLicenseSpec"/>&gt;</classname> action)</title><para>Configures the licenses for the publication represented by this POM.</para></section><section id="org.gradle.api.publish.maven.MavenPom:mailingLists(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>mailingLists</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.publish.maven.MavenPomMailingListSpec"/>&gt;</classname> action)</title><para>Configures the mailing lists for the publication represented by this POM.</para></section><section id="org.gradle.api.publish.maven.MavenPom:organization(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>organization</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.publish.maven.MavenPomOrganization"/>&gt;</classname> action)</title><para>Configures the organization for the publication represented by this POM.</para></section><section id="org.gradle.api.publish.maven.MavenPom:scm(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>scm</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.publish.maven.MavenPomScm"/>&gt;</classname> action)</title><para>Configures the SCM (source control management) for the publication represented by this POM.</para></section><section id="org.gradle.api.publish.maven.MavenPom:withXml(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>withXml</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.XmlProvider"/>&gt;</classname> action)</title><para>Allows configuration of the POM, after it has been generated according to the input data.

</para><programlisting language="java">
plugins {
    id 'maven-publish'
}

publishing {
  publications {
    maven(MavenPublication) {
      pom.withXml {
        asNode().appendNode('properties').appendNode('my-property', 'my-value')
      }
    }
  }
}
</programlisting><para>

Note that due to Gradle's internal type conversion system, you can pass a Groovy closure to this method and
it will be automatically converted to an <literal>Action</literal>.
</para><para>
Each action/closure passed to this method will be stored as a callback, and executed when the publication
that this descriptor is attached to is published.
</para><para>
For details on the structure of the XML to be modified, see <ulink url="http://maven.apache.org/pom.html">the POM reference</ulink>.</para></section></section></chapter><chapter id="org.gradle.api.publish.maven.MavenArtifact"><title>MavenArtifact</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.publish.maven.MavenArtifact" style="javadoc"/></seg></seglistitem></segmentedlist><para>An artifact published as part of a <apilink class="org.gradle.api.publish.maven.MavenPublication"/>.</para><section><title>Properties</title><table><title>Properties - MavenArtifact</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.publish.maven.MavenArtifact:buildDependencies"><literal>buildDependencies</literal></link></td><td><para>Returns a dependency which contains the tasks which build this artifact. All <literal>Buildable</literal> implementations
must ensure that the returned dependency object is live, so that it tracks changes to the dependencies of this
buildable.</para></td></tr><tr><td><link linkend="org.gradle.api.publish.maven.MavenArtifact:classifier"><literal>classifier</literal></link></td><td><para>The classifier used to publish the artifact file.
A <literal>null</literal> value (the default) indicates that this artifact will be published without a classifier.</para></td></tr><tr><td><link linkend="org.gradle.api.publish.maven.MavenArtifact:extension"><literal>extension</literal></link></td><td><para>The extension used to publish the artifact file, never <literal>null</literal>.
For an artifact without an extension, this value will be an empty String.</para></td></tr><tr><td><link linkend="org.gradle.api.publish.maven.MavenArtifact:file"><literal>file</literal></link></td><td><para>The actual file contents to publish.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - MavenArtifact</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.publish.maven.MavenArtifact:builtBy(java.lang.Object[])">builtBy</link>(tasks)</literal></td><td><para>Registers some tasks which build this artifact.</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.publish.maven.MavenArtifact:buildDependencies" role="detail"><title><apilink class="org.gradle.api.tasks.TaskDependency"/> <literal>buildDependencies</literal> (read-only)</title><para>Returns a dependency which contains the tasks which build this artifact. All <literal>Buildable</literal> implementations
must ensure that the returned dependency object is live, so that it tracks changes to the dependencies of this
buildable.</para></section><section id="org.gradle.api.publish.maven.MavenArtifact:classifier" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>classifier</literal></title><para>The classifier used to publish the artifact file.
A <literal>null</literal> value (the default) indicates that this artifact will be published without a classifier.</para></section><section id="org.gradle.api.publish.maven.MavenArtifact:extension" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>extension</literal></title><para>The extension used to publish the artifact file, never <literal>null</literal>.
For an artifact without an extension, this value will be an empty String.</para></section><section id="org.gradle.api.publish.maven.MavenArtifact:file" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>file</literal> (read-only)</title><para>The actual file contents to publish.</para></section></section><section><title>Method details</title><section id="org.gradle.api.publish.maven.MavenArtifact:builtBy(java.lang.Object[])" role="detail"><title><classname>void</classname> <literal>builtBy</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink>...</classname> tasks)</title><para>Registers some tasks which build this artifact.</para></section></section></chapter><chapter id="org.gradle.api.publish.maven.MavenPomCiManagement"><title>MavenPomCiManagement</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.publish.maven.MavenPomCiManagement" style="javadoc"/></seg></seglistitem></segmentedlist><para>The CI management system of a Maven publication.</para><section><title>Properties</title><table><title>Properties - MavenPomCiManagement</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.publish.maven.MavenPomCiManagement:system"><literal>system</literal></link></td><td><para>The name of this CI management system.</para></td></tr><tr><td><link linkend="org.gradle.api.publish.maven.MavenPomCiManagement:url"><literal>url</literal></link></td><td><para>The URL of this CI management system.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.publish.maven.MavenPomCiManagement:system" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>system</literal></title><para>The name of this CI management system.</para></section><section id="org.gradle.api.publish.maven.MavenPomCiManagement:url" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>url</literal></title><para>The URL of this CI management system.</para></section></section></chapter><chapter id="org.gradle.api.publish.maven.MavenPomContributor"><title>MavenPomContributor</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.publish.maven.MavenPomContributor" style="javadoc"/></seg></seglistitem></segmentedlist><para>A contributor of a Maven publication.</para><section><title>Properties</title><table><title>Properties - MavenPomContributor</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.publish.maven.MavenPomContributor:email"><literal>email</literal></link></td><td><para>The email</para></td></tr><tr><td><link linkend="org.gradle.api.publish.maven.MavenPomContributor:name"><literal>name</literal></link></td><td><para>The name of this contributor.</para></td></tr><tr><td><link linkend="org.gradle.api.publish.maven.MavenPomContributor:organization"><literal>organization</literal></link></td><td><para>The organization name of this contributor.</para></td></tr><tr><td><link linkend="org.gradle.api.publish.maven.MavenPomContributor:organizationUrl"><literal>organizationUrl</literal></link></td><td><para>The organization's URL of this contributor.</para></td></tr><tr><td><link linkend="org.gradle.api.publish.maven.MavenPomContributor:properties"><literal>properties</literal></link></td><td><para>The properties of this contributor.</para></td></tr><tr><td><link linkend="org.gradle.api.publish.maven.MavenPomContributor:roles"><literal>roles</literal></link></td><td><para>The roles of this contributor.</para></td></tr><tr><td><link linkend="org.gradle.api.publish.maven.MavenPomContributor:timezone"><literal>timezone</literal></link></td><td><para>The timezone of this contributor.</para></td></tr><tr><td><link linkend="org.gradle.api.publish.maven.MavenPomContributor:url"><literal>url</literal></link></td><td><para>The URL of this contributor.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.publish.maven.MavenPomContributor:email" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>email</literal></title><para>The email</para></section><section id="org.gradle.api.publish.maven.MavenPomContributor:name" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>name</literal></title><para>The name of this contributor.</para></section><section id="org.gradle.api.publish.maven.MavenPomContributor:organization" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>organization</literal></title><para>The organization name of this contributor.</para></section><section id="org.gradle.api.publish.maven.MavenPomContributor:organizationUrl" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>organizationUrl</literal></title><para>The organization's URL of this contributor.</para></section><section id="org.gradle.api.publish.maven.MavenPomContributor:properties" role="detail"><title><classname><apilink class="org.gradle.api.provider.MapProperty"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>properties</literal></title><para>The properties of this contributor.</para></section><section id="org.gradle.api.publish.maven.MavenPomContributor:roles" role="detail"><title><classname><apilink class="org.gradle.api.provider.SetProperty"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>roles</literal></title><para>The roles of this contributor.</para></section><section id="org.gradle.api.publish.maven.MavenPomContributor:timezone" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>timezone</literal></title><para>The timezone of this contributor.</para></section><section id="org.gradle.api.publish.maven.MavenPomContributor:url" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>url</literal></title><para>The URL of this contributor.</para></section></section></chapter><chapter id="org.gradle.api.publish.maven.MavenPomContributorSpec"><title>MavenPomContributorSpec</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.publish.maven.MavenPomContributorSpec" style="javadoc"/></seg></seglistitem></segmentedlist><para>Allows to add contributors of a Maven publication.</para><section><title>Properties</title><para>No properties</para></section><section><title>Methods</title><table><title>Methods - MavenPomContributorSpec</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.publish.maven.MavenPomContributorSpec:contributor(org.gradle.api.Action)">contributor</link>(action)</literal></td><td><para>Creates, configures and adds a contributor to the publication.</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Method details</title><section id="org.gradle.api.publish.maven.MavenPomContributorSpec:contributor(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>contributor</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.publish.maven.MavenPomContributor"/>&gt;</classname> action)</title><para>Creates, configures and adds a contributor to the publication.</para></section></section></chapter><chapter id="org.gradle.api.publish.maven.MavenPomDeveloper"><title>MavenPomDeveloper</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.publish.maven.MavenPomDeveloper" style="javadoc"/></seg></seglistitem></segmentedlist><para>A developer of a Maven publication.</para><section><title>Properties</title><table><title>Properties - MavenPomDeveloper</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.publish.maven.MavenPomDeveloper:email"><literal>email</literal></link></td><td><para>The email</para></td></tr><tr><td><link linkend="org.gradle.api.publish.maven.MavenPomDeveloper:id"><literal>id</literal></link></td><td><para>The unique ID of this developer in the SCM.</para></td></tr><tr><td><link linkend="org.gradle.api.publish.maven.MavenPomDeveloper:name"><literal>name</literal></link></td><td><para>The name of this developer.</para></td></tr><tr><td><link linkend="org.gradle.api.publish.maven.MavenPomDeveloper:organization"><literal>organization</literal></link></td><td><para>The organization name of this developer.</para></td></tr><tr><td><link linkend="org.gradle.api.publish.maven.MavenPomDeveloper:organizationUrl"><literal>organizationUrl</literal></link></td><td><para>The organization's URL of this developer.</para></td></tr><tr><td><link linkend="org.gradle.api.publish.maven.MavenPomDeveloper:properties"><literal>properties</literal></link></td><td><para>The properties of this developer.</para></td></tr><tr><td><link linkend="org.gradle.api.publish.maven.MavenPomDeveloper:roles"><literal>roles</literal></link></td><td><para>The roles of this developer.</para></td></tr><tr><td><link linkend="org.gradle.api.publish.maven.MavenPomDeveloper:timezone"><literal>timezone</literal></link></td><td><para>The timezone of this developer.</para></td></tr><tr><td><link linkend="org.gradle.api.publish.maven.MavenPomDeveloper:url"><literal>url</literal></link></td><td><para>The URL of this developer.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.publish.maven.MavenPomDeveloper:email" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>email</literal></title><para>The email</para></section><section id="org.gradle.api.publish.maven.MavenPomDeveloper:id" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>id</literal></title><para>The unique ID of this developer in the SCM.</para></section><section id="org.gradle.api.publish.maven.MavenPomDeveloper:name" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>name</literal></title><para>The name of this developer.</para></section><section id="org.gradle.api.publish.maven.MavenPomDeveloper:organization" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>organization</literal></title><para>The organization name of this developer.</para></section><section id="org.gradle.api.publish.maven.MavenPomDeveloper:organizationUrl" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>organizationUrl</literal></title><para>The organization's URL of this developer.</para></section><section id="org.gradle.api.publish.maven.MavenPomDeveloper:properties" role="detail"><title><classname><apilink class="org.gradle.api.provider.MapProperty"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>properties</literal></title><para>The properties of this developer.</para></section><section id="org.gradle.api.publish.maven.MavenPomDeveloper:roles" role="detail"><title><classname><apilink class="org.gradle.api.provider.SetProperty"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>roles</literal></title><para>The roles of this developer.</para></section><section id="org.gradle.api.publish.maven.MavenPomDeveloper:timezone" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>timezone</literal></title><para>The timezone of this developer.</para></section><section id="org.gradle.api.publish.maven.MavenPomDeveloper:url" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>url</literal></title><para>The URL of this developer.</para></section></section></chapter><chapter id="org.gradle.api.publish.maven.MavenPomDeveloperSpec"><title>MavenPomDeveloperSpec</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.publish.maven.MavenPomDeveloperSpec" style="javadoc"/></seg></seglistitem></segmentedlist><para>Allows to add developers to a Maven publication.</para><section><title>Properties</title><para>No properties</para></section><section><title>Methods</title><table><title>Methods - MavenPomDeveloperSpec</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.publish.maven.MavenPomDeveloperSpec:developer(org.gradle.api.Action)">developer</link>(action)</literal></td><td><para>Creates, configures and adds a developer to the publication.</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Method details</title><section id="org.gradle.api.publish.maven.MavenPomDeveloperSpec:developer(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>developer</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.publish.maven.MavenPomDeveloper"/>&gt;</classname> action)</title><para>Creates, configures and adds a developer to the publication.</para></section></section></chapter><chapter id="org.gradle.api.publish.maven.MavenPomDistributionManagement"><title>MavenPomDistributionManagement</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.publish.maven.MavenPomDistributionManagement" style="javadoc"/></seg></seglistitem></segmentedlist><para>The distribution management configuration of a Maven publication.</para><section><title>Properties</title><table><title>Properties - MavenPomDistributionManagement</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.publish.maven.MavenPomDistributionManagement:downloadUrl"><literal>downloadUrl</literal></link></td><td><para>The download URL of the corresponding Maven publication.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - MavenPomDistributionManagement</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.publish.maven.MavenPomDistributionManagement:relocation(org.gradle.api.Action)">relocation</link>(action)</literal></td><td><para>Configures the relocation information.</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.publish.maven.MavenPomDistributionManagement:downloadUrl" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>downloadUrl</literal></title><para>The download URL of the corresponding Maven publication.</para></section></section><section><title>Method details</title><section id="org.gradle.api.publish.maven.MavenPomDistributionManagement:relocation(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>relocation</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.publish.maven.MavenPomRelocation"/>&gt;</classname> action)</title><para>Configures the relocation information.</para></section></section></chapter><chapter id="org.gradle.api.publish.maven.MavenPomIssueManagement"><title>MavenPomIssueManagement</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.publish.maven.MavenPomIssueManagement" style="javadoc"/></seg></seglistitem></segmentedlist><para>The issue management system of a Maven publication.</para><section><title>Properties</title><table><title>Properties - MavenPomIssueManagement</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.publish.maven.MavenPomIssueManagement:system"><literal>system</literal></link></td><td><para>The name of this issue management system.</para></td></tr><tr><td><link linkend="org.gradle.api.publish.maven.MavenPomIssueManagement:url"><literal>url</literal></link></td><td><para>The URL of this issue management system.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.publish.maven.MavenPomIssueManagement:system" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>system</literal></title><para>The name of this issue management system.</para></section><section id="org.gradle.api.publish.maven.MavenPomIssueManagement:url" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>url</literal></title><para>The URL of this issue management system.</para></section></section></chapter><chapter id="org.gradle.api.publish.maven.MavenPomLicense"><title>MavenPomLicense</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.publish.maven.MavenPomLicense" style="javadoc"/></seg></seglistitem></segmentedlist><para>A license of a Maven publication.</para><section><title>Properties</title><table><title>Properties - MavenPomLicense</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.publish.maven.MavenPomLicense:comments"><literal>comments</literal></link></td><td><para>The comments of this license.</para></td></tr><tr><td><link linkend="org.gradle.api.publish.maven.MavenPomLicense:distribution"><literal>distribution</literal></link></td><td><para>The distribution of this license.</para></td></tr><tr><td><link linkend="org.gradle.api.publish.maven.MavenPomLicense:name"><literal>name</literal></link></td><td><para>The name of this license.</para></td></tr><tr><td><link linkend="org.gradle.api.publish.maven.MavenPomLicense:url"><literal>url</literal></link></td><td><para>The URL of this license.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.publish.maven.MavenPomLicense:comments" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>comments</literal></title><para>The comments of this license.</para></section><section id="org.gradle.api.publish.maven.MavenPomLicense:distribution" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>distribution</literal></title><para>The distribution of this license.</para></section><section id="org.gradle.api.publish.maven.MavenPomLicense:name" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>name</literal></title><para>The name of this license.</para></section><section id="org.gradle.api.publish.maven.MavenPomLicense:url" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>url</literal></title><para>The URL of this license.</para></section></section></chapter><chapter id="org.gradle.api.publish.maven.MavenPomLicenseSpec"><title>MavenPomLicenseSpec</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.publish.maven.MavenPomLicenseSpec" style="javadoc"/></seg></seglistitem></segmentedlist><para>Allows to add licenses to a Maven publication.</para><section><title>Properties</title><para>No properties</para></section><section><title>Methods</title><table><title>Methods - MavenPomLicenseSpec</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.publish.maven.MavenPomLicenseSpec:license(org.gradle.api.Action)">license</link>(action)</literal></td><td><para>Creates, configures and adds a license to the publication.</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Method details</title><section id="org.gradle.api.publish.maven.MavenPomLicenseSpec:license(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>license</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.publish.maven.MavenPomLicense"/>&gt;</classname> action)</title><para>Creates, configures and adds a license to the publication.</para></section></section></chapter><chapter id="org.gradle.api.publish.maven.MavenPomMailingList"><title>MavenPomMailingList</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.publish.maven.MavenPomMailingList" style="javadoc"/></seg></seglistitem></segmentedlist><para>A mailing list of a Maven publication.</para><section><title>Properties</title><table><title>Properties - MavenPomMailingList</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.publish.maven.MavenPomMailingList:archive"><literal>archive</literal></link></td><td><para>The URL where you can browse the archive of this mailing list.</para></td></tr><tr><td><link linkend="org.gradle.api.publish.maven.MavenPomMailingList:name"><literal>name</literal></link></td><td><para>The name of this mailing list.</para></td></tr><tr><td><link linkend="org.gradle.api.publish.maven.MavenPomMailingList:otherArchives"><literal>otherArchives</literal></link></td><td><para>The alternate URLs where you can browse the archive of this mailing list.</para></td></tr><tr><td><link linkend="org.gradle.api.publish.maven.MavenPomMailingList:post"><literal>post</literal></link></td><td><para>The email address or link that can be used to post to this mailing list.</para></td></tr><tr><td><link linkend="org.gradle.api.publish.maven.MavenPomMailingList:subscribe"><literal>subscribe</literal></link></td><td><para>The email address or link that can be used to subscribe to this mailing list.</para></td></tr><tr><td><link linkend="org.gradle.api.publish.maven.MavenPomMailingList:unsubscribe"><literal>unsubscribe</literal></link></td><td><para>The email address or link that can be used to subscribe to this mailing list.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.publish.maven.MavenPomMailingList:archive" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>archive</literal></title><para>The URL where you can browse the archive of this mailing list.</para></section><section id="org.gradle.api.publish.maven.MavenPomMailingList:name" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>name</literal></title><para>The name of this mailing list.</para></section><section id="org.gradle.api.publish.maven.MavenPomMailingList:otherArchives" role="detail"><title><classname><apilink class="org.gradle.api.provider.SetProperty"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>otherArchives</literal></title><para>The alternate URLs where you can browse the archive of this mailing list.</para></section><section id="org.gradle.api.publish.maven.MavenPomMailingList:post" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>post</literal></title><para>The email address or link that can be used to post to this mailing list.</para></section><section id="org.gradle.api.publish.maven.MavenPomMailingList:subscribe" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>subscribe</literal></title><para>The email address or link that can be used to subscribe to this mailing list.</para></section><section id="org.gradle.api.publish.maven.MavenPomMailingList:unsubscribe" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>unsubscribe</literal></title><para>The email address or link that can be used to subscribe to this mailing list.</para></section></section></chapter><chapter id="org.gradle.api.publish.maven.MavenPomMailingListSpec"><title>MavenPomMailingListSpec</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.publish.maven.MavenPomMailingListSpec" style="javadoc"/></seg></seglistitem></segmentedlist><para>Allows to add mailing lists to a Maven publication.</para><section><title>Properties</title><para>No properties</para></section><section><title>Methods</title><table><title>Methods - MavenPomMailingListSpec</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.publish.maven.MavenPomMailingListSpec:mailingList(org.gradle.api.Action)">mailingList</link>(action)</literal></td><td><para>Creates, configures and adds a mailing list to the publication.</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Method details</title><section id="org.gradle.api.publish.maven.MavenPomMailingListSpec:mailingList(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>mailingList</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.publish.maven.MavenPomMailingList"/>&gt;</classname> action)</title><para>Creates, configures and adds a mailing list to the publication.</para></section></section></chapter><chapter id="org.gradle.api.publish.maven.MavenPomOrganization"><title>MavenPomOrganization</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.publish.maven.MavenPomOrganization" style="javadoc"/></seg></seglistitem></segmentedlist><para>The organization of a Maven publication.</para><section><title>Properties</title><table><title>Properties - MavenPomOrganization</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.publish.maven.MavenPomOrganization:name"><literal>name</literal></link></td><td><para>The name of this organization.</para></td></tr><tr><td><link linkend="org.gradle.api.publish.maven.MavenPomOrganization:url"><literal>url</literal></link></td><td><para>The URL of this organization.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.publish.maven.MavenPomOrganization:name" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>name</literal></title><para>The name of this organization.</para></section><section id="org.gradle.api.publish.maven.MavenPomOrganization:url" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>url</literal></title><para>The URL of this organization.</para></section></section></chapter><chapter id="org.gradle.api.publish.maven.MavenPomRelocation"><title>MavenPomRelocation</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.publish.maven.MavenPomRelocation" style="javadoc"/></seg></seglistitem></segmentedlist><para>The relocation information of a Maven publication that has been moved
to a new group and/or artifact ID.</para><section><title>Properties</title><table><title>Properties - MavenPomRelocation</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.publish.maven.MavenPomRelocation:artifactId"><literal>artifactId</literal></link></td><td><para>The new artifact ID of the artifact.</para></td></tr><tr><td><link linkend="org.gradle.api.publish.maven.MavenPomRelocation:groupId"><literal>groupId</literal></link></td><td><para>The new group ID of the artifact.</para></td></tr><tr><td><link linkend="org.gradle.api.publish.maven.MavenPomRelocation:message"><literal>message</literal></link></td><td><para>The message to show the user for this relocation.</para></td></tr><tr><td><link linkend="org.gradle.api.publish.maven.MavenPomRelocation:version"><literal>version</literal></link></td><td><para>The new version of the artifact.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.publish.maven.MavenPomRelocation:artifactId" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>artifactId</literal></title><para>The new artifact ID of the artifact.</para></section><section id="org.gradle.api.publish.maven.MavenPomRelocation:groupId" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>groupId</literal></title><para>The new group ID of the artifact.</para></section><section id="org.gradle.api.publish.maven.MavenPomRelocation:message" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>message</literal></title><para>The message to show the user for this relocation.</para></section><section id="org.gradle.api.publish.maven.MavenPomRelocation:version" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>version</literal></title><para>The new version of the artifact.</para></section></section></chapter><chapter id="org.gradle.api.publish.maven.MavenPomScm"><title>MavenPomScm</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.publish.maven.MavenPomScm" style="javadoc"/></seg></seglistitem></segmentedlist><para>The SCM (source control management) of a Maven publication.</para><section><title>Properties</title><table><title>Properties - MavenPomScm</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.publish.maven.MavenPomScm:connection"><literal>connection</literal></link></td><td><para>The connection URL of this SCM.</para></td></tr><tr><td><link linkend="org.gradle.api.publish.maven.MavenPomScm:developerConnection"><literal>developerConnection</literal></link></td><td><para>The developer connection URL of this SCM.</para></td></tr><tr><td><link linkend="org.gradle.api.publish.maven.MavenPomScm:tag"><literal>tag</literal></link></td><td><para>The tag of current code in this SCM.</para></td></tr><tr><td><link linkend="org.gradle.api.publish.maven.MavenPomScm:url"><literal>url</literal></link></td><td><para>The browsable repository URL of this SCM.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.publish.maven.MavenPomScm:connection" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>connection</literal></title><para>The connection URL of this SCM.</para></section><section id="org.gradle.api.publish.maven.MavenPomScm:developerConnection" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>developerConnection</literal></title><para>The developer connection URL of this SCM.</para></section><section id="org.gradle.api.publish.maven.MavenPomScm:tag" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>tag</literal></title><para>The tag of current code in this SCM.</para></section><section id="org.gradle.api.publish.maven.MavenPomScm:url" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>url</literal></title><para>The browsable repository URL of this SCM.</para></section></section></chapter><chapter id="org.gradle.api.artifacts.repositories.AuthenticationSupported"><title>AuthenticationSupported</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.artifacts.repositories.AuthenticationSupported" style="javadoc"/></seg></seglistitem></segmentedlist><segmentedlist><segtitle>Known Subtypes</segtitle><seglistitem><seg><simplelist columns="1" type="vert"><member><apilink class="org.gradle.api.artifacts.repositories.IvyArtifactRepository"/></member><member><apilink class="org.gradle.api.artifacts.repositories.MavenArtifactRepository"/></member></simplelist></seg></seglistitem></segmentedlist><para>An artifact repository which supports username/password authentication.</para><section><title>Properties</title><table><title>Properties - AuthenticationSupported</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.artifacts.repositories.AuthenticationSupported:authentication"><literal>authentication</literal></link></td><td><para>The authentication schemes for this repository.</para></td></tr><tr><td><link linkend="org.gradle.api.artifacts.repositories.AuthenticationSupported:credentials"><literal>credentials</literal></link></td><td><para>The credentials of the specified type used to authenticate with this repository.
</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - AuthenticationSupported</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.artifacts.repositories.AuthenticationSupported:authentication(org.gradle.api.Action)">authentication</link>(action)</literal></td><td><para>Configures the authentication schemes for this repository.

</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.repositories.AuthenticationSupported:credentials(java.lang.Class)">credentials</link>(credentialsType)</literal></td><td><para>Configures the credentials for this repository that will be provided by the build.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.repositories.AuthenticationSupported:credentials(java.lang.Class, org.gradle.api.Action)">credentials</link>(credentialsType, action)</literal></td><td><para>Configures the credentials for this repository using the supplied action.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.repositories.AuthenticationSupported:credentials(org.gradle.api.Action)">credentials</link>(action)</literal></td><td><para>Configures the username and password credentials for this repository using the supplied action.
</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.artifacts.repositories.AuthenticationSupported:authentication" role="detail"><title><apilink class="org.gradle.api.artifacts.repositories.AuthenticationContainer"/> <literal>authentication</literal> (read-only)</title><para>The authentication schemes for this repository.</para></section><section id="org.gradle.api.artifacts.repositories.AuthenticationSupported:credentials" role="detail"><title><classname>T</classname> <literal>credentials</literal> (read-only)</title><para>The credentials of the specified type used to authenticate with this repository.
</para><para>
If no credentials have been assigned to this repository, an empty set of credentials of the specified type is assigned to this repository and returned.</para></section></section><section><title>Method details</title><section id="org.gradle.api.artifacts.repositories.AuthenticationSupported:authentication(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>authentication</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.artifacts.repositories.AuthenticationContainer"/>&gt;</classname> action)</title><para>Configures the authentication schemes for this repository.

</para><para>This method executes the given action against the <apilink class="org.gradle.api.artifacts.repositories.AuthenticationContainer"/> for this project. The <apilink class="org.gradle.api.artifacts.repositories.AuthenticationContainer"/> is passed to the closure as the closure's delegate.
</para><para>
If no authentication schemes have been assigned to this repository, a default set of authentication schemes are used based on the repository's transport scheme.

</para><programlisting language="java">
repositories {
    maven {
        url = "https://example.com/m2"
        authentication {
            basic(BasicAuthentication)
        }
    }
}
</programlisting><para>
Supported authentication scheme types extend <apilink class="org.gradle.authentication.Authentication"/>.</para></section><section id="org.gradle.api.artifacts.repositories.AuthenticationSupported:credentials(java.lang.Class)" role="detail"><title><classname>void</classname> <literal>credentials</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html"><classname>Class</classname></ulink>&lt;? extends <apilink class="org.gradle.api.credentials.Credentials"/>&gt;</classname> credentialsType)</title><para>Configures the credentials for this repository that will be provided by the build.
</para><para>
Credentials will be provided from Gradle properties based on the repository name.
If credentials for this repository can not be resolved and the repository will be used in the current build, then the build will fail to start and point to the missing configuration.
</para><programlisting language="java">
repositories {
    maven {
        url = "https://example.com/m2"
        credentials(PasswordCredentials)
    }
}
</programlisting><para>
The following credential types are currently supported for the <literal>credentialsType</literal> argument:
</para><itemizedlist><listitem><apilink class="org.gradle.api.credentials.PasswordCredentials"/></listitem><listitem><apilink class="org.gradle.api.credentials.AwsCredentials"/></listitem><listitem><apilink class="org.gradle.api.credentials.HttpHeaderCredentials"/></listitem></itemizedlist></section><section id="org.gradle.api.artifacts.repositories.AuthenticationSupported:credentials(java.lang.Class, org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>credentials</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html"><classname>Class</classname></ulink>&lt;<classname>T</classname>&gt;</classname> credentialsType, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <classname>T</classname>&gt;</classname> action)</title><para>Configures the credentials for this repository using the supplied action.
</para><para>
If no credentials have been assigned to this repository, an empty set of credentials of the specified type will be assigned to this repository and given to the configuration action.
If credentials have already been specified for this repository, they will be passed to the given configuration action.
</para><programlisting language="java">
repositories {
    maven {
        url = "https://example.com/aws/proxy"
        credentials(AwsCredentials) {
            accessKey = "myAccessKey"
            secretKey = "mySecret"
        }
    }
}
</programlisting><para>
The following credential types are currently supported for the <literal>credentialsType</literal> argument:
</para><itemizedlist><listitem><apilink class="org.gradle.api.artifacts.repositories.PasswordCredentials"/></listitem><listitem><apilink class="org.gradle.api.credentials.AwsCredentials"/></listitem></itemizedlist></section><section id="org.gradle.api.artifacts.repositories.AuthenticationSupported:credentials(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>credentials</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.artifacts.repositories.PasswordCredentials"/>&gt;</classname> action)</title><para>Configures the username and password credentials for this repository using the supplied action.
</para><para>
If no credentials have been assigned to this repository, an empty set of username and password credentials is assigned to this repository and passed to the action.
</para><programlisting language="java">
repositories {
    maven {
        url = "https://example.com/m2"
        credentials {
            username = 'joe'
            password = 'secret'
        }
    }
}
</programlisting></section></section></chapter><chapter id="org.gradle.api.artifacts.repositories.AuthenticationContainer"><title>AuthenticationContainer</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.artifacts.repositories.AuthenticationContainer" style="javadoc"/></seg></seglistitem></segmentedlist><para>Container for configuring repository authentication schemes of type <apilink class="org.gradle.authentication.Authentication"/>.</para><section><title>Properties</title><para>No properties</para></section><section><title>Methods</title><table><title>Methods - AuthenticationContainer</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.artifacts.repositories.AuthenticationContainer:containerWithType(java.lang.Class)">containerWithType</link>(type)</literal></td><td><para>Creates a regular container that wraps the polymorphic container presenting all elements of a specified type.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.repositories.AuthenticationContainer:create(java.lang.String)">create</link>(name)</literal></td><td><para>Creates a new item with the given name, adding it to this container.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.repositories.AuthenticationContainer:create(java.lang.String, groovy.lang.Closure)">create</link>(name, configureClosure)</literal></td><td><para>Creates a new item with the given name, adding it to this container, then configuring it with the given closure.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.repositories.AuthenticationContainer:create(java.lang.String, java.lang.Class)">create</link>(name, type)</literal></td><td><para>Creates a domain object with the specified name and type, and adds it to the container.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.repositories.AuthenticationContainer:create(java.lang.String, java.lang.Class, org.gradle.api.Action)">create</link>(name, type, configuration)</literal></td><td><para>Creates a domain object with the specified name and type, adds it to the container, and configures
it with the specified action.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.repositories.AuthenticationContainer:create(java.lang.String, org.gradle.api.Action)">create</link>(name, configureAction)</literal></td><td><para>Creates a new item with the given name, adding it to this container, then configuring it with the given action.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.repositories.AuthenticationContainer:getByName(java.lang.String)">getByName</link>(name)</literal></td><td><para>Locates an object by name, failing if there is no such object.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.repositories.AuthenticationContainer:getByName(java.lang.String, groovy.lang.Closure)">getByName</link>(name, configureClosure)</literal></td><td><para>Locates an object by name, failing if there is no such object. The given configure closure is executed against
the object before it is returned from this method. The object is passed to the closure as its delegate.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.repositories.AuthenticationContainer:getByName(java.lang.String, org.gradle.api.Action)">getByName</link>(name, configureAction)</literal></td><td><para>Locates an object by name, failing if there is no such object. The given configure action is executed against
the object before it is returned from this method.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.repositories.AuthenticationContainer:maybeCreate(java.lang.String)">maybeCreate</link>(name)</literal></td><td><para>Looks for an item with the given name, creating and adding it to this container if it does not exist.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.repositories.AuthenticationContainer:maybeCreate(java.lang.String, java.lang.Class)">maybeCreate</link>(name, type)</literal></td><td><para>Looks for an item with the given name and type, creating and adding it to this container if it does not exist.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.repositories.AuthenticationContainer:named(java.lang.String)">named</link>(name)</literal></td><td><para>Locates a object by name, failing if there is no such object.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.repositories.AuthenticationContainer:named(java.lang.String, java.lang.Class)">named</link>(name, type)</literal></td><td><para>Locates a object by name and type, failing if there is no such object.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.repositories.AuthenticationContainer:named(java.lang.String, java.lang.Class, org.gradle.api.Action)">named</link>(name, type, configurationAction)</literal></td><td><para>Locates a object by name and type, failing if there is no such object.
The given configure action is executed against the object before it is returned from the provider.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.repositories.AuthenticationContainer:named(java.lang.String, org.gradle.api.Action)">named</link>(name, configurationAction)</literal></td><td><para>Locates a object by name, failing if there is no such object.
The given configure action is executed against the object before it is returned from the provider.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.repositories.AuthenticationContainer:named(org.gradle.api.specs.Spec)">named</link>(nameFilter)</literal></td><td><caution>Incubating</caution><para>Returns a collection containing the objects with names matching the provided filter.
The returned collection is live, so that when matching objects are added to this collection,
they are also visible in the filtered collection.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.repositories.AuthenticationContainer:register(java.lang.String)">register</link>(name)</literal></td><td><para>Defines a new object, which will be created when it is required. A object is 'required' when the object is located using query methods such as <apilink class="org.gradle.api.NamedDomainObjectCollection" method="getByName(java.lang.String)"/> or when <apilink class="org.gradle.api.provider.Provider" method="get()"/> is called on the return value of this method.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.repositories.AuthenticationContainer:register(java.lang.String, org.gradle.api.Action)">register</link>(name, configurationAction)</literal></td><td><para>Defines a new object, which will be created and configured when it is required. An object is 'required' when the object is located using query methods such as <apilink class="org.gradle.api.NamedDomainObjectCollection" method="getByName(java.lang.String)"/> or when <apilink class="org.gradle.api.provider.Provider" method="get()"/> is called on the return value of this method.
</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Method details</title><section id="org.gradle.api.artifacts.repositories.AuthenticationContainer:containerWithType(java.lang.Class)" role="detail"><title><classname><apilink class="org.gradle.api.NamedDomainObjectContainer"/>&lt;<classname>U</classname>&gt;</classname> <literal>containerWithType</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html"><classname>Class</classname></ulink>&lt;<classname>U</classname>&gt;</classname> type)</title><para>Creates a regular container that wraps the polymorphic container presenting all elements of a specified type.
</para><para>
This method is an intermediate operation. It does not change the realized/unrealized state of the elements in the collection.</para></section><section id="org.gradle.api.artifacts.repositories.AuthenticationContainer:create(java.lang.String)" role="detail"><title><classname>T</classname> <literal>create</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name)</title><para>Creates a new item with the given name, adding it to this container.
</para><para>
This operation is eager, the element is realized before being returned.</para></section><section id="org.gradle.api.artifacts.repositories.AuthenticationContainer:create(java.lang.String, groovy.lang.Closure)" role="detail"><title><classname>T</classname> <literal>create</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> configureClosure)</title><para>Creates a new item with the given name, adding it to this container, then configuring it with the given closure.
</para><para>
This operation is eager, the element is realized before being returned.</para></section><section id="org.gradle.api.artifacts.repositories.AuthenticationContainer:create(java.lang.String, java.lang.Class)" role="detail"><title><classname>U</classname> <literal>create</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html"><classname>Class</classname></ulink>&lt;<classname>U</classname>&gt;</classname> type)</title><para>Creates a domain object with the specified name and type, and adds it to the container.
</para><para>
This operation is eager, the element is realized before being returned.</para></section><section id="org.gradle.api.artifacts.repositories.AuthenticationContainer:create(java.lang.String, java.lang.Class, org.gradle.api.Action)" role="detail"><title><classname>U</classname> <literal>create</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html"><classname>Class</classname></ulink>&lt;<classname>U</classname>&gt;</classname> type, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <classname>U</classname>&gt;</classname> configuration)</title><para>Creates a domain object with the specified name and type, adds it to the container, and configures
it with the specified action.
</para><para>
This operation is eager, the element is realized before being returned.</para></section><section id="org.gradle.api.artifacts.repositories.AuthenticationContainer:create(java.lang.String, org.gradle.api.Action)" role="detail"><title><classname>T</classname> <literal>create</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <classname>T</classname>&gt;</classname> configureAction)</title><para>Creates a new item with the given name, adding it to this container, then configuring it with the given action.
</para><para>
This operation is eager, the element is realized before being returned.</para></section><section id="org.gradle.api.artifacts.repositories.AuthenticationContainer:getByName(java.lang.String)" role="detail"><title><classname>T</classname> <literal>getByName</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name)</title><para>Locates an object by name, failing if there is no such object.
</para><para>
This operation is eager and will cause the returned element to be realized.</para></section><section id="org.gradle.api.artifacts.repositories.AuthenticationContainer:getByName(java.lang.String, groovy.lang.Closure)" role="detail"><title><classname>T</classname> <literal>getByName</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> configureClosure)</title><para>Locates an object by name, failing if there is no such object. The given configure closure is executed against
the object before it is returned from this method. The object is passed to the closure as its delegate.
</para><para>
This operation is eager and will cause the returned element to be realized.</para></section><section id="org.gradle.api.artifacts.repositories.AuthenticationContainer:getByName(java.lang.String, org.gradle.api.Action)" role="detail"><title><classname>T</classname> <literal>getByName</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <classname>T</classname>&gt;</classname> configureAction)</title><para>Locates an object by name, failing if there is no such object. The given configure action is executed against
the object before it is returned from this method.
</para><para>
This operation is eager and will cause the returned element to be realized.</para></section><section id="org.gradle.api.artifacts.repositories.AuthenticationContainer:maybeCreate(java.lang.String)" role="detail"><title><classname>T</classname> <literal>maybeCreate</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name)</title><para>Looks for an item with the given name, creating and adding it to this container if it does not exist.
</para><para>
This operation is eager, the element is realized before being returned.</para></section><section id="org.gradle.api.artifacts.repositories.AuthenticationContainer:maybeCreate(java.lang.String, java.lang.Class)" role="detail"><title><classname>U</classname> <literal>maybeCreate</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html"><classname>Class</classname></ulink>&lt;<classname>U</classname>&gt;</classname> type)</title><para>Looks for an item with the given name and type, creating and adding it to this container if it does not exist.
</para><para>
This operation is eager, the element is realized before being returned.</para></section><section id="org.gradle.api.artifacts.repositories.AuthenticationContainer:named(java.lang.String)" role="detail"><title><classname><apilink class="org.gradle.api.NamedDomainObjectProvider"/>&lt;<classname>T</classname>&gt;</classname> <literal>named</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name)</title><para>Locates a object by name, failing if there is no such object.
</para><para>
This method is lazy and will not cause the returned element to be realized.</para></section><section id="org.gradle.api.artifacts.repositories.AuthenticationContainer:named(java.lang.String, java.lang.Class)" role="detail"><title><classname><apilink class="org.gradle.api.NamedDomainObjectProvider"/>&lt;<classname>S</classname>&gt;</classname> <literal>named</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html"><classname>Class</classname></ulink>&lt;<classname>S</classname>&gt;</classname> type)</title><para>Locates a object by name and type, failing if there is no such object.
</para><para>
This method is lazy and will not cause the returned element to be realized.</para></section><section id="org.gradle.api.artifacts.repositories.AuthenticationContainer:named(java.lang.String, java.lang.Class, org.gradle.api.Action)" role="detail"><title><classname><apilink class="org.gradle.api.NamedDomainObjectProvider"/>&lt;<classname>S</classname>&gt;</classname> <literal>named</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html"><classname>Class</classname></ulink>&lt;<classname>S</classname>&gt;</classname> type, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <classname>S</classname>&gt;</classname> configurationAction)</title><para>Locates a object by name and type, failing if there is no such object.
The given configure action is executed against the object before it is returned from the provider.
</para><para>
This method is lazy and will not cause the returned element to be realized.</para></section><section id="org.gradle.api.artifacts.repositories.AuthenticationContainer:named(java.lang.String, org.gradle.api.Action)" role="detail"><title><classname><apilink class="org.gradle.api.NamedDomainObjectProvider"/>&lt;<classname>T</classname>&gt;</classname> <literal>named</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <classname>T</classname>&gt;</classname> configurationAction)</title><para>Locates a object by name, failing if there is no such object.
The given configure action is executed against the object before it is returned from the provider.
</para><para>
This method is lazy and will not cause the returned element to be realized.</para></section><section id="org.gradle.api.artifacts.repositories.AuthenticationContainer:named(org.gradle.api.specs.Spec)" role="detail"><title><classname><apilink class="org.gradle.api.NamedDomainObjectCollection"/>&lt;<classname>T</classname>&gt;</classname> <literal>named</literal>(<classname><apilink class="org.gradle.api.specs.Spec"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> nameFilter)</title><caution><para>Note: This method is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Returns a collection containing the objects with names matching the provided filter.
The returned collection is live, so that when matching objects are added to this collection,
they are also visible in the filtered collection.
</para><para>
This method is an intermediate operation. It does not change the realized/unrealized state of the elements in the collection.</para></section><section id="org.gradle.api.artifacts.repositories.AuthenticationContainer:register(java.lang.String)" role="detail"><title><classname><apilink class="org.gradle.api.NamedDomainObjectProvider"/>&lt;<classname>T</classname>&gt;</classname> <literal>register</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name)</title><para>Defines a new object, which will be created when it is required. A object is 'required' when the object is located using query methods such as <apilink class="org.gradle.api.NamedDomainObjectCollection" method="getByName(java.lang.String)"/> or when <apilink class="org.gradle.api.provider.Provider" method="get()"/> is called on the return value of this method.
</para><para>
It is generally more efficient to use this method instead of <apilink class="org.gradle.api.NamedDomainObjectContainer" method="create(java.lang.String)"/>, as that method will eagerly create the object, regardless of whether that object is required for the current build or not.
This method, on the other hand, will defer creation until required.
</para><para>
This operation is lazy, the returned element is NOT realized.
A <apilink class="org.gradle.api.NamedDomainObjectProvider"/> is returned, allowing to continue to use it with other lazy APIs.</para></section><section id="org.gradle.api.artifacts.repositories.AuthenticationContainer:register(java.lang.String, org.gradle.api.Action)" role="detail"><title><classname><apilink class="org.gradle.api.NamedDomainObjectProvider"/>&lt;<classname>T</classname>&gt;</classname> <literal>register</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <classname>T</classname>&gt;</classname> configurationAction)</title><para>Defines a new object, which will be created and configured when it is required. An object is 'required' when the object is located using query methods such as <apilink class="org.gradle.api.NamedDomainObjectCollection" method="getByName(java.lang.String)"/> or when <apilink class="org.gradle.api.provider.Provider" method="get()"/> is called on the return value of this method.
</para><para>
It is generally more efficient to use this method instead of <apilink class="org.gradle.api.NamedDomainObjectContainer" method="create(java.lang.String, org.gradle.api.Action)"/> or <apilink class="org.gradle.api.NamedDomainObjectContainer" method="create(java.lang.String)"/>, as those methods will eagerly create and configure the object, regardless of whether that object is required for the current build or not.
This method, on the other hand, will defer creation and configuration until required.
</para><para>
This operation is lazy, the returned element is NOT realized.
A <apilink class="org.gradle.api.NamedDomainObjectProvider"/> is returned, allowing to continue to use it with other lazy APIs.</para></section></section></chapter><chapter id="org.gradle.api.credentials.Credentials"><title>Credentials</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.credentials.Credentials" style="javadoc"/></seg></seglistitem></segmentedlist><segmentedlist><segtitle>Known Subtypes</segtitle><seglistitem><seg><simplelist columns="1" type="vert"><member><apilink class="org.gradle.api.credentials.AwsCredentials"/></member><member><apilink class="org.gradle.api.credentials.HttpHeaderCredentials"/></member></simplelist></seg></seglistitem></segmentedlist><para>Base interface for credentials used for different authentication purposes.
(e.g authenticated <apilink class="org.gradle.api.artifacts.dsl.RepositoryHandler"/>)</para><section><title>Properties</title><para>No properties</para></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section></chapter><chapter id="org.gradle.api.artifacts.repositories.PasswordCredentials"><title>PasswordCredentials</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.artifacts.repositories.PasswordCredentials" style="javadoc"/></seg></seglistitem></segmentedlist><para>A username/password credentials that can be used to login to password-protected remote repository.</para><section><title>Properties</title><table><title>Properties - PasswordCredentials</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.artifacts.repositories.PasswordCredentials:password"><literal>password</literal></link></td><td><para>The password to use when authenticating to this repository.</para></td></tr><tr><td><link linkend="org.gradle.api.artifacts.repositories.PasswordCredentials:username"><literal>username</literal></link></td><td><para>The user name to use when authenticating to this repository.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.artifacts.repositories.PasswordCredentials:password" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>password</literal></title><para>The password to use when authenticating to this repository.</para></section><section id="org.gradle.api.artifacts.repositories.PasswordCredentials:username" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>username</literal></title><para>The user name to use when authenticating to this repository.</para></section></section></chapter><chapter id="org.gradle.api.credentials.AwsCredentials"><title>AwsCredentials</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.credentials.AwsCredentials" style="javadoc"/></seg></seglistitem></segmentedlist><para>Represents credentials used to authenticate with Amazon Web Services.</para><section><title>Properties</title><table><title>Properties - AwsCredentials</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.credentials.AwsCredentials:accessKey"><literal>accessKey</literal></link></td><td><para>The access key to use to authenticate with AWS.</para></td></tr><tr><td><link linkend="org.gradle.api.credentials.AwsCredentials:secretKey"><literal>secretKey</literal></link></td><td><para>The secret key to use to authenticate with AWS.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.credentials.AwsCredentials:accessKey" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>accessKey</literal></title><para>The access key to use to authenticate with AWS.</para></section><section id="org.gradle.api.credentials.AwsCredentials:secretKey" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>secretKey</literal></title><para>The secret key to use to authenticate with AWS.</para></section></section></chapter><chapter id="org.gradle.api.credentials.HttpHeaderCredentials"><title>HttpHeaderCredentials</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.credentials.HttpHeaderCredentials" style="javadoc"/></seg></seglistitem></segmentedlist><para>Credentials that can be used to login to a protected server, e.g. a remote repository by using HTTP header.

The properties used for creating credentials from a property are <literal>repoAuthHeaderName</literal> and <literal>repoAuthHeaderValue</literal>, where <literal>repo</literal> is the identity of the repository.</para><section><title>Properties</title><table><title>Properties - HttpHeaderCredentials</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.credentials.HttpHeaderCredentials:name"><literal>name</literal></link></td><td><para>The header name to use when authenticating.</para></td></tr><tr><td><link linkend="org.gradle.api.credentials.HttpHeaderCredentials:value"><literal>value</literal></link></td><td><para>The header value to use when authenticating.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.credentials.HttpHeaderCredentials:name" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>name</literal></title><para>The header name to use when authenticating.</para></section><section id="org.gradle.api.credentials.HttpHeaderCredentials:value" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>value</literal></title><para>The header value to use when authenticating.</para></section></section></chapter><chapter id="org.gradle.authentication.Authentication"><title>Authentication</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.authentication.Authentication" style="javadoc"/></seg></seglistitem></segmentedlist><segmentedlist><segtitle>Known Subtypes</segtitle><seglistitem><seg><simplelist columns="1" type="vert"><member><apilink class="org.gradle.authentication.http.BasicAuthentication"/></member><member><apilink class="org.gradle.authentication.http.HttpHeaderAuthentication"/></member><member><apilink class="org.gradle.authentication.http.DigestAuthentication"/></member></simplelist></seg></seglistitem></segmentedlist><para>Base interface for transport authentication schemes.</para><section><title>Properties</title><para>No properties</para></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section></chapter><chapter id="org.gradle.authentication.http.BasicAuthentication"><title>BasicAuthentication</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.authentication.http.BasicAuthentication" style="javadoc"/></seg></seglistitem></segmentedlist><para>Authentication scheme for basic access authentication over HTTP. When using this scheme, credentials are sent preemptively.</para><section><title>Properties</title><para>No properties</para></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section></chapter><chapter id="org.gradle.authentication.http.HttpHeaderAuthentication"><title>HttpHeaderAuthentication</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.authentication.http.HttpHeaderAuthentication" style="javadoc"/></seg></seglistitem></segmentedlist><para>Authentication scheme for HTTP header authentication over HTTP.</para><section><title>Properties</title><para>No properties</para></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section></chapter><chapter id="org.gradle.authentication.http.DigestAuthentication"><title>DigestAuthentication</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.authentication.http.DigestAuthentication" style="javadoc"/></seg></seglistitem></segmentedlist><para>Authentication scheme for digest access authentication over HTTP.</para><section><title>Properties</title><para>No properties</para></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section></chapter><chapter id="org.gradle.caching.http.HttpBuildCache"><title>HttpBuildCache</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.caching.http.HttpBuildCache" style="javadoc"/></seg></seglistitem></segmentedlist><para>Configuration object for the HTTP build cache.

Cache entries are loaded via GET and stored via PUT requests.
</para><para>
A successful GET request must return a response with status 200 (cache hit) or 404 (cache miss),
with cache hit responses including the cache entry as the response body.
A successful PUT request must return any 2xx response.
</para><para>
PUT requests may also return a 413 Payload Too Large response to indicate that the payload is larger than can be accepted.
This is useful when <apilink class="org.gradle.caching.http.HttpBuildCache" method="isUseExpectContinue()"/> is enabled.
</para><para>
Redirecting responses may be issued with 301, 302, 303, 307 or 308 responses.
Redirecting responses to PUT requests must use 307 or 308 to have the PUT replayed.
Otherwise, the redirect will be followed with a GET request.
</para><para>
Any other type of response will be treated as an error, causing the remote cache to be disabled for the remainder of the build.
</para><para>
When credentials are configured (see <apilink class="org.gradle.caching.http.HttpBuildCache" method="getCredentials()"/>), they are sent using HTTP Basic Auth.
</para><para>
Requests that fail during request transmission, after having established a TCP connection, will automatically be retried.
This includes dropped connections, read or write timeouts, and low level network failures such as a connection resets.</para><section><title>Properties</title><table><title>Properties - HttpBuildCache</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.caching.http.HttpBuildCache:allowInsecureProtocol"><literal>allowInsecureProtocol</literal></link></td><td><para>Specifies whether it is acceptable to communicate with a build cache over an insecure HTTP connection.
</para></td></tr><tr><td><link linkend="org.gradle.caching.http.HttpBuildCache:allowUntrustedServer"><literal>allowUntrustedServer</literal></link></td><td><para>Specifies whether it is acceptable to communicate with an HTTP build cache backend with an untrusted SSL certificate.
</para></td></tr><tr><td><link linkend="org.gradle.caching.http.HttpBuildCache:enabled"><literal>enabled</literal></link></td><td><para>Whether the build cache is enabled.</para></td></tr><tr><td><link linkend="org.gradle.caching.http.HttpBuildCache:push"><literal>push</literal></link></td><td><para>Whether a given build can store outputs in the build cache.</para></td></tr><tr><td><link linkend="org.gradle.caching.http.HttpBuildCache:url"><literal>url</literal></link></td><td><para>The URI to the cache.</para></td></tr><tr><td><link linkend="org.gradle.caching.http.HttpBuildCache:useExpectContinue"><literal>useExpectContinue</literal></link></td><td><para>Specifies whether HTTP expect-continue should be used for store requests.

This value defaults to <literal>false</literal>.

When enabled, whether or not a store request would succeed is checked with the server before attempting.
This is particularly useful when potentially dealing with large artifacts that may be rejected by the server with a 413 Payload Too Large response,
as it avoids the overhead of transmitting the large file just to have it rejected.
This fail-fast behavior comes at the expense of extra marginal overhead for successful requests,
due to the extra network communication required by the initial check.

Note: not all HTTP servers support expect-continue.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - HttpBuildCache</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.caching.http.HttpBuildCache:credentials(org.gradle.api.Action)">credentials</link>(configuration)</literal></td><td><para>Configures the credentials used to access the HTTP cache backend.</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.caching.http.HttpBuildCache:allowInsecureProtocol" role="detail"><title><classname>boolean</classname> <literal>allowInsecureProtocol</literal></title><para>Specifies whether it is acceptable to communicate with a build cache over an insecure HTTP connection.
</para><para>
For security purposes this intentionally requires a user to opt-in to using insecure protocols on case by case basis.
</para><para>
Gradle intentionally does not offer a global system/gradle property that allows a universal disable of this check.
</para><para>
<emphasis>Allowing communication over insecure protocols allows for a man-in-the-middle to impersonate the intended server,
and gives an attacker the ability to
<ulink url="https://max.computer/blog/how-to-take-over-the-computer-of-any-java-or-clojure-or-scala-developer/">serve malicious executable code onto the system.</ulink>
</emphasis>
</para><para>
See also:
<ulink url="https://medium.com/bugbountywriteup/want-to-take-over-the-java-ecosystem-all-you-need-is-a-mitm-1fc329d898fb">Want to take over the Java ecosystem? All you need is a MITM!</ulink></para></section><section id="org.gradle.caching.http.HttpBuildCache:allowUntrustedServer" role="detail"><title><classname>boolean</classname> <literal>allowUntrustedServer</literal></title><para>Specifies whether it is acceptable to communicate with an HTTP build cache backend with an untrusted SSL certificate.
</para><para>
The SSL certificate for the HTTP build cache backend may be untrusted since it is internally provisioned or a self-signed certificate.
</para><para>
In such a scenario, you can either configure the build JVM environment to trust the certificate,
or set this property to <literal>true</literal> to disable verification of the server's identity.
</para><para>
Allowing communication with untrusted servers keeps data encrypted during transmission,
but makes it easier for a man-in-the-middle to impersonate the intended server and capture data.
</para><para>
This value has no effect if a server is specified using the HTTP protocol (i.e. has SSL disabled).</para></section><section id="org.gradle.caching.http.HttpBuildCache:enabled" role="detail"><title><classname>boolean</classname> <literal>enabled</literal></title><para>Whether the build cache is enabled.</para></section><section id="org.gradle.caching.http.HttpBuildCache:push" role="detail"><title><classname>boolean</classname> <literal>push</literal></title><para>Whether a given build can store outputs in the build cache.</para></section><section id="org.gradle.caching.http.HttpBuildCache:url" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/net/URI.html"><classname>URI</classname></ulink> <literal>url</literal></title><para>The URI to the cache.</para></section><section id="org.gradle.caching.http.HttpBuildCache:useExpectContinue" role="detail"><title><classname>boolean</classname> <literal>useExpectContinue</literal></title><para>Specifies whether HTTP expect-continue should be used for store requests.

This value defaults to <literal>false</literal>.

When enabled, whether or not a store request would succeed is checked with the server before attempting.
This is particularly useful when potentially dealing with large artifacts that may be rejected by the server with a 413 Payload Too Large response,
as it avoids the overhead of transmitting the large file just to have it rejected.
This fail-fast behavior comes at the expense of extra marginal overhead for successful requests,
due to the extra network communication required by the initial check.

Note: not all HTTP servers support expect-continue.</para></section></section><section><title>Method details</title><section id="org.gradle.caching.http.HttpBuildCache:credentials(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>credentials</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.caching.http.HttpBuildCacheCredentials"/>&gt;</classname> configuration)</title><para>Configures the credentials used to access the HTTP cache backend.</para></section></section></chapter><chapter id="org.gradle.api.tasks.diagnostics.ConventionReportTask"><title>ConventionReportTask</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.tasks.diagnostics.ConventionReportTask" style="javadoc"/></seg></seglistitem></segmentedlist><segmentedlist><segtitle>Known Subtypes</segtitle><seglistitem><seg><simplelist columns="1" type="vert"><member><apilink class="org.gradle.api.tasks.diagnostics.TaskReportTask"/></member><member><apilink class="org.gradle.api.tasks.diagnostics.AbstractProjectBasedReportTask"/></member></simplelist></seg></seglistitem></segmentedlist><para>The base class for all project based report tasks with custom task actions.</para><section><title>Properties</title><table><title>Properties - ConventionReportTask</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.tasks.diagnostics.ConventionReportTask:outputFile"><literal>outputFile</literal></link></td><td><para>The file which the report will be written to. When set to <literal>null</literal>, the report is written to <literal>System.out</literal>.
Defaults to <literal>null</literal>.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.diagnostics.ConventionReportTask:projects"><literal>projects</literal></link></td><td><para>The set of project to generate this report for. By default, the report is generated for the task's
containing project.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.tasks.diagnostics.ConventionReportTask:outputFile" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>outputFile</literal></title><para>The file which the report will be written to. When set to <literal>null</literal>, the report is written to <literal>System.out</literal>.
Defaults to <literal>null</literal>.</para></section><section id="org.gradle.api.tasks.diagnostics.ConventionReportTask:projects" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<apilink class="org.gradle.api.Project"/>&gt;</classname> <literal>projects</literal></title><para>The set of project to generate this report for. By default, the report is generated for the task's
containing project.</para></section></section></chapter><chapter id="org.gradle.api.tasks.diagnostics.TaskReportTask"><title>TaskReportTask</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.tasks.diagnostics.TaskReportTask" style="javadoc"/></seg></seglistitem></segmentedlist><para>Displays a list of tasks in the project. An instance of this type is used when you execute the <literal>tasks</literal> task
from the command-line.</para><para>

By default, this report shows only those tasks which have been assigned to a task group, so-called <emphasis>visible</emphasis>
tasks. Tasks which have not been assigned to a task group, so-called <emphasis>hidden</emphasis> tasks, can be included in the report
by enabling the command line option <literal>--all</literal>.</para><section><title>Properties</title><table><title>Properties - TaskReportTask</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.tasks.diagnostics.TaskReportTask:displayGroup"><literal>displayGroup</literal></link></td><td><para>The task group to be displayed.

This property can be set via command-line option '--group'.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.diagnostics.TaskReportTask:displayGroups"><literal>displayGroups</literal></link></td><td><caution>Incubating</caution><para>The task groups to be displayed.

Task groups can be added via command-line option '--groups'.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.diagnostics.TaskReportTask:outputFile"><literal>outputFile</literal></link></td><td><para>The file which the report will be written to. When set to <literal>null</literal>, the report is written to <literal>System.out</literal>.
Defaults to <literal>null</literal>.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.diagnostics.TaskReportTask:projects"><literal>projects</literal></link></td><td><para>The set of project to generate this report for. By default, the report is generated for the task's
containing project.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.diagnostics.TaskReportTask:showDetail"><literal>showDetail</literal></link></td><td><para>Whether to show "invisible" tasks without a group or dependent tasks.

This property can be set via command-line option '--all'.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.diagnostics.TaskReportTask:showTypes"><literal>showTypes</literal></link></td><td><para>Whether to show the task types next to their names in the output.

This property can be set via command-line option '--types'.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.tasks.diagnostics.TaskReportTask:displayGroup" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>displayGroup</literal></title><para>The task group to be displayed.

This property can be set via command-line option '--group'.</para></section><section id="org.gradle.api.tasks.diagnostics.TaskReportTask:displayGroups" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/List.html"><classname>List</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>displayGroups</literal></title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The task groups to be displayed.

Task groups can be added via command-line option '--groups'.</para></section><section id="org.gradle.api.tasks.diagnostics.TaskReportTask:outputFile" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>outputFile</literal></title><para>The file which the report will be written to. When set to <literal>null</literal>, the report is written to <literal>System.out</literal>.
Defaults to <literal>null</literal>.</para></section><section id="org.gradle.api.tasks.diagnostics.TaskReportTask:projects" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<apilink class="org.gradle.api.Project"/>&gt;</classname> <literal>projects</literal></title><para>The set of project to generate this report for. By default, the report is generated for the task's
containing project.</para></section><section id="org.gradle.api.tasks.diagnostics.TaskReportTask:showDetail" role="detail"><title><classname>boolean</classname> <literal>showDetail</literal> (write-only)</title><para>Whether to show "invisible" tasks without a group or dependent tasks.

This property can be set via command-line option '--all'.</para></section><section id="org.gradle.api.tasks.diagnostics.TaskReportTask:showTypes" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html"><classname>Boolean</classname></ulink>&gt;</classname> <literal>showTypes</literal></title><para>Whether to show the task types next to their names in the output.

This property can be set via command-line option '--types'.</para></section></section></chapter><chapter id="org.gradle.api.tasks.diagnostics.AbstractProjectBasedReportTask"><title>AbstractProjectBasedReportTask</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.tasks.diagnostics.AbstractProjectBasedReportTask" style="javadoc"/></seg></seglistitem></segmentedlist><segmentedlist><segtitle>Known Subtypes</segtitle><seglistitem><seg><simplelist columns="1" type="vert"><member><apilink class="org.gradle.api.tasks.diagnostics.ProjectReportTask"/></member><member><apilink class="org.gradle.api.tasks.diagnostics.AbstractDependencyReportTask"/></member><member><apilink class="org.gradle.api.tasks.diagnostics.PropertyReportTask"/></member></simplelist></seg></seglistitem></segmentedlist><caution><para>Note: This class is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The base class for all Project based project report tasks.</para><section><title>Properties</title><table><title>Properties - AbstractProjectBasedReportTask</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.tasks.diagnostics.AbstractProjectBasedReportTask:outputFile"><literal>outputFile</literal></link></td><td><para>The file which the report will be written to. When set to <literal>null</literal>, the report is written to <literal>System.out</literal>.
Defaults to <literal>null</literal>.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.diagnostics.AbstractProjectBasedReportTask:projects"><literal>projects</literal></link></td><td><para>The set of project to generate this report for. By default, the report is generated for the task's
containing project.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.tasks.diagnostics.AbstractProjectBasedReportTask:outputFile" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>outputFile</literal></title><para>The file which the report will be written to. When set to <literal>null</literal>, the report is written to <literal>System.out</literal>.
Defaults to <literal>null</literal>.</para></section><section id="org.gradle.api.tasks.diagnostics.AbstractProjectBasedReportTask:projects" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<apilink class="org.gradle.api.Project"/>&gt;</classname> <literal>projects</literal></title><para>The set of project to generate this report for. By default, the report is generated for the task's
containing project.</para></section></section></chapter><chapter id="org.gradle.api.tasks.diagnostics.ProjectReportTask"><title>ProjectReportTask</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.tasks.diagnostics.ProjectReportTask" style="javadoc"/></seg></seglistitem></segmentedlist><para>Displays a list of projects in the build. An instance of this type is used when you execute the <literal>projects</literal>
task from the command-line.</para><section><title>Properties</title><table><title>Properties - ProjectReportTask</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.tasks.diagnostics.ProjectReportTask:outputFile"><literal>outputFile</literal></link></td><td><para>The file which the report will be written to. When set to <literal>null</literal>, the report is written to <literal>System.out</literal>.
Defaults to <literal>null</literal>.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.diagnostics.ProjectReportTask:projects"><literal>projects</literal></link></td><td><para>The set of project to generate this report for. By default, the report is generated for the task's
containing project.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.tasks.diagnostics.ProjectReportTask:outputFile" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>outputFile</literal></title><para>The file which the report will be written to. When set to <literal>null</literal>, the report is written to <literal>System.out</literal>.
Defaults to <literal>null</literal>.</para></section><section id="org.gradle.api.tasks.diagnostics.ProjectReportTask:projects" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<apilink class="org.gradle.api.Project"/>&gt;</classname> <literal>projects</literal></title><para>The set of project to generate this report for. By default, the report is generated for the task's
containing project.</para></section></section></chapter><chapter id="org.gradle.api.tasks.diagnostics.AbstractDependencyReportTask"><title>AbstractDependencyReportTask</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.tasks.diagnostics.AbstractDependencyReportTask" style="javadoc"/></seg></seglistitem></segmentedlist><segmentedlist><segtitle>Known Subtypes</segtitle><seglistitem><seg><simplelist columns="1" type="vert"><member><apilink class="org.gradle.api.tasks.diagnostics.DependencyReportTask"/></member><member><apilink class="org.gradle.api.reporting.dependencies.HtmlDependencyReportTask"/></member></simplelist></seg></seglistitem></segmentedlist><para>Displays the dependency tree for a configuration.</para><section><title>Properties</title><table><title>Properties - AbstractDependencyReportTask</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.tasks.diagnostics.AbstractDependencyReportTask:outputFile"><literal>outputFile</literal></link></td><td><para>The file which the report will be written to. When set to <literal>null</literal>, the report is written to <literal>System.out</literal>.
Defaults to <literal>null</literal>.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.diagnostics.AbstractDependencyReportTask:projects"><literal>projects</literal></link></td><td><para>The set of project to generate this report for. By default, the report is generated for the task's
containing project.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.tasks.diagnostics.AbstractDependencyReportTask:outputFile" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>outputFile</literal></title><para>The file which the report will be written to. When set to <literal>null</literal>, the report is written to <literal>System.out</literal>.
Defaults to <literal>null</literal>.</para></section><section id="org.gradle.api.tasks.diagnostics.AbstractDependencyReportTask:projects" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<apilink class="org.gradle.api.Project"/>&gt;</classname> <literal>projects</literal></title><para>The set of project to generate this report for. By default, the report is generated for the task's
containing project.</para></section></section></chapter><chapter id="org.gradle.api.tasks.diagnostics.DependencyReportTask"><title>DependencyReportTask</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.tasks.diagnostics.DependencyReportTask" style="javadoc"/></seg></seglistitem></segmentedlist><para>Displays the dependency tree for a project. An instance of this type is used when you
execute the <literal>dependencies</literal> task from the command-line.</para><section><title>Properties</title><table><title>Properties - DependencyReportTask</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.tasks.diagnostics.DependencyReportTask:configurations"><literal>configurations</literal></link></td><td><para>The configurations to generate the report for. Defaults to all configurations of this task's containing
project.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.diagnostics.DependencyReportTask:outputFile"><literal>outputFile</literal></link></td><td><para>The file which the report will be written to. When set to <literal>null</literal>, the report is written to <literal>System.out</literal>.
Defaults to <literal>null</literal>.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.diagnostics.DependencyReportTask:projects"><literal>projects</literal></link></td><td><para>The set of project to generate this report for. By default, the report is generated for the task's
containing project.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.tasks.diagnostics.DependencyReportTask:configurations" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<apilink class="org.gradle.api.artifacts.Configuration"/>&gt;</classname> <literal>configurations</literal></title><para>The configurations to generate the report for. Defaults to all configurations of this task's containing
project.</para></section><section id="org.gradle.api.tasks.diagnostics.DependencyReportTask:outputFile" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>outputFile</literal></title><para>The file which the report will be written to. When set to <literal>null</literal>, the report is written to <literal>System.out</literal>.
Defaults to <literal>null</literal>.</para></section><section id="org.gradle.api.tasks.diagnostics.DependencyReportTask:projects" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<apilink class="org.gradle.api.Project"/>&gt;</classname> <literal>projects</literal></title><para>The set of project to generate this report for. By default, the report is generated for the task's
containing project.</para></section></section></chapter><chapter id="org.gradle.api.tasks.diagnostics.DependencyInsightReportTask"><title>DependencyInsightReportTask</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.tasks.diagnostics.DependencyInsightReportTask" style="javadoc"/></seg></seglistitem></segmentedlist><para>Generates a report that attempts to answer questions like:
</para><itemizedlist><listitem>Why is this dependency in the dependency graph?</listitem><listitem>Exactly which dependencies are pulling this dependency into the graph?</listitem><listitem>What is the actual version (i.e. *selected* version) of the dependency that will be used? Is it the same as what was *requested*?</listitem><listitem>Why is the *selected* version of a dependency different to the *requested*?</listitem><listitem>What variants are available for this dependency?</listitem></itemizedlist><para>

Use this task to get insight into a particular dependency (or dependencies)
and find out what exactly happens during dependency resolution and conflict resolution.
If the dependency version was forced or selected by the conflict resolution
this information will be available in the report.
</para><para>
While the regular dependencies report (<apilink class="org.gradle.api.tasks.diagnostics.DependencyReportTask"/>) shows the path from the top level dependencies down through the transitive dependencies,
the dependency insight report shows the path from a particular dependency to the dependencies that pulled it in.
That is, it is an inverted view of the regular dependencies report.
</para><para>
The task requires setting the dependency spec and the configuration.
For more information on how to configure those please refer to docs for <apilink class="org.gradle.api.tasks.diagnostics.DependencyInsightReportTask" method="setDependencySpec(java.lang.Object)"/> and
<apilink class="org.gradle.api.tasks.diagnostics.DependencyInsightReportTask" method="setConfiguration(java.lang.String)"/>.
</para><para>
The task can also be configured from the command line.
For more information please refer to <apilink class="org.gradle.api.tasks.diagnostics.DependencyInsightReportTask" method="setDependencySpec(java.lang.Object)"/>, <apilink class="org.gradle.api.tasks.diagnostics.DependencyInsightReportTask" method="setConfiguration(java.lang.String)"/>,
<apilink class="org.gradle.api.tasks.diagnostics.DependencyInsightReportTask" method="setShowSinglePathToDependency(boolean)"/>, and <apilink class="org.gradle.api.tasks.diagnostics.DependencyInsightReportTask" method="getShowingAllVariants()"/>.</para><section><title>Properties</title><table><title>Properties - DependencyInsightReportTask</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.tasks.diagnostics.DependencyInsightReportTask:configuration"><literal>configuration</literal></link></td><td><para>Configuration to look the dependency in</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.diagnostics.DependencyInsightReportTask:dependencySpec"><literal>dependencySpec</literal></link></td><td><para>The dependency spec selects the dependency (or dependencies if multiple matches found) to show the report for.
The spec receives an instance of <apilink class="org.gradle.api.artifacts.result.DependencyResult"/> as parameter.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.diagnostics.DependencyInsightReportTask:showSinglePathToDependency"><literal>showSinglePathToDependency</literal></link></td><td><para>Tells if the report should only show one path to each dependency.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.diagnostics.DependencyInsightReportTask:showingAllVariants"><literal>showingAllVariants</literal></link></td><td><caution>Incubating</caution><para>Show all variants of each displayed dependency.

</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.tasks.diagnostics.DependencyInsightReportTask:configuration" role="detail"><title><apilink class="org.gradle.api.artifacts.Configuration"/> <literal>configuration</literal></title><para>Configuration to look the dependency in</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>compileClasspath</literal> configuration</seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.diagnostics.DependencyInsightReportTask:dependencySpec" role="detail"><title><classname><apilink class="org.gradle.api.specs.Spec"/>&lt;<apilink class="org.gradle.api.artifacts.result.DependencyResult"/>&gt;</classname> <literal>dependencySpec</literal> (write-only)</title><para>The dependency spec selects the dependency (or dependencies if multiple matches found) to show the report for.
The spec receives an instance of <apilink class="org.gradle.api.artifacts.result.DependencyResult"/> as parameter.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg>-</seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.diagnostics.DependencyInsightReportTask:showSinglePathToDependency" role="detail"><title><classname>boolean</classname> <literal>showSinglePathToDependency</literal></title><para>Tells if the report should only show one path to each dependency.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg>false</seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.diagnostics.DependencyInsightReportTask:showingAllVariants" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html"><classname>Boolean</classname></ulink>&gt;</classname> <literal>showingAllVariants</literal></title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Show all variants of each displayed dependency.

</para><para>
Due to internal limitations, this option only works when the <apilink class="org.gradle.api.tasks.diagnostics.DependencyInsightReportTask" method="getConfiguration()"/> is
unresolved before the execution of this task.
</para><para>
This method is exposed to the command line interface. Example usage:
</para><programlisting language="java">gradle dependencyInsight --all-variants</programlisting><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg>false</seg></seglistitem></segmentedlist></section></section></chapter><chapter id="org.gradle.api.tasks.diagnostics.PropertyReportTask"><title>PropertyReportTask</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.tasks.diagnostics.PropertyReportTask" style="javadoc"/></seg></seglistitem></segmentedlist><para>Displays the properties of a project. An instance of this type is used when you execute the <literal>properties</literal> task
from the command-line.</para><section><title>Properties</title><table><title>Properties - PropertyReportTask</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.tasks.diagnostics.PropertyReportTask:outputFile"><literal>outputFile</literal></link></td><td><para>The file which the report will be written to. When set to <literal>null</literal>, the report is written to <literal>System.out</literal>.
Defaults to <literal>null</literal>.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.diagnostics.PropertyReportTask:projects"><literal>projects</literal></link></td><td><para>The set of project to generate this report for. By default, the report is generated for the task's
containing project.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.tasks.diagnostics.PropertyReportTask:outputFile" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>outputFile</literal></title><para>The file which the report will be written to. When set to <literal>null</literal>, the report is written to <literal>System.out</literal>.
Defaults to <literal>null</literal>.</para></section><section id="org.gradle.api.tasks.diagnostics.PropertyReportTask:projects" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<apilink class="org.gradle.api.Project"/>&gt;</classname> <literal>projects</literal></title><para>The set of project to generate this report for. By default, the report is generated for the task's
containing project.</para></section></section></chapter><chapter id="org.gradle.api.reporting.components.ComponentReport"><title>ComponentReport</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.reporting.components.ComponentReport" style="javadoc"/></seg></seglistitem></segmentedlist><caution><para>Note: This class is <ulink url="../userguide/feature_lifecycle.html">deprecated</ulink> and will be removed in the next major version of Gradle.</para></caution><para>Displays some details about the software components produced by the project.</para><section><title>Properties</title><para>No properties</para></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section></chapter><chapter id="org.gradle.api.reporting.dependents.DependentComponentsReport"><title>DependentComponentsReport</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.reporting.dependents.DependentComponentsReport" style="javadoc"/></seg></seglistitem></segmentedlist><caution><para>Note: This class is <ulink url="../userguide/feature_lifecycle.html">deprecated</ulink> and will be removed in the next major version of Gradle.</para></caution><para>Displays dependent components.</para><section><title>Properties</title><table><title>Properties - DependentComponentsReport</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.reporting.dependents.DependentComponentsReport:components"><literal>components</literal></link></td><td><para>The components to generate the report for.
Defaults to all components of this project.</para></td></tr><tr><td><link linkend="org.gradle.api.reporting.dependents.DependentComponentsReport:showAll"><literal>showAll</literal></link></td><td><para>Should this include both non-buildable and test suites in the report?</para></td></tr><tr><td><link linkend="org.gradle.api.reporting.dependents.DependentComponentsReport:showNonBuildable"><literal>showNonBuildable</literal></link></td><td><para>Should this include non-buildable components in the report?</para></td></tr><tr><td><link linkend="org.gradle.api.reporting.dependents.DependentComponentsReport:showTestSuites"><literal>showTestSuites</literal></link></td><td><para>Should this include test suites in the report?</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.reporting.dependents.DependentComponentsReport:components" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/List.html"><classname>List</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>components</literal></title><para>The components to generate the report for.
Defaults to all components of this project.</para></section><section id="org.gradle.api.reporting.dependents.DependentComponentsReport:showAll" role="detail"><title><classname>boolean</classname> <literal>showAll</literal></title><para>Should this include both non-buildable and test suites in the report?</para></section><section id="org.gradle.api.reporting.dependents.DependentComponentsReport:showNonBuildable" role="detail"><title><classname>boolean</classname> <literal>showNonBuildable</literal></title><para>Should this include non-buildable components in the report?</para></section><section id="org.gradle.api.reporting.dependents.DependentComponentsReport:showTestSuites" role="detail"><title><classname>boolean</classname> <literal>showTestSuites</literal></title><para>Should this include test suites in the report?</para></section></section></chapter><chapter id="org.gradle.api.reporting.model.ModelReport"><title>ModelReport</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.reporting.model.ModelReport" style="javadoc"/></seg></seglistitem></segmentedlist><caution><para>Note: This class is <ulink url="../userguide/feature_lifecycle.html">deprecated</ulink> and will be removed in the next major version of Gradle.</para></caution><para>Displays some details about the configuration model of the project.
An instance of this type is used when you execute the <literal>model</literal> task from the command-line.</para><section><title>Properties</title><para>No properties</para></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section></chapter><chapter id="org.gradle.api.reporting.Reporting"><title>Reporting</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.reporting.Reporting" style="javadoc"/></seg></seglistitem></segmentedlist><segmentedlist><segtitle>Known Subtypes</segtitle><seglistitem><seg><simplelist columns="3" type="vert"><member><apilink class="org.gradle.api.tasks.diagnostics.AbstractConfigurationReportTask"/></member><member><apilink class="org.gradle.api.plugins.quality.Checkstyle"/></member><member><apilink class="org.gradle.api.plugins.quality.CodeNarc"/></member><member><apilink class="org.gradle.api.reporting.GenerateBuildDashboard"/></member><member><apilink class="org.gradle.api.reporting.dependencies.HtmlDependencyReportTask"/></member><member><apilink class="org.gradle.testing.jacoco.tasks.JacocoReport"/></member><member><apilink class="org.gradle.api.plugins.quality.Pmd"/></member><member><apilink class="org.gradle.api.tasks.testing.AbstractTestTask"/></member></simplelist></seg></seglistitem></segmentedlist><para>An object that provides reporting options.
</para><para>
Tasks that produce reports as part of their execution expose configuration options of those reports via these methods.
The <literal>Reporting</literal> interface is parameterized, where the parameter denotes the specific type of reporting container
that is exposed. The specific type of the reporting container denotes the different types of reports available.
</para><para>
For example, given a task such as:
</para><programlisting language="java">
class MyTask implements Reporting&lt;MyReportContainer&gt; {
    // implementation
}

interface MyReportContainer extends ReportContainer&lt;Report&gt; {
    Report getHtml();
    Report getCsv();
}
</programlisting><para>
The reporting aspects of such a task can be configured as such:
</para><programlisting language="java">
task my(type: MyTask) {
    reports {
        html.required = true
        csv.required = false
    }
}
</programlisting><para>
See the documentation for the specific <literal>ReportContainer</literal> type for the task for information on report types and options.
</para><section><title>Properties</title><table><title>Properties - Reporting</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.reporting.Reporting:reports"><literal>reports</literal></link></td><td><para>A <apilink class="org.gradle.api.reporting.ReportContainer"/> instance.
</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - Reporting</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.reporting.Reporting:reports(org.gradle.api.Action)">reports</link>(configureAction)</literal></td><td><para>Allow configuration of the report container by closure.

</para></td></tr></table></section><section><title>Script blocks</title><table><title>Script blocks - Reporting</title><thead><tr><td>Block</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.reporting.Reporting:reports(groovy.lang.Closure)"><literal>reports</literal></link></td><td><para>Allow configuration of the report container by closure.

</para></td></tr></table></section><section><title>Property details</title><section id="org.gradle.api.reporting.Reporting:reports" role="detail"><title><classname>T</classname> <literal>reports</literal> (read-only)</title><para>A <apilink class="org.gradle.api.reporting.ReportContainer"/> instance.
</para><para>
Implementers specify a specific implementation of <apilink class="org.gradle.api.reporting.ReportContainer"/> that describes the types of reports that
are available.</para></section></section><section><title>Method details</title><section id="org.gradle.api.reporting.Reporting:reports(org.gradle.api.Action)" role="detail"><title><classname>T</classname> <literal>reports</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <classname>T</classname>&gt;</classname> configureAction)</title><para>Allow configuration of the report container by closure.

</para><programlisting language="java">
reports {
  html {
    required false
  }
  xml.outputLocation = "build/reports/myReport.xml"
}
</programlisting></section></section><section><title>Script block details</title><section id="org.gradle.api.reporting.Reporting:reports(groovy.lang.Closure)" role="detail"><title><literal>reports</literal> { }</title><para>Allow configuration of the report container by closure.

</para><programlisting language="java">
reports {
  html {
    required false
  }
  xml.outputLocation = "build/reports/myReport.xml"
}
</programlisting><segmentedlist><segtitle>Delegates to</segtitle><seglistitem><seg><classname>T</classname> from <link linkend="org.gradle.api.reporting.Reporting:reports"><literal>reports</literal></link></seg></seglistitem></segmentedlist></section></section></chapter><chapter id="org.gradle.api.tasks.diagnostics.AbstractConfigurationReportTask"><title>AbstractConfigurationReportTask</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.tasks.diagnostics.AbstractConfigurationReportTask" style="javadoc"/></seg></seglistitem></segmentedlist><segmentedlist><segtitle>Known Subtypes</segtitle><seglistitem><seg><simplelist columns="1" type="vert"><member><apilink class="org.gradle.api.tasks.diagnostics.OutgoingVariantsReportTask"/></member><member><apilink class="org.gradle.api.tasks.diagnostics.ResolvableConfigurationsReportTask"/></member></simplelist></seg></seglistitem></segmentedlist><caution><para>Note: This class is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Base class for reporting tasks which display information about attributes and related data associated to a variant/configuration.

This class implements <apilink class="org.gradle.api.reporting.Reporting"/> to make configuring additional file output formats simple.</para><section><title>Properties</title><table><title>Properties - AbstractConfigurationReportTask</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.tasks.diagnostics.AbstractConfigurationReportTask:reports"><literal>reports</literal></link></td><td><caution>Incubating</caution><para>The reports to be generated by this task.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - AbstractConfigurationReportTask</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.tasks.diagnostics.AbstractConfigurationReportTask:reports(org.gradle.api.Action)">reports</link>(configureAction)</literal></td><td><para>Allow configuration of the report container by closure.

</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.tasks.diagnostics.AbstractConfigurationReportTask:reports" role="detail"><title><apilink class="org.gradle.api.tasks.diagnostics.configurations.ConfigurationReports"/> <literal>reports</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The reports to be generated by this task.</para></section></section><section><title>Method details</title><section id="org.gradle.api.tasks.diagnostics.AbstractConfigurationReportTask:reports(org.gradle.api.Action)" role="detail"><title><classname>T</classname> <literal>reports</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <classname>T</classname>&gt;</classname> configureAction)</title><para>Allow configuration of the report container by closure.

</para><programlisting language="java">
reports {
  html {
    required false
  }
  xml.outputLocation = "build/reports/myReport.xml"
}
</programlisting></section></section></chapter><chapter id="org.gradle.api.tasks.diagnostics.OutgoingVariantsReportTask"><title>OutgoingVariantsReportTask</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.tasks.diagnostics.OutgoingVariantsReportTask" style="javadoc"/></seg></seglistitem></segmentedlist><para>A task which reports the outgoing variants of a project on the command line.

This is useful for listing what a project produces in terms of variants and
what artifacts are attached to each variant.

Variants, in this context, must be understood as "things produced by a project
which can safely be consumed by another project".</para><section><title>Properties</title><table><title>Properties - OutgoingVariantsReportTask</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.tasks.diagnostics.OutgoingVariantsReportTask:reports"><literal>reports</literal></link></td><td><caution>Incubating</caution><para>The reports to be generated by this task.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.diagnostics.OutgoingVariantsReportTask:showAll"><literal>showAll</literal></link></td><td><para>Shows all variants, including legacy and deprecated configurations.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.diagnostics.OutgoingVariantsReportTask:variantName"><literal>variantName</literal></link></td><td><para>Limits the report to a single variant.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - OutgoingVariantsReportTask</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.tasks.diagnostics.OutgoingVariantsReportTask:reports(org.gradle.api.Action)">reports</link>(configureAction)</literal></td><td><para>Allow configuration of the report container by closure.

</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.tasks.diagnostics.OutgoingVariantsReportTask:reports" role="detail"><title><apilink class="org.gradle.api.tasks.diagnostics.configurations.ConfigurationReports"/> <literal>reports</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The reports to be generated by this task.</para></section><section id="org.gradle.api.tasks.diagnostics.OutgoingVariantsReportTask:showAll" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html"><classname>Boolean</classname></ulink>&gt;</classname> <literal>showAll</literal></title><para>Shows all variants, including legacy and deprecated configurations.</para></section><section id="org.gradle.api.tasks.diagnostics.OutgoingVariantsReportTask:variantName" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>variantName</literal></title><para>Limits the report to a single variant.</para></section></section><section><title>Method details</title><section id="org.gradle.api.tasks.diagnostics.OutgoingVariantsReportTask:reports(org.gradle.api.Action)" role="detail"><title><classname>T</classname> <literal>reports</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <classname>T</classname>&gt;</classname> configureAction)</title><para>Allow configuration of the report container by closure.

</para><programlisting language="java">
reports {
  html {
    required false
  }
  xml.outputLocation = "build/reports/myReport.xml"
}
</programlisting></section></section></chapter><chapter id="org.gradle.api.tasks.diagnostics.ResolvableConfigurationsReportTask"><title>ResolvableConfigurationsReportTask</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.tasks.diagnostics.ResolvableConfigurationsReportTask" style="javadoc"/></seg></seglistitem></segmentedlist><caution><para>Note: This class is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>A task which reports the configurations of a project which can be resolved on the command line.

This is useful for determining which attributes are associated with the resolvable
configurations being used to resolve a project's dependencies.  The output can help predict which variant of
each dependency will be resolved.</para><section><title>Properties</title><table><title>Properties - ResolvableConfigurationsReportTask</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.tasks.diagnostics.ResolvableConfigurationsReportTask:configurationName"><literal>configurationName</literal></link></td><td><caution>Incubating</caution><para>Limits the report to a single configuration.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.diagnostics.ResolvableConfigurationsReportTask:recursive"><literal>recursive</literal></link></td><td><caution>Incubating</caution><para>Show all extended configurations, including transitively extended configurations.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.diagnostics.ResolvableConfigurationsReportTask:reports"><literal>reports</literal></link></td><td><caution>Incubating</caution><para>The reports to be generated by this task.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.diagnostics.ResolvableConfigurationsReportTask:showAll"><literal>showAll</literal></link></td><td><caution>Incubating</caution><para>Shows all configurations, including legacy and deprecated configurations.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - ResolvableConfigurationsReportTask</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.tasks.diagnostics.ResolvableConfigurationsReportTask:reports(org.gradle.api.Action)">reports</link>(configureAction)</literal></td><td><para>Allow configuration of the report container by closure.

</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.tasks.diagnostics.ResolvableConfigurationsReportTask:configurationName" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>configurationName</literal></title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Limits the report to a single configuration.</para></section><section id="org.gradle.api.tasks.diagnostics.ResolvableConfigurationsReportTask:recursive" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html"><classname>Boolean</classname></ulink>&gt;</classname> <literal>recursive</literal></title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Show all extended configurations, including transitively extended configurations.</para></section><section id="org.gradle.api.tasks.diagnostics.ResolvableConfigurationsReportTask:reports" role="detail"><title><apilink class="org.gradle.api.tasks.diagnostics.configurations.ConfigurationReports"/> <literal>reports</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The reports to be generated by this task.</para></section><section id="org.gradle.api.tasks.diagnostics.ResolvableConfigurationsReportTask:showAll" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html"><classname>Boolean</classname></ulink>&gt;</classname> <literal>showAll</literal></title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Shows all configurations, including legacy and deprecated configurations.</para></section></section><section><title>Method details</title><section id="org.gradle.api.tasks.diagnostics.ResolvableConfigurationsReportTask:reports(org.gradle.api.Action)" role="detail"><title><classname>T</classname> <literal>reports</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <classname>T</classname>&gt;</classname> configureAction)</title><para>Allow configuration of the report container by closure.

</para><programlisting language="java">
reports {
  html {
    required false
  }
  xml.outputLocation = "build/reports/myReport.xml"
}
</programlisting></section></section></chapter><chapter id="org.gradle.api.tasks.diagnostics.ArtifactTransformsReportTask"><title>ArtifactTransformsReportTask</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.tasks.diagnostics.ArtifactTransformsReportTask" style="javadoc"/></seg></seglistitem></segmentedlist><caution><para>Note: This class is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>A task which reports information about the Artifact Transforms (implemented by <apilink class="org.gradle.api.artifacts.transform.TransformAction"/>) used by a project.

This is useful for investigating ambiguous transformation scenarios.  The output can help predict which transforms will need
to be modified to remove ambiguity.</para><section><title>Properties</title><table><title>Properties - ArtifactTransformsReportTask</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.tasks.diagnostics.ArtifactTransformsReportTask:transformType"><literal>transformType</literal></link></td><td><caution>Incubating</caution><para>Limits the report to reporting on transforms using a type with this (simple) classname.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.tasks.diagnostics.ArtifactTransformsReportTask:transformType" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>transformType</literal></title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Limits the report to reporting on transforms using a type with this (simple) classname.</para></section></section></chapter><chapter id="org.gradle.api.tasks.SourceTask"><title>SourceTask</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.tasks.SourceTask" style="javadoc"/></seg></seglistitem></segmentedlist><segmentedlist><segtitle>Known Subtypes</segtitle><seglistitem><seg><simplelist columns="3" type="vert"><member><apilink class="org.gradle.api.plugins.antlr.AntlrTask"/></member><member><apilink class="org.gradle.api.plugins.quality.AbstractCodeQualityTask"/></member><member><apilink class="org.gradle.api.tasks.compile.AbstractCompile"/></member><member><apilink class="org.gradle.api.tasks.javadoc.Groovydoc"/></member><member><apilink class="org.gradle.api.tasks.javadoc.Javadoc"/></member><member><apilink class="org.gradle.api.tasks.scala.ScalaDoc"/></member></simplelist></seg></seglistitem></segmentedlist><para>A <literal>SourceTask</literal> performs some operation on source files.</para><section><title>Properties</title><table><title>Properties - SourceTask</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.tasks.SourceTask:excludes"><literal>excludes</literal></link></td><td><para>The set of exclude patterns.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.SourceTask:includes"><literal>includes</literal></link></td><td><para>The set of include patterns.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.SourceTask:source"><literal>source</literal></link></td><td><para>The source for this task, after the include and exclude patterns have been applied. Ignores source files which do not exist.

</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - SourceTask</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.tasks.SourceTask:exclude(groovy.lang.Closure)">exclude</link>(excludeSpec)</literal></td><td><para>Adds an exclude spec. This method may be called multiple times to append new specs.The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter. The closure should return true or false. Example:

</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.SourceTask:exclude(java.lang.Iterable)">exclude</link>(excludes)</literal></td><td><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.SourceTask:exclude(java.lang.String[])">exclude</link>(excludes)</literal></td><td><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.SourceTask:exclude(org.gradle.api.specs.Spec)">exclude</link>(excludeSpec)</literal></td><td><para>Adds an exclude spec. This method may be called multiple times to append new specs.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.SourceTask:include(groovy.lang.Closure)">include</link>(includeSpec)</literal></td><td><para>Adds an include spec. This method may be called multiple times to append new specs. The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.SourceTask:include(java.lang.Iterable)">include</link>(includes)</literal></td><td><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.SourceTask:include(java.lang.String[])">include</link>(includes)</literal></td><td><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.SourceTask:include(org.gradle.api.specs.Spec)">include</link>(includeSpec)</literal></td><td><para>Adds an include spec. This method may be called multiple times to append new specs.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.SourceTask:source(java.lang.Object[])">source</link>(sources)</literal></td><td><para>Adds some source to this task. The given source objects will be evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/>.</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.tasks.SourceTask:excludes" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>excludes</literal></title><para>The set of exclude patterns.</para></section><section id="org.gradle.api.tasks.SourceTask:includes" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>includes</literal></title><para>The set of include patterns.</para></section><section id="org.gradle.api.tasks.SourceTask:source" role="detail"><title><apilink class="org.gradle.api.file.FileTree"/> <literal>source</literal></title><para>The source for this task, after the include and exclude patterns have been applied. Ignores source files which do not exist.

</para><para>
The <apilink class="org.gradle.api.tasks.PathSensitivity"/> for the sources is configured to be <apilink class="org.gradle.api.tasks.PathSensitivity" method="ABSOLUTE"/>.
If your sources are less strict, please change it accordingly by overriding this method in your subclass.
</para></section></section><section><title>Method details</title><section id="org.gradle.api.tasks.SourceTask:exclude(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>exclude</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> excludeSpec)</title><para>Adds an exclude spec. This method may be called multiple times to append new specs.The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter. The closure should return true or false. Example:

</para><para><programlisting language="java">
copySpec {
  from 'source'
  into 'destination'
  //an example of excluding files from certain configuration:
  exclude { it.file in configurations.someConf.files }
}
</programlisting></para><para>

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.api.tasks.SourceTask:exclude(java.lang.Iterable)" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>exclude</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> excludes)</title><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.api.tasks.SourceTask:exclude(java.lang.String[])" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>exclude</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>...</classname> excludes)</title><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.api.tasks.SourceTask:exclude(org.gradle.api.specs.Spec)" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>exclude</literal>(<classname><apilink class="org.gradle.api.specs.Spec"/>&lt;<apilink class="org.gradle.api.file.FileTreeElement"/>&gt;</classname> excludeSpec)</title><para>Adds an exclude spec. This method may be called multiple times to append new specs.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.api.tasks.SourceTask:include(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>include</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> includeSpec)</title><para>Adds an include spec. This method may be called multiple times to append new specs. The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></section><section id="org.gradle.api.tasks.SourceTask:include(java.lang.Iterable)" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>include</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> includes)</title><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></section><section id="org.gradle.api.tasks.SourceTask:include(java.lang.String[])" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>include</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>...</classname> includes)</title><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></section><section id="org.gradle.api.tasks.SourceTask:include(org.gradle.api.specs.Spec)" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>include</literal>(<classname><apilink class="org.gradle.api.specs.Spec"/>&lt;<apilink class="org.gradle.api.file.FileTreeElement"/>&gt;</classname> includeSpec)</title><para>Adds an include spec. This method may be called multiple times to append new specs.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></section><section id="org.gradle.api.tasks.SourceTask:source(java.lang.Object[])" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>source</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink>...</classname> sources)</title><para>Adds some source to this task. The given source objects will be evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/>.</para></section></section></chapter><chapter id="org.gradle.api.plugins.antlr.AntlrTask"><title>AntlrTask</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.plugins.antlr.AntlrTask" style="javadoc"/></seg></seglistitem></segmentedlist><para>Generates parsers from Antlr grammars.</para><section><title>Properties</title><table><title>Properties - AntlrTask</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.plugins.antlr.AntlrTask:antlrClasspath"><literal>antlrClasspath</literal></link></td><td><para>The classpath containing the Ant ANTLR task implementation.</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.antlr.AntlrTask:arguments"><literal>arguments</literal></link></td><td><para>List of command-line arguments passed to the antlr process</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.antlr.AntlrTask:excludes"><literal>excludes</literal></link></td><td><para>The set of exclude patterns.</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.antlr.AntlrTask:includes"><literal>includes</literal></link></td><td><para>The set of include patterns.</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.antlr.AntlrTask:maxHeapSize"><literal>maxHeapSize</literal></link></td><td><para>The maximum heap size for the forked antlr process (ex: '1g').</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.antlr.AntlrTask:outputDirectory"><literal>outputDirectory</literal></link></td><td><para>The directory to generate the parser source files into.</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.antlr.AntlrTask:source"><literal>source</literal></link></td><td><para>The source for this task, after the include and exclude patterns have been applied. Ignores source files which do not exist.

</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.antlr.AntlrTask:trace"><literal>trace</literal></link></td><td><para>Specifies that all rules call <literal>traceIn</literal>/<literal>traceOut</literal>.</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.antlr.AntlrTask:traceLexer"><literal>traceLexer</literal></link></td><td><para>Specifies that all lexer rules call <literal>traceIn</literal>/<literal>traceOut</literal>.</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.antlr.AntlrTask:traceParser"><literal>traceParser</literal></link></td><td><para>Specifies that all parser rules call <literal>traceIn</literal>/<literal>traceOut</literal>.</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.antlr.AntlrTask:traceTreeWalker"><literal>traceTreeWalker</literal></link></td><td><para>Specifies that all tree walker rules call <literal>traceIn</literal>/<literal>traceOut</literal>.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - AntlrTask</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.plugins.antlr.AntlrTask:exclude(groovy.lang.Closure)">exclude</link>(excludeSpec)</literal></td><td><para>Adds an exclude spec. This method may be called multiple times to append new specs.The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter. The closure should return true or false. Example:

</para></td></tr><tr><td><literal><link linkend="org.gradle.api.plugins.antlr.AntlrTask:exclude(java.lang.Iterable)">exclude</link>(excludes)</literal></td><td><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.plugins.antlr.AntlrTask:exclude(java.lang.String[])">exclude</link>(excludes)</literal></td><td><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.plugins.antlr.AntlrTask:exclude(org.gradle.api.specs.Spec)">exclude</link>(excludeSpec)</literal></td><td><para>Adds an exclude spec. This method may be called multiple times to append new specs.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.plugins.antlr.AntlrTask:include(groovy.lang.Closure)">include</link>(includeSpec)</literal></td><td><para>Adds an include spec. This method may be called multiple times to append new specs. The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.plugins.antlr.AntlrTask:include(java.lang.Iterable)">include</link>(includes)</literal></td><td><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.plugins.antlr.AntlrTask:include(java.lang.String[])">include</link>(includes)</literal></td><td><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.plugins.antlr.AntlrTask:include(org.gradle.api.specs.Spec)">include</link>(includeSpec)</literal></td><td><para>Adds an include spec. This method may be called multiple times to append new specs.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.plugins.antlr.AntlrTask:source(java.lang.Object[])">source</link>(sources)</literal></td><td><para>Adds some source to this task. The given source objects will be evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/>.</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.plugins.antlr.AntlrTask:antlrClasspath" role="detail"><title><apilink class="org.gradle.api.file.FileCollection"/> <literal>antlrClasspath</literal></title><para>The classpath containing the Ant ANTLR task implementation.</para><segmentedlist><segtitle>Default with <literal>antlr</literal> plugin</segtitle><seglistitem><seg><literal>project.configurations.antlr</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.plugins.antlr.AntlrTask:arguments" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/List.html"><classname>List</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>arguments</literal></title><para>List of command-line arguments passed to the antlr process</para></section><section id="org.gradle.api.plugins.antlr.AntlrTask:excludes" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>excludes</literal></title><para>The set of exclude patterns.</para></section><section id="org.gradle.api.plugins.antlr.AntlrTask:includes" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>includes</literal></title><para>The set of include patterns.</para></section><section id="org.gradle.api.plugins.antlr.AntlrTask:maxHeapSize" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>maxHeapSize</literal></title><para>The maximum heap size for the forked antlr process (ex: '1g').</para><segmentedlist><segtitle>Default with <literal>antlr</literal> plugin</segtitle><seglistitem><seg><literal>null</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.plugins.antlr.AntlrTask:outputDirectory" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>outputDirectory</literal></title><para>The directory to generate the parser source files into.</para><segmentedlist><segtitle>Default with <literal>antlr</literal> plugin</segtitle><seglistitem><seg>
                <filename><replaceable>${project.layout.buildDirectory}</replaceable>/generated-src/antlr/<replaceable>${sourceSet.name}</replaceable></filename></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.plugins.antlr.AntlrTask:source" role="detail"><title><apilink class="org.gradle.api.file.FileTree"/> <literal>source</literal></title><para>The source for this task, after the include and exclude patterns have been applied. Ignores source files which do not exist.

</para><para>
The <apilink class="org.gradle.api.tasks.PathSensitivity"/> for the sources is configured to be <apilink class="org.gradle.api.tasks.PathSensitivity" method="ABSOLUTE"/>.
If your sources are less strict, please change it accordingly by overriding this method in your subclass.
</para><segmentedlist><segtitle>Default with <literal>antlr</literal> plugin</segtitle><seglistitem><seg><literal><replaceable>sourceSet</replaceable>.antlr</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.plugins.antlr.AntlrTask:trace" role="detail"><title><classname>boolean</classname> <literal>trace</literal></title><para>Specifies that all rules call <literal>traceIn</literal>/<literal>traceOut</literal>.</para><segmentedlist><segtitle>Default with <literal>antlr</literal> plugin</segtitle><seglistitem><seg><literal>false</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.plugins.antlr.AntlrTask:traceLexer" role="detail"><title><classname>boolean</classname> <literal>traceLexer</literal></title><para>Specifies that all lexer rules call <literal>traceIn</literal>/<literal>traceOut</literal>.</para><segmentedlist><segtitle>Default with <literal>antlr</literal> plugin</segtitle><seglistitem><seg><literal>false</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.plugins.antlr.AntlrTask:traceParser" role="detail"><title><classname>boolean</classname> <literal>traceParser</literal></title><para>Specifies that all parser rules call <literal>traceIn</literal>/<literal>traceOut</literal>.</para><segmentedlist><segtitle>Default with <literal>antlr</literal> plugin</segtitle><seglistitem><seg><literal>false</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.plugins.antlr.AntlrTask:traceTreeWalker" role="detail"><title><classname>boolean</classname> <literal>traceTreeWalker</literal></title><para>Specifies that all tree walker rules call <literal>traceIn</literal>/<literal>traceOut</literal>.</para><segmentedlist><segtitle>Default with <literal>antlr</literal> plugin</segtitle><seglistitem><seg><literal>false</literal></seg></seglistitem></segmentedlist></section></section><section><title>Method details</title><section id="org.gradle.api.plugins.antlr.AntlrTask:exclude(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>exclude</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> excludeSpec)</title><para>Adds an exclude spec. This method may be called multiple times to append new specs.The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter. The closure should return true or false. Example:

</para><para><programlisting language="java">
copySpec {
  from 'source'
  into 'destination'
  //an example of excluding files from certain configuration:
  exclude { it.file in configurations.someConf.files }
}
</programlisting></para><para>

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.api.plugins.antlr.AntlrTask:exclude(java.lang.Iterable)" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>exclude</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> excludes)</title><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.api.plugins.antlr.AntlrTask:exclude(java.lang.String[])" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>exclude</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>...</classname> excludes)</title><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.api.plugins.antlr.AntlrTask:exclude(org.gradle.api.specs.Spec)" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>exclude</literal>(<classname><apilink class="org.gradle.api.specs.Spec"/>&lt;<apilink class="org.gradle.api.file.FileTreeElement"/>&gt;</classname> excludeSpec)</title><para>Adds an exclude spec. This method may be called multiple times to append new specs.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.api.plugins.antlr.AntlrTask:include(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>include</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> includeSpec)</title><para>Adds an include spec. This method may be called multiple times to append new specs. The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></section><section id="org.gradle.api.plugins.antlr.AntlrTask:include(java.lang.Iterable)" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>include</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> includes)</title><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></section><section id="org.gradle.api.plugins.antlr.AntlrTask:include(java.lang.String[])" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>include</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>...</classname> includes)</title><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></section><section id="org.gradle.api.plugins.antlr.AntlrTask:include(org.gradle.api.specs.Spec)" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>include</literal>(<classname><apilink class="org.gradle.api.specs.Spec"/>&lt;<apilink class="org.gradle.api.file.FileTreeElement"/>&gt;</classname> includeSpec)</title><para>Adds an include spec. This method may be called multiple times to append new specs.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></section><section id="org.gradle.api.plugins.antlr.AntlrTask:source(java.lang.Object[])" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>source</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink>...</classname> sources)</title><para>Adds some source to this task. The given source objects will be evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/>.</para></section></section></chapter><chapter id="org.gradle.api.tasks.diagnostics.BuildEnvironmentReportTask"><title>BuildEnvironmentReportTask</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.tasks.diagnostics.BuildEnvironmentReportTask" style="javadoc"/></seg></seglistitem></segmentedlist><para>Provides information about the build environment for the project that the task is associated with.
</para><para>
Currently, this information is limited to the project's declared build script dependencies
visualised in a similar manner as provided by <literal>DependencyReportTask</literal>.
</para><para>
It is not necessary to manually add a task of this type to your project,
as every project automatically has a task of this type by the name <literal>"buildEnvironment"</literal>.</para><section><title>Properties</title><para>No properties</para></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section></chapter><chapter id="org.gradle.api.plugins.quality.AbstractCodeQualityTask"><title>AbstractCodeQualityTask</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.plugins.quality.AbstractCodeQualityTask" style="javadoc"/></seg></seglistitem></segmentedlist><segmentedlist><segtitle>Known Subtypes</segtitle><seglistitem><seg><simplelist columns="1" type="vert"><member><apilink class="org.gradle.api.plugins.quality.Checkstyle"/></member><member><apilink class="org.gradle.api.plugins.quality.CodeNarc"/></member><member><apilink class="org.gradle.api.plugins.quality.Pmd"/></member></simplelist></seg></seglistitem></segmentedlist><caution><para>Note: This class is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Base class for code quality tasks.</para><section><title>Properties</title><table><title>Properties - AbstractCodeQualityTask</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.plugins.quality.AbstractCodeQualityTask:excludes"><literal>excludes</literal></link></td><td><para>The set of exclude patterns.</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.quality.AbstractCodeQualityTask:ignoreFailures"><literal>ignoreFailures</literal></link></td><td><caution>Incubating</caution><para>Specifies whether the build should break when the verifications performed by this task fail.</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.quality.AbstractCodeQualityTask:includes"><literal>includes</literal></link></td><td><para>The set of include patterns.</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.quality.AbstractCodeQualityTask:javaLauncher"><literal>javaLauncher</literal></link></td><td><caution>Incubating</caution><para>Java launcher used to start the worker process</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.quality.AbstractCodeQualityTask:maxHeapSize"><literal>maxHeapSize</literal></link></td><td><caution>Incubating</caution><para>The maximum heap size for the worker process.  If unspecified, a maximum heap size will be provided by Gradle.

Supports units like the command-line option <literal>-Xmx</literal> such as <literal>"1g"</literal>.</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.quality.AbstractCodeQualityTask:minHeapSize"><literal>minHeapSize</literal></link></td><td><caution>Incubating</caution><para>The minimum heap size for the worker process.  When unspecified, no minimum heap size is set.

Supports units like the command-line option <literal>-Xms</literal> such as <literal>"1g"</literal>.</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.quality.AbstractCodeQualityTask:source"><literal>source</literal></link></td><td><para>The source for this task, after the include and exclude patterns have been applied. Ignores source files which do not exist.

</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - AbstractCodeQualityTask</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.plugins.quality.AbstractCodeQualityTask:exclude(groovy.lang.Closure)">exclude</link>(excludeSpec)</literal></td><td><para>Adds an exclude spec. This method may be called multiple times to append new specs.The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter. The closure should return true or false. Example:

</para></td></tr><tr><td><literal><link linkend="org.gradle.api.plugins.quality.AbstractCodeQualityTask:exclude(java.lang.Iterable)">exclude</link>(excludes)</literal></td><td><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.plugins.quality.AbstractCodeQualityTask:exclude(java.lang.String[])">exclude</link>(excludes)</literal></td><td><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.plugins.quality.AbstractCodeQualityTask:exclude(org.gradle.api.specs.Spec)">exclude</link>(excludeSpec)</literal></td><td><para>Adds an exclude spec. This method may be called multiple times to append new specs.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.plugins.quality.AbstractCodeQualityTask:include(groovy.lang.Closure)">include</link>(includeSpec)</literal></td><td><para>Adds an include spec. This method may be called multiple times to append new specs. The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.plugins.quality.AbstractCodeQualityTask:include(java.lang.Iterable)">include</link>(includes)</literal></td><td><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.plugins.quality.AbstractCodeQualityTask:include(java.lang.String[])">include</link>(includes)</literal></td><td><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.plugins.quality.AbstractCodeQualityTask:include(org.gradle.api.specs.Spec)">include</link>(includeSpec)</literal></td><td><para>Adds an include spec. This method may be called multiple times to append new specs.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.plugins.quality.AbstractCodeQualityTask:source(java.lang.Object[])">source</link>(sources)</literal></td><td><para>Adds some source to this task. The given source objects will be evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/>.</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.plugins.quality.AbstractCodeQualityTask:excludes" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>excludes</literal></title><para>The set of exclude patterns.</para></section><section id="org.gradle.api.plugins.quality.AbstractCodeQualityTask:ignoreFailures" role="detail"><title><classname>boolean</classname> <literal>ignoreFailures</literal></title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Specifies whether the build should break when the verifications performed by this task fail.</para><segmentedlist><segtitle>Default value</segtitle><seglistitem><seg>false</seg></seglistitem></segmentedlist></section><section id="org.gradle.api.plugins.quality.AbstractCodeQualityTask:includes" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>includes</literal></title><para>The set of include patterns.</para></section><section id="org.gradle.api.plugins.quality.AbstractCodeQualityTask:javaLauncher" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<apilink class="org.gradle.jvm.toolchain.JavaLauncher"/>&gt;</classname> <literal>javaLauncher</literal></title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Java launcher used to start the worker process</para></section><section id="org.gradle.api.plugins.quality.AbstractCodeQualityTask:maxHeapSize" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>maxHeapSize</literal></title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The maximum heap size for the worker process.  If unspecified, a maximum heap size will be provided by Gradle.

Supports units like the command-line option <literal>-Xmx</literal> such as <literal>"1g"</literal>.</para></section><section id="org.gradle.api.plugins.quality.AbstractCodeQualityTask:minHeapSize" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>minHeapSize</literal></title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The minimum heap size for the worker process.  When unspecified, no minimum heap size is set.

Supports units like the command-line option <literal>-Xms</literal> such as <literal>"1g"</literal>.</para></section><section id="org.gradle.api.plugins.quality.AbstractCodeQualityTask:source" role="detail"><title><apilink class="org.gradle.api.file.FileTree"/> <literal>source</literal></title><para>The source for this task, after the include and exclude patterns have been applied. Ignores source files which do not exist.

</para><para>
The <apilink class="org.gradle.api.tasks.PathSensitivity"/> for the sources is configured to be <apilink class="org.gradle.api.tasks.PathSensitivity" method="ABSOLUTE"/>.
If your sources are less strict, please change it accordingly by overriding this method in your subclass.
</para></section></section><section><title>Method details</title><section id="org.gradle.api.plugins.quality.AbstractCodeQualityTask:exclude(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>exclude</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> excludeSpec)</title><para>Adds an exclude spec. This method may be called multiple times to append new specs.The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter. The closure should return true or false. Example:

</para><para><programlisting language="java">
copySpec {
  from 'source'
  into 'destination'
  //an example of excluding files from certain configuration:
  exclude { it.file in configurations.someConf.files }
}
</programlisting></para><para>

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.api.plugins.quality.AbstractCodeQualityTask:exclude(java.lang.Iterable)" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>exclude</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> excludes)</title><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.api.plugins.quality.AbstractCodeQualityTask:exclude(java.lang.String[])" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>exclude</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>...</classname> excludes)</title><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.api.plugins.quality.AbstractCodeQualityTask:exclude(org.gradle.api.specs.Spec)" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>exclude</literal>(<classname><apilink class="org.gradle.api.specs.Spec"/>&lt;<apilink class="org.gradle.api.file.FileTreeElement"/>&gt;</classname> excludeSpec)</title><para>Adds an exclude spec. This method may be called multiple times to append new specs.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.api.plugins.quality.AbstractCodeQualityTask:include(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>include</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> includeSpec)</title><para>Adds an include spec. This method may be called multiple times to append new specs. The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></section><section id="org.gradle.api.plugins.quality.AbstractCodeQualityTask:include(java.lang.Iterable)" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>include</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> includes)</title><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></section><section id="org.gradle.api.plugins.quality.AbstractCodeQualityTask:include(java.lang.String[])" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>include</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>...</classname> includes)</title><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></section><section id="org.gradle.api.plugins.quality.AbstractCodeQualityTask:include(org.gradle.api.specs.Spec)" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>include</literal>(<classname><apilink class="org.gradle.api.specs.Spec"/>&lt;<apilink class="org.gradle.api.file.FileTreeElement"/>&gt;</classname> includeSpec)</title><para>Adds an include spec. This method may be called multiple times to append new specs.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></section><section id="org.gradle.api.plugins.quality.AbstractCodeQualityTask:source(java.lang.Object[])" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>source</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink>...</classname> sources)</title><para>Adds some source to this task. The given source objects will be evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/>.</para></section></section></chapter><chapter id="org.gradle.api.plugins.quality.Checkstyle"><title>Checkstyle</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.plugins.quality.Checkstyle" style="javadoc"/></seg></seglistitem></segmentedlist><para>Runs Checkstyle against some source files.</para><section><title>Properties</title><table><title>Properties - Checkstyle</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.plugins.quality.Checkstyle:checkstyleClasspath"><literal>checkstyleClasspath</literal></link></td><td><para>The class path containing the Checkstyle library to be used.</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.quality.Checkstyle:classpath"><literal>classpath</literal></link></td><td><para>The class path containing the compiled classes for the source files to be analyzed.</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.quality.Checkstyle:config"><literal>config</literal></link></td><td><para>The Checkstyle configuration to use. Replaces the <literal>configFile</literal> property.</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.quality.Checkstyle:configDirectory"><literal>configDirectory</literal></link></td><td><para>Path to other Checkstyle configuration files.
</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.quality.Checkstyle:configFile"><literal>configFile</literal></link></td><td><para>The Checkstyle configuration file to use.</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.quality.Checkstyle:configProperties"><literal>configProperties</literal></link></td><td><para>The properties available for use in the configuration file. These are substituted into the configuration file.</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.quality.Checkstyle:enableExternalDtdLoad"><literal>enableExternalDtdLoad</literal></link></td><td><caution>Incubating</caution><para>Enable the use of external DTD files in configuration files.
<emphasis>Disabled by default because this may be unsafe.</emphasis>
See <ulink url="https://checkstyle.org/config_system_properties.html#Enable_External_DTD_load">Checkstyle documentation</ulink> for more details.</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.quality.Checkstyle:excludes"><literal>excludes</literal></link></td><td><para>The set of exclude patterns.</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.quality.Checkstyle:ignoreFailures"><literal>ignoreFailures</literal></link></td><td><para>Whether the build should break when the verifications performed by this task fail.</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.quality.Checkstyle:includes"><literal>includes</literal></link></td><td><para>The set of include patterns.</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.quality.Checkstyle:javaLauncher"><literal>javaLauncher</literal></link></td><td><caution>Incubating</caution><para>Java launcher used to start the worker process</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.quality.Checkstyle:maxErrors"><literal>maxErrors</literal></link></td><td><para>The maximum number of errors that are tolerated before breaking the build
or setting the failure property.</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.quality.Checkstyle:maxHeapSize"><literal>maxHeapSize</literal></link></td><td><caution>Incubating</caution><para>The maximum heap size for the worker process.  If unspecified, a maximum heap size will be provided by Gradle.

Supports units like the command-line option <literal>-Xmx</literal> such as <literal>"1g"</literal>.</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.quality.Checkstyle:maxWarnings"><literal>maxWarnings</literal></link></td><td><para>The maximum number of warnings that are tolerated before breaking the build
or setting the failure property.</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.quality.Checkstyle:minHeapSize"><literal>minHeapSize</literal></link></td><td><caution>Incubating</caution><para>The minimum heap size for the worker process.  When unspecified, no minimum heap size is set.

Supports units like the command-line option <literal>-Xms</literal> such as <literal>"1g"</literal>.</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.quality.Checkstyle:reports"><literal>reports</literal></link></td><td><para>The reports to be generated by this task.</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.quality.Checkstyle:showViolations"><literal>showViolations</literal></link></td><td><para>Whether rule violations are to be displayed on the console.</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.quality.Checkstyle:source"><literal>source</literal></link></td><td><para>The source for this task, after the include and exclude patterns have been applied. Ignores source files which do not exist.

</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - Checkstyle</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.plugins.quality.Checkstyle:exclude(groovy.lang.Closure)">exclude</link>(excludeSpec)</literal></td><td><para>Adds an exclude spec. This method may be called multiple times to append new specs.The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter. The closure should return true or false. Example:

</para></td></tr><tr><td><literal><link linkend="org.gradle.api.plugins.quality.Checkstyle:exclude(java.lang.Iterable)">exclude</link>(excludes)</literal></td><td><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.plugins.quality.Checkstyle:exclude(java.lang.String[])">exclude</link>(excludes)</literal></td><td><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.plugins.quality.Checkstyle:exclude(org.gradle.api.specs.Spec)">exclude</link>(excludeSpec)</literal></td><td><para>Adds an exclude spec. This method may be called multiple times to append new specs.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.plugins.quality.Checkstyle:include(groovy.lang.Closure)">include</link>(includeSpec)</literal></td><td><para>Adds an include spec. This method may be called multiple times to append new specs. The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.plugins.quality.Checkstyle:include(java.lang.Iterable)">include</link>(includes)</literal></td><td><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.plugins.quality.Checkstyle:include(java.lang.String[])">include</link>(includes)</literal></td><td><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.plugins.quality.Checkstyle:include(org.gradle.api.specs.Spec)">include</link>(includeSpec)</literal></td><td><para>Adds an include spec. This method may be called multiple times to append new specs.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.plugins.quality.Checkstyle:reports(org.gradle.api.Action)">reports</link>(configureAction)</literal></td><td><para>Configures the reports to be generated by this task.

The contained reports can be configured by name and closures. Example:

</para></td></tr><tr><td><literal><link linkend="org.gradle.api.plugins.quality.Checkstyle:source(java.lang.Object[])">source</link>(sources)</literal></td><td><para>Adds some source to this task. The given source objects will be evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/>.</para></td></tr></table></section><section><title>Script blocks</title><table><title>Script blocks - Checkstyle</title><thead><tr><td>Block</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.plugins.quality.Checkstyle:reports(groovy.lang.Closure)"><literal>reports</literal></link></td><td><para>Configures the reports to be generated by this task.

The contained reports can be configured by name and closures. Example:

</para></td></tr></table></section><section><title>Property details</title><section id="org.gradle.api.plugins.quality.Checkstyle:checkstyleClasspath" role="detail"><title><apilink class="org.gradle.api.file.FileCollection"/> <literal>checkstyleClasspath</literal></title><para>The class path containing the Checkstyle library to be used.</para><segmentedlist><segtitle>Default with <literal>checkstyle</literal> plugin</segtitle><seglistitem><seg><literal>project.configurations.checkstyle</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.plugins.quality.Checkstyle:classpath" role="detail"><title><apilink class="org.gradle.api.file.FileCollection"/> <literal>classpath</literal></title><para>The class path containing the compiled classes for the source files to be analyzed.</para><segmentedlist><segtitle>Default with <literal>checkstyle</literal> plugin</segtitle><seglistitem><seg><literal><replaceable>sourceSet</replaceable>.output</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.plugins.quality.Checkstyle:config" role="detail"><title><apilink class="org.gradle.api.resources.TextResource"/> <literal>config</literal></title><para>The Checkstyle configuration to use. Replaces the <literal>configFile</literal> property.</para><segmentedlist><segtitle>Default with <literal>checkstyle</literal> plugin</segtitle><seglistitem><seg><literal>project.checkstyle.config</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.plugins.quality.Checkstyle:configDirectory" role="detail"><title><apilink class="org.gradle.api.file.DirectoryProperty"/> <literal>configDirectory</literal></title><para>Path to other Checkstyle configuration files.
</para><para>
This path will be exposed as the variable <literal>config_loc</literal> in Checkstyle's configuration files.
</para><segmentedlist><segtitle>Default with <literal>checkstyle</literal> plugin</segtitle><seglistitem><seg><literal>project.checkstyle.configDirectory</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.plugins.quality.Checkstyle:configFile" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>configFile</literal></title><para>The Checkstyle configuration file to use.</para><segmentedlist><segtitle>Default with <literal>checkstyle</literal> plugin</segtitle><seglistitem><seg><literal>project.checkstyle.configFile</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.plugins.quality.Checkstyle:configProperties" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink>&gt;</classname> <literal>configProperties</literal></title><para>The properties available for use in the configuration file. These are substituted into the configuration file.</para><segmentedlist><segtitle>Default with <literal>checkstyle</literal> plugin</segtitle><seglistitem><seg><literal>project.checkstyle.configProperties</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.plugins.quality.Checkstyle:enableExternalDtdLoad" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html"><classname>Boolean</classname></ulink>&gt;</classname> <literal>enableExternalDtdLoad</literal></title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Enable the use of external DTD files in configuration files.
<emphasis>Disabled by default because this may be unsafe.</emphasis>
See <ulink url="https://checkstyle.org/config_system_properties.html#Enable_External_DTD_load">Checkstyle documentation</ulink> for more details.</para><segmentedlist><segtitle>Default with <literal>checkstyle</literal> plugin</segtitle><seglistitem><seg>false</seg></seglistitem></segmentedlist></section><section id="org.gradle.api.plugins.quality.Checkstyle:excludes" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>excludes</literal></title><para>The set of exclude patterns.</para></section><section id="org.gradle.api.plugins.quality.Checkstyle:ignoreFailures" role="detail"><title><classname>boolean</classname> <literal>ignoreFailures</literal> (read-only)</title><para>Whether the build should break when the verifications performed by this task fail.</para><segmentedlist><segtitle>Default value</segtitle><segtitle>Default with <literal>checkstyle</literal> plugin</segtitle><seglistitem><seg>false</seg><seg><literal>project.checkstyle.ignoreFailures</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.plugins.quality.Checkstyle:includes" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>includes</literal></title><para>The set of include patterns.</para></section><section id="org.gradle.api.plugins.quality.Checkstyle:javaLauncher" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<apilink class="org.gradle.jvm.toolchain.JavaLauncher"/>&gt;</classname> <literal>javaLauncher</literal></title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Java launcher used to start the worker process</para></section><section id="org.gradle.api.plugins.quality.Checkstyle:maxErrors" role="detail"><title><classname>int</classname> <literal>maxErrors</literal></title><para>The maximum number of errors that are tolerated before breaking the build
or setting the failure property.</para><segmentedlist><segtitle>Default with <literal>checkstyle</literal> plugin</segtitle><seglistitem><seg><literal>project.checkstyle.maxErrors</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.plugins.quality.Checkstyle:maxHeapSize" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>maxHeapSize</literal></title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The maximum heap size for the worker process.  If unspecified, a maximum heap size will be provided by Gradle.

Supports units like the command-line option <literal>-Xmx</literal> such as <literal>"1g"</literal>.</para></section><section id="org.gradle.api.plugins.quality.Checkstyle:maxWarnings" role="detail"><title><classname>int</classname> <literal>maxWarnings</literal></title><para>The maximum number of warnings that are tolerated before breaking the build
or setting the failure property.</para><segmentedlist><segtitle>Default with <literal>checkstyle</literal> plugin</segtitle><seglistitem><seg><literal>project.checkstyle.maxWarnings</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.plugins.quality.Checkstyle:minHeapSize" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>minHeapSize</literal></title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The minimum heap size for the worker process.  When unspecified, no minimum heap size is set.

Supports units like the command-line option <literal>-Xms</literal> such as <literal>"1g"</literal>.</para></section><section id="org.gradle.api.plugins.quality.Checkstyle:reports" role="detail"><title><apilink class="org.gradle.api.plugins.quality.CheckstyleReports"/> <literal>reports</literal> (read-only)</title><para>The reports to be generated by this task.</para></section><section id="org.gradle.api.plugins.quality.Checkstyle:showViolations" role="detail"><title><classname>boolean</classname> <literal>showViolations</literal></title><para>Whether rule violations are to be displayed on the console.</para><segmentedlist><segtitle>Default with <literal>checkstyle</literal> plugin</segtitle><seglistitem><seg><literal>project.checkstyle.showViolations</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.plugins.quality.Checkstyle:source" role="detail"><title><apilink class="org.gradle.api.file.FileTree"/> <literal>source</literal> (read-only)</title><para>The source for this task, after the include and exclude patterns have been applied. Ignores source files which do not exist.

</para><para>
The <apilink class="org.gradle.api.tasks.PathSensitivity"/> for the sources is configured to be <apilink class="org.gradle.api.tasks.PathSensitivity" method="ABSOLUTE"/>.
If your sources are less strict, please change it accordingly by overriding this method in your subclass.
</para><para>The sources for this task are relatively relocatable even though it produces output that
includes absolute paths. This is a compromise made to ensure that results can be reused
between different builds. The downside is that up-to-date results, or results loaded
from cache can show different absolute paths than would be produced if the task was
executed.</para><segmentedlist><segtitle>Default with <literal>checkstyle</literal> plugin</segtitle><seglistitem><seg><literal><replaceable>sourceSet</replaceable>.allJava</literal></seg></seglistitem></segmentedlist></section></section><section><title>Method details</title><section id="org.gradle.api.plugins.quality.Checkstyle:exclude(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>exclude</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> excludeSpec)</title><para>Adds an exclude spec. This method may be called multiple times to append new specs.The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter. The closure should return true or false. Example:

</para><para><programlisting language="java">
copySpec {
  from 'source'
  into 'destination'
  //an example of excluding files from certain configuration:
  exclude { it.file in configurations.someConf.files }
}
</programlisting></para><para>

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.api.plugins.quality.Checkstyle:exclude(java.lang.Iterable)" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>exclude</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> excludes)</title><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.api.plugins.quality.Checkstyle:exclude(java.lang.String[])" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>exclude</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>...</classname> excludes)</title><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.api.plugins.quality.Checkstyle:exclude(org.gradle.api.specs.Spec)" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>exclude</literal>(<classname><apilink class="org.gradle.api.specs.Spec"/>&lt;<apilink class="org.gradle.api.file.FileTreeElement"/>&gt;</classname> excludeSpec)</title><para>Adds an exclude spec. This method may be called multiple times to append new specs.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.api.plugins.quality.Checkstyle:include(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>include</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> includeSpec)</title><para>Adds an include spec. This method may be called multiple times to append new specs. The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></section><section id="org.gradle.api.plugins.quality.Checkstyle:include(java.lang.Iterable)" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>include</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> includes)</title><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></section><section id="org.gradle.api.plugins.quality.Checkstyle:include(java.lang.String[])" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>include</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>...</classname> includes)</title><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></section><section id="org.gradle.api.plugins.quality.Checkstyle:include(org.gradle.api.specs.Spec)" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>include</literal>(<classname><apilink class="org.gradle.api.specs.Spec"/>&lt;<apilink class="org.gradle.api.file.FileTreeElement"/>&gt;</classname> includeSpec)</title><para>Adds an include spec. This method may be called multiple times to append new specs.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></section><section id="org.gradle.api.plugins.quality.Checkstyle:reports(org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.plugins.quality.CheckstyleReports"/> <literal>reports</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.plugins.quality.CheckstyleReports"/>&gt;</classname> configureAction)</title><para>Configures the reports to be generated by this task.

The contained reports can be configured by name and closures. Example:

</para><programlisting language="java">
checkstyleTask {
  reports {
    html {
      destination "build/checkstyle.html"
    }
  }
}
</programlisting></section><section id="org.gradle.api.plugins.quality.Checkstyle:source(java.lang.Object[])" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>source</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink>...</classname> sources)</title><para>Adds some source to this task. The given source objects will be evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/>.</para></section></section><section><title>Script block details</title><section id="org.gradle.api.plugins.quality.Checkstyle:reports(groovy.lang.Closure)" role="detail"><title><literal>reports</literal> { }</title><para>Configures the reports to be generated by this task.

The contained reports can be configured by name and closures. Example:

</para><programlisting language="java">
checkstyleTask {
  reports {
    html {
      destination "build/checkstyle.html"
    }
  }
}
</programlisting><segmentedlist><segtitle>Delegates to</segtitle><seglistitem><seg><apilink class="org.gradle.api.plugins.quality.CheckstyleReports"/> from <link linkend="org.gradle.api.plugins.quality.Checkstyle:reports"><literal>reports</literal></link></seg></seglistitem></segmentedlist></section></section></chapter><chapter id="org.gradle.api.plugins.quality.CodeNarc"><title>CodeNarc</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.plugins.quality.CodeNarc" style="javadoc"/></seg></seglistitem></segmentedlist><para>Runs CodeNarc against some source files.</para><section><title>Properties</title><table><title>Properties - CodeNarc</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.plugins.quality.CodeNarc:codenarcClasspath"><literal>codenarcClasspath</literal></link></td><td><para>The class path containing the CodeNarc library to be used.</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.quality.CodeNarc:compilationClasspath"><literal>compilationClasspath</literal></link></td><td><para>The class path to be used by CodeNarc when compiling classes during analysis.</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.quality.CodeNarc:config"><literal>config</literal></link></td><td><para>The CodeNarc configuration to use. Replaces the <literal>configFile</literal> property.</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.quality.CodeNarc:configFile"><literal>configFile</literal></link></td><td><para>The CodeNarc configuration file to use.</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.quality.CodeNarc:excludes"><literal>excludes</literal></link></td><td><para>The set of exclude patterns.</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.quality.CodeNarc:ignoreFailures"><literal>ignoreFailures</literal></link></td><td><caution>Incubating</caution><para>Specifies whether the build should break when the verifications performed by this task fail.</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.quality.CodeNarc:includes"><literal>includes</literal></link></td><td><para>The set of include patterns.</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.quality.CodeNarc:javaLauncher"><literal>javaLauncher</literal></link></td><td><caution>Incubating</caution><para>Java launcher used to start the worker process</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.quality.CodeNarc:maxHeapSize"><literal>maxHeapSize</literal></link></td><td><caution>Incubating</caution><para>The maximum heap size for the worker process.  If unspecified, a maximum heap size will be provided by Gradle.

Supports units like the command-line option <literal>-Xmx</literal> such as <literal>"1g"</literal>.</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.quality.CodeNarc:maxPriority1Violations"><literal>maxPriority1Violations</literal></link></td><td><para>The maximum number of priority 1 violations allowed before failing the build.</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.quality.CodeNarc:maxPriority2Violations"><literal>maxPriority2Violations</literal></link></td><td><para>The maximum number of priority 2 violations allowed before failing the build.</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.quality.CodeNarc:maxPriority3Violations"><literal>maxPriority3Violations</literal></link></td><td><para>The maximum number of priority 3 violations allowed before failing the build.</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.quality.CodeNarc:minHeapSize"><literal>minHeapSize</literal></link></td><td><caution>Incubating</caution><para>The minimum heap size for the worker process.  When unspecified, no minimum heap size is set.

Supports units like the command-line option <literal>-Xms</literal> such as <literal>"1g"</literal>.</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.quality.CodeNarc:reports"><literal>reports</literal></link></td><td><para>The reports to be generated by this task.</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.quality.CodeNarc:source"><literal>source</literal></link></td><td><para>The source for this task, after the include and exclude patterns have been applied. Ignores source files which do not exist.

</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - CodeNarc</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.plugins.quality.CodeNarc:exclude(groovy.lang.Closure)">exclude</link>(excludeSpec)</literal></td><td><para>Adds an exclude spec. This method may be called multiple times to append new specs.The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter. The closure should return true or false. Example:

</para></td></tr><tr><td><literal><link linkend="org.gradle.api.plugins.quality.CodeNarc:exclude(java.lang.Iterable)">exclude</link>(excludes)</literal></td><td><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.plugins.quality.CodeNarc:exclude(java.lang.String[])">exclude</link>(excludes)</literal></td><td><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.plugins.quality.CodeNarc:exclude(org.gradle.api.specs.Spec)">exclude</link>(excludeSpec)</literal></td><td><para>Adds an exclude spec. This method may be called multiple times to append new specs.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.plugins.quality.CodeNarc:include(groovy.lang.Closure)">include</link>(includeSpec)</literal></td><td><para>Adds an include spec. This method may be called multiple times to append new specs. The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.plugins.quality.CodeNarc:include(java.lang.Iterable)">include</link>(includes)</literal></td><td><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.plugins.quality.CodeNarc:include(java.lang.String[])">include</link>(includes)</literal></td><td><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.plugins.quality.CodeNarc:include(org.gradle.api.specs.Spec)">include</link>(includeSpec)</literal></td><td><para>Adds an include spec. This method may be called multiple times to append new specs.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.plugins.quality.CodeNarc:reports(org.gradle.api.Action)">reports</link>(configureAction)</literal></td><td><para>Configures the reports to be generated by this task.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.plugins.quality.CodeNarc:source(java.lang.Object[])">source</link>(sources)</literal></td><td><para>Adds some source to this task. The given source objects will be evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/>.</para></td></tr></table></section><section><title>Script blocks</title><table><title>Script blocks - CodeNarc</title><thead><tr><td>Block</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.plugins.quality.CodeNarc:reports(groovy.lang.Closure)"><literal>reports</literal></link></td><td><para>Configures the reports to be generated by this task.</para></td></tr></table></section><section><title>Property details</title><section id="org.gradle.api.plugins.quality.CodeNarc:codenarcClasspath" role="detail"><title><apilink class="org.gradle.api.file.FileCollection"/> <literal>codenarcClasspath</literal></title><para>The class path containing the CodeNarc library to be used.</para><segmentedlist><segtitle>Default with <literal>codenarc</literal> plugin</segtitle><seglistitem><seg><literal>project.configurations.codenarc</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.plugins.quality.CodeNarc:compilationClasspath" role="detail"><title><apilink class="org.gradle.api.file.FileCollection"/> <literal>compilationClasspath</literal></title><para>The class path to be used by CodeNarc when compiling classes during analysis.</para><segmentedlist><segtitle>Default with <literal>codenarc</literal> plugin</segtitle><seglistitem><seg>empty file collection</seg></seglistitem></segmentedlist></section><section id="org.gradle.api.plugins.quality.CodeNarc:config" role="detail"><title><apilink class="org.gradle.api.resources.TextResource"/> <literal>config</literal></title><para>The CodeNarc configuration to use. Replaces the <literal>configFile</literal> property.</para><segmentedlist><segtitle>Default with <literal>codenarc</literal> plugin</segtitle><seglistitem><seg><literal>project.codenarc.config</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.plugins.quality.CodeNarc:configFile" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>configFile</literal></title><para>The CodeNarc configuration file to use.</para><segmentedlist><segtitle>Default with <literal>codenarc</literal> plugin</segtitle><seglistitem><seg><literal>project.codenarc.configFile</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.plugins.quality.CodeNarc:excludes" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>excludes</literal></title><para>The set of exclude patterns.</para></section><section id="org.gradle.api.plugins.quality.CodeNarc:ignoreFailures" role="detail"><title><classname>boolean</classname> <literal>ignoreFailures</literal></title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Specifies whether the build should break when the verifications performed by this task fail.</para></section><section id="org.gradle.api.plugins.quality.CodeNarc:includes" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>includes</literal></title><para>The set of include patterns.</para></section><section id="org.gradle.api.plugins.quality.CodeNarc:javaLauncher" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<apilink class="org.gradle.jvm.toolchain.JavaLauncher"/>&gt;</classname> <literal>javaLauncher</literal></title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Java launcher used to start the worker process</para></section><section id="org.gradle.api.plugins.quality.CodeNarc:maxHeapSize" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>maxHeapSize</literal></title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The maximum heap size for the worker process.  If unspecified, a maximum heap size will be provided by Gradle.

Supports units like the command-line option <literal>-Xmx</literal> such as <literal>"1g"</literal>.</para></section><section id="org.gradle.api.plugins.quality.CodeNarc:maxPriority1Violations" role="detail"><title><classname>int</classname> <literal>maxPriority1Violations</literal></title><para>The maximum number of priority 1 violations allowed before failing the build.</para><segmentedlist><segtitle>Default with <literal>codenarc</literal> plugin</segtitle><seglistitem><seg><literal>0</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.plugins.quality.CodeNarc:maxPriority2Violations" role="detail"><title><classname>int</classname> <literal>maxPriority2Violations</literal></title><para>The maximum number of priority 2 violations allowed before failing the build.</para><segmentedlist><segtitle>Default with <literal>codenarc</literal> plugin</segtitle><seglistitem><seg><literal>0</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.plugins.quality.CodeNarc:maxPriority3Violations" role="detail"><title><classname>int</classname> <literal>maxPriority3Violations</literal></title><para>The maximum number of priority 3 violations allowed before failing the build.</para><segmentedlist><segtitle>Default with <literal>codenarc</literal> plugin</segtitle><seglistitem><seg><literal>0</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.plugins.quality.CodeNarc:minHeapSize" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>minHeapSize</literal></title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The minimum heap size for the worker process.  When unspecified, no minimum heap size is set.

Supports units like the command-line option <literal>-Xms</literal> such as <literal>"1g"</literal>.</para></section><section id="org.gradle.api.plugins.quality.CodeNarc:reports" role="detail"><title><apilink class="org.gradle.api.plugins.quality.CodeNarcReports"/> <literal>reports</literal> (read-only)</title><para>The reports to be generated by this task.</para></section><section id="org.gradle.api.plugins.quality.CodeNarc:source" role="detail"><title><apilink class="org.gradle.api.file.FileTree"/> <literal>source</literal> (read-only)</title><para>The source for this task, after the include and exclude patterns have been applied. Ignores source files which do not exist.

</para><para>
The <apilink class="org.gradle.api.tasks.PathSensitivity"/> for the sources is configured to be <apilink class="org.gradle.api.tasks.PathSensitivity" method="ABSOLUTE"/>.
If your sources are less strict, please change it accordingly by overriding this method in your subclass.
</para><segmentedlist><segtitle>Default with <literal>codenarc</literal> plugin</segtitle><seglistitem><seg><literal><replaceable>sourceSet</replaceable>.allGroovy</literal></seg></seglistitem></segmentedlist></section></section><section><title>Method details</title><section id="org.gradle.api.plugins.quality.CodeNarc:exclude(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>exclude</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> excludeSpec)</title><para>Adds an exclude spec. This method may be called multiple times to append new specs.The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter. The closure should return true or false. Example:

</para><para><programlisting language="java">
copySpec {
  from 'source'
  into 'destination'
  //an example of excluding files from certain configuration:
  exclude { it.file in configurations.someConf.files }
}
</programlisting></para><para>

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.api.plugins.quality.CodeNarc:exclude(java.lang.Iterable)" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>exclude</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> excludes)</title><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.api.plugins.quality.CodeNarc:exclude(java.lang.String[])" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>exclude</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>...</classname> excludes)</title><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.api.plugins.quality.CodeNarc:exclude(org.gradle.api.specs.Spec)" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>exclude</literal>(<classname><apilink class="org.gradle.api.specs.Spec"/>&lt;<apilink class="org.gradle.api.file.FileTreeElement"/>&gt;</classname> excludeSpec)</title><para>Adds an exclude spec. This method may be called multiple times to append new specs.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.api.plugins.quality.CodeNarc:include(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>include</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> includeSpec)</title><para>Adds an include spec. This method may be called multiple times to append new specs. The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></section><section id="org.gradle.api.plugins.quality.CodeNarc:include(java.lang.Iterable)" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>include</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> includes)</title><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></section><section id="org.gradle.api.plugins.quality.CodeNarc:include(java.lang.String[])" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>include</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>...</classname> includes)</title><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></section><section id="org.gradle.api.plugins.quality.CodeNarc:include(org.gradle.api.specs.Spec)" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>include</literal>(<classname><apilink class="org.gradle.api.specs.Spec"/>&lt;<apilink class="org.gradle.api.file.FileTreeElement"/>&gt;</classname> includeSpec)</title><para>Adds an include spec. This method may be called multiple times to append new specs.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></section><section id="org.gradle.api.plugins.quality.CodeNarc:reports(org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.plugins.quality.CodeNarcReports"/> <literal>reports</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.plugins.quality.CodeNarcReports"/>&gt;</classname> configureAction)</title><para>Configures the reports to be generated by this task.</para></section><section id="org.gradle.api.plugins.quality.CodeNarc:source(java.lang.Object[])" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>source</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink>...</classname> sources)</title><para>Adds some source to this task. The given source objects will be evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/>.</para></section></section><section><title>Script block details</title><section id="org.gradle.api.plugins.quality.CodeNarc:reports(groovy.lang.Closure)" role="detail"><title><literal>reports</literal> { }</title><para>Configures the reports to be generated by this task.</para><segmentedlist><segtitle>Delegates to</segtitle><seglistitem><seg><apilink class="org.gradle.api.plugins.quality.CodeNarcReports"/> from <link linkend="org.gradle.api.plugins.quality.CodeNarc:reports"><literal>reports</literal></link></seg></seglistitem></segmentedlist></section></section></chapter><chapter id="org.gradle.api.tasks.AbstractCopyTask"><title>AbstractCopyTask</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.tasks.AbstractCopyTask" style="javadoc"/></seg></seglistitem></segmentedlist><segmentedlist><segtitle>Known Subtypes</segtitle><seglistitem><seg><simplelist columns="1" type="vert"><member><apilink class="org.gradle.api.tasks.Copy"/></member><member><apilink class="org.gradle.api.tasks.bundling.AbstractArchiveTask"/></member><member><apilink class="org.gradle.api.tasks.Sync"/></member></simplelist></seg></seglistitem></segmentedlist><para><literal>AbstractCopyTask</literal> is the base class for all copy tasks.</para><section><title>Properties</title><table><title>Properties - AbstractCopyTask</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.tasks.AbstractCopyTask:caseSensitive"><literal>caseSensitive</literal></link></td><td><para>Specifies whether case-sensitive pattern matching should be used.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.AbstractCopyTask:dirPermissions"><literal>dirPermissions</literal></link></td><td><para>Property for querying and configuring directory access permissions.
If the property has no value set, that means that existing permissions are preserved.
It is dependent on the copy action implementation whether these permissions will actually be applied.

For details see <apilink class="org.gradle.api.file.ConfigurableFilePermissions"/>.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.AbstractCopyTask:duplicatesStrategy"><literal>duplicatesStrategy</literal></link></td><td><para>The strategy to use when trying to copy more than one file to the same destination.
</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.AbstractCopyTask:excludes"><literal>excludes</literal></link></td><td><para>The set of exclude patterns.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.AbstractCopyTask:filePermissions"><literal>filePermissions</literal></link></td><td><para>Property for querying and configuring file access permissions.
If the property has no value set, that means that existing permissions are preserved.
It is dependent on the copy action implementation whether these permissions will actually be applied.

For details see <apilink class="org.gradle.api.file.ConfigurableFilePermissions"/>.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.AbstractCopyTask:includeEmptyDirs"><literal>includeEmptyDirs</literal></link></td><td><para>Tells if empty target directories will be included in the copy.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.AbstractCopyTask:includes"><literal>includes</literal></link></td><td><para>The set of include patterns.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.AbstractCopyTask:source"><literal>source</literal></link></td><td><para>The source files for this task.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - AbstractCopyTask</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.tasks.AbstractCopyTask:eachFile(groovy.lang.Closure)">eachFile</link>(closure)</literal></td><td><para>Adds an action to be applied to each file as it about to be copied into its destination. The given closure is
called with a <apilink class="org.gradle.api.file.FileCopyDetails"/> as its parameter. Actions are executed in the order
added, and are inherited from the parent spec.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.AbstractCopyTask:eachFile(org.gradle.api.Action)">eachFile</link>(action)</literal></td><td><para>Adds an action to be applied to each file as it is about to be copied into its destination. The action can change
the destination path of the file, filter the contents of the file, or exclude the file from the result entirely.
Actions are executed in the order added, and are inherited from the parent spec.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.AbstractCopyTask:exclude(groovy.lang.Closure)">exclude</link>(excludeSpec)</literal></td><td><para>Adds an exclude spec. This method may be called multiple times to append new specs.The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter. The closure should return true or false. Example:

</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.AbstractCopyTask:exclude(java.lang.Iterable)">exclude</link>(excludes)</literal></td><td><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.AbstractCopyTask:exclude(java.lang.String[])">exclude</link>(excludes)</literal></td><td><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.AbstractCopyTask:exclude(org.gradle.api.specs.Spec)">exclude</link>(excludeSpec)</literal></td><td><para>Adds an exclude spec. This method may be called multiple times to append new specs.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.AbstractCopyTask:expand(java.util.Map)">expand</link>(properties)</literal></td><td><para>Expands property references in each file as it is copied. More specifically, each file is transformed using
Groovy's <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/text/SimpleTemplateEngine.html"><classname>SimpleTemplateEngine</classname></ulink>. This means you can use simple property references, such as
<literal>$property</literal> or <literal>${property}</literal> in the file. You can also include arbitrary Groovy code in the
file, such as <literal>${version ?: 'unknown'}</literal> or <literal>${classpath*.name.join(' ')}</literal>
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.AbstractCopyTask:expand(java.util.Map, org.gradle.api.Action)">expand</link>(properties, action)</literal></td><td><para>Expands property references in each file as it is copied. More specifically, each file is transformed using
Groovy's <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/text/SimpleTemplateEngine.html"><classname>SimpleTemplateEngine</classname></ulink>. This means you can use simple property references, such as
<literal>$property</literal> or <literal>${property}</literal> in the file. You can also include arbitrary Groovy code in the
file, such as <literal>${version ?: 'unknown'}</literal> or <literal>${classpath*.name.join(' ')}</literal>. The template
engine can be configured with the provided action.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.AbstractCopyTask:filesMatching(java.lang.Iterable, org.gradle.api.Action)">filesMatching</link>(patterns, action)</literal></td><td><para>Configure the <apilink class="org.gradle.api.file.FileCopyDetails"/> for each file whose path matches any of the specified Ant-style patterns.
This is equivalent to using eachFile() and selectively applying a configuration based on the file's path.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.AbstractCopyTask:filesMatching(java.lang.String, org.gradle.api.Action)">filesMatching</link>(pattern, action)</literal></td><td><para>Configure the <apilink class="org.gradle.api.file.FileCopyDetails"/> for each file whose path matches the specified Ant-style pattern.
This is equivalent to using eachFile() and selectively applying a configuration based on the file's path.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.AbstractCopyTask:filesNotMatching(java.lang.Iterable, org.gradle.api.Action)">filesNotMatching</link>(patterns, action)</literal></td><td><para>Configure the <apilink class="org.gradle.api.file.FileCopyDetails"/> for each file whose path does not match any of the specified
Ant-style patterns. This is equivalent to using eachFile() and selectively applying a configuration based on the
file's path.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.AbstractCopyTask:filesNotMatching(java.lang.String, org.gradle.api.Action)">filesNotMatching</link>(pattern, action)</literal></td><td><para>Configure the <apilink class="org.gradle.api.file.FileCopyDetails"/> for each file whose path does not match the specified
Ant-style pattern. This is equivalent to using eachFile() and selectively applying a configuration based on the
file's path.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.AbstractCopyTask:filter(groovy.lang.Closure)">filter</link>(closure)</literal></td><td><para>Adds a content filter based on the provided closure.  The Closure will be called with each line (stripped of line
endings) and should return a String to replace the line or <literal>null</literal> to remove the line.  If every line is
removed, the result will be an empty file, not an absent one.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.AbstractCopyTask:filter(java.lang.Class)">filter</link>(filterType)</literal></td><td><para>Adds a content filter to be used during the copy.  Multiple calls to filter, add additional filters to the
filter chain.  Each filter should implement <literal>java.io.FilterReader</literal>. Include <literal>org.apache.tools.ant.filters.*</literal> for access to all the standard Ant filters.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.AbstractCopyTask:filter(java.util.Map, java.lang.Class)">filter</link>(properties, filterType)</literal></td><td><para>Adds a content filter to be used during the copy.  Multiple calls to filter, add additional filters to the
filter chain.  Each filter should implement <literal>java.io.FilterReader</literal>. Include <literal>org.apache.tools.ant.filters.*</literal> for access to all the standard Ant filters.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.AbstractCopyTask:filter(org.gradle.api.Transformer)">filter</link>(transformer)</literal></td><td><para>Adds a content filter based on the provided transformer.  The Closure will be called with each line (stripped of line
endings) and should return a String to replace the line or <literal>null</literal> to remove the line.  If every line is
removed, the result will be an empty file, not an absent one.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.AbstractCopyTask:from(java.lang.Object, groovy.lang.Closure)">from</link>(sourcePath, c)</literal></td><td><para>Specifies the source files or directories for a copy and creates a child <literal>CopySourceSpec</literal>. The given source
path is evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/> .</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.AbstractCopyTask:from(java.lang.Object, org.gradle.api.Action)">from</link>(sourcePath, configureAction)</literal></td><td><para>Specifies the source files or directories for a copy and creates a child <literal>CopySpec</literal>. The given source
path is evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/> .</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.AbstractCopyTask:from(java.lang.Object[])">from</link>(sourcePaths)</literal></td><td><para>Specifies source files or directories for a copy. The given paths are evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/>.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.AbstractCopyTask:include(groovy.lang.Closure)">include</link>(includeSpec)</literal></td><td><para>Adds an include spec. This method may be called multiple times to append new specs. The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.AbstractCopyTask:include(java.lang.Iterable)">include</link>(includes)</literal></td><td><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.AbstractCopyTask:include(java.lang.String[])">include</link>(includes)</literal></td><td><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.AbstractCopyTask:include(org.gradle.api.specs.Spec)">include</link>(includeSpec)</literal></td><td><para>Adds an include spec. This method may be called multiple times to append new specs.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.AbstractCopyTask:into(java.lang.Object)">into</link>(destDir)</literal></td><td><para>Specifies the destination directory for a copy. The destination is evaluated as per <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/>.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.AbstractCopyTask:into(java.lang.Object, groovy.lang.Closure)">into</link>(destPath, configureClosure)</literal></td><td><para>Creates and configures a child <literal>CopySpec</literal> with the given destination path.
The destination is evaluated as per <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/>.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.AbstractCopyTask:into(java.lang.Object, org.gradle.api.Action)">into</link>(destPath, copySpec)</literal></td><td><para>Creates and configures a child <literal>CopySpec</literal> with the given destination path.
The destination is evaluated as per <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/>.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.AbstractCopyTask:rename(groovy.lang.Closure)">rename</link>(closure)</literal></td><td><para>Renames a source file. The closure will be called with a single parameter, the name of the file.
The closure should return a String object with a new target name. The closure may return null,
in which case the original name will be used.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.AbstractCopyTask:rename(java.lang.String, java.lang.String)">rename</link>(sourceRegEx, replaceWith)</literal></td><td><para>Renames files based on a regular expression.  Uses java.util.regex type of regular expressions.  Note that the
replace string should use the '$1' syntax to refer to capture groups in the source regular expression.  Files
that do not match the source regular expression will be copied with the original name.

</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.AbstractCopyTask:rename(java.util.regex.Pattern, java.lang.String)">rename</link>(sourceRegEx, replaceWith)</literal></td><td><para>Renames files based on a regular expression. See <apilink class="org.gradle.api.file.CopyProcessingSpec" method="rename(java.lang.String, java.lang.String)"/>.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.AbstractCopyTask:rename(org.gradle.api.Transformer)">rename</link>(renamer)</literal></td><td><para>Renames a source file. The function will be called with a single parameter, the name of the file.
The function should return a new target name. The function may return null,
in which case the original name will be used.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.AbstractCopyTask:with(org.gradle.api.file.CopySpec[])">with</link>(sourceSpecs)</literal></td><td><para>Adds the given specs as a child of this spec.

</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.tasks.AbstractCopyTask:caseSensitive" role="detail"><title><classname>boolean</classname> <literal>caseSensitive</literal></title><para>Specifies whether case-sensitive pattern matching should be used.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>true</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.AbstractCopyTask:dirPermissions" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<apilink class="org.gradle.api.file.ConfigurableFilePermissions"/>&gt;</classname> <literal>dirPermissions</literal></title><para>Property for querying and configuring directory access permissions.
If the property has no value set, that means that existing permissions are preserved.
It is dependent on the copy action implementation whether these permissions will actually be applied.

For details see <apilink class="org.gradle.api.file.ConfigurableFilePermissions"/>.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>null</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.AbstractCopyTask:duplicatesStrategy" role="detail"><title><apilink class="org.gradle.api.file.DuplicatesStrategy"/> <literal>duplicatesStrategy</literal></title><para>The strategy to use when trying to copy more than one file to the same destination.
</para><para>
The value can be set with a case insensitive string of the enum value (e.g. <literal>'exclude'</literal> for <apilink class="org.gradle.api.file.DuplicatesStrategy" method="EXCLUDE"/>).
</para><para>
This strategy can be overridden for individual files by using <apilink class="org.gradle.api.file.CopySpec" method="eachFile(org.gradle.api.Action)"/> or <apilink class="org.gradle.api.file.CopySpec" method="filesMatching(java.lang.String, org.gradle.api.Action)"/>.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>DuplicatesStrategy.INHERIT</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.AbstractCopyTask:excludes" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>excludes</literal></title><para>The set of exclude patterns.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>[]</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.AbstractCopyTask:filePermissions" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<apilink class="org.gradle.api.file.ConfigurableFilePermissions"/>&gt;</classname> <literal>filePermissions</literal></title><para>Property for querying and configuring file access permissions.
If the property has no value set, that means that existing permissions are preserved.
It is dependent on the copy action implementation whether these permissions will actually be applied.

For details see <apilink class="org.gradle.api.file.ConfigurableFilePermissions"/>.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>null</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.AbstractCopyTask:includeEmptyDirs" role="detail"><title><classname>boolean</classname> <literal>includeEmptyDirs</literal></title><para>Tells if empty target directories will be included in the copy.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>true</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.AbstractCopyTask:includes" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>includes</literal></title><para>The set of include patterns.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>[]</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.AbstractCopyTask:source" role="detail"><title><apilink class="org.gradle.api.file.FileCollection"/> <literal>source</literal> (read-only)</title><para>The source files for this task.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>[]</literal></seg></seglistitem></segmentedlist></section></section><section><title>Method details</title><section id="org.gradle.api.tasks.AbstractCopyTask:eachFile(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>eachFile</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> closure)</title><para>Adds an action to be applied to each file as it about to be copied into its destination. The given closure is
called with a <apilink class="org.gradle.api.file.FileCopyDetails"/> as its parameter. Actions are executed in the order
added, and are inherited from the parent spec.</para></section><section id="org.gradle.api.tasks.AbstractCopyTask:eachFile(org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>eachFile</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.FileCopyDetails"/>&gt;</classname> action)</title><para>Adds an action to be applied to each file as it is about to be copied into its destination. The action can change
the destination path of the file, filter the contents of the file, or exclude the file from the result entirely.
Actions are executed in the order added, and are inherited from the parent spec.</para></section><section id="org.gradle.api.tasks.AbstractCopyTask:exclude(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>exclude</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> excludeSpec)</title><para>Adds an exclude spec. This method may be called multiple times to append new specs.The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter. The closure should return true or false. Example:

</para><para><programlisting language="java">
copySpec {
  from 'source'
  into 'destination'
  //an example of excluding files from certain configuration:
  exclude { it.file in configurations.someConf.files }
}
</programlisting></para><para>

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.api.tasks.AbstractCopyTask:exclude(java.lang.Iterable)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>exclude</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> excludes)</title><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.api.tasks.AbstractCopyTask:exclude(java.lang.String[])" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>exclude</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>...</classname> excludes)</title><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.api.tasks.AbstractCopyTask:exclude(org.gradle.api.specs.Spec)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>exclude</literal>(<classname><apilink class="org.gradle.api.specs.Spec"/>&lt;<apilink class="org.gradle.api.file.FileTreeElement"/>&gt;</classname> excludeSpec)</title><para>Adds an exclude spec. This method may be called multiple times to append new specs.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.api.tasks.AbstractCopyTask:expand(java.util.Map)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>expand</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, ?&gt;</classname> properties)</title><para>Expands property references in each file as it is copied. More specifically, each file is transformed using
Groovy's <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/text/SimpleTemplateEngine.html"><classname>SimpleTemplateEngine</classname></ulink>. This means you can use simple property references, such as
<literal>$property</literal> or <literal>${property}</literal> in the file. You can also include arbitrary Groovy code in the
file, such as <literal>${version ?: 'unknown'}</literal> or <literal>${classpath*.name.join(' ')}</literal>
</para><para>
Note that all escape sequences (<literal>\n</literal>, <literal>\t</literal>, <literal>\\</literal>, etc) are converted to the symbols
they represent, so, for example, <literal>\n</literal> becomes newline. If this is undesirable then <apilink class="org.gradle.api.file.ContentFilterable" method="expand(java.util.Map, org.gradle.api.Action)"/>
should be used to disable this behavior.</para></section><section id="org.gradle.api.tasks.AbstractCopyTask:expand(java.util.Map, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>expand</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, ?&gt;</classname> properties, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.ExpandDetails"/>&gt;</classname> action)</title><para>Expands property references in each file as it is copied. More specifically, each file is transformed using
Groovy's <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/text/SimpleTemplateEngine.html"><classname>SimpleTemplateEngine</classname></ulink>. This means you can use simple property references, such as
<literal>$property</literal> or <literal>${property}</literal> in the file. You can also include arbitrary Groovy code in the
file, such as <literal>${version ?: 'unknown'}</literal> or <literal>${classpath*.name.join(' ')}</literal>. The template
engine can be configured with the provided action.
</para><para>
Note that by default all escape sequences (<literal>\n</literal>, <literal>\t</literal>, <literal>\\</literal>, etc) are converted to the symbols
they represent, so, for example, <literal>\n</literal> becomes newline. This behavior is controlled by
<apilink class="org.gradle.api.file.ExpandDetails" method="getEscapeBackslash()"/> property. It should be set to <literal>true</literal> to disable escape sequences
conversion:
</para><para><programlisting language="java">
 expand(one: '1', two: 2) {
     escapeBackslash = true
 }
</programlisting></para></section><section id="org.gradle.api.tasks.AbstractCopyTask:filesMatching(java.lang.Iterable, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>filesMatching</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> patterns, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.FileCopyDetails"/>&gt;</classname> action)</title><para>Configure the <apilink class="org.gradle.api.file.FileCopyDetails"/> for each file whose path matches any of the specified Ant-style patterns.
This is equivalent to using eachFile() and selectively applying a configuration based on the file's path.</para></section><section id="org.gradle.api.tasks.AbstractCopyTask:filesMatching(java.lang.String, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>filesMatching</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> pattern, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.FileCopyDetails"/>&gt;</classname> action)</title><para>Configure the <apilink class="org.gradle.api.file.FileCopyDetails"/> for each file whose path matches the specified Ant-style pattern.
This is equivalent to using eachFile() and selectively applying a configuration based on the file's path.</para></section><section id="org.gradle.api.tasks.AbstractCopyTask:filesNotMatching(java.lang.Iterable, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>filesNotMatching</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> patterns, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.FileCopyDetails"/>&gt;</classname> action)</title><para>Configure the <apilink class="org.gradle.api.file.FileCopyDetails"/> for each file whose path does not match any of the specified
Ant-style patterns. This is equivalent to using eachFile() and selectively applying a configuration based on the
file's path.</para></section><section id="org.gradle.api.tasks.AbstractCopyTask:filesNotMatching(java.lang.String, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>filesNotMatching</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> pattern, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.FileCopyDetails"/>&gt;</classname> action)</title><para>Configure the <apilink class="org.gradle.api.file.FileCopyDetails"/> for each file whose path does not match the specified
Ant-style pattern. This is equivalent to using eachFile() and selectively applying a configuration based on the
file's path.</para></section><section id="org.gradle.api.tasks.AbstractCopyTask:filter(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>filter</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> closure)</title><para>Adds a content filter based on the provided closure.  The Closure will be called with each line (stripped of line
endings) and should return a String to replace the line or <literal>null</literal> to remove the line.  If every line is
removed, the result will be an empty file, not an absent one.</para></section><section id="org.gradle.api.tasks.AbstractCopyTask:filter(java.lang.Class)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>filter</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html"><classname>Class</classname></ulink>&lt;? extends <ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/FilterReader.html"><classname>FilterReader</classname></ulink>&gt;</classname> filterType)</title><para>Adds a content filter to be used during the copy.  Multiple calls to filter, add additional filters to the
filter chain.  Each filter should implement <literal>java.io.FilterReader</literal>. Include <literal>org.apache.tools.ant.filters.*</literal> for access to all the standard Ant filters.</para><para> Examples:
</para><para><programlisting language="java">
   filter(StripJavaComments)
   filter(com.mycompany.project.CustomFilter)
</programlisting></para></section><section id="org.gradle.api.tasks.AbstractCopyTask:filter(java.util.Map, java.lang.Class)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>filter</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, ?&gt;</classname> properties, <classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html"><classname>Class</classname></ulink>&lt;? extends <ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/FilterReader.html"><classname>FilterReader</classname></ulink>&gt;</classname> filterType)</title><para>Adds a content filter to be used during the copy.  Multiple calls to filter, add additional filters to the
filter chain.  Each filter should implement <literal>java.io.FilterReader</literal>. Include <literal>org.apache.tools.ant.filters.*</literal> for access to all the standard Ant filters.</para><para>Filter properties may be specified using groovy map syntax.</para><para> Examples:
</para><para><programlisting language="java">
   filter(HeadFilter, lines:25, skip:2)
   filter(ReplaceTokens, tokens:[copyright:'2009', version:'2.3.1'])
</programlisting></para></section><section id="org.gradle.api.tasks.AbstractCopyTask:filter(org.gradle.api.Transformer)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>filter</literal>(<classname><apilink class="org.gradle.api.Transformer"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> transformer)</title><para>Adds a content filter based on the provided transformer.  The Closure will be called with each line (stripped of line
endings) and should return a String to replace the line or <literal>null</literal> to remove the line.  If every line is
removed, the result will be an empty file, not an absent one.</para></section><section id="org.gradle.api.tasks.AbstractCopyTask:from(java.lang.Object, groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>from</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> sourcePath, <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> c)</title><para>Specifies the source files or directories for a copy and creates a child <literal>CopySourceSpec</literal>. The given source
path is evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/> .</para></section><section id="org.gradle.api.tasks.AbstractCopyTask:from(java.lang.Object, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>from</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> sourcePath, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.CopySpec"/>&gt;</classname> configureAction)</title><para>Specifies the source files or directories for a copy and creates a child <literal>CopySpec</literal>. The given source
path is evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/> .</para></section><section id="org.gradle.api.tasks.AbstractCopyTask:from(java.lang.Object[])" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>from</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink>...</classname> sourcePaths)</title><para>Specifies source files or directories for a copy. The given paths are evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/>.</para></section><section id="org.gradle.api.tasks.AbstractCopyTask:include(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>include</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> includeSpec)</title><para>Adds an include spec. This method may be called multiple times to append new specs. The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></section><section id="org.gradle.api.tasks.AbstractCopyTask:include(java.lang.Iterable)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>include</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> includes)</title><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></section><section id="org.gradle.api.tasks.AbstractCopyTask:include(java.lang.String[])" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>include</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>...</classname> includes)</title><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></section><section id="org.gradle.api.tasks.AbstractCopyTask:include(org.gradle.api.specs.Spec)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>include</literal>(<classname><apilink class="org.gradle.api.specs.Spec"/>&lt;<apilink class="org.gradle.api.file.FileTreeElement"/>&gt;</classname> includeSpec)</title><para>Adds an include spec. This method may be called multiple times to append new specs.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></section><section id="org.gradle.api.tasks.AbstractCopyTask:into(java.lang.Object)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>into</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> destDir)</title><para>Specifies the destination directory for a copy. The destination is evaluated as per <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/>.</para></section><section id="org.gradle.api.tasks.AbstractCopyTask:into(java.lang.Object, groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>into</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> destPath, <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> configureClosure)</title><para>Creates and configures a child <literal>CopySpec</literal> with the given destination path.
The destination is evaluated as per <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/>.</para></section><section id="org.gradle.api.tasks.AbstractCopyTask:into(java.lang.Object, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.file.CopySpec"/> <literal>into</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> destPath, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.CopySpec"/>&gt;</classname> copySpec)</title><para>Creates and configures a child <literal>CopySpec</literal> with the given destination path.
The destination is evaluated as per <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/>.</para></section><section id="org.gradle.api.tasks.AbstractCopyTask:rename(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>rename</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> closure)</title><para>Renames a source file. The closure will be called with a single parameter, the name of the file.
The closure should return a String object with a new target name. The closure may return null,
in which case the original name will be used.</para></section><section id="org.gradle.api.tasks.AbstractCopyTask:rename(java.lang.String, java.lang.String)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>rename</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> sourceRegEx, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> replaceWith)</title><para>Renames files based on a regular expression.  Uses java.util.regex type of regular expressions.  Note that the
replace string should use the '$1' syntax to refer to capture groups in the source regular expression.  Files
that do not match the source regular expression will be copied with the original name.

</para><para> Example:
</para><para><programlisting language="java">
rename '(.*)_OEM_BLUE_(.*)', '$1$2'
</programlisting></para><para>
would map the file 'style_OEM_BLUE_.css' to 'style.css'</para></section><section id="org.gradle.api.tasks.AbstractCopyTask:rename(java.util.regex.Pattern, java.lang.String)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>rename</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html"><classname>Pattern</classname></ulink> sourceRegEx, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> replaceWith)</title><para>Renames files based on a regular expression. See <apilink class="org.gradle.api.file.CopyProcessingSpec" method="rename(java.lang.String, java.lang.String)"/>.</para></section><section id="org.gradle.api.tasks.AbstractCopyTask:rename(org.gradle.api.Transformer)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>rename</literal>(<classname><apilink class="org.gradle.api.Transformer"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> renamer)</title><para>Renames a source file. The function will be called with a single parameter, the name of the file.
The function should return a new target name. The function may return null,
in which case the original name will be used.</para></section><section id="org.gradle.api.tasks.AbstractCopyTask:with(org.gradle.api.file.CopySpec[])" role="detail"><title><apilink class="org.gradle.api.file.CopySpec"/> <literal>with</literal>(<classname><apilink class="org.gradle.api.file.CopySpec"/>...</classname> sourceSpecs)</title><para>Adds the given specs as a child of this spec.

</para><para><programlisting language="java">
def contentSpec = copySpec {
  from("content") {
    include "**/*.txt"
  }
}

task copy(type: Copy) {
  into "$buildDir/copy"
  with contentSpec
}
</programlisting></para></section></section></chapter><chapter id="org.gradle.api.tasks.Copy"><title>Copy</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.tasks.Copy" style="javadoc"/></seg></seglistitem></segmentedlist><segmentedlist><segtitle>Known Subtypes</segtitle><seglistitem><seg><simplelist columns="1" type="vert"><member><apilink class="org.gradle.language.jvm.tasks.ProcessResources"/></member></simplelist></seg></seglistitem></segmentedlist><para>Copies files into a destination directory. This task can also rename and filter files as it copies. The task
implements <apilink class="org.gradle.api.file.CopySpec"/> for specifying what to copy.

</para><para> Examples:
</para><programlisting language="java">
task copyDocs(type: Copy) {
    from 'src/main/doc'
    into 'build/target/doc'
}

//for Ant filter
import org.apache.tools.ant.filters.ReplaceTokens

//for including in the copy task
def dataContent = copySpec {
    from 'src/data'
    include '*.data'
}

task initConfig(type: Copy) {
    from('src/main/config') {
        include '**/*.properties'
        include '**/*.xml'
        filter(ReplaceTokens, tokens: [version: '2.3.1'])
    }
    from('src/main/config') {
        exclude '**/*.properties', '**/*.xml'
    }
    from('src/main/languages') {
        rename 'EN_US_(.*)', '$1'
    }
    into 'build/target/config'
    exclude '**/*.bak'

    includeEmptyDirs = false

    with dataContent
}
</programlisting><section><title>Properties</title><table><title>Properties - Copy</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.tasks.Copy:caseSensitive"><literal>caseSensitive</literal></link></td><td><para>Specifies whether case-sensitive pattern matching should be used.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.Copy:destinationDir"><literal>destinationDir</literal></link></td><td><para>The directory to copy files into.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.Copy:dirPermissions"><literal>dirPermissions</literal></link></td><td><para>Property for querying and configuring directory access permissions.
If the property has no value set, that means that existing permissions are preserved.
It is dependent on the copy action implementation whether these permissions will actually be applied.

For details see <apilink class="org.gradle.api.file.ConfigurableFilePermissions"/>.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.Copy:duplicatesStrategy"><literal>duplicatesStrategy</literal></link></td><td><para>The strategy to use when trying to copy more than one file to the same destination.
</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.Copy:excludes"><literal>excludes</literal></link></td><td><para>The set of exclude patterns.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.Copy:filePermissions"><literal>filePermissions</literal></link></td><td><para>Property for querying and configuring file access permissions.
If the property has no value set, that means that existing permissions are preserved.
It is dependent on the copy action implementation whether these permissions will actually be applied.

For details see <apilink class="org.gradle.api.file.ConfigurableFilePermissions"/>.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.Copy:includeEmptyDirs"><literal>includeEmptyDirs</literal></link></td><td><para>Tells if empty target directories will be included in the copy.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.Copy:includes"><literal>includes</literal></link></td><td><para>The set of include patterns.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.Copy:source"><literal>source</literal></link></td><td><para>The source files for this task.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - Copy</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.tasks.Copy:eachFile(groovy.lang.Closure)">eachFile</link>(closure)</literal></td><td><para>Adds an action to be applied to each file as it about to be copied into its destination. The given closure is
called with a <apilink class="org.gradle.api.file.FileCopyDetails"/> as its parameter. Actions are executed in the order
added, and are inherited from the parent spec.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.Copy:eachFile(org.gradle.api.Action)">eachFile</link>(action)</literal></td><td><para>Adds an action to be applied to each file as it is about to be copied into its destination. The action can change
the destination path of the file, filter the contents of the file, or exclude the file from the result entirely.
Actions are executed in the order added, and are inherited from the parent spec.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.Copy:exclude(groovy.lang.Closure)">exclude</link>(excludeSpec)</literal></td><td><para>Adds an exclude spec. This method may be called multiple times to append new specs.The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter. The closure should return true or false. Example:

</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.Copy:exclude(java.lang.Iterable)">exclude</link>(excludes)</literal></td><td><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.Copy:exclude(java.lang.String[])">exclude</link>(excludes)</literal></td><td><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.Copy:exclude(org.gradle.api.specs.Spec)">exclude</link>(excludeSpec)</literal></td><td><para>Adds an exclude spec. This method may be called multiple times to append new specs.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.Copy:expand(java.util.Map)">expand</link>(properties)</literal></td><td><para>Expands property references in each file as it is copied. More specifically, each file is transformed using
Groovy's <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/text/SimpleTemplateEngine.html"><classname>SimpleTemplateEngine</classname></ulink>. This means you can use simple property references, such as
<literal>$property</literal> or <literal>${property}</literal> in the file. You can also include arbitrary Groovy code in the
file, such as <literal>${version ?: 'unknown'}</literal> or <literal>${classpath*.name.join(' ')}</literal>
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.Copy:expand(java.util.Map, org.gradle.api.Action)">expand</link>(properties, action)</literal></td><td><para>Expands property references in each file as it is copied. More specifically, each file is transformed using
Groovy's <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/text/SimpleTemplateEngine.html"><classname>SimpleTemplateEngine</classname></ulink>. This means you can use simple property references, such as
<literal>$property</literal> or <literal>${property}</literal> in the file. You can also include arbitrary Groovy code in the
file, such as <literal>${version ?: 'unknown'}</literal> or <literal>${classpath*.name.join(' ')}</literal>. The template
engine can be configured with the provided action.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.Copy:filesMatching(java.lang.Iterable, org.gradle.api.Action)">filesMatching</link>(patterns, action)</literal></td><td><para>Configure the <apilink class="org.gradle.api.file.FileCopyDetails"/> for each file whose path matches any of the specified Ant-style patterns.
This is equivalent to using eachFile() and selectively applying a configuration based on the file's path.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.Copy:filesMatching(java.lang.String, org.gradle.api.Action)">filesMatching</link>(pattern, action)</literal></td><td><para>Configure the <apilink class="org.gradle.api.file.FileCopyDetails"/> for each file whose path matches the specified Ant-style pattern.
This is equivalent to using eachFile() and selectively applying a configuration based on the file's path.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.Copy:filesNotMatching(java.lang.Iterable, org.gradle.api.Action)">filesNotMatching</link>(patterns, action)</literal></td><td><para>Configure the <apilink class="org.gradle.api.file.FileCopyDetails"/> for each file whose path does not match any of the specified
Ant-style patterns. This is equivalent to using eachFile() and selectively applying a configuration based on the
file's path.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.Copy:filesNotMatching(java.lang.String, org.gradle.api.Action)">filesNotMatching</link>(pattern, action)</literal></td><td><para>Configure the <apilink class="org.gradle.api.file.FileCopyDetails"/> for each file whose path does not match the specified
Ant-style pattern. This is equivalent to using eachFile() and selectively applying a configuration based on the
file's path.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.Copy:filter(groovy.lang.Closure)">filter</link>(closure)</literal></td><td><para>Adds a content filter based on the provided closure.  The Closure will be called with each line (stripped of line
endings) and should return a String to replace the line or <literal>null</literal> to remove the line.  If every line is
removed, the result will be an empty file, not an absent one.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.Copy:filter(java.lang.Class)">filter</link>(filterType)</literal></td><td><para>Adds a content filter to be used during the copy.  Multiple calls to filter, add additional filters to the
filter chain.  Each filter should implement <literal>java.io.FilterReader</literal>. Include <literal>org.apache.tools.ant.filters.*</literal> for access to all the standard Ant filters.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.Copy:filter(java.util.Map, java.lang.Class)">filter</link>(properties, filterType)</literal></td><td><para>Adds a content filter to be used during the copy.  Multiple calls to filter, add additional filters to the
filter chain.  Each filter should implement <literal>java.io.FilterReader</literal>. Include <literal>org.apache.tools.ant.filters.*</literal> for access to all the standard Ant filters.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.Copy:filter(org.gradle.api.Transformer)">filter</link>(transformer)</literal></td><td><para>Adds a content filter based on the provided transformer.  The Closure will be called with each line (stripped of line
endings) and should return a String to replace the line or <literal>null</literal> to remove the line.  If every line is
removed, the result will be an empty file, not an absent one.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.Copy:from(java.lang.Object, groovy.lang.Closure)">from</link>(sourcePath, c)</literal></td><td><para>Specifies the source files or directories for a copy and creates a child <literal>CopySourceSpec</literal>. The given source
path is evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/> .</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.Copy:from(java.lang.Object, org.gradle.api.Action)">from</link>(sourcePath, configureAction)</literal></td><td><para>Specifies the source files or directories for a copy and creates a child <literal>CopySpec</literal>. The given source
path is evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/> .</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.Copy:from(java.lang.Object[])">from</link>(sourcePaths)</literal></td><td><para>Specifies source files or directories for a copy. The given paths are evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/>.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.Copy:include(groovy.lang.Closure)">include</link>(includeSpec)</literal></td><td><para>Adds an include spec. This method may be called multiple times to append new specs. The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.Copy:include(java.lang.Iterable)">include</link>(includes)</literal></td><td><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.Copy:include(java.lang.String[])">include</link>(includes)</literal></td><td><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.Copy:include(org.gradle.api.specs.Spec)">include</link>(includeSpec)</literal></td><td><para>Adds an include spec. This method may be called multiple times to append new specs.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.Copy:into(java.lang.Object)">into</link>(destDir)</literal></td><td><para>Specifies the destination directory for a copy. The destination is evaluated as per <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/>.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.Copy:into(java.lang.Object, groovy.lang.Closure)">into</link>(destPath, configureClosure)</literal></td><td><para>Creates and configures a child <literal>CopySpec</literal> with the given destination path.
The destination is evaluated as per <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/>.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.Copy:into(java.lang.Object, org.gradle.api.Action)">into</link>(destPath, copySpec)</literal></td><td><para>Creates and configures a child <literal>CopySpec</literal> with the given destination path.
The destination is evaluated as per <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/>.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.Copy:rename(groovy.lang.Closure)">rename</link>(closure)</literal></td><td><para>Renames a source file. The closure will be called with a single parameter, the name of the file.
The closure should return a String object with a new target name. The closure may return null,
in which case the original name will be used.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.Copy:rename(java.lang.String, java.lang.String)">rename</link>(sourceRegEx, replaceWith)</literal></td><td><para>Renames files based on a regular expression.  Uses java.util.regex type of regular expressions.  Note that the
replace string should use the '$1' syntax to refer to capture groups in the source regular expression.  Files
that do not match the source regular expression will be copied with the original name.

</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.Copy:rename(java.util.regex.Pattern, java.lang.String)">rename</link>(sourceRegEx, replaceWith)</literal></td><td><para>Renames files based on a regular expression. See <apilink class="org.gradle.api.file.CopyProcessingSpec" method="rename(java.lang.String, java.lang.String)"/>.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.Copy:rename(org.gradle.api.Transformer)">rename</link>(renamer)</literal></td><td><para>Renames a source file. The function will be called with a single parameter, the name of the file.
The function should return a new target name. The function may return null,
in which case the original name will be used.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.Copy:with(org.gradle.api.file.CopySpec[])">with</link>(sourceSpecs)</literal></td><td><para>Adds the given specs as a child of this spec.

</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.tasks.Copy:caseSensitive" role="detail"><title><classname>boolean</classname> <literal>caseSensitive</literal></title><para>Specifies whether case-sensitive pattern matching should be used.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>true</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.Copy:destinationDir" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>destinationDir</literal></title><para>The directory to copy files into.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>null</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.Copy:dirPermissions" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<apilink class="org.gradle.api.file.ConfigurableFilePermissions"/>&gt;</classname> <literal>dirPermissions</literal></title><para>Property for querying and configuring directory access permissions.
If the property has no value set, that means that existing permissions are preserved.
It is dependent on the copy action implementation whether these permissions will actually be applied.

For details see <apilink class="org.gradle.api.file.ConfigurableFilePermissions"/>.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>null</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.Copy:duplicatesStrategy" role="detail"><title><apilink class="org.gradle.api.file.DuplicatesStrategy"/> <literal>duplicatesStrategy</literal></title><para>The strategy to use when trying to copy more than one file to the same destination.
</para><para>
The value can be set with a case insensitive string of the enum value (e.g. <literal>'exclude'</literal> for <apilink class="org.gradle.api.file.DuplicatesStrategy" method="EXCLUDE"/>).
</para><para>
This strategy can be overridden for individual files by using <apilink class="org.gradle.api.file.CopySpec" method="eachFile(org.gradle.api.Action)"/> or <apilink class="org.gradle.api.file.CopySpec" method="filesMatching(java.lang.String, org.gradle.api.Action)"/>.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>DuplicatesStrategy.INHERIT</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.Copy:excludes" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>excludes</literal></title><para>The set of exclude patterns.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>[]</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.Copy:filePermissions" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<apilink class="org.gradle.api.file.ConfigurableFilePermissions"/>&gt;</classname> <literal>filePermissions</literal></title><para>Property for querying and configuring file access permissions.
If the property has no value set, that means that existing permissions are preserved.
It is dependent on the copy action implementation whether these permissions will actually be applied.

For details see <apilink class="org.gradle.api.file.ConfigurableFilePermissions"/>.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>null</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.Copy:includeEmptyDirs" role="detail"><title><classname>boolean</classname> <literal>includeEmptyDirs</literal></title><para>Tells if empty target directories will be included in the copy.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>true</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.Copy:includes" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>includes</literal></title><para>The set of include patterns.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>[]</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.Copy:source" role="detail"><title><apilink class="org.gradle.api.file.FileCollection"/> <literal>source</literal> (read-only)</title><para>The source files for this task.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>[]</literal></seg></seglistitem></segmentedlist></section></section><section><title>Method details</title><section id="org.gradle.api.tasks.Copy:eachFile(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>eachFile</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> closure)</title><para>Adds an action to be applied to each file as it about to be copied into its destination. The given closure is
called with a <apilink class="org.gradle.api.file.FileCopyDetails"/> as its parameter. Actions are executed in the order
added, and are inherited from the parent spec.</para></section><section id="org.gradle.api.tasks.Copy:eachFile(org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>eachFile</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.FileCopyDetails"/>&gt;</classname> action)</title><para>Adds an action to be applied to each file as it is about to be copied into its destination. The action can change
the destination path of the file, filter the contents of the file, or exclude the file from the result entirely.
Actions are executed in the order added, and are inherited from the parent spec.</para></section><section id="org.gradle.api.tasks.Copy:exclude(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>exclude</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> excludeSpec)</title><para>Adds an exclude spec. This method may be called multiple times to append new specs.The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter. The closure should return true or false. Example:

</para><para><programlisting language="java">
copySpec {
  from 'source'
  into 'destination'
  //an example of excluding files from certain configuration:
  exclude { it.file in configurations.someConf.files }
}
</programlisting></para><para>

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.api.tasks.Copy:exclude(java.lang.Iterable)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>exclude</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> excludes)</title><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.api.tasks.Copy:exclude(java.lang.String[])" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>exclude</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>...</classname> excludes)</title><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.api.tasks.Copy:exclude(org.gradle.api.specs.Spec)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>exclude</literal>(<classname><apilink class="org.gradle.api.specs.Spec"/>&lt;<apilink class="org.gradle.api.file.FileTreeElement"/>&gt;</classname> excludeSpec)</title><para>Adds an exclude spec. This method may be called multiple times to append new specs.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.api.tasks.Copy:expand(java.util.Map)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>expand</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, ?&gt;</classname> properties)</title><para>Expands property references in each file as it is copied. More specifically, each file is transformed using
Groovy's <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/text/SimpleTemplateEngine.html"><classname>SimpleTemplateEngine</classname></ulink>. This means you can use simple property references, such as
<literal>$property</literal> or <literal>${property}</literal> in the file. You can also include arbitrary Groovy code in the
file, such as <literal>${version ?: 'unknown'}</literal> or <literal>${classpath*.name.join(' ')}</literal>
</para><para>
Note that all escape sequences (<literal>\n</literal>, <literal>\t</literal>, <literal>\\</literal>, etc) are converted to the symbols
they represent, so, for example, <literal>\n</literal> becomes newline. If this is undesirable then <apilink class="org.gradle.api.file.ContentFilterable" method="expand(java.util.Map, org.gradle.api.Action)"/>
should be used to disable this behavior.</para></section><section id="org.gradle.api.tasks.Copy:expand(java.util.Map, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>expand</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, ?&gt;</classname> properties, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.ExpandDetails"/>&gt;</classname> action)</title><para>Expands property references in each file as it is copied. More specifically, each file is transformed using
Groovy's <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/text/SimpleTemplateEngine.html"><classname>SimpleTemplateEngine</classname></ulink>. This means you can use simple property references, such as
<literal>$property</literal> or <literal>${property}</literal> in the file. You can also include arbitrary Groovy code in the
file, such as <literal>${version ?: 'unknown'}</literal> or <literal>${classpath*.name.join(' ')}</literal>. The template
engine can be configured with the provided action.
</para><para>
Note that by default all escape sequences (<literal>\n</literal>, <literal>\t</literal>, <literal>\\</literal>, etc) are converted to the symbols
they represent, so, for example, <literal>\n</literal> becomes newline. This behavior is controlled by
<apilink class="org.gradle.api.file.ExpandDetails" method="getEscapeBackslash()"/> property. It should be set to <literal>true</literal> to disable escape sequences
conversion:
</para><para><programlisting language="java">
 expand(one: '1', two: 2) {
     escapeBackslash = true
 }
</programlisting></para></section><section id="org.gradle.api.tasks.Copy:filesMatching(java.lang.Iterable, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>filesMatching</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> patterns, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.FileCopyDetails"/>&gt;</classname> action)</title><para>Configure the <apilink class="org.gradle.api.file.FileCopyDetails"/> for each file whose path matches any of the specified Ant-style patterns.
This is equivalent to using eachFile() and selectively applying a configuration based on the file's path.</para></section><section id="org.gradle.api.tasks.Copy:filesMatching(java.lang.String, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>filesMatching</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> pattern, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.FileCopyDetails"/>&gt;</classname> action)</title><para>Configure the <apilink class="org.gradle.api.file.FileCopyDetails"/> for each file whose path matches the specified Ant-style pattern.
This is equivalent to using eachFile() and selectively applying a configuration based on the file's path.</para></section><section id="org.gradle.api.tasks.Copy:filesNotMatching(java.lang.Iterable, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>filesNotMatching</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> patterns, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.FileCopyDetails"/>&gt;</classname> action)</title><para>Configure the <apilink class="org.gradle.api.file.FileCopyDetails"/> for each file whose path does not match any of the specified
Ant-style patterns. This is equivalent to using eachFile() and selectively applying a configuration based on the
file's path.</para></section><section id="org.gradle.api.tasks.Copy:filesNotMatching(java.lang.String, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>filesNotMatching</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> pattern, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.FileCopyDetails"/>&gt;</classname> action)</title><para>Configure the <apilink class="org.gradle.api.file.FileCopyDetails"/> for each file whose path does not match the specified
Ant-style pattern. This is equivalent to using eachFile() and selectively applying a configuration based on the
file's path.</para></section><section id="org.gradle.api.tasks.Copy:filter(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>filter</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> closure)</title><para>Adds a content filter based on the provided closure.  The Closure will be called with each line (stripped of line
endings) and should return a String to replace the line or <literal>null</literal> to remove the line.  If every line is
removed, the result will be an empty file, not an absent one.</para></section><section id="org.gradle.api.tasks.Copy:filter(java.lang.Class)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>filter</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html"><classname>Class</classname></ulink>&lt;? extends <ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/FilterReader.html"><classname>FilterReader</classname></ulink>&gt;</classname> filterType)</title><para>Adds a content filter to be used during the copy.  Multiple calls to filter, add additional filters to the
filter chain.  Each filter should implement <literal>java.io.FilterReader</literal>. Include <literal>org.apache.tools.ant.filters.*</literal> for access to all the standard Ant filters.</para><para> Examples:
</para><para><programlisting language="java">
   filter(StripJavaComments)
   filter(com.mycompany.project.CustomFilter)
</programlisting></para></section><section id="org.gradle.api.tasks.Copy:filter(java.util.Map, java.lang.Class)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>filter</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, ?&gt;</classname> properties, <classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html"><classname>Class</classname></ulink>&lt;? extends <ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/FilterReader.html"><classname>FilterReader</classname></ulink>&gt;</classname> filterType)</title><para>Adds a content filter to be used during the copy.  Multiple calls to filter, add additional filters to the
filter chain.  Each filter should implement <literal>java.io.FilterReader</literal>. Include <literal>org.apache.tools.ant.filters.*</literal> for access to all the standard Ant filters.</para><para>Filter properties may be specified using groovy map syntax.</para><para> Examples:
</para><para><programlisting language="java">
   filter(HeadFilter, lines:25, skip:2)
   filter(ReplaceTokens, tokens:[copyright:'2009', version:'2.3.1'])
</programlisting></para></section><section id="org.gradle.api.tasks.Copy:filter(org.gradle.api.Transformer)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>filter</literal>(<classname><apilink class="org.gradle.api.Transformer"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> transformer)</title><para>Adds a content filter based on the provided transformer.  The Closure will be called with each line (stripped of line
endings) and should return a String to replace the line or <literal>null</literal> to remove the line.  If every line is
removed, the result will be an empty file, not an absent one.</para></section><section id="org.gradle.api.tasks.Copy:from(java.lang.Object, groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>from</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> sourcePath, <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> c)</title><para>Specifies the source files or directories for a copy and creates a child <literal>CopySourceSpec</literal>. The given source
path is evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/> .</para></section><section id="org.gradle.api.tasks.Copy:from(java.lang.Object, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>from</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> sourcePath, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.CopySpec"/>&gt;</classname> configureAction)</title><para>Specifies the source files or directories for a copy and creates a child <literal>CopySpec</literal>. The given source
path is evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/> .</para></section><section id="org.gradle.api.tasks.Copy:from(java.lang.Object[])" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>from</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink>...</classname> sourcePaths)</title><para>Specifies source files or directories for a copy. The given paths are evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/>.</para></section><section id="org.gradle.api.tasks.Copy:include(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>include</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> includeSpec)</title><para>Adds an include spec. This method may be called multiple times to append new specs. The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></section><section id="org.gradle.api.tasks.Copy:include(java.lang.Iterable)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>include</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> includes)</title><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></section><section id="org.gradle.api.tasks.Copy:include(java.lang.String[])" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>include</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>...</classname> includes)</title><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></section><section id="org.gradle.api.tasks.Copy:include(org.gradle.api.specs.Spec)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>include</literal>(<classname><apilink class="org.gradle.api.specs.Spec"/>&lt;<apilink class="org.gradle.api.file.FileTreeElement"/>&gt;</classname> includeSpec)</title><para>Adds an include spec. This method may be called multiple times to append new specs.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></section><section id="org.gradle.api.tasks.Copy:into(java.lang.Object)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>into</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> destDir)</title><para>Specifies the destination directory for a copy. The destination is evaluated as per <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/>.</para></section><section id="org.gradle.api.tasks.Copy:into(java.lang.Object, groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>into</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> destPath, <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> configureClosure)</title><para>Creates and configures a child <literal>CopySpec</literal> with the given destination path.
The destination is evaluated as per <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/>.</para></section><section id="org.gradle.api.tasks.Copy:into(java.lang.Object, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.file.CopySpec"/> <literal>into</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> destPath, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.CopySpec"/>&gt;</classname> copySpec)</title><para>Creates and configures a child <literal>CopySpec</literal> with the given destination path.
The destination is evaluated as per <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/>.</para></section><section id="org.gradle.api.tasks.Copy:rename(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>rename</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> closure)</title><para>Renames a source file. The closure will be called with a single parameter, the name of the file.
The closure should return a String object with a new target name. The closure may return null,
in which case the original name will be used.</para></section><section id="org.gradle.api.tasks.Copy:rename(java.lang.String, java.lang.String)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>rename</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> sourceRegEx, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> replaceWith)</title><para>Renames files based on a regular expression.  Uses java.util.regex type of regular expressions.  Note that the
replace string should use the '$1' syntax to refer to capture groups in the source regular expression.  Files
that do not match the source regular expression will be copied with the original name.

</para><para> Example:
</para><para><programlisting language="java">
rename '(.*)_OEM_BLUE_(.*)', '$1$2'
</programlisting></para><para>
would map the file 'style_OEM_BLUE_.css' to 'style.css'</para></section><section id="org.gradle.api.tasks.Copy:rename(java.util.regex.Pattern, java.lang.String)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>rename</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html"><classname>Pattern</classname></ulink> sourceRegEx, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> replaceWith)</title><para>Renames files based on a regular expression. See <apilink class="org.gradle.api.file.CopyProcessingSpec" method="rename(java.lang.String, java.lang.String)"/>.</para></section><section id="org.gradle.api.tasks.Copy:rename(org.gradle.api.Transformer)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>rename</literal>(<classname><apilink class="org.gradle.api.Transformer"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> renamer)</title><para>Renames a source file. The function will be called with a single parameter, the name of the file.
The function should return a new target name. The function may return null,
in which case the original name will be used.</para></section><section id="org.gradle.api.tasks.Copy:with(org.gradle.api.file.CopySpec[])" role="detail"><title><apilink class="org.gradle.api.file.CopySpec"/> <literal>with</literal>(<classname><apilink class="org.gradle.api.file.CopySpec"/>...</classname> sourceSpecs)</title><para>Adds the given specs as a child of this spec.

</para><para><programlisting language="java">
def contentSpec = copySpec {
  from("content") {
    include "**/*.txt"
  }
}

task copy(type: Copy) {
  into "$buildDir/copy"
  with contentSpec
}
</programlisting></para></section></section></chapter><chapter id="org.gradle.jvm.application.tasks.CreateStartScripts"><title>CreateStartScripts</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.jvm.application.tasks.CreateStartScripts" style="javadoc"/></seg></seglistitem></segmentedlist><para>Creates start scripts for launching JVM applications.
</para><para>
Example:
</para><programlisting language="java">
task createStartScripts(type: CreateStartScripts) {
  outputDir = file('build/sample')
  mainClass = 'org.gradle.test.Main'
  applicationName = 'myApp'
  classpath = files('path/to/some.jar')
}
</programlisting><para>
Note: the Gradle <literal>"application"</literal> plugin adds a pre-configured task of this type named <literal>"startScripts"</literal>.
</para><para>
The task generates separate scripts targeted at Microsoft Windows environments and UNIX-like environments (e.g. Linux, macOS).
The actual generation is implemented by the <apilink class="org.gradle.jvm.application.tasks.CreateStartScripts" method="getWindowsStartScriptGenerator()"/> and <apilink class="org.gradle.jvm.application.tasks.CreateStartScripts" method="getUnixStartScriptGenerator()"/> properties, of type <apilink class="org.gradle.jvm.application.scripts.ScriptGenerator"/>.
</para><para>
Example:
</para><programlisting language="java">
task createStartScripts(type: CreateStartScripts) {
  unixStartScriptGenerator = new CustomUnixStartScriptGenerator()
  windowsStartScriptGenerator = new CustomWindowsStartScriptGenerator()
}

class CustomUnixStartScriptGenerator implements ScriptGenerator {
  void generateScript(JavaAppStartScriptGenerationDetails details, Writer destination) {
    // implementation
  }
}

class CustomWindowsStartScriptGenerator implements ScriptGenerator {
  void generateScript(JavaAppStartScriptGenerationDetails details, Writer destination) {
    // implementation
  }
}
</programlisting><para>
The default generators are of the type <apilink class="org.gradle.jvm.application.scripts.TemplateBasedScriptGenerator"/>, with default templates.
This templates can be changed via the <apilink class="org.gradle.jvm.application.scripts.TemplateBasedScriptGenerator" method="setTemplate(org.gradle.api.resources.TextResource)"/> method.
</para><para>
The default implementations used by this task use <ulink url="https://docs.groovy-lang.org/latest/html/documentation/template-engines.html#_simpletemplateengine">Groovy's SimpleTemplateEngine</ulink>
to parse the template, with the following variables available:
</para><itemizedlist><listitem><literal>applicationName</literal> - See <apilink class="org.gradle.jvm.application.scripts.JavaAppStartScriptGenerationDetails" method="getApplicationName()"/>.</listitem><listitem><literal>optsEnvironmentVar</literal> - See <apilink class="org.gradle.jvm.application.scripts.JavaAppStartScriptGenerationDetails" method="getOptsEnvironmentVar()"/>.</listitem><listitem><literal>exitEnvironmentVar</literal> - See <apilink class="org.gradle.jvm.application.scripts.JavaAppStartScriptGenerationDetails" method="getExitEnvironmentVar()"/>.</listitem><listitem><literal>moduleEntryPoint</literal> - The module entry point, or <literal>null</literal> if none. Will also include the main class name if present, in the form <literal>[moduleName]/[className]</literal>.</listitem><listitem><literal>mainClassName</literal> - The main class name, or usually <literal>""</literal> if none. For legacy reasons, this may be set to <literal>--module [moduleEntryPoint]</literal> when using a main module.
This behavior should not be relied upon and may be removed in a future release.</listitem><listitem><literal>entryPointArgs</literal> - The arguments to be used on the command-line to enter the application, as a joined string. It should be inserted before the program arguments.</listitem><listitem><literal>defaultJvmOpts</literal> - See <apilink class="org.gradle.jvm.application.scripts.JavaAppStartScriptGenerationDetails" method="getDefaultJvmOpts()"/>.</listitem><listitem><literal>appNameSystemProperty</literal> - See <apilink class="org.gradle.jvm.application.scripts.JavaAppStartScriptGenerationDetails" method="getAppNameSystemProperty()"/>.</listitem><listitem><literal>appHomeRelativePath</literal> - The path, relative to the script's own path, of the app home.</listitem><listitem><literal>classpath</literal> - See <apilink class="org.gradle.jvm.application.scripts.JavaAppStartScriptGenerationDetails" method="getClasspath()"/>. It is already encoded as a joined string.</listitem><listitem><literal>modulePath</literal> (different capitalization) - See <apilink class="org.gradle.jvm.application.scripts.JavaAppStartScriptGenerationDetails" method="getModulePath()"/>. It is already encoded as a joined string.</listitem></itemizedlist><para>
The encoded paths expect a variable named <literal>APP_HOME</literal> to be present in the script, set to the application home directory which can be resolved using <literal>appHomeRelativePath</literal>.
</para><para>
Example:
</para><programlisting language="java">
task createStartScripts(type: CreateStartScripts) {
  unixStartScriptGenerator.template = resources.text.fromFile('customUnixStartScript.txt')
  windowsStartScriptGenerator.template = resources.text.fromFile('customWindowsStartScript.txt')
}
</programlisting><section><title>Properties</title><table><title>Properties - CreateStartScripts</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.jvm.application.tasks.CreateStartScripts:applicationName"><literal>applicationName</literal></link></td><td><para>The application's name.</para></td></tr><tr><td><link linkend="org.gradle.jvm.application.tasks.CreateStartScripts:classpath"><literal>classpath</literal></link></td><td><para>The class path for the application.</para></td></tr><tr><td><link linkend="org.gradle.jvm.application.tasks.CreateStartScripts:defaultJvmOpts"><literal>defaultJvmOpts</literal></link></td><td><para>The application's default JVM options. Defaults to an empty list.</para></td></tr><tr><td><link linkend="org.gradle.jvm.application.tasks.CreateStartScripts:executableDir"><literal>executableDir</literal></link></td><td><para>The directory to write the scripts into in the distribution.</para></td></tr><tr><td><link linkend="org.gradle.jvm.application.tasks.CreateStartScripts:mainClass"><literal>mainClass</literal></link></td><td><para>The main class name used to start the Java application.</para></td></tr><tr><td><link linkend="org.gradle.jvm.application.tasks.CreateStartScripts:mainModule"><literal>mainModule</literal></link></td><td><para>The main module name used to start the modular Java application.</para></td></tr><tr><td><link linkend="org.gradle.jvm.application.tasks.CreateStartScripts:optsEnvironmentVar"><literal>optsEnvironmentVar</literal></link></td><td><para>The environment variable to use to provide additional options to the JVM.</para></td></tr><tr><td><link linkend="org.gradle.jvm.application.tasks.CreateStartScripts:outputDir"><literal>outputDir</literal></link></td><td><para>The directory to write the scripts into.</para></td></tr><tr><td><link linkend="org.gradle.jvm.application.tasks.CreateStartScripts:unixStartScriptGenerator"><literal>unixStartScriptGenerator</literal></link></td><td><para>The UNIX-like start script generator.
</para></td></tr><tr><td><link linkend="org.gradle.jvm.application.tasks.CreateStartScripts:windowsStartScriptGenerator"><literal>windowsStartScriptGenerator</literal></link></td><td><para>The Windows start script generator.
</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.jvm.application.tasks.CreateStartScripts:applicationName" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>applicationName</literal></title><para>The application's name.</para></section><section id="org.gradle.jvm.application.tasks.CreateStartScripts:classpath" role="detail"><title><apilink class="org.gradle.api.file.FileCollection"/> <literal>classpath</literal></title><para>The class path for the application.</para></section><section id="org.gradle.jvm.application.tasks.CreateStartScripts:defaultJvmOpts" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>defaultJvmOpts</literal></title><para>The application's default JVM options. Defaults to an empty list.</para></section><section id="org.gradle.jvm.application.tasks.CreateStartScripts:executableDir" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>executableDir</literal></title><para>The directory to write the scripts into in the distribution.</para></section><section id="org.gradle.jvm.application.tasks.CreateStartScripts:mainClass" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>mainClass</literal></title><para>The main class name used to start the Java application.</para></section><section id="org.gradle.jvm.application.tasks.CreateStartScripts:mainModule" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>mainModule</literal></title><para>The main module name used to start the modular Java application.</para></section><section id="org.gradle.jvm.application.tasks.CreateStartScripts:optsEnvironmentVar" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>optsEnvironmentVar</literal></title><para>The environment variable to use to provide additional options to the JVM.</para></section><section id="org.gradle.jvm.application.tasks.CreateStartScripts:outputDir" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>outputDir</literal></title><para>The directory to write the scripts into.</para></section><section id="org.gradle.jvm.application.tasks.CreateStartScripts:unixStartScriptGenerator" role="detail"><title><apilink class="org.gradle.jvm.application.scripts.ScriptGenerator"/> <literal>unixStartScriptGenerator</literal></title><para>The UNIX-like start script generator.
</para><para>
Defaults to an implementation of <apilink class="org.gradle.jvm.application.scripts.TemplateBasedScriptGenerator"/>.</para></section><section id="org.gradle.jvm.application.tasks.CreateStartScripts:windowsStartScriptGenerator" role="detail"><title><apilink class="org.gradle.jvm.application.scripts.ScriptGenerator"/> <literal>windowsStartScriptGenerator</literal></title><para>The Windows start script generator.
</para><para>
Defaults to an implementation of <apilink class="org.gradle.jvm.application.scripts.TemplateBasedScriptGenerator"/>.</para></section></section></chapter><chapter id="org.gradle.api.tasks.Delete"><title>Delete</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.tasks.Delete" style="javadoc"/></seg></seglistitem></segmentedlist><para>Deletes files or directories. Example:</para><programlisting language="java">
task makePretty(type: Delete) {
  delete 'uglyFolder', 'uglyFile'
  followSymlinks = true
}
</programlisting><para>

Be default symlinks will not be followed when deleting files. To change this behavior call
<apilink class="org.gradle.api.tasks.Delete" method="setFollowSymlinks(boolean)"/> with true. On systems that do not support symlinks,
this will have no effect.</para><section><title>Properties</title><table><title>Properties - Delete</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.tasks.Delete:delete"><literal>delete</literal></link></td><td><para>The set of files which will be deleted by this task.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.Delete:followSymlinks"><literal>followSymlinks</literal></link></td><td><para>Returns if symlinks should be followed when doing a delete.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.Delete:targetFiles"><literal>targetFiles</literal></link></td><td><para>The resolved set of files which will be deleted by this task.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - Delete</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.tasks.Delete:delete(java.lang.Object[])">delete</link>(targets)</literal></td><td><para>Adds some files to be deleted by this task. The given targets are evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/>.</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.tasks.Delete:delete" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink>&gt;</classname> <literal>delete</literal></title><para>The set of files which will be deleted by this task.</para></section><section id="org.gradle.api.tasks.Delete:followSymlinks" role="detail"><title><classname>boolean</classname> <literal>followSymlinks</literal></title><para>Returns if symlinks should be followed when doing a delete.</para></section><section id="org.gradle.api.tasks.Delete:targetFiles" role="detail"><title><apilink class="org.gradle.api.file.FileCollection"/> <literal>targetFiles</literal> (read-only)</title><para>The resolved set of files which will be deleted by this task.</para></section></section><section><title>Method details</title><section id="org.gradle.api.tasks.Delete:delete(java.lang.Object[])" role="detail"><title><apilink class="org.gradle.api.tasks.Delete"/> <literal>delete</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink>...</classname> targets)</title><para>Adds some files to be deleted by this task. The given targets are evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/>.</para></section></section></chapter><chapter id="org.gradle.api.tasks.bundling.AbstractArchiveTask"><title>AbstractArchiveTask</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.tasks.bundling.AbstractArchiveTask" style="javadoc"/></seg></seglistitem></segmentedlist><segmentedlist><segtitle>Known Subtypes</segtitle><seglistitem><seg><simplelist columns="1" type="vert"><member><apilink class="org.gradle.api.tasks.bundling.Zip"/></member><member><apilink class="org.gradle.api.tasks.bundling.Tar"/></member></simplelist></seg></seglistitem></segmentedlist><para><literal>AbstractArchiveTask</literal> is the base class for all archive tasks.</para><section><title>Properties</title><table><title>Properties - AbstractArchiveTask</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.tasks.bundling.AbstractArchiveTask:archiveAppendix"><literal>archiveAppendix</literal></link></td><td><para>The appendix part of the archive name, if any.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.bundling.AbstractArchiveTask:archiveBaseName"><literal>archiveBaseName</literal></link></td><td><para>The base name of the archive.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.bundling.AbstractArchiveTask:archiveClassifier"><literal>archiveClassifier</literal></link></td><td><para>The classifier part of the archive name, if any.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.bundling.AbstractArchiveTask:archiveExtension"><literal>archiveExtension</literal></link></td><td><para>The extension part of the archive name.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.bundling.AbstractArchiveTask:archiveFile"><literal>archiveFile</literal></link></td><td><para>The <apilink class="org.gradle.api.file.RegularFile"/> where the archive is constructed.
The path is simply the <literal>destinationDirectory</literal> plus the <literal>archiveFileName</literal>.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.bundling.AbstractArchiveTask:archiveFileName"><literal>archiveFileName</literal></link></td><td><para>The archive name. If the name has not been explicitly set, the pattern for the name is:
<literal>[archiveBaseName]-[archiveAppendix]-[archiveVersion]-[archiveClassifier].[archiveExtension]</literal></para></td></tr><tr><td><link linkend="org.gradle.api.tasks.bundling.AbstractArchiveTask:archiveVersion"><literal>archiveVersion</literal></link></td><td><para>The version part of the archive name.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.bundling.AbstractArchiveTask:caseSensitive"><literal>caseSensitive</literal></link></td><td><para>Specifies whether case-sensitive pattern matching should be used.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.bundling.AbstractArchiveTask:destinationDirectory"><literal>destinationDirectory</literal></link></td><td><para>The directory where the archive will be placed.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.bundling.AbstractArchiveTask:dirPermissions"><literal>dirPermissions</literal></link></td><td><para>Property for querying and configuring directory access permissions.
If the property has no value set, that means that existing permissions are preserved.
It is dependent on the copy action implementation whether these permissions will actually be applied.

For details see <apilink class="org.gradle.api.file.ConfigurableFilePermissions"/>.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.bundling.AbstractArchiveTask:duplicatesStrategy"><literal>duplicatesStrategy</literal></link></td><td><para>The strategy to use when trying to copy more than one file to the same destination.
</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.bundling.AbstractArchiveTask:excludes"><literal>excludes</literal></link></td><td><para>The set of exclude patterns.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.bundling.AbstractArchiveTask:filePermissions"><literal>filePermissions</literal></link></td><td><para>Property for querying and configuring file access permissions.
If the property has no value set, that means that existing permissions are preserved.
It is dependent on the copy action implementation whether these permissions will actually be applied.

For details see <apilink class="org.gradle.api.file.ConfigurableFilePermissions"/>.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.bundling.AbstractArchiveTask:includeEmptyDirs"><literal>includeEmptyDirs</literal></link></td><td><para>Tells if empty target directories will be included in the copy.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.bundling.AbstractArchiveTask:includes"><literal>includes</literal></link></td><td><para>The set of include patterns.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.bundling.AbstractArchiveTask:preserveFileTimestamps"><literal>preserveFileTimestamps</literal></link></td><td><para>Specifies whether file timestamps should be preserved in the archive.
</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.bundling.AbstractArchiveTask:reproducibleFileOrder"><literal>reproducibleFileOrder</literal></link></td><td><para>Specifies whether to enforce a reproducible file order when reading files from directories.
</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.bundling.AbstractArchiveTask:source"><literal>source</literal></link></td><td><para>The source files for this task.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - AbstractArchiveTask</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.AbstractArchiveTask:eachFile(groovy.lang.Closure)">eachFile</link>(closure)</literal></td><td><para>Adds an action to be applied to each file as it about to be copied into its destination. The given closure is
called with a <apilink class="org.gradle.api.file.FileCopyDetails"/> as its parameter. Actions are executed in the order
added, and are inherited from the parent spec.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.AbstractArchiveTask:eachFile(org.gradle.api.Action)">eachFile</link>(action)</literal></td><td><para>Adds an action to be applied to each file as it is about to be copied into its destination. The action can change
the destination path of the file, filter the contents of the file, or exclude the file from the result entirely.
Actions are executed in the order added, and are inherited from the parent spec.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.AbstractArchiveTask:exclude(groovy.lang.Closure)">exclude</link>(excludeSpec)</literal></td><td><para>Adds an exclude spec. This method may be called multiple times to append new specs.The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter. The closure should return true or false. Example:

</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.AbstractArchiveTask:exclude(java.lang.Iterable)">exclude</link>(excludes)</literal></td><td><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.AbstractArchiveTask:exclude(java.lang.String[])">exclude</link>(excludes)</literal></td><td><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.AbstractArchiveTask:exclude(org.gradle.api.specs.Spec)">exclude</link>(excludeSpec)</literal></td><td><para>Adds an exclude spec. This method may be called multiple times to append new specs.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.AbstractArchiveTask:expand(java.util.Map)">expand</link>(properties)</literal></td><td><para>Expands property references in each file as it is copied. More specifically, each file is transformed using
Groovy's <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/text/SimpleTemplateEngine.html"><classname>SimpleTemplateEngine</classname></ulink>. This means you can use simple property references, such as
<literal>$property</literal> or <literal>${property}</literal> in the file. You can also include arbitrary Groovy code in the
file, such as <literal>${version ?: 'unknown'}</literal> or <literal>${classpath*.name.join(' ')}</literal>
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.AbstractArchiveTask:expand(java.util.Map, org.gradle.api.Action)">expand</link>(properties, action)</literal></td><td><para>Expands property references in each file as it is copied. More specifically, each file is transformed using
Groovy's <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/text/SimpleTemplateEngine.html"><classname>SimpleTemplateEngine</classname></ulink>. This means you can use simple property references, such as
<literal>$property</literal> or <literal>${property}</literal> in the file. You can also include arbitrary Groovy code in the
file, such as <literal>${version ?: 'unknown'}</literal> or <literal>${classpath*.name.join(' ')}</literal>. The template
engine can be configured with the provided action.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.AbstractArchiveTask:filesMatching(java.lang.Iterable, org.gradle.api.Action)">filesMatching</link>(patterns, action)</literal></td><td><para>Configure the <apilink class="org.gradle.api.file.FileCopyDetails"/> for each file whose path matches any of the specified Ant-style patterns.
This is equivalent to using eachFile() and selectively applying a configuration based on the file's path.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.AbstractArchiveTask:filesMatching(java.lang.String, org.gradle.api.Action)">filesMatching</link>(pattern, action)</literal></td><td><para>Configure the <apilink class="org.gradle.api.file.FileCopyDetails"/> for each file whose path matches the specified Ant-style pattern.
This is equivalent to using eachFile() and selectively applying a configuration based on the file's path.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.AbstractArchiveTask:filesNotMatching(java.lang.Iterable, org.gradle.api.Action)">filesNotMatching</link>(patterns, action)</literal></td><td><para>Configure the <apilink class="org.gradle.api.file.FileCopyDetails"/> for each file whose path does not match any of the specified
Ant-style patterns. This is equivalent to using eachFile() and selectively applying a configuration based on the
file's path.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.AbstractArchiveTask:filesNotMatching(java.lang.String, org.gradle.api.Action)">filesNotMatching</link>(pattern, action)</literal></td><td><para>Configure the <apilink class="org.gradle.api.file.FileCopyDetails"/> for each file whose path does not match the specified
Ant-style pattern. This is equivalent to using eachFile() and selectively applying a configuration based on the
file's path.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.AbstractArchiveTask:filter(groovy.lang.Closure)">filter</link>(closure)</literal></td><td><para>Adds a content filter based on the provided closure.  The Closure will be called with each line (stripped of line
endings) and should return a String to replace the line or <literal>null</literal> to remove the line.  If every line is
removed, the result will be an empty file, not an absent one.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.AbstractArchiveTask:filter(java.lang.Class)">filter</link>(filterType)</literal></td><td><para>Adds a content filter to be used during the copy.  Multiple calls to filter, add additional filters to the
filter chain.  Each filter should implement <literal>java.io.FilterReader</literal>. Include <literal>org.apache.tools.ant.filters.*</literal> for access to all the standard Ant filters.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.AbstractArchiveTask:filter(java.util.Map, java.lang.Class)">filter</link>(properties, filterType)</literal></td><td><para>Adds a content filter to be used during the copy.  Multiple calls to filter, add additional filters to the
filter chain.  Each filter should implement <literal>java.io.FilterReader</literal>. Include <literal>org.apache.tools.ant.filters.*</literal> for access to all the standard Ant filters.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.AbstractArchiveTask:filter(org.gradle.api.Transformer)">filter</link>(transformer)</literal></td><td><para>Adds a content filter based on the provided transformer.  The Closure will be called with each line (stripped of line
endings) and should return a String to replace the line or <literal>null</literal> to remove the line.  If every line is
removed, the result will be an empty file, not an absent one.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.AbstractArchiveTask:from(java.lang.Object, groovy.lang.Closure)">from</link>(sourcePath, c)</literal></td><td><para>Specifies the source files or directories for a copy and creates a child <literal>CopySourceSpec</literal>. The given source
path is evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/> .</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.AbstractArchiveTask:from(java.lang.Object, org.gradle.api.Action)">from</link>(sourcePath, configureAction)</literal></td><td><para>Specifies the source files or directories for a copy and creates a child <literal>CopySpec</literal>. The given source
path is evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/> .</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.AbstractArchiveTask:from(java.lang.Object[])">from</link>(sourcePaths)</literal></td><td><para>Specifies source files or directories for a copy. The given paths are evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/>.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.AbstractArchiveTask:include(groovy.lang.Closure)">include</link>(includeSpec)</literal></td><td><para>Adds an include spec. This method may be called multiple times to append new specs. The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.AbstractArchiveTask:include(java.lang.Iterable)">include</link>(includes)</literal></td><td><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.AbstractArchiveTask:include(java.lang.String[])">include</link>(includes)</literal></td><td><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.AbstractArchiveTask:include(org.gradle.api.specs.Spec)">include</link>(includeSpec)</literal></td><td><para>Adds an include spec. This method may be called multiple times to append new specs.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.AbstractArchiveTask:into(java.lang.Object)">into</link>(destPath)</literal></td><td><para>Specifies the destination directory *inside* the archive for the files.
The destination is evaluated as per <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/>.
Don't mix it up with <apilink class="org.gradle.api.tasks.bundling.AbstractArchiveTask" method="getDestinationDirectory()"/> which specifies the output directory for the archive.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.AbstractArchiveTask:into(java.lang.Object, groovy.lang.Closure)">into</link>(destPath, configureClosure)</literal></td><td><para>Creates and configures a child <literal>CopySpec</literal> with a destination directory *inside* the archive for the files.
The destination is evaluated as per <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/>.
Don't mix it up with <apilink class="org.gradle.api.tasks.bundling.AbstractArchiveTask" method="getDestinationDirectory()"/> which specifies the output directory for the archive.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.AbstractArchiveTask:into(java.lang.Object, org.gradle.api.Action)">into</link>(destPath, copySpec)</literal></td><td><para>Creates and configures a child <literal>CopySpec</literal> with a destination directory *inside* the archive for the files.
The destination is evaluated as per <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/>.
Don't mix it up with <apilink class="org.gradle.api.tasks.bundling.AbstractArchiveTask" method="getDestinationDirectory()"/> which specifies the output directory for the archive.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.AbstractArchiveTask:rename(groovy.lang.Closure)">rename</link>(closure)</literal></td><td><para>Renames a source file. The closure will be called with a single parameter, the name of the file.
The closure should return a String object with a new target name. The closure may return null,
in which case the original name will be used.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.AbstractArchiveTask:rename(java.lang.String, java.lang.String)">rename</link>(sourceRegEx, replaceWith)</literal></td><td><para>Renames files based on a regular expression.  Uses java.util.regex type of regular expressions.  Note that the
replace string should use the '$1' syntax to refer to capture groups in the source regular expression.  Files
that do not match the source regular expression will be copied with the original name.

</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.AbstractArchiveTask:rename(java.util.regex.Pattern, java.lang.String)">rename</link>(sourceRegEx, replaceWith)</literal></td><td><para>Renames files based on a regular expression. See <apilink class="org.gradle.api.file.CopyProcessingSpec" method="rename(java.lang.String, java.lang.String)"/>.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.AbstractArchiveTask:rename(org.gradle.api.Transformer)">rename</link>(renamer)</literal></td><td><para>Renames a source file. The function will be called with a single parameter, the name of the file.
The function should return a new target name. The function may return null,
in which case the original name will be used.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.AbstractArchiveTask:with(org.gradle.api.file.CopySpec[])">with</link>(sourceSpecs)</literal></td><td><para>Adds the given specs as a child of this spec.

</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.tasks.bundling.AbstractArchiveTask:archiveAppendix" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>archiveAppendix</literal></title><para>The appendix part of the archive name, if any.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>""</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.bundling.AbstractArchiveTask:archiveBaseName" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>archiveBaseName</literal></title><para>The base name of the archive.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>project.base.archivesBaseName</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.bundling.AbstractArchiveTask:archiveClassifier" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>archiveClassifier</literal></title><para>The classifier part of the archive name, if any.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>""</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.bundling.AbstractArchiveTask:archiveExtension" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>archiveExtension</literal></title><para>The extension part of the archive name.</para></section><section id="org.gradle.api.tasks.bundling.AbstractArchiveTask:archiveFile" role="detail"><title><classname><apilink class="org.gradle.api.provider.Provider"/>&lt;<apilink class="org.gradle.api.file.RegularFile"/>&gt;</classname> <literal>archiveFile</literal></title><para>The <apilink class="org.gradle.api.file.RegularFile"/> where the archive is constructed.
The path is simply the <literal>destinationDirectory</literal> plus the <literal>archiveFileName</literal>.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal><replaceable>${destinationDirectory}</replaceable>/<replaceable>${archiveFileName}</replaceable></literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.bundling.AbstractArchiveTask:archiveFileName" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>archiveFileName</literal></title><para>The archive name. If the name has not been explicitly set, the pattern for the name is:
<literal>[archiveBaseName]-[archiveAppendix]-[archiveVersion]-[archiveClassifier].[archiveExtension]</literal></para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal><replaceable>${archiveBaseName}</replaceable>-<replaceable>${archiveAppendix}</replaceable>-<replaceable>${archiveVersion}</replaceable>-<replaceable>${archiveClassifier}</replaceable>.<replaceable>${archiveExtension}</replaceable></literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.bundling.AbstractArchiveTask:archiveVersion" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>archiveVersion</literal></title><para>The version part of the archive name.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>project.version</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.bundling.AbstractArchiveTask:caseSensitive" role="detail"><title><classname>boolean</classname> <literal>caseSensitive</literal></title><para>Specifies whether case-sensitive pattern matching should be used.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>true</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.bundling.AbstractArchiveTask:destinationDirectory" role="detail"><title><apilink class="org.gradle.api.file.DirectoryProperty"/> <literal>destinationDirectory</literal></title><para>The directory where the archive will be placed.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>project.distsDir</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.bundling.AbstractArchiveTask:dirPermissions" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<apilink class="org.gradle.api.file.ConfigurableFilePermissions"/>&gt;</classname> <literal>dirPermissions</literal></title><para>Property for querying and configuring directory access permissions.
If the property has no value set, that means that existing permissions are preserved.
It is dependent on the copy action implementation whether these permissions will actually be applied.

For details see <apilink class="org.gradle.api.file.ConfigurableFilePermissions"/>.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>null</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.bundling.AbstractArchiveTask:duplicatesStrategy" role="detail"><title><apilink class="org.gradle.api.file.DuplicatesStrategy"/> <literal>duplicatesStrategy</literal></title><para>The strategy to use when trying to copy more than one file to the same destination.
</para><para>
The value can be set with a case insensitive string of the enum value (e.g. <literal>'exclude'</literal> for <apilink class="org.gradle.api.file.DuplicatesStrategy" method="EXCLUDE"/>).
</para><para>
This strategy can be overridden for individual files by using <apilink class="org.gradle.api.file.CopySpec" method="eachFile(org.gradle.api.Action)"/> or <apilink class="org.gradle.api.file.CopySpec" method="filesMatching(java.lang.String, org.gradle.api.Action)"/>.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>DuplicatesStrategy.INHERIT</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.bundling.AbstractArchiveTask:excludes" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>excludes</literal></title><para>The set of exclude patterns.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>[]</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.bundling.AbstractArchiveTask:filePermissions" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<apilink class="org.gradle.api.file.ConfigurableFilePermissions"/>&gt;</classname> <literal>filePermissions</literal></title><para>Property for querying and configuring file access permissions.
If the property has no value set, that means that existing permissions are preserved.
It is dependent on the copy action implementation whether these permissions will actually be applied.

For details see <apilink class="org.gradle.api.file.ConfigurableFilePermissions"/>.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>null</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.bundling.AbstractArchiveTask:includeEmptyDirs" role="detail"><title><classname>boolean</classname> <literal>includeEmptyDirs</literal></title><para>Tells if empty target directories will be included in the copy.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>true</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.bundling.AbstractArchiveTask:includes" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>includes</literal></title><para>The set of include patterns.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>[]</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.bundling.AbstractArchiveTask:preserveFileTimestamps" role="detail"><title><classname>boolean</classname> <literal>preserveFileTimestamps</literal></title><para>Specifies whether file timestamps should be preserved in the archive.
</para><para>
If <literal>false</literal> this ensures that archive entries have the same time for builds between different machines, Java versions and operating systems.
</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>true</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.bundling.AbstractArchiveTask:reproducibleFileOrder" role="detail"><title><classname>boolean</classname> <literal>reproducibleFileOrder</literal></title><para>Specifies whether to enforce a reproducible file order when reading files from directories.
</para><para>
Gradle will then walk the directories on disk which are part of this archive in a reproducible order
independent of file systems and operating systems.
This helps Gradle reliably produce byte-for-byte reproducible archives.
</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>false</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.bundling.AbstractArchiveTask:source" role="detail"><title><apilink class="org.gradle.api.file.FileCollection"/> <literal>source</literal> (read-only)</title><para>The source files for this task.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>[]</literal></seg></seglistitem></segmentedlist></section></section><section><title>Method details</title><section id="org.gradle.api.tasks.bundling.AbstractArchiveTask:eachFile(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>eachFile</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> closure)</title><para>Adds an action to be applied to each file as it about to be copied into its destination. The given closure is
called with a <apilink class="org.gradle.api.file.FileCopyDetails"/> as its parameter. Actions are executed in the order
added, and are inherited from the parent spec.</para></section><section id="org.gradle.api.tasks.bundling.AbstractArchiveTask:eachFile(org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>eachFile</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.FileCopyDetails"/>&gt;</classname> action)</title><para>Adds an action to be applied to each file as it is about to be copied into its destination. The action can change
the destination path of the file, filter the contents of the file, or exclude the file from the result entirely.
Actions are executed in the order added, and are inherited from the parent spec.</para></section><section id="org.gradle.api.tasks.bundling.AbstractArchiveTask:exclude(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>exclude</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> excludeSpec)</title><para>Adds an exclude spec. This method may be called multiple times to append new specs.The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter. The closure should return true or false. Example:

</para><para><programlisting language="java">
copySpec {
  from 'source'
  into 'destination'
  //an example of excluding files from certain configuration:
  exclude { it.file in configurations.someConf.files }
}
</programlisting></para><para>

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.api.tasks.bundling.AbstractArchiveTask:exclude(java.lang.Iterable)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>exclude</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> excludes)</title><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.api.tasks.bundling.AbstractArchiveTask:exclude(java.lang.String[])" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>exclude</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>...</classname> excludes)</title><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.api.tasks.bundling.AbstractArchiveTask:exclude(org.gradle.api.specs.Spec)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>exclude</literal>(<classname><apilink class="org.gradle.api.specs.Spec"/>&lt;<apilink class="org.gradle.api.file.FileTreeElement"/>&gt;</classname> excludeSpec)</title><para>Adds an exclude spec. This method may be called multiple times to append new specs.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.api.tasks.bundling.AbstractArchiveTask:expand(java.util.Map)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>expand</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, ?&gt;</classname> properties)</title><para>Expands property references in each file as it is copied. More specifically, each file is transformed using
Groovy's <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/text/SimpleTemplateEngine.html"><classname>SimpleTemplateEngine</classname></ulink>. This means you can use simple property references, such as
<literal>$property</literal> or <literal>${property}</literal> in the file. You can also include arbitrary Groovy code in the
file, such as <literal>${version ?: 'unknown'}</literal> or <literal>${classpath*.name.join(' ')}</literal>
</para><para>
Note that all escape sequences (<literal>\n</literal>, <literal>\t</literal>, <literal>\\</literal>, etc) are converted to the symbols
they represent, so, for example, <literal>\n</literal> becomes newline. If this is undesirable then <apilink class="org.gradle.api.file.ContentFilterable" method="expand(java.util.Map, org.gradle.api.Action)"/>
should be used to disable this behavior.</para></section><section id="org.gradle.api.tasks.bundling.AbstractArchiveTask:expand(java.util.Map, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>expand</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, ?&gt;</classname> properties, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.ExpandDetails"/>&gt;</classname> action)</title><para>Expands property references in each file as it is copied. More specifically, each file is transformed using
Groovy's <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/text/SimpleTemplateEngine.html"><classname>SimpleTemplateEngine</classname></ulink>. This means you can use simple property references, such as
<literal>$property</literal> or <literal>${property}</literal> in the file. You can also include arbitrary Groovy code in the
file, such as <literal>${version ?: 'unknown'}</literal> or <literal>${classpath*.name.join(' ')}</literal>. The template
engine can be configured with the provided action.
</para><para>
Note that by default all escape sequences (<literal>\n</literal>, <literal>\t</literal>, <literal>\\</literal>, etc) are converted to the symbols
they represent, so, for example, <literal>\n</literal> becomes newline. This behavior is controlled by
<apilink class="org.gradle.api.file.ExpandDetails" method="getEscapeBackslash()"/> property. It should be set to <literal>true</literal> to disable escape sequences
conversion:
</para><para><programlisting language="java">
 expand(one: '1', two: 2) {
     escapeBackslash = true
 }
</programlisting></para></section><section id="org.gradle.api.tasks.bundling.AbstractArchiveTask:filesMatching(java.lang.Iterable, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>filesMatching</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> patterns, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.FileCopyDetails"/>&gt;</classname> action)</title><para>Configure the <apilink class="org.gradle.api.file.FileCopyDetails"/> for each file whose path matches any of the specified Ant-style patterns.
This is equivalent to using eachFile() and selectively applying a configuration based on the file's path.</para></section><section id="org.gradle.api.tasks.bundling.AbstractArchiveTask:filesMatching(java.lang.String, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>filesMatching</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> pattern, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.FileCopyDetails"/>&gt;</classname> action)</title><para>Configure the <apilink class="org.gradle.api.file.FileCopyDetails"/> for each file whose path matches the specified Ant-style pattern.
This is equivalent to using eachFile() and selectively applying a configuration based on the file's path.</para></section><section id="org.gradle.api.tasks.bundling.AbstractArchiveTask:filesNotMatching(java.lang.Iterable, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>filesNotMatching</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> patterns, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.FileCopyDetails"/>&gt;</classname> action)</title><para>Configure the <apilink class="org.gradle.api.file.FileCopyDetails"/> for each file whose path does not match any of the specified
Ant-style patterns. This is equivalent to using eachFile() and selectively applying a configuration based on the
file's path.</para></section><section id="org.gradle.api.tasks.bundling.AbstractArchiveTask:filesNotMatching(java.lang.String, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>filesNotMatching</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> pattern, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.FileCopyDetails"/>&gt;</classname> action)</title><para>Configure the <apilink class="org.gradle.api.file.FileCopyDetails"/> for each file whose path does not match the specified
Ant-style pattern. This is equivalent to using eachFile() and selectively applying a configuration based on the
file's path.</para></section><section id="org.gradle.api.tasks.bundling.AbstractArchiveTask:filter(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>filter</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> closure)</title><para>Adds a content filter based on the provided closure.  The Closure will be called with each line (stripped of line
endings) and should return a String to replace the line or <literal>null</literal> to remove the line.  If every line is
removed, the result will be an empty file, not an absent one.</para></section><section id="org.gradle.api.tasks.bundling.AbstractArchiveTask:filter(java.lang.Class)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>filter</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html"><classname>Class</classname></ulink>&lt;? extends <ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/FilterReader.html"><classname>FilterReader</classname></ulink>&gt;</classname> filterType)</title><para>Adds a content filter to be used during the copy.  Multiple calls to filter, add additional filters to the
filter chain.  Each filter should implement <literal>java.io.FilterReader</literal>. Include <literal>org.apache.tools.ant.filters.*</literal> for access to all the standard Ant filters.</para><para> Examples:
</para><para><programlisting language="java">
   filter(StripJavaComments)
   filter(com.mycompany.project.CustomFilter)
</programlisting></para></section><section id="org.gradle.api.tasks.bundling.AbstractArchiveTask:filter(java.util.Map, java.lang.Class)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>filter</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, ?&gt;</classname> properties, <classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html"><classname>Class</classname></ulink>&lt;? extends <ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/FilterReader.html"><classname>FilterReader</classname></ulink>&gt;</classname> filterType)</title><para>Adds a content filter to be used during the copy.  Multiple calls to filter, add additional filters to the
filter chain.  Each filter should implement <literal>java.io.FilterReader</literal>. Include <literal>org.apache.tools.ant.filters.*</literal> for access to all the standard Ant filters.</para><para>Filter properties may be specified using groovy map syntax.</para><para> Examples:
</para><para><programlisting language="java">
   filter(HeadFilter, lines:25, skip:2)
   filter(ReplaceTokens, tokens:[copyright:'2009', version:'2.3.1'])
</programlisting></para></section><section id="org.gradle.api.tasks.bundling.AbstractArchiveTask:filter(org.gradle.api.Transformer)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>filter</literal>(<classname><apilink class="org.gradle.api.Transformer"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> transformer)</title><para>Adds a content filter based on the provided transformer.  The Closure will be called with each line (stripped of line
endings) and should return a String to replace the line or <literal>null</literal> to remove the line.  If every line is
removed, the result will be an empty file, not an absent one.</para></section><section id="org.gradle.api.tasks.bundling.AbstractArchiveTask:from(java.lang.Object, groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>from</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> sourcePath, <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> c)</title><para>Specifies the source files or directories for a copy and creates a child <literal>CopySourceSpec</literal>. The given source
path is evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/> .</para></section><section id="org.gradle.api.tasks.bundling.AbstractArchiveTask:from(java.lang.Object, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>from</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> sourcePath, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.CopySpec"/>&gt;</classname> configureAction)</title><para>Specifies the source files or directories for a copy and creates a child <literal>CopySpec</literal>. The given source
path is evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/> .</para></section><section id="org.gradle.api.tasks.bundling.AbstractArchiveTask:from(java.lang.Object[])" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>from</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink>...</classname> sourcePaths)</title><para>Specifies source files or directories for a copy. The given paths are evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/>.</para></section><section id="org.gradle.api.tasks.bundling.AbstractArchiveTask:include(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>include</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> includeSpec)</title><para>Adds an include spec. This method may be called multiple times to append new specs. The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></section><section id="org.gradle.api.tasks.bundling.AbstractArchiveTask:include(java.lang.Iterable)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>include</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> includes)</title><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></section><section id="org.gradle.api.tasks.bundling.AbstractArchiveTask:include(java.lang.String[])" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>include</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>...</classname> includes)</title><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></section><section id="org.gradle.api.tasks.bundling.AbstractArchiveTask:include(org.gradle.api.specs.Spec)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>include</literal>(<classname><apilink class="org.gradle.api.specs.Spec"/>&lt;<apilink class="org.gradle.api.file.FileTreeElement"/>&gt;</classname> includeSpec)</title><para>Adds an include spec. This method may be called multiple times to append new specs.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></section><section id="org.gradle.api.tasks.bundling.AbstractArchiveTask:into(java.lang.Object)" role="detail"><title><apilink class="org.gradle.api.tasks.bundling.AbstractArchiveTask"/> <literal>into</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> destPath)</title><para>Specifies the destination directory *inside* the archive for the files.
The destination is evaluated as per <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/>.
Don't mix it up with <apilink class="org.gradle.api.tasks.bundling.AbstractArchiveTask" method="getDestinationDirectory()"/> which specifies the output directory for the archive.</para></section><section id="org.gradle.api.tasks.bundling.AbstractArchiveTask:into(java.lang.Object, groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.bundling.AbstractArchiveTask"/> <literal>into</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> destPath, <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> configureClosure)</title><para>Creates and configures a child <literal>CopySpec</literal> with a destination directory *inside* the archive for the files.
The destination is evaluated as per <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/>.
Don't mix it up with <apilink class="org.gradle.api.tasks.bundling.AbstractArchiveTask" method="getDestinationDirectory()"/> which specifies the output directory for the archive.</para></section><section id="org.gradle.api.tasks.bundling.AbstractArchiveTask:into(java.lang.Object, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.file.CopySpec"/> <literal>into</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> destPath, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.CopySpec"/>&gt;</classname> copySpec)</title><para>Creates and configures a child <literal>CopySpec</literal> with a destination directory *inside* the archive for the files.
The destination is evaluated as per <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/>.
Don't mix it up with <apilink class="org.gradle.api.tasks.bundling.AbstractArchiveTask" method="getDestinationDirectory()"/> which specifies the output directory for the archive.</para></section><section id="org.gradle.api.tasks.bundling.AbstractArchiveTask:rename(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>rename</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> closure)</title><para>Renames a source file. The closure will be called with a single parameter, the name of the file.
The closure should return a String object with a new target name. The closure may return null,
in which case the original name will be used.</para></section><section id="org.gradle.api.tasks.bundling.AbstractArchiveTask:rename(java.lang.String, java.lang.String)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>rename</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> sourceRegEx, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> replaceWith)</title><para>Renames files based on a regular expression.  Uses java.util.regex type of regular expressions.  Note that the
replace string should use the '$1' syntax to refer to capture groups in the source regular expression.  Files
that do not match the source regular expression will be copied with the original name.

</para><para> Example:
</para><para><programlisting language="java">
rename '(.*)_OEM_BLUE_(.*)', '$1$2'
</programlisting></para><para>
would map the file 'style_OEM_BLUE_.css' to 'style.css'</para></section><section id="org.gradle.api.tasks.bundling.AbstractArchiveTask:rename(java.util.regex.Pattern, java.lang.String)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>rename</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html"><classname>Pattern</classname></ulink> sourceRegEx, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> replaceWith)</title><para>Renames files based on a regular expression. See <apilink class="org.gradle.api.file.CopyProcessingSpec" method="rename(java.lang.String, java.lang.String)"/>.</para></section><section id="org.gradle.api.tasks.bundling.AbstractArchiveTask:rename(org.gradle.api.Transformer)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>rename</literal>(<classname><apilink class="org.gradle.api.Transformer"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> renamer)</title><para>Renames a source file. The function will be called with a single parameter, the name of the file.
The function should return a new target name. The function may return null,
in which case the original name will be used.</para></section><section id="org.gradle.api.tasks.bundling.AbstractArchiveTask:with(org.gradle.api.file.CopySpec[])" role="detail"><title><apilink class="org.gradle.api.file.CopySpec"/> <literal>with</literal>(<classname><apilink class="org.gradle.api.file.CopySpec"/>...</classname> sourceSpecs)</title><para>Adds the given specs as a child of this spec.

</para><para><programlisting language="java">
def contentSpec = copySpec {
  from("content") {
    include "**/*.txt"
  }
}

task copy(type: Copy) {
  into "$buildDir/copy"
  with contentSpec
}
</programlisting></para></section></section></chapter><chapter id="org.gradle.api.tasks.bundling.Zip"><title>Zip</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.tasks.bundling.Zip" style="javadoc"/></seg></seglistitem></segmentedlist><segmentedlist><segtitle>Known Subtypes</segtitle><seglistitem><seg><simplelist columns="1" type="vert"><member><apilink class="org.gradle.jvm.tasks.Jar"/></member></simplelist></seg></seglistitem></segmentedlist><para>Assembles a ZIP archive.

The default is to compress the contents of the zip.</para><section><title>Properties</title><table><title>Properties - Zip</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.tasks.bundling.Zip:archiveAppendix"><literal>archiveAppendix</literal></link></td><td><para>The appendix part of the archive name, if any.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.bundling.Zip:archiveBaseName"><literal>archiveBaseName</literal></link></td><td><para>The base name of the archive.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.bundling.Zip:archiveClassifier"><literal>archiveClassifier</literal></link></td><td><para>The classifier part of the archive name, if any.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.bundling.Zip:archiveExtension"><literal>archiveExtension</literal></link></td><td><para>The extension part of the archive name.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.bundling.Zip:archiveFile"><literal>archiveFile</literal></link></td><td><para>The <apilink class="org.gradle.api.file.RegularFile"/> where the archive is constructed.
The path is simply the <literal>destinationDirectory</literal> plus the <literal>archiveFileName</literal>.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.bundling.Zip:archiveFileName"><literal>archiveFileName</literal></link></td><td><para>The archive name. If the name has not been explicitly set, the pattern for the name is:
<literal>[archiveBaseName]-[archiveAppendix]-[archiveVersion]-[archiveClassifier].[archiveExtension]</literal></para></td></tr><tr><td><link linkend="org.gradle.api.tasks.bundling.Zip:archiveVersion"><literal>archiveVersion</literal></link></td><td><para>The version part of the archive name.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.bundling.Zip:caseSensitive"><literal>caseSensitive</literal></link></td><td><para>Specifies whether case-sensitive pattern matching should be used.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.bundling.Zip:destinationDirectory"><literal>destinationDirectory</literal></link></td><td><para>The directory where the archive will be placed.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.bundling.Zip:dirPermissions"><literal>dirPermissions</literal></link></td><td><para>Property for querying and configuring directory access permissions.
If the property has no value set, that means that existing permissions are preserved.
It is dependent on the copy action implementation whether these permissions will actually be applied.

For details see <apilink class="org.gradle.api.file.ConfigurableFilePermissions"/>.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.bundling.Zip:duplicatesStrategy"><literal>duplicatesStrategy</literal></link></td><td><para>The strategy to use when trying to copy more than one file to the same destination.
</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.bundling.Zip:entryCompression"><literal>entryCompression</literal></link></td><td><para>The compression level of the entries of the archive. If set to <apilink class="org.gradle.api.tasks.bundling.ZipEntryCompression" method="DEFLATED"/> (the default), each entry is
compressed using the DEFLATE algorithm. If set to <apilink class="org.gradle.api.tasks.bundling.ZipEntryCompression" method="STORED"/> the entries of the archive are left uncompressed.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.bundling.Zip:excludes"><literal>excludes</literal></link></td><td><para>The set of exclude patterns.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.bundling.Zip:filePermissions"><literal>filePermissions</literal></link></td><td><para>Property for querying and configuring file access permissions.
If the property has no value set, that means that existing permissions are preserved.
It is dependent on the copy action implementation whether these permissions will actually be applied.

For details see <apilink class="org.gradle.api.file.ConfigurableFilePermissions"/>.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.bundling.Zip:includeEmptyDirs"><literal>includeEmptyDirs</literal></link></td><td><para>Tells if empty target directories will be included in the copy.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.bundling.Zip:includes"><literal>includes</literal></link></td><td><para>The set of include patterns.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.bundling.Zip:metadataCharset"><literal>metadataCharset</literal></link></td><td><para>The character set used to encode ZIP metadata like file names.
Defaults to the platform's default character set.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.bundling.Zip:preserveFileTimestamps"><literal>preserveFileTimestamps</literal></link></td><td><para>Specifies whether file timestamps should be preserved in the archive.
</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.bundling.Zip:reproducibleFileOrder"><literal>reproducibleFileOrder</literal></link></td><td><para>Specifies whether to enforce a reproducible file order when reading files from directories.
</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.bundling.Zip:source"><literal>source</literal></link></td><td><para>The source files for this task.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.bundling.Zip:zip64"><literal>zip64</literal></link></td><td><para>Whether the zip can contain more than 65535 files and/or support files greater than 4GB in size.
</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - Zip</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.Zip:eachFile(groovy.lang.Closure)">eachFile</link>(closure)</literal></td><td><para>Adds an action to be applied to each file as it about to be copied into its destination. The given closure is
called with a <apilink class="org.gradle.api.file.FileCopyDetails"/> as its parameter. Actions are executed in the order
added, and are inherited from the parent spec.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.Zip:eachFile(org.gradle.api.Action)">eachFile</link>(action)</literal></td><td><para>Adds an action to be applied to each file as it is about to be copied into its destination. The action can change
the destination path of the file, filter the contents of the file, or exclude the file from the result entirely.
Actions are executed in the order added, and are inherited from the parent spec.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.Zip:exclude(groovy.lang.Closure)">exclude</link>(excludeSpec)</literal></td><td><para>Adds an exclude spec. This method may be called multiple times to append new specs.The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter. The closure should return true or false. Example:

</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.Zip:exclude(java.lang.Iterable)">exclude</link>(excludes)</literal></td><td><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.Zip:exclude(java.lang.String[])">exclude</link>(excludes)</literal></td><td><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.Zip:exclude(org.gradle.api.specs.Spec)">exclude</link>(excludeSpec)</literal></td><td><para>Adds an exclude spec. This method may be called multiple times to append new specs.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.Zip:expand(java.util.Map)">expand</link>(properties)</literal></td><td><para>Expands property references in each file as it is copied. More specifically, each file is transformed using
Groovy's <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/text/SimpleTemplateEngine.html"><classname>SimpleTemplateEngine</classname></ulink>. This means you can use simple property references, such as
<literal>$property</literal> or <literal>${property}</literal> in the file. You can also include arbitrary Groovy code in the
file, such as <literal>${version ?: 'unknown'}</literal> or <literal>${classpath*.name.join(' ')}</literal>
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.Zip:expand(java.util.Map, org.gradle.api.Action)">expand</link>(properties, action)</literal></td><td><para>Expands property references in each file as it is copied. More specifically, each file is transformed using
Groovy's <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/text/SimpleTemplateEngine.html"><classname>SimpleTemplateEngine</classname></ulink>. This means you can use simple property references, such as
<literal>$property</literal> or <literal>${property}</literal> in the file. You can also include arbitrary Groovy code in the
file, such as <literal>${version ?: 'unknown'}</literal> or <literal>${classpath*.name.join(' ')}</literal>. The template
engine can be configured with the provided action.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.Zip:filesMatching(java.lang.Iterable, org.gradle.api.Action)">filesMatching</link>(patterns, action)</literal></td><td><para>Configure the <apilink class="org.gradle.api.file.FileCopyDetails"/> for each file whose path matches any of the specified Ant-style patterns.
This is equivalent to using eachFile() and selectively applying a configuration based on the file's path.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.Zip:filesMatching(java.lang.String, org.gradle.api.Action)">filesMatching</link>(pattern, action)</literal></td><td><para>Configure the <apilink class="org.gradle.api.file.FileCopyDetails"/> for each file whose path matches the specified Ant-style pattern.
This is equivalent to using eachFile() and selectively applying a configuration based on the file's path.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.Zip:filesNotMatching(java.lang.Iterable, org.gradle.api.Action)">filesNotMatching</link>(patterns, action)</literal></td><td><para>Configure the <apilink class="org.gradle.api.file.FileCopyDetails"/> for each file whose path does not match any of the specified
Ant-style patterns. This is equivalent to using eachFile() and selectively applying a configuration based on the
file's path.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.Zip:filesNotMatching(java.lang.String, org.gradle.api.Action)">filesNotMatching</link>(pattern, action)</literal></td><td><para>Configure the <apilink class="org.gradle.api.file.FileCopyDetails"/> for each file whose path does not match the specified
Ant-style pattern. This is equivalent to using eachFile() and selectively applying a configuration based on the
file's path.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.Zip:filter(groovy.lang.Closure)">filter</link>(closure)</literal></td><td><para>Adds a content filter based on the provided closure.  The Closure will be called with each line (stripped of line
endings) and should return a String to replace the line or <literal>null</literal> to remove the line.  If every line is
removed, the result will be an empty file, not an absent one.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.Zip:filter(java.lang.Class)">filter</link>(filterType)</literal></td><td><para>Adds a content filter to be used during the copy.  Multiple calls to filter, add additional filters to the
filter chain.  Each filter should implement <literal>java.io.FilterReader</literal>. Include <literal>org.apache.tools.ant.filters.*</literal> for access to all the standard Ant filters.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.Zip:filter(java.util.Map, java.lang.Class)">filter</link>(properties, filterType)</literal></td><td><para>Adds a content filter to be used during the copy.  Multiple calls to filter, add additional filters to the
filter chain.  Each filter should implement <literal>java.io.FilterReader</literal>. Include <literal>org.apache.tools.ant.filters.*</literal> for access to all the standard Ant filters.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.Zip:filter(org.gradle.api.Transformer)">filter</link>(transformer)</literal></td><td><para>Adds a content filter based on the provided transformer.  The Closure will be called with each line (stripped of line
endings) and should return a String to replace the line or <literal>null</literal> to remove the line.  If every line is
removed, the result will be an empty file, not an absent one.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.Zip:from(java.lang.Object, groovy.lang.Closure)">from</link>(sourcePath, c)</literal></td><td><para>Specifies the source files or directories for a copy and creates a child <literal>CopySourceSpec</literal>. The given source
path is evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/> .</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.Zip:from(java.lang.Object, org.gradle.api.Action)">from</link>(sourcePath, configureAction)</literal></td><td><para>Specifies the source files or directories for a copy and creates a child <literal>CopySpec</literal>. The given source
path is evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/> .</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.Zip:from(java.lang.Object[])">from</link>(sourcePaths)</literal></td><td><para>Specifies source files or directories for a copy. The given paths are evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/>.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.Zip:include(groovy.lang.Closure)">include</link>(includeSpec)</literal></td><td><para>Adds an include spec. This method may be called multiple times to append new specs. The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.Zip:include(java.lang.Iterable)">include</link>(includes)</literal></td><td><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.Zip:include(java.lang.String[])">include</link>(includes)</literal></td><td><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.Zip:include(org.gradle.api.specs.Spec)">include</link>(includeSpec)</literal></td><td><para>Adds an include spec. This method may be called multiple times to append new specs.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.Zip:into(java.lang.Object)">into</link>(destPath)</literal></td><td><para>Specifies the destination directory *inside* the archive for the files.
The destination is evaluated as per <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/>.
Don't mix it up with <apilink class="org.gradle.api.tasks.bundling.AbstractArchiveTask" method="getDestinationDirectory()"/> which specifies the output directory for the archive.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.Zip:into(java.lang.Object, groovy.lang.Closure)">into</link>(destPath, configureClosure)</literal></td><td><para>Creates and configures a child <literal>CopySpec</literal> with a destination directory *inside* the archive for the files.
The destination is evaluated as per <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/>.
Don't mix it up with <apilink class="org.gradle.api.tasks.bundling.AbstractArchiveTask" method="getDestinationDirectory()"/> which specifies the output directory for the archive.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.Zip:into(java.lang.Object, org.gradle.api.Action)">into</link>(destPath, copySpec)</literal></td><td><para>Creates and configures a child <literal>CopySpec</literal> with a destination directory *inside* the archive for the files.
The destination is evaluated as per <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/>.
Don't mix it up with <apilink class="org.gradle.api.tasks.bundling.AbstractArchiveTask" method="getDestinationDirectory()"/> which specifies the output directory for the archive.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.Zip:rename(groovy.lang.Closure)">rename</link>(closure)</literal></td><td><para>Renames a source file. The closure will be called with a single parameter, the name of the file.
The closure should return a String object with a new target name. The closure may return null,
in which case the original name will be used.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.Zip:rename(java.lang.String, java.lang.String)">rename</link>(sourceRegEx, replaceWith)</literal></td><td><para>Renames files based on a regular expression.  Uses java.util.regex type of regular expressions.  Note that the
replace string should use the '$1' syntax to refer to capture groups in the source regular expression.  Files
that do not match the source regular expression will be copied with the original name.

</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.Zip:rename(java.util.regex.Pattern, java.lang.String)">rename</link>(sourceRegEx, replaceWith)</literal></td><td><para>Renames files based on a regular expression. See <apilink class="org.gradle.api.file.CopyProcessingSpec" method="rename(java.lang.String, java.lang.String)"/>.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.Zip:rename(org.gradle.api.Transformer)">rename</link>(renamer)</literal></td><td><para>Renames a source file. The function will be called with a single parameter, the name of the file.
The function should return a new target name. The function may return null,
in which case the original name will be used.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.Zip:with(org.gradle.api.file.CopySpec[])">with</link>(sourceSpecs)</literal></td><td><para>Adds the given specs as a child of this spec.

</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.tasks.bundling.Zip:archiveAppendix" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>archiveAppendix</literal></title><para>The appendix part of the archive name, if any.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>""</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.bundling.Zip:archiveBaseName" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>archiveBaseName</literal></title><para>The base name of the archive.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>project.base.archivesBaseName</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.bundling.Zip:archiveClassifier" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>archiveClassifier</literal></title><para>The classifier part of the archive name, if any.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>""</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.bundling.Zip:archiveExtension" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>archiveExtension</literal></title><para>The extension part of the archive name.</para></section><section id="org.gradle.api.tasks.bundling.Zip:archiveFile" role="detail"><title><classname><apilink class="org.gradle.api.provider.Provider"/>&lt;<apilink class="org.gradle.api.file.RegularFile"/>&gt;</classname> <literal>archiveFile</literal></title><para>The <apilink class="org.gradle.api.file.RegularFile"/> where the archive is constructed.
The path is simply the <literal>destinationDirectory</literal> plus the <literal>archiveFileName</literal>.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal><replaceable>${destinationDirectory}</replaceable>/<replaceable>${archiveFileName}</replaceable></literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.bundling.Zip:archiveFileName" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>archiveFileName</literal></title><para>The archive name. If the name has not been explicitly set, the pattern for the name is:
<literal>[archiveBaseName]-[archiveAppendix]-[archiveVersion]-[archiveClassifier].[archiveExtension]</literal></para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal><replaceable>${archiveBaseName}</replaceable>-<replaceable>${archiveAppendix}</replaceable>-<replaceable>${archiveVersion}</replaceable>-<replaceable>${archiveClassifier}</replaceable>.<replaceable>${archiveExtension}</replaceable></literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.bundling.Zip:archiveVersion" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>archiveVersion</literal></title><para>The version part of the archive name.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>project.version</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.bundling.Zip:caseSensitive" role="detail"><title><classname>boolean</classname> <literal>caseSensitive</literal></title><para>Specifies whether case-sensitive pattern matching should be used.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>true</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.bundling.Zip:destinationDirectory" role="detail"><title><apilink class="org.gradle.api.file.DirectoryProperty"/> <literal>destinationDirectory</literal></title><para>The directory where the archive will be placed.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>project.distsDir</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.bundling.Zip:dirPermissions" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<apilink class="org.gradle.api.file.ConfigurableFilePermissions"/>&gt;</classname> <literal>dirPermissions</literal></title><para>Property for querying and configuring directory access permissions.
If the property has no value set, that means that existing permissions are preserved.
It is dependent on the copy action implementation whether these permissions will actually be applied.

For details see <apilink class="org.gradle.api.file.ConfigurableFilePermissions"/>.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>null</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.bundling.Zip:duplicatesStrategy" role="detail"><title><apilink class="org.gradle.api.file.DuplicatesStrategy"/> <literal>duplicatesStrategy</literal></title><para>The strategy to use when trying to copy more than one file to the same destination.
</para><para>
The value can be set with a case insensitive string of the enum value (e.g. <literal>'exclude'</literal> for <apilink class="org.gradle.api.file.DuplicatesStrategy" method="EXCLUDE"/>).
</para><para>
This strategy can be overridden for individual files by using <apilink class="org.gradle.api.file.CopySpec" method="eachFile(org.gradle.api.Action)"/> or <apilink class="org.gradle.api.file.CopySpec" method="filesMatching(java.lang.String, org.gradle.api.Action)"/>.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>DuplicatesStrategy.INHERIT</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.bundling.Zip:entryCompression" role="detail"><title><apilink class="org.gradle.api.tasks.bundling.ZipEntryCompression"/> <literal>entryCompression</literal></title><para>The compression level of the entries of the archive. If set to <apilink class="org.gradle.api.tasks.bundling.ZipEntryCompression" method="DEFLATED"/> (the default), each entry is
compressed using the DEFLATE algorithm. If set to <apilink class="org.gradle.api.tasks.bundling.ZipEntryCompression" method="STORED"/> the entries of the archive are left uncompressed.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>ZipEntryCompression.DEFLATED</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.bundling.Zip:excludes" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>excludes</literal></title><para>The set of exclude patterns.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>[]</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.bundling.Zip:filePermissions" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<apilink class="org.gradle.api.file.ConfigurableFilePermissions"/>&gt;</classname> <literal>filePermissions</literal></title><para>Property for querying and configuring file access permissions.
If the property has no value set, that means that existing permissions are preserved.
It is dependent on the copy action implementation whether these permissions will actually be applied.

For details see <apilink class="org.gradle.api.file.ConfigurableFilePermissions"/>.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>null</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.bundling.Zip:includeEmptyDirs" role="detail"><title><classname>boolean</classname> <literal>includeEmptyDirs</literal></title><para>Tells if empty target directories will be included in the copy.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>true</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.bundling.Zip:includes" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>includes</literal></title><para>The set of include patterns.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>[]</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.bundling.Zip:metadataCharset" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>metadataCharset</literal></title><para>The character set used to encode ZIP metadata like file names.
Defaults to the platform's default character set.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg>Platform default encoding</seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.bundling.Zip:preserveFileTimestamps" role="detail"><title><classname>boolean</classname> <literal>preserveFileTimestamps</literal></title><para>Specifies whether file timestamps should be preserved in the archive.
</para><para>
If <literal>false</literal> this ensures that archive entries have the same time for builds between different machines, Java versions and operating systems.
</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>true</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.bundling.Zip:reproducibleFileOrder" role="detail"><title><classname>boolean</classname> <literal>reproducibleFileOrder</literal></title><para>Specifies whether to enforce a reproducible file order when reading files from directories.
</para><para>
Gradle will then walk the directories on disk which are part of this archive in a reproducible order
independent of file systems and operating systems.
This helps Gradle reliably produce byte-for-byte reproducible archives.
</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>false</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.bundling.Zip:source" role="detail"><title><apilink class="org.gradle.api.file.FileCollection"/> <literal>source</literal> (read-only)</title><para>The source files for this task.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>[]</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.bundling.Zip:zip64" role="detail"><title><classname>boolean</classname> <literal>zip64</literal></title><para>Whether the zip can contain more than 65535 files and/or support files greater than 4GB in size.
</para><para>
The standard zip format has hard limits on file size and count.
The <ulink url="http://en.wikipedia.org/wiki/Zip_(file_format)#ZIP64">Zip64 format extension</ulink>
practically removes these limits and is therefore required for building large zips.
</para><para>
However, not all Zip readers support the Zip64 extensions.
Notably, the <ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/zip/ZipInputStream.html"><classname>ZipInputStream</classname></ulink> JDK class does not support Zip64 for versions earlier than Java 7.
This means you should not enable this property if you are building JARs to be used with Java 6 and earlier runtimes.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>false</literal></seg></seglistitem></segmentedlist></section></section><section><title>Method details</title><section id="org.gradle.api.tasks.bundling.Zip:eachFile(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>eachFile</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> closure)</title><para>Adds an action to be applied to each file as it about to be copied into its destination. The given closure is
called with a <apilink class="org.gradle.api.file.FileCopyDetails"/> as its parameter. Actions are executed in the order
added, and are inherited from the parent spec.</para></section><section id="org.gradle.api.tasks.bundling.Zip:eachFile(org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>eachFile</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.FileCopyDetails"/>&gt;</classname> action)</title><para>Adds an action to be applied to each file as it is about to be copied into its destination. The action can change
the destination path of the file, filter the contents of the file, or exclude the file from the result entirely.
Actions are executed in the order added, and are inherited from the parent spec.</para></section><section id="org.gradle.api.tasks.bundling.Zip:exclude(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>exclude</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> excludeSpec)</title><para>Adds an exclude spec. This method may be called multiple times to append new specs.The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter. The closure should return true or false. Example:

</para><para><programlisting language="java">
copySpec {
  from 'source'
  into 'destination'
  //an example of excluding files from certain configuration:
  exclude { it.file in configurations.someConf.files }
}
</programlisting></para><para>

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.api.tasks.bundling.Zip:exclude(java.lang.Iterable)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>exclude</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> excludes)</title><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.api.tasks.bundling.Zip:exclude(java.lang.String[])" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>exclude</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>...</classname> excludes)</title><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.api.tasks.bundling.Zip:exclude(org.gradle.api.specs.Spec)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>exclude</literal>(<classname><apilink class="org.gradle.api.specs.Spec"/>&lt;<apilink class="org.gradle.api.file.FileTreeElement"/>&gt;</classname> excludeSpec)</title><para>Adds an exclude spec. This method may be called multiple times to append new specs.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.api.tasks.bundling.Zip:expand(java.util.Map)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>expand</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, ?&gt;</classname> properties)</title><para>Expands property references in each file as it is copied. More specifically, each file is transformed using
Groovy's <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/text/SimpleTemplateEngine.html"><classname>SimpleTemplateEngine</classname></ulink>. This means you can use simple property references, such as
<literal>$property</literal> or <literal>${property}</literal> in the file. You can also include arbitrary Groovy code in the
file, such as <literal>${version ?: 'unknown'}</literal> or <literal>${classpath*.name.join(' ')}</literal>
</para><para>
Note that all escape sequences (<literal>\n</literal>, <literal>\t</literal>, <literal>\\</literal>, etc) are converted to the symbols
they represent, so, for example, <literal>\n</literal> becomes newline. If this is undesirable then <apilink class="org.gradle.api.file.ContentFilterable" method="expand(java.util.Map, org.gradle.api.Action)"/>
should be used to disable this behavior.</para></section><section id="org.gradle.api.tasks.bundling.Zip:expand(java.util.Map, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>expand</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, ?&gt;</classname> properties, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.ExpandDetails"/>&gt;</classname> action)</title><para>Expands property references in each file as it is copied. More specifically, each file is transformed using
Groovy's <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/text/SimpleTemplateEngine.html"><classname>SimpleTemplateEngine</classname></ulink>. This means you can use simple property references, such as
<literal>$property</literal> or <literal>${property}</literal> in the file. You can also include arbitrary Groovy code in the
file, such as <literal>${version ?: 'unknown'}</literal> or <literal>${classpath*.name.join(' ')}</literal>. The template
engine can be configured with the provided action.
</para><para>
Note that by default all escape sequences (<literal>\n</literal>, <literal>\t</literal>, <literal>\\</literal>, etc) are converted to the symbols
they represent, so, for example, <literal>\n</literal> becomes newline. This behavior is controlled by
<apilink class="org.gradle.api.file.ExpandDetails" method="getEscapeBackslash()"/> property. It should be set to <literal>true</literal> to disable escape sequences
conversion:
</para><para><programlisting language="java">
 expand(one: '1', two: 2) {
     escapeBackslash = true
 }
</programlisting></para></section><section id="org.gradle.api.tasks.bundling.Zip:filesMatching(java.lang.Iterable, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>filesMatching</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> patterns, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.FileCopyDetails"/>&gt;</classname> action)</title><para>Configure the <apilink class="org.gradle.api.file.FileCopyDetails"/> for each file whose path matches any of the specified Ant-style patterns.
This is equivalent to using eachFile() and selectively applying a configuration based on the file's path.</para></section><section id="org.gradle.api.tasks.bundling.Zip:filesMatching(java.lang.String, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>filesMatching</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> pattern, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.FileCopyDetails"/>&gt;</classname> action)</title><para>Configure the <apilink class="org.gradle.api.file.FileCopyDetails"/> for each file whose path matches the specified Ant-style pattern.
This is equivalent to using eachFile() and selectively applying a configuration based on the file's path.</para></section><section id="org.gradle.api.tasks.bundling.Zip:filesNotMatching(java.lang.Iterable, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>filesNotMatching</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> patterns, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.FileCopyDetails"/>&gt;</classname> action)</title><para>Configure the <apilink class="org.gradle.api.file.FileCopyDetails"/> for each file whose path does not match any of the specified
Ant-style patterns. This is equivalent to using eachFile() and selectively applying a configuration based on the
file's path.</para></section><section id="org.gradle.api.tasks.bundling.Zip:filesNotMatching(java.lang.String, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>filesNotMatching</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> pattern, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.FileCopyDetails"/>&gt;</classname> action)</title><para>Configure the <apilink class="org.gradle.api.file.FileCopyDetails"/> for each file whose path does not match the specified
Ant-style pattern. This is equivalent to using eachFile() and selectively applying a configuration based on the
file's path.</para></section><section id="org.gradle.api.tasks.bundling.Zip:filter(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>filter</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> closure)</title><para>Adds a content filter based on the provided closure.  The Closure will be called with each line (stripped of line
endings) and should return a String to replace the line or <literal>null</literal> to remove the line.  If every line is
removed, the result will be an empty file, not an absent one.</para></section><section id="org.gradle.api.tasks.bundling.Zip:filter(java.lang.Class)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>filter</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html"><classname>Class</classname></ulink>&lt;? extends <ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/FilterReader.html"><classname>FilterReader</classname></ulink>&gt;</classname> filterType)</title><para>Adds a content filter to be used during the copy.  Multiple calls to filter, add additional filters to the
filter chain.  Each filter should implement <literal>java.io.FilterReader</literal>. Include <literal>org.apache.tools.ant.filters.*</literal> for access to all the standard Ant filters.</para><para> Examples:
</para><para><programlisting language="java">
   filter(StripJavaComments)
   filter(com.mycompany.project.CustomFilter)
</programlisting></para></section><section id="org.gradle.api.tasks.bundling.Zip:filter(java.util.Map, java.lang.Class)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>filter</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, ?&gt;</classname> properties, <classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html"><classname>Class</classname></ulink>&lt;? extends <ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/FilterReader.html"><classname>FilterReader</classname></ulink>&gt;</classname> filterType)</title><para>Adds a content filter to be used during the copy.  Multiple calls to filter, add additional filters to the
filter chain.  Each filter should implement <literal>java.io.FilterReader</literal>. Include <literal>org.apache.tools.ant.filters.*</literal> for access to all the standard Ant filters.</para><para>Filter properties may be specified using groovy map syntax.</para><para> Examples:
</para><para><programlisting language="java">
   filter(HeadFilter, lines:25, skip:2)
   filter(ReplaceTokens, tokens:[copyright:'2009', version:'2.3.1'])
</programlisting></para></section><section id="org.gradle.api.tasks.bundling.Zip:filter(org.gradle.api.Transformer)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>filter</literal>(<classname><apilink class="org.gradle.api.Transformer"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> transformer)</title><para>Adds a content filter based on the provided transformer.  The Closure will be called with each line (stripped of line
endings) and should return a String to replace the line or <literal>null</literal> to remove the line.  If every line is
removed, the result will be an empty file, not an absent one.</para></section><section id="org.gradle.api.tasks.bundling.Zip:from(java.lang.Object, groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>from</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> sourcePath, <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> c)</title><para>Specifies the source files or directories for a copy and creates a child <literal>CopySourceSpec</literal>. The given source
path is evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/> .</para></section><section id="org.gradle.api.tasks.bundling.Zip:from(java.lang.Object, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>from</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> sourcePath, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.CopySpec"/>&gt;</classname> configureAction)</title><para>Specifies the source files or directories for a copy and creates a child <literal>CopySpec</literal>. The given source
path is evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/> .</para></section><section id="org.gradle.api.tasks.bundling.Zip:from(java.lang.Object[])" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>from</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink>...</classname> sourcePaths)</title><para>Specifies source files or directories for a copy. The given paths are evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/>.</para></section><section id="org.gradle.api.tasks.bundling.Zip:include(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>include</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> includeSpec)</title><para>Adds an include spec. This method may be called multiple times to append new specs. The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></section><section id="org.gradle.api.tasks.bundling.Zip:include(java.lang.Iterable)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>include</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> includes)</title><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></section><section id="org.gradle.api.tasks.bundling.Zip:include(java.lang.String[])" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>include</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>...</classname> includes)</title><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></section><section id="org.gradle.api.tasks.bundling.Zip:include(org.gradle.api.specs.Spec)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>include</literal>(<classname><apilink class="org.gradle.api.specs.Spec"/>&lt;<apilink class="org.gradle.api.file.FileTreeElement"/>&gt;</classname> includeSpec)</title><para>Adds an include spec. This method may be called multiple times to append new specs.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></section><section id="org.gradle.api.tasks.bundling.Zip:into(java.lang.Object)" role="detail"><title><apilink class="org.gradle.api.tasks.bundling.AbstractArchiveTask"/> <literal>into</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> destPath)</title><para>Specifies the destination directory *inside* the archive for the files.
The destination is evaluated as per <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/>.
Don't mix it up with <apilink class="org.gradle.api.tasks.bundling.AbstractArchiveTask" method="getDestinationDirectory()"/> which specifies the output directory for the archive.</para></section><section id="org.gradle.api.tasks.bundling.Zip:into(java.lang.Object, groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.bundling.AbstractArchiveTask"/> <literal>into</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> destPath, <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> configureClosure)</title><para>Creates and configures a child <literal>CopySpec</literal> with a destination directory *inside* the archive for the files.
The destination is evaluated as per <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/>.
Don't mix it up with <apilink class="org.gradle.api.tasks.bundling.AbstractArchiveTask" method="getDestinationDirectory()"/> which specifies the output directory for the archive.</para></section><section id="org.gradle.api.tasks.bundling.Zip:into(java.lang.Object, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.file.CopySpec"/> <literal>into</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> destPath, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.CopySpec"/>&gt;</classname> copySpec)</title><para>Creates and configures a child <literal>CopySpec</literal> with a destination directory *inside* the archive for the files.
The destination is evaluated as per <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/>.
Don't mix it up with <apilink class="org.gradle.api.tasks.bundling.AbstractArchiveTask" method="getDestinationDirectory()"/> which specifies the output directory for the archive.</para></section><section id="org.gradle.api.tasks.bundling.Zip:rename(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>rename</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> closure)</title><para>Renames a source file. The closure will be called with a single parameter, the name of the file.
The closure should return a String object with a new target name. The closure may return null,
in which case the original name will be used.</para></section><section id="org.gradle.api.tasks.bundling.Zip:rename(java.lang.String, java.lang.String)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>rename</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> sourceRegEx, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> replaceWith)</title><para>Renames files based on a regular expression.  Uses java.util.regex type of regular expressions.  Note that the
replace string should use the '$1' syntax to refer to capture groups in the source regular expression.  Files
that do not match the source regular expression will be copied with the original name.

</para><para> Example:
</para><para><programlisting language="java">
rename '(.*)_OEM_BLUE_(.*)', '$1$2'
</programlisting></para><para>
would map the file 'style_OEM_BLUE_.css' to 'style.css'</para></section><section id="org.gradle.api.tasks.bundling.Zip:rename(java.util.regex.Pattern, java.lang.String)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>rename</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html"><classname>Pattern</classname></ulink> sourceRegEx, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> replaceWith)</title><para>Renames files based on a regular expression. See <apilink class="org.gradle.api.file.CopyProcessingSpec" method="rename(java.lang.String, java.lang.String)"/>.</para></section><section id="org.gradle.api.tasks.bundling.Zip:rename(org.gradle.api.Transformer)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>rename</literal>(<classname><apilink class="org.gradle.api.Transformer"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> renamer)</title><para>Renames a source file. The function will be called with a single parameter, the name of the file.
The function should return a new target name. The function may return null,
in which case the original name will be used.</para></section><section id="org.gradle.api.tasks.bundling.Zip:with(org.gradle.api.file.CopySpec[])" role="detail"><title><apilink class="org.gradle.api.file.CopySpec"/> <literal>with</literal>(<classname><apilink class="org.gradle.api.file.CopySpec"/>...</classname> sourceSpecs)</title><para>Adds the given specs as a child of this spec.

</para><para><programlisting language="java">
def contentSpec = copySpec {
  from("content") {
    include "**/*.txt"
  }
}

task copy(type: Copy) {
  into "$buildDir/copy"
  with contentSpec
}
</programlisting></para></section></section></chapter><chapter id="org.gradle.jvm.tasks.Jar"><title>Jar</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.jvm.tasks.Jar" style="javadoc"/></seg></seglistitem></segmentedlist><segmentedlist><segtitle>Known Subtypes</segtitle><seglistitem><seg><simplelist columns="1" type="vert"><member><apilink class="org.gradle.api.tasks.bundling.Jar"/></member></simplelist></seg></seglistitem></segmentedlist><para>Assembles a JAR archive.</para><section><title>Properties</title><table><title>Properties - Jar</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.jvm.tasks.Jar:archiveAppendix"><literal>archiveAppendix</literal></link></td><td><para>The appendix part of the archive name, if any.</para></td></tr><tr><td><link linkend="org.gradle.jvm.tasks.Jar:archiveBaseName"><literal>archiveBaseName</literal></link></td><td><para>The base name of the archive.</para></td></tr><tr><td><link linkend="org.gradle.jvm.tasks.Jar:archiveClassifier"><literal>archiveClassifier</literal></link></td><td><para>The classifier part of the archive name, if any.</para></td></tr><tr><td><link linkend="org.gradle.jvm.tasks.Jar:archiveExtension"><literal>archiveExtension</literal></link></td><td><para>The extension part of the archive name.</para></td></tr><tr><td><link linkend="org.gradle.jvm.tasks.Jar:archiveFile"><literal>archiveFile</literal></link></td><td><para>The <apilink class="org.gradle.api.file.RegularFile"/> where the archive is constructed.
The path is simply the <literal>destinationDirectory</literal> plus the <literal>archiveFileName</literal>.</para></td></tr><tr><td><link linkend="org.gradle.jvm.tasks.Jar:archiveFileName"><literal>archiveFileName</literal></link></td><td><para>The archive name. If the name has not been explicitly set, the pattern for the name is:
<literal>[archiveBaseName]-[archiveAppendix]-[archiveVersion]-[archiveClassifier].[archiveExtension]</literal></para></td></tr><tr><td><link linkend="org.gradle.jvm.tasks.Jar:archiveVersion"><literal>archiveVersion</literal></link></td><td><para>The version part of the archive name.</para></td></tr><tr><td><link linkend="org.gradle.jvm.tasks.Jar:caseSensitive"><literal>caseSensitive</literal></link></td><td><para>Specifies whether case-sensitive pattern matching should be used.</para></td></tr><tr><td><link linkend="org.gradle.jvm.tasks.Jar:destinationDirectory"><literal>destinationDirectory</literal></link></td><td><para>The directory where the archive will be placed.</para></td></tr><tr><td><link linkend="org.gradle.jvm.tasks.Jar:dirPermissions"><literal>dirPermissions</literal></link></td><td><para>Property for querying and configuring directory access permissions.
If the property has no value set, that means that existing permissions are preserved.
It is dependent on the copy action implementation whether these permissions will actually be applied.

For details see <apilink class="org.gradle.api.file.ConfigurableFilePermissions"/>.</para></td></tr><tr><td><link linkend="org.gradle.jvm.tasks.Jar:duplicatesStrategy"><literal>duplicatesStrategy</literal></link></td><td><para>The strategy to use when trying to copy more than one file to the same destination.
</para></td></tr><tr><td><link linkend="org.gradle.jvm.tasks.Jar:entryCompression"><literal>entryCompression</literal></link></td><td><para>The compression level of the entries of the archive. If set to <apilink class="org.gradle.api.tasks.bundling.ZipEntryCompression" method="DEFLATED"/> (the default), each entry is
compressed using the DEFLATE algorithm. If set to <apilink class="org.gradle.api.tasks.bundling.ZipEntryCompression" method="STORED"/> the entries of the archive are left uncompressed.</para></td></tr><tr><td><link linkend="org.gradle.jvm.tasks.Jar:excludes"><literal>excludes</literal></link></td><td><para>The set of exclude patterns.</para></td></tr><tr><td><link linkend="org.gradle.jvm.tasks.Jar:filePermissions"><literal>filePermissions</literal></link></td><td><para>Property for querying and configuring file access permissions.
If the property has no value set, that means that existing permissions are preserved.
It is dependent on the copy action implementation whether these permissions will actually be applied.

For details see <apilink class="org.gradle.api.file.ConfigurableFilePermissions"/>.</para></td></tr><tr><td><link linkend="org.gradle.jvm.tasks.Jar:includeEmptyDirs"><literal>includeEmptyDirs</literal></link></td><td><para>Tells if empty target directories will be included in the copy.</para></td></tr><tr><td><link linkend="org.gradle.jvm.tasks.Jar:includes"><literal>includes</literal></link></td><td><para>The set of include patterns.</para></td></tr><tr><td><link linkend="org.gradle.jvm.tasks.Jar:manifest"><literal>manifest</literal></link></td><td><para>The manifest for this JAR archive.</para></td></tr><tr><td><link linkend="org.gradle.jvm.tasks.Jar:metadataCharset"><literal>metadataCharset</literal></link></td><td><para>The character set used to encode ZIP metadata like file names.
Defaults to the platform's default character set.</para></td></tr><tr><td><link linkend="org.gradle.jvm.tasks.Jar:preserveFileTimestamps"><literal>preserveFileTimestamps</literal></link></td><td><para>Specifies whether file timestamps should be preserved in the archive.
</para></td></tr><tr><td><link linkend="org.gradle.jvm.tasks.Jar:reproducibleFileOrder"><literal>reproducibleFileOrder</literal></link></td><td><para>Specifies whether to enforce a reproducible file order when reading files from directories.
</para></td></tr><tr><td><link linkend="org.gradle.jvm.tasks.Jar:source"><literal>source</literal></link></td><td><para>The source files for this task.</para></td></tr><tr><td><link linkend="org.gradle.jvm.tasks.Jar:zip64"><literal>zip64</literal></link></td><td><para>Whether the zip can contain more than 65535 files and/or support files greater than 4GB in size.
</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - Jar</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.jvm.tasks.Jar:eachFile(groovy.lang.Closure)">eachFile</link>(closure)</literal></td><td><para>Adds an action to be applied to each file as it about to be copied into its destination. The given closure is
called with a <apilink class="org.gradle.api.file.FileCopyDetails"/> as its parameter. Actions are executed in the order
added, and are inherited from the parent spec.</para></td></tr><tr><td><literal><link linkend="org.gradle.jvm.tasks.Jar:eachFile(org.gradle.api.Action)">eachFile</link>(action)</literal></td><td><para>Adds an action to be applied to each file as it is about to be copied into its destination. The action can change
the destination path of the file, filter the contents of the file, or exclude the file from the result entirely.
Actions are executed in the order added, and are inherited from the parent spec.</para></td></tr><tr><td><literal><link linkend="org.gradle.jvm.tasks.Jar:exclude(groovy.lang.Closure)">exclude</link>(excludeSpec)</literal></td><td><para>Adds an exclude spec. This method may be called multiple times to append new specs.The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter. The closure should return true or false. Example:

</para></td></tr><tr><td><literal><link linkend="org.gradle.jvm.tasks.Jar:exclude(java.lang.Iterable)">exclude</link>(excludes)</literal></td><td><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.jvm.tasks.Jar:exclude(java.lang.String[])">exclude</link>(excludes)</literal></td><td><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.jvm.tasks.Jar:exclude(org.gradle.api.specs.Spec)">exclude</link>(excludeSpec)</literal></td><td><para>Adds an exclude spec. This method may be called multiple times to append new specs.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.jvm.tasks.Jar:expand(java.util.Map)">expand</link>(properties)</literal></td><td><para>Expands property references in each file as it is copied. More specifically, each file is transformed using
Groovy's <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/text/SimpleTemplateEngine.html"><classname>SimpleTemplateEngine</classname></ulink>. This means you can use simple property references, such as
<literal>$property</literal> or <literal>${property}</literal> in the file. You can also include arbitrary Groovy code in the
file, such as <literal>${version ?: 'unknown'}</literal> or <literal>${classpath*.name.join(' ')}</literal>
</para></td></tr><tr><td><literal><link linkend="org.gradle.jvm.tasks.Jar:expand(java.util.Map, org.gradle.api.Action)">expand</link>(properties, action)</literal></td><td><para>Expands property references in each file as it is copied. More specifically, each file is transformed using
Groovy's <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/text/SimpleTemplateEngine.html"><classname>SimpleTemplateEngine</classname></ulink>. This means you can use simple property references, such as
<literal>$property</literal> or <literal>${property}</literal> in the file. You can also include arbitrary Groovy code in the
file, such as <literal>${version ?: 'unknown'}</literal> or <literal>${classpath*.name.join(' ')}</literal>. The template
engine can be configured with the provided action.
</para></td></tr><tr><td><literal><link linkend="org.gradle.jvm.tasks.Jar:filesMatching(java.lang.Iterable, org.gradle.api.Action)">filesMatching</link>(patterns, action)</literal></td><td><para>Configure the <apilink class="org.gradle.api.file.FileCopyDetails"/> for each file whose path matches any of the specified Ant-style patterns.
This is equivalent to using eachFile() and selectively applying a configuration based on the file's path.</para></td></tr><tr><td><literal><link linkend="org.gradle.jvm.tasks.Jar:filesMatching(java.lang.String, org.gradle.api.Action)">filesMatching</link>(pattern, action)</literal></td><td><para>Configure the <apilink class="org.gradle.api.file.FileCopyDetails"/> for each file whose path matches the specified Ant-style pattern.
This is equivalent to using eachFile() and selectively applying a configuration based on the file's path.</para></td></tr><tr><td><literal><link linkend="org.gradle.jvm.tasks.Jar:filesNotMatching(java.lang.Iterable, org.gradle.api.Action)">filesNotMatching</link>(patterns, action)</literal></td><td><para>Configure the <apilink class="org.gradle.api.file.FileCopyDetails"/> for each file whose path does not match any of the specified
Ant-style patterns. This is equivalent to using eachFile() and selectively applying a configuration based on the
file's path.</para></td></tr><tr><td><literal><link linkend="org.gradle.jvm.tasks.Jar:filesNotMatching(java.lang.String, org.gradle.api.Action)">filesNotMatching</link>(pattern, action)</literal></td><td><para>Configure the <apilink class="org.gradle.api.file.FileCopyDetails"/> for each file whose path does not match the specified
Ant-style pattern. This is equivalent to using eachFile() and selectively applying a configuration based on the
file's path.</para></td></tr><tr><td><literal><link linkend="org.gradle.jvm.tasks.Jar:filter(groovy.lang.Closure)">filter</link>(closure)</literal></td><td><para>Adds a content filter based on the provided closure.  The Closure will be called with each line (stripped of line
endings) and should return a String to replace the line or <literal>null</literal> to remove the line.  If every line is
removed, the result will be an empty file, not an absent one.</para></td></tr><tr><td><literal><link linkend="org.gradle.jvm.tasks.Jar:filter(java.lang.Class)">filter</link>(filterType)</literal></td><td><para>Adds a content filter to be used during the copy.  Multiple calls to filter, add additional filters to the
filter chain.  Each filter should implement <literal>java.io.FilterReader</literal>. Include <literal>org.apache.tools.ant.filters.*</literal> for access to all the standard Ant filters.</para></td></tr><tr><td><literal><link linkend="org.gradle.jvm.tasks.Jar:filter(java.util.Map, java.lang.Class)">filter</link>(properties, filterType)</literal></td><td><para>Adds a content filter to be used during the copy.  Multiple calls to filter, add additional filters to the
filter chain.  Each filter should implement <literal>java.io.FilterReader</literal>. Include <literal>org.apache.tools.ant.filters.*</literal> for access to all the standard Ant filters.</para></td></tr><tr><td><literal><link linkend="org.gradle.jvm.tasks.Jar:filter(org.gradle.api.Transformer)">filter</link>(transformer)</literal></td><td><para>Adds a content filter based on the provided transformer.  The Closure will be called with each line (stripped of line
endings) and should return a String to replace the line or <literal>null</literal> to remove the line.  If every line is
removed, the result will be an empty file, not an absent one.</para></td></tr><tr><td><literal><link linkend="org.gradle.jvm.tasks.Jar:from(java.lang.Object, groovy.lang.Closure)">from</link>(sourcePath, c)</literal></td><td><para>Specifies the source files or directories for a copy and creates a child <literal>CopySourceSpec</literal>. The given source
path is evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/> .</para></td></tr><tr><td><literal><link linkend="org.gradle.jvm.tasks.Jar:from(java.lang.Object, org.gradle.api.Action)">from</link>(sourcePath, configureAction)</literal></td><td><para>Specifies the source files or directories for a copy and creates a child <literal>CopySpec</literal>. The given source
path is evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/> .</para></td></tr><tr><td><literal><link linkend="org.gradle.jvm.tasks.Jar:from(java.lang.Object[])">from</link>(sourcePaths)</literal></td><td><para>Specifies source files or directories for a copy. The given paths are evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/>.</para></td></tr><tr><td><literal><link linkend="org.gradle.jvm.tasks.Jar:include(groovy.lang.Closure)">include</link>(includeSpec)</literal></td><td><para>Adds an include spec. This method may be called multiple times to append new specs. The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></td></tr><tr><td><literal><link linkend="org.gradle.jvm.tasks.Jar:include(java.lang.Iterable)">include</link>(includes)</literal></td><td><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.jvm.tasks.Jar:include(java.lang.String[])">include</link>(includes)</literal></td><td><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.jvm.tasks.Jar:include(org.gradle.api.specs.Spec)">include</link>(includeSpec)</literal></td><td><para>Adds an include spec. This method may be called multiple times to append new specs.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></td></tr><tr><td><literal><link linkend="org.gradle.jvm.tasks.Jar:into(java.lang.Object)">into</link>(destPath)</literal></td><td><para>Specifies the destination directory *inside* the archive for the files.
The destination is evaluated as per <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/>.
Don't mix it up with <apilink class="org.gradle.api.tasks.bundling.AbstractArchiveTask" method="getDestinationDirectory()"/> which specifies the output directory for the archive.</para></td></tr><tr><td><literal><link linkend="org.gradle.jvm.tasks.Jar:into(java.lang.Object, groovy.lang.Closure)">into</link>(destPath, configureClosure)</literal></td><td><para>Creates and configures a child <literal>CopySpec</literal> with a destination directory *inside* the archive for the files.
The destination is evaluated as per <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/>.
Don't mix it up with <apilink class="org.gradle.api.tasks.bundling.AbstractArchiveTask" method="getDestinationDirectory()"/> which specifies the output directory for the archive.</para></td></tr><tr><td><literal><link linkend="org.gradle.jvm.tasks.Jar:into(java.lang.Object, org.gradle.api.Action)">into</link>(destPath, copySpec)</literal></td><td><para>Creates and configures a child <literal>CopySpec</literal> with a destination directory *inside* the archive for the files.
The destination is evaluated as per <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/>.
Don't mix it up with <apilink class="org.gradle.api.tasks.bundling.AbstractArchiveTask" method="getDestinationDirectory()"/> which specifies the output directory for the archive.</para></td></tr><tr><td><literal><link linkend="org.gradle.jvm.tasks.Jar:manifest(groovy.lang.Closure)">manifest</link>(configureClosure)</literal></td><td><para>Configures the manifest for this JAR archive.

</para></td></tr><tr><td><literal><link linkend="org.gradle.jvm.tasks.Jar:manifest(org.gradle.api.Action)">manifest</link>(configureAction)</literal></td><td><para>Configures the manifest for this JAR archive.

</para></td></tr><tr><td><literal><link linkend="org.gradle.jvm.tasks.Jar:metaInf(groovy.lang.Closure)">metaInf</link>(configureClosure)</literal></td><td><para>Adds content to this JAR archive's META-INF directory.

</para></td></tr><tr><td><literal><link linkend="org.gradle.jvm.tasks.Jar:metaInf(org.gradle.api.Action)">metaInf</link>(configureAction)</literal></td><td><para>Adds content to this JAR archive's META-INF directory.

</para></td></tr><tr><td><literal><link linkend="org.gradle.jvm.tasks.Jar:rename(groovy.lang.Closure)">rename</link>(closure)</literal></td><td><para>Renames a source file. The closure will be called with a single parameter, the name of the file.
The closure should return a String object with a new target name. The closure may return null,
in which case the original name will be used.</para></td></tr><tr><td><literal><link linkend="org.gradle.jvm.tasks.Jar:rename(java.lang.String, java.lang.String)">rename</link>(sourceRegEx, replaceWith)</literal></td><td><para>Renames files based on a regular expression.  Uses java.util.regex type of regular expressions.  Note that the
replace string should use the '$1' syntax to refer to capture groups in the source regular expression.  Files
that do not match the source regular expression will be copied with the original name.

</para></td></tr><tr><td><literal><link linkend="org.gradle.jvm.tasks.Jar:rename(java.util.regex.Pattern, java.lang.String)">rename</link>(sourceRegEx, replaceWith)</literal></td><td><para>Renames files based on a regular expression. See <apilink class="org.gradle.api.file.CopyProcessingSpec" method="rename(java.lang.String, java.lang.String)"/>.</para></td></tr><tr><td><literal><link linkend="org.gradle.jvm.tasks.Jar:rename(org.gradle.api.Transformer)">rename</link>(renamer)</literal></td><td><para>Renames a source file. The function will be called with a single parameter, the name of the file.
The function should return a new target name. The function may return null,
in which case the original name will be used.</para></td></tr><tr><td><literal><link linkend="org.gradle.jvm.tasks.Jar:with(org.gradle.api.file.CopySpec[])">with</link>(sourceSpecs)</literal></td><td><para>Adds the given specs as a child of this spec.

</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.jvm.tasks.Jar:archiveAppendix" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>archiveAppendix</literal></title><para>The appendix part of the archive name, if any.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>""</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.jvm.tasks.Jar:archiveBaseName" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>archiveBaseName</literal></title><para>The base name of the archive.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>project.base.archivesBaseName</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.jvm.tasks.Jar:archiveClassifier" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>archiveClassifier</literal></title><para>The classifier part of the archive name, if any.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>""</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.jvm.tasks.Jar:archiveExtension" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>archiveExtension</literal></title><para>The extension part of the archive name.</para></section><section id="org.gradle.jvm.tasks.Jar:archiveFile" role="detail"><title><classname><apilink class="org.gradle.api.provider.Provider"/>&lt;<apilink class="org.gradle.api.file.RegularFile"/>&gt;</classname> <literal>archiveFile</literal></title><para>The <apilink class="org.gradle.api.file.RegularFile"/> where the archive is constructed.
The path is simply the <literal>destinationDirectory</literal> plus the <literal>archiveFileName</literal>.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal><replaceable>${destinationDirectory}</replaceable>/<replaceable>${archiveFileName}</replaceable></literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.jvm.tasks.Jar:archiveFileName" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>archiveFileName</literal></title><para>The archive name. If the name has not been explicitly set, the pattern for the name is:
<literal>[archiveBaseName]-[archiveAppendix]-[archiveVersion]-[archiveClassifier].[archiveExtension]</literal></para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal><replaceable>${archiveBaseName}</replaceable>-<replaceable>${archiveAppendix}</replaceable>-<replaceable>${archiveVersion}</replaceable>-<replaceable>${archiveClassifier}</replaceable>.<replaceable>${archiveExtension}</replaceable></literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.jvm.tasks.Jar:archiveVersion" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>archiveVersion</literal></title><para>The version part of the archive name.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>project.version</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.jvm.tasks.Jar:caseSensitive" role="detail"><title><classname>boolean</classname> <literal>caseSensitive</literal></title><para>Specifies whether case-sensitive pattern matching should be used.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>true</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.jvm.tasks.Jar:destinationDirectory" role="detail"><title><apilink class="org.gradle.api.file.DirectoryProperty"/> <literal>destinationDirectory</literal></title><para>The directory where the archive will be placed.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>project.distsDir</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.jvm.tasks.Jar:dirPermissions" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<apilink class="org.gradle.api.file.ConfigurableFilePermissions"/>&gt;</classname> <literal>dirPermissions</literal></title><para>Property for querying and configuring directory access permissions.
If the property has no value set, that means that existing permissions are preserved.
It is dependent on the copy action implementation whether these permissions will actually be applied.

For details see <apilink class="org.gradle.api.file.ConfigurableFilePermissions"/>.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>null</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.jvm.tasks.Jar:duplicatesStrategy" role="detail"><title><apilink class="org.gradle.api.file.DuplicatesStrategy"/> <literal>duplicatesStrategy</literal></title><para>The strategy to use when trying to copy more than one file to the same destination.
</para><para>
The value can be set with a case insensitive string of the enum value (e.g. <literal>'exclude'</literal> for <apilink class="org.gradle.api.file.DuplicatesStrategy" method="EXCLUDE"/>).
</para><para>
This strategy can be overridden for individual files by using <apilink class="org.gradle.api.file.CopySpec" method="eachFile(org.gradle.api.Action)"/> or <apilink class="org.gradle.api.file.CopySpec" method="filesMatching(java.lang.String, org.gradle.api.Action)"/>.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>DuplicatesStrategy.INHERIT</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.jvm.tasks.Jar:entryCompression" role="detail"><title><apilink class="org.gradle.api.tasks.bundling.ZipEntryCompression"/> <literal>entryCompression</literal></title><para>The compression level of the entries of the archive. If set to <apilink class="org.gradle.api.tasks.bundling.ZipEntryCompression" method="DEFLATED"/> (the default), each entry is
compressed using the DEFLATE algorithm. If set to <apilink class="org.gradle.api.tasks.bundling.ZipEntryCompression" method="STORED"/> the entries of the archive are left uncompressed.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>ZipEntryCompression.DEFLATED</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.jvm.tasks.Jar:excludes" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>excludes</literal></title><para>The set of exclude patterns.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>[]</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.jvm.tasks.Jar:filePermissions" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<apilink class="org.gradle.api.file.ConfigurableFilePermissions"/>&gt;</classname> <literal>filePermissions</literal></title><para>Property for querying and configuring file access permissions.
If the property has no value set, that means that existing permissions are preserved.
It is dependent on the copy action implementation whether these permissions will actually be applied.

For details see <apilink class="org.gradle.api.file.ConfigurableFilePermissions"/>.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>null</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.jvm.tasks.Jar:includeEmptyDirs" role="detail"><title><classname>boolean</classname> <literal>includeEmptyDirs</literal></title><para>Tells if empty target directories will be included in the copy.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>true</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.jvm.tasks.Jar:includes" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>includes</literal></title><para>The set of include patterns.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>[]</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.jvm.tasks.Jar:manifest" role="detail"><title><apilink class="org.gradle.api.java.archives.Manifest"/> <literal>manifest</literal></title><para>The manifest for this JAR archive.</para></section><section id="org.gradle.jvm.tasks.Jar:metadataCharset" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>metadataCharset</literal></title><para>The character set used to encode ZIP metadata like file names.
Defaults to the platform's default character set.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg>Platform default encoding</seg></seglistitem></segmentedlist></section><section id="org.gradle.jvm.tasks.Jar:preserveFileTimestamps" role="detail"><title><classname>boolean</classname> <literal>preserveFileTimestamps</literal></title><para>Specifies whether file timestamps should be preserved in the archive.
</para><para>
If <literal>false</literal> this ensures that archive entries have the same time for builds between different machines, Java versions and operating systems.
</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>true</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.jvm.tasks.Jar:reproducibleFileOrder" role="detail"><title><classname>boolean</classname> <literal>reproducibleFileOrder</literal></title><para>Specifies whether to enforce a reproducible file order when reading files from directories.
</para><para>
Gradle will then walk the directories on disk which are part of this archive in a reproducible order
independent of file systems and operating systems.
This helps Gradle reliably produce byte-for-byte reproducible archives.
</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>false</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.jvm.tasks.Jar:source" role="detail"><title><apilink class="org.gradle.api.file.FileCollection"/> <literal>source</literal> (read-only)</title><para>The source files for this task.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>[]</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.jvm.tasks.Jar:zip64" role="detail"><title><classname>boolean</classname> <literal>zip64</literal></title><para>Whether the zip can contain more than 65535 files and/or support files greater than 4GB in size.
</para><para>
The standard zip format has hard limits on file size and count.
The <ulink url="http://en.wikipedia.org/wiki/Zip_(file_format)#ZIP64">Zip64 format extension</ulink>
practically removes these limits and is therefore required for building large zips.
</para><para>
However, not all Zip readers support the Zip64 extensions.
Notably, the <ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/zip/ZipInputStream.html"><classname>ZipInputStream</classname></ulink> JDK class does not support Zip64 for versions earlier than Java 7.
This means you should not enable this property if you are building JARs to be used with Java 6 and earlier runtimes.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>false</literal></seg></seglistitem></segmentedlist></section></section><section><title>Method details</title><section id="org.gradle.jvm.tasks.Jar:eachFile(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>eachFile</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> closure)</title><para>Adds an action to be applied to each file as it about to be copied into its destination. The given closure is
called with a <apilink class="org.gradle.api.file.FileCopyDetails"/> as its parameter. Actions are executed in the order
added, and are inherited from the parent spec.</para></section><section id="org.gradle.jvm.tasks.Jar:eachFile(org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>eachFile</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.FileCopyDetails"/>&gt;</classname> action)</title><para>Adds an action to be applied to each file as it is about to be copied into its destination. The action can change
the destination path of the file, filter the contents of the file, or exclude the file from the result entirely.
Actions are executed in the order added, and are inherited from the parent spec.</para></section><section id="org.gradle.jvm.tasks.Jar:exclude(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>exclude</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> excludeSpec)</title><para>Adds an exclude spec. This method may be called multiple times to append new specs.The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter. The closure should return true or false. Example:

</para><para><programlisting language="java">
copySpec {
  from 'source'
  into 'destination'
  //an example of excluding files from certain configuration:
  exclude { it.file in configurations.someConf.files }
}
</programlisting></para><para>

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.jvm.tasks.Jar:exclude(java.lang.Iterable)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>exclude</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> excludes)</title><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.jvm.tasks.Jar:exclude(java.lang.String[])" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>exclude</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>...</classname> excludes)</title><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.jvm.tasks.Jar:exclude(org.gradle.api.specs.Spec)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>exclude</literal>(<classname><apilink class="org.gradle.api.specs.Spec"/>&lt;<apilink class="org.gradle.api.file.FileTreeElement"/>&gt;</classname> excludeSpec)</title><para>Adds an exclude spec. This method may be called multiple times to append new specs.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.jvm.tasks.Jar:expand(java.util.Map)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>expand</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, ?&gt;</classname> properties)</title><para>Expands property references in each file as it is copied. More specifically, each file is transformed using
Groovy's <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/text/SimpleTemplateEngine.html"><classname>SimpleTemplateEngine</classname></ulink>. This means you can use simple property references, such as
<literal>$property</literal> or <literal>${property}</literal> in the file. You can also include arbitrary Groovy code in the
file, such as <literal>${version ?: 'unknown'}</literal> or <literal>${classpath*.name.join(' ')}</literal>
</para><para>
Note that all escape sequences (<literal>\n</literal>, <literal>\t</literal>, <literal>\\</literal>, etc) are converted to the symbols
they represent, so, for example, <literal>\n</literal> becomes newline. If this is undesirable then <apilink class="org.gradle.api.file.ContentFilterable" method="expand(java.util.Map, org.gradle.api.Action)"/>
should be used to disable this behavior.</para></section><section id="org.gradle.jvm.tasks.Jar:expand(java.util.Map, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>expand</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, ?&gt;</classname> properties, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.ExpandDetails"/>&gt;</classname> action)</title><para>Expands property references in each file as it is copied. More specifically, each file is transformed using
Groovy's <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/text/SimpleTemplateEngine.html"><classname>SimpleTemplateEngine</classname></ulink>. This means you can use simple property references, such as
<literal>$property</literal> or <literal>${property}</literal> in the file. You can also include arbitrary Groovy code in the
file, such as <literal>${version ?: 'unknown'}</literal> or <literal>${classpath*.name.join(' ')}</literal>. The template
engine can be configured with the provided action.
</para><para>
Note that by default all escape sequences (<literal>\n</literal>, <literal>\t</literal>, <literal>\\</literal>, etc) are converted to the symbols
they represent, so, for example, <literal>\n</literal> becomes newline. This behavior is controlled by
<apilink class="org.gradle.api.file.ExpandDetails" method="getEscapeBackslash()"/> property. It should be set to <literal>true</literal> to disable escape sequences
conversion:
</para><para><programlisting language="java">
 expand(one: '1', two: 2) {
     escapeBackslash = true
 }
</programlisting></para></section><section id="org.gradle.jvm.tasks.Jar:filesMatching(java.lang.Iterable, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>filesMatching</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> patterns, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.FileCopyDetails"/>&gt;</classname> action)</title><para>Configure the <apilink class="org.gradle.api.file.FileCopyDetails"/> for each file whose path matches any of the specified Ant-style patterns.
This is equivalent to using eachFile() and selectively applying a configuration based on the file's path.</para></section><section id="org.gradle.jvm.tasks.Jar:filesMatching(java.lang.String, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>filesMatching</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> pattern, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.FileCopyDetails"/>&gt;</classname> action)</title><para>Configure the <apilink class="org.gradle.api.file.FileCopyDetails"/> for each file whose path matches the specified Ant-style pattern.
This is equivalent to using eachFile() and selectively applying a configuration based on the file's path.</para></section><section id="org.gradle.jvm.tasks.Jar:filesNotMatching(java.lang.Iterable, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>filesNotMatching</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> patterns, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.FileCopyDetails"/>&gt;</classname> action)</title><para>Configure the <apilink class="org.gradle.api.file.FileCopyDetails"/> for each file whose path does not match any of the specified
Ant-style patterns. This is equivalent to using eachFile() and selectively applying a configuration based on the
file's path.</para></section><section id="org.gradle.jvm.tasks.Jar:filesNotMatching(java.lang.String, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>filesNotMatching</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> pattern, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.FileCopyDetails"/>&gt;</classname> action)</title><para>Configure the <apilink class="org.gradle.api.file.FileCopyDetails"/> for each file whose path does not match the specified
Ant-style pattern. This is equivalent to using eachFile() and selectively applying a configuration based on the
file's path.</para></section><section id="org.gradle.jvm.tasks.Jar:filter(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>filter</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> closure)</title><para>Adds a content filter based on the provided closure.  The Closure will be called with each line (stripped of line
endings) and should return a String to replace the line or <literal>null</literal> to remove the line.  If every line is
removed, the result will be an empty file, not an absent one.</para></section><section id="org.gradle.jvm.tasks.Jar:filter(java.lang.Class)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>filter</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html"><classname>Class</classname></ulink>&lt;? extends <ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/FilterReader.html"><classname>FilterReader</classname></ulink>&gt;</classname> filterType)</title><para>Adds a content filter to be used during the copy.  Multiple calls to filter, add additional filters to the
filter chain.  Each filter should implement <literal>java.io.FilterReader</literal>. Include <literal>org.apache.tools.ant.filters.*</literal> for access to all the standard Ant filters.</para><para> Examples:
</para><para><programlisting language="java">
   filter(StripJavaComments)
   filter(com.mycompany.project.CustomFilter)
</programlisting></para></section><section id="org.gradle.jvm.tasks.Jar:filter(java.util.Map, java.lang.Class)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>filter</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, ?&gt;</classname> properties, <classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html"><classname>Class</classname></ulink>&lt;? extends <ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/FilterReader.html"><classname>FilterReader</classname></ulink>&gt;</classname> filterType)</title><para>Adds a content filter to be used during the copy.  Multiple calls to filter, add additional filters to the
filter chain.  Each filter should implement <literal>java.io.FilterReader</literal>. Include <literal>org.apache.tools.ant.filters.*</literal> for access to all the standard Ant filters.</para><para>Filter properties may be specified using groovy map syntax.</para><para> Examples:
</para><para><programlisting language="java">
   filter(HeadFilter, lines:25, skip:2)
   filter(ReplaceTokens, tokens:[copyright:'2009', version:'2.3.1'])
</programlisting></para></section><section id="org.gradle.jvm.tasks.Jar:filter(org.gradle.api.Transformer)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>filter</literal>(<classname><apilink class="org.gradle.api.Transformer"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> transformer)</title><para>Adds a content filter based on the provided transformer.  The Closure will be called with each line (stripped of line
endings) and should return a String to replace the line or <literal>null</literal> to remove the line.  If every line is
removed, the result will be an empty file, not an absent one.</para></section><section id="org.gradle.jvm.tasks.Jar:from(java.lang.Object, groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>from</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> sourcePath, <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> c)</title><para>Specifies the source files or directories for a copy and creates a child <literal>CopySourceSpec</literal>. The given source
path is evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/> .</para></section><section id="org.gradle.jvm.tasks.Jar:from(java.lang.Object, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>from</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> sourcePath, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.CopySpec"/>&gt;</classname> configureAction)</title><para>Specifies the source files or directories for a copy and creates a child <literal>CopySpec</literal>. The given source
path is evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/> .</para></section><section id="org.gradle.jvm.tasks.Jar:from(java.lang.Object[])" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>from</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink>...</classname> sourcePaths)</title><para>Specifies source files or directories for a copy. The given paths are evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/>.</para></section><section id="org.gradle.jvm.tasks.Jar:include(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>include</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> includeSpec)</title><para>Adds an include spec. This method may be called multiple times to append new specs. The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></section><section id="org.gradle.jvm.tasks.Jar:include(java.lang.Iterable)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>include</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> includes)</title><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></section><section id="org.gradle.jvm.tasks.Jar:include(java.lang.String[])" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>include</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>...</classname> includes)</title><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></section><section id="org.gradle.jvm.tasks.Jar:include(org.gradle.api.specs.Spec)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>include</literal>(<classname><apilink class="org.gradle.api.specs.Spec"/>&lt;<apilink class="org.gradle.api.file.FileTreeElement"/>&gt;</classname> includeSpec)</title><para>Adds an include spec. This method may be called multiple times to append new specs.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></section><section id="org.gradle.jvm.tasks.Jar:into(java.lang.Object)" role="detail"><title><apilink class="org.gradle.api.tasks.bundling.AbstractArchiveTask"/> <literal>into</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> destPath)</title><para>Specifies the destination directory *inside* the archive for the files.
The destination is evaluated as per <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/>.
Don't mix it up with <apilink class="org.gradle.api.tasks.bundling.AbstractArchiveTask" method="getDestinationDirectory()"/> which specifies the output directory for the archive.</para></section><section id="org.gradle.jvm.tasks.Jar:into(java.lang.Object, groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.bundling.AbstractArchiveTask"/> <literal>into</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> destPath, <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> configureClosure)</title><para>Creates and configures a child <literal>CopySpec</literal> with a destination directory *inside* the archive for the files.
The destination is evaluated as per <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/>.
Don't mix it up with <apilink class="org.gradle.api.tasks.bundling.AbstractArchiveTask" method="getDestinationDirectory()"/> which specifies the output directory for the archive.</para></section><section id="org.gradle.jvm.tasks.Jar:into(java.lang.Object, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.file.CopySpec"/> <literal>into</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> destPath, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.CopySpec"/>&gt;</classname> copySpec)</title><para>Creates and configures a child <literal>CopySpec</literal> with a destination directory *inside* the archive for the files.
The destination is evaluated as per <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/>.
Don't mix it up with <apilink class="org.gradle.api.tasks.bundling.AbstractArchiveTask" method="getDestinationDirectory()"/> which specifies the output directory for the archive.</para></section><section id="org.gradle.jvm.tasks.Jar:manifest(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.jvm.tasks.Jar"/> <literal>manifest</literal>(<classname><ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink>&lt;?&gt;</classname> configureClosure)</title><para>Configures the manifest for this JAR archive.

</para><para>The given closure is executed to configure the manifest. The <apilink class="org.gradle.api.java.archives.Manifest"/> is passed to the closure as its delegate.</para></section><section id="org.gradle.jvm.tasks.Jar:manifest(org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.jvm.tasks.Jar"/> <literal>manifest</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.java.archives.Manifest"/>&gt;</classname> configureAction)</title><para>Configures the manifest for this JAR archive.

</para><para>The given action is executed to configure the manifest.</para></section><section id="org.gradle.jvm.tasks.Jar:metaInf(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.file.CopySpec"/> <literal>metaInf</literal>(<classname><ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink>&lt;?&gt;</classname> configureClosure)</title><para>Adds content to this JAR archive's META-INF directory.

</para><para>The given closure is executed to configure a <literal>CopySpec</literal>. The <apilink class="org.gradle.api.file.CopySpec"/> is passed to the closure as its delegate.</para></section><section id="org.gradle.jvm.tasks.Jar:metaInf(org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.file.CopySpec"/> <literal>metaInf</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.CopySpec"/>&gt;</classname> configureAction)</title><para>Adds content to this JAR archive's META-INF directory.

</para><para>The given action is executed to configure a <literal>CopySpec</literal>.</para></section><section id="org.gradle.jvm.tasks.Jar:rename(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>rename</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> closure)</title><para>Renames a source file. The closure will be called with a single parameter, the name of the file.
The closure should return a String object with a new target name. The closure may return null,
in which case the original name will be used.</para></section><section id="org.gradle.jvm.tasks.Jar:rename(java.lang.String, java.lang.String)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>rename</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> sourceRegEx, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> replaceWith)</title><para>Renames files based on a regular expression.  Uses java.util.regex type of regular expressions.  Note that the
replace string should use the '$1' syntax to refer to capture groups in the source regular expression.  Files
that do not match the source regular expression will be copied with the original name.

</para><para> Example:
</para><para><programlisting language="java">
rename '(.*)_OEM_BLUE_(.*)', '$1$2'
</programlisting></para><para>
would map the file 'style_OEM_BLUE_.css' to 'style.css'</para></section><section id="org.gradle.jvm.tasks.Jar:rename(java.util.regex.Pattern, java.lang.String)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>rename</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html"><classname>Pattern</classname></ulink> sourceRegEx, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> replaceWith)</title><para>Renames files based on a regular expression. See <apilink class="org.gradle.api.file.CopyProcessingSpec" method="rename(java.lang.String, java.lang.String)"/>.</para></section><section id="org.gradle.jvm.tasks.Jar:rename(org.gradle.api.Transformer)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>rename</literal>(<classname><apilink class="org.gradle.api.Transformer"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> renamer)</title><para>Renames a source file. The function will be called with a single parameter, the name of the file.
The function should return a new target name. The function may return null,
in which case the original name will be used.</para></section><section id="org.gradle.jvm.tasks.Jar:with(org.gradle.api.file.CopySpec[])" role="detail"><title><apilink class="org.gradle.api.file.CopySpec"/> <literal>with</literal>(<classname><apilink class="org.gradle.api.file.CopySpec"/>...</classname> sourceSpecs)</title><para>Adds the given specs as a child of this spec.

</para><para><programlisting language="java">
def contentSpec = copySpec {
  from("content") {
    include "**/*.txt"
  }
}

task copy(type: Copy) {
  into "$buildDir/copy"
  with contentSpec
}
</programlisting></para></section></section></chapter><chapter id="org.gradle.api.tasks.bundling.Jar"><title>Jar</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.tasks.bundling.Jar" style="javadoc"/></seg></seglistitem></segmentedlist><segmentedlist><segtitle>Known Subtypes</segtitle><seglistitem><seg><simplelist columns="1" type="vert"><member><apilink class="org.gradle.plugins.ear.Ear"/></member><member><apilink class="org.gradle.api.tasks.bundling.War"/></member></simplelist></seg></seglistitem></segmentedlist><para>Assembles a JAR archive.</para><section><title>Properties</title><table><title>Properties - Jar</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.tasks.bundling.Jar:archiveAppendix"><literal>archiveAppendix</literal></link></td><td><para>The appendix part of the archive name, if any.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.bundling.Jar:archiveBaseName"><literal>archiveBaseName</literal></link></td><td><para>The base name of the archive.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.bundling.Jar:archiveClassifier"><literal>archiveClassifier</literal></link></td><td><para>The classifier part of the archive name, if any.</para></td></tr><tr><td><link linkend="org.gradle.jvm.tasks.Jar:archiveExtension"><literal>archiveExtension</literal></link></td><td><para>The extension part of the archive name.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.bundling.Jar:archiveFile"><literal>archiveFile</literal></link></td><td><para>The <apilink class="org.gradle.api.file.RegularFile"/> where the archive is constructed.
The path is simply the <literal>destinationDirectory</literal> plus the <literal>archiveFileName</literal>.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.bundling.Jar:archiveFileName"><literal>archiveFileName</literal></link></td><td><para>The archive name. If the name has not been explicitly set, the pattern for the name is:
<literal>[archiveBaseName]-[archiveAppendix]-[archiveVersion]-[archiveClassifier].[archiveExtension]</literal></para></td></tr><tr><td><link linkend="org.gradle.api.tasks.bundling.Jar:archiveVersion"><literal>archiveVersion</literal></link></td><td><para>The version part of the archive name.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.bundling.Jar:caseSensitive"><literal>caseSensitive</literal></link></td><td><para>Specifies whether case-sensitive pattern matching should be used.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.bundling.Jar:destinationDirectory"><literal>destinationDirectory</literal></link></td><td><para>The directory where the archive will be placed.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.bundling.Jar:dirPermissions"><literal>dirPermissions</literal></link></td><td><para>Property for querying and configuring directory access permissions.
If the property has no value set, that means that existing permissions are preserved.
It is dependent on the copy action implementation whether these permissions will actually be applied.

For details see <apilink class="org.gradle.api.file.ConfigurableFilePermissions"/>.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.bundling.Jar:duplicatesStrategy"><literal>duplicatesStrategy</literal></link></td><td><para>The strategy to use when trying to copy more than one file to the same destination.
</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.bundling.Jar:entryCompression"><literal>entryCompression</literal></link></td><td><para>The compression level of the entries of the archive. If set to <apilink class="org.gradle.api.tasks.bundling.ZipEntryCompression" method="DEFLATED"/> (the default), each entry is
compressed using the DEFLATE algorithm. If set to <apilink class="org.gradle.api.tasks.bundling.ZipEntryCompression" method="STORED"/> the entries of the archive are left uncompressed.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.bundling.Jar:excludes"><literal>excludes</literal></link></td><td><para>The set of exclude patterns.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.bundling.Jar:filePermissions"><literal>filePermissions</literal></link></td><td><para>Property for querying and configuring file access permissions.
If the property has no value set, that means that existing permissions are preserved.
It is dependent on the copy action implementation whether these permissions will actually be applied.

For details see <apilink class="org.gradle.api.file.ConfigurableFilePermissions"/>.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.bundling.Jar:includeEmptyDirs"><literal>includeEmptyDirs</literal></link></td><td><para>Tells if empty target directories will be included in the copy.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.bundling.Jar:includes"><literal>includes</literal></link></td><td><para>The set of include patterns.</para></td></tr><tr><td><link linkend="org.gradle.jvm.tasks.Jar:manifest"><literal>manifest</literal></link></td><td><para>The manifest for this JAR archive.</para></td></tr><tr><td><link linkend="org.gradle.jvm.tasks.Jar:metadataCharset"><literal>metadataCharset</literal></link></td><td><para>The character set used to encode JAR metadata like file names.
Defaults to UTF-8.
You can change this property but it is not recommended as JVMs expect JAR metadata to be encoded using UTF-8</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.bundling.Jar:preserveFileTimestamps"><literal>preserveFileTimestamps</literal></link></td><td><para>Specifies whether file timestamps should be preserved in the archive.
</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.bundling.Jar:reproducibleFileOrder"><literal>reproducibleFileOrder</literal></link></td><td><para>Specifies whether to enforce a reproducible file order when reading files from directories.
</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.bundling.Jar:source"><literal>source</literal></link></td><td><para>The source files for this task.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.bundling.Jar:zip64"><literal>zip64</literal></link></td><td><para>Whether the zip can contain more than 65535 files and/or support files greater than 4GB in size.
</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - Jar</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.jvm.tasks.Jar:eachFile(groovy.lang.Closure)">eachFile</link>(closure)</literal></td><td><para>Adds an action to be applied to each file as it about to be copied into its destination. The given closure is
called with a <apilink class="org.gradle.api.file.FileCopyDetails"/> as its parameter. Actions are executed in the order
added, and are inherited from the parent spec.</para></td></tr><tr><td><literal><link linkend="org.gradle.jvm.tasks.Jar:eachFile(org.gradle.api.Action)">eachFile</link>(action)</literal></td><td><para>Adds an action to be applied to each file as it is about to be copied into its destination. The action can change
the destination path of the file, filter the contents of the file, or exclude the file from the result entirely.
Actions are executed in the order added, and are inherited from the parent spec.</para></td></tr><tr><td><literal><link linkend="org.gradle.jvm.tasks.Jar:exclude(groovy.lang.Closure)">exclude</link>(excludeSpec)</literal></td><td><para>Adds an exclude spec. This method may be called multiple times to append new specs.The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter. The closure should return true or false. Example:

</para></td></tr><tr><td><literal><link linkend="org.gradle.jvm.tasks.Jar:exclude(java.lang.Iterable)">exclude</link>(excludes)</literal></td><td><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.jvm.tasks.Jar:exclude(java.lang.String[])">exclude</link>(excludes)</literal></td><td><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.jvm.tasks.Jar:exclude(org.gradle.api.specs.Spec)">exclude</link>(excludeSpec)</literal></td><td><para>Adds an exclude spec. This method may be called multiple times to append new specs.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.jvm.tasks.Jar:expand(java.util.Map)">expand</link>(properties)</literal></td><td><para>Expands property references in each file as it is copied. More specifically, each file is transformed using
Groovy's <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/text/SimpleTemplateEngine.html"><classname>SimpleTemplateEngine</classname></ulink>. This means you can use simple property references, such as
<literal>$property</literal> or <literal>${property}</literal> in the file. You can also include arbitrary Groovy code in the
file, such as <literal>${version ?: 'unknown'}</literal> or <literal>${classpath*.name.join(' ')}</literal>
</para></td></tr><tr><td><literal><link linkend="org.gradle.jvm.tasks.Jar:expand(java.util.Map, org.gradle.api.Action)">expand</link>(properties, action)</literal></td><td><para>Expands property references in each file as it is copied. More specifically, each file is transformed using
Groovy's <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/text/SimpleTemplateEngine.html"><classname>SimpleTemplateEngine</classname></ulink>. This means you can use simple property references, such as
<literal>$property</literal> or <literal>${property}</literal> in the file. You can also include arbitrary Groovy code in the
file, such as <literal>${version ?: 'unknown'}</literal> or <literal>${classpath*.name.join(' ')}</literal>. The template
engine can be configured with the provided action.
</para></td></tr><tr><td><literal><link linkend="org.gradle.jvm.tasks.Jar:filesMatching(java.lang.Iterable, org.gradle.api.Action)">filesMatching</link>(patterns, action)</literal></td><td><para>Configure the <apilink class="org.gradle.api.file.FileCopyDetails"/> for each file whose path matches any of the specified Ant-style patterns.
This is equivalent to using eachFile() and selectively applying a configuration based on the file's path.</para></td></tr><tr><td><literal><link linkend="org.gradle.jvm.tasks.Jar:filesMatching(java.lang.String, org.gradle.api.Action)">filesMatching</link>(pattern, action)</literal></td><td><para>Configure the <apilink class="org.gradle.api.file.FileCopyDetails"/> for each file whose path matches the specified Ant-style pattern.
This is equivalent to using eachFile() and selectively applying a configuration based on the file's path.</para></td></tr><tr><td><literal><link linkend="org.gradle.jvm.tasks.Jar:filesNotMatching(java.lang.Iterable, org.gradle.api.Action)">filesNotMatching</link>(patterns, action)</literal></td><td><para>Configure the <apilink class="org.gradle.api.file.FileCopyDetails"/> for each file whose path does not match any of the specified
Ant-style patterns. This is equivalent to using eachFile() and selectively applying a configuration based on the
file's path.</para></td></tr><tr><td><literal><link linkend="org.gradle.jvm.tasks.Jar:filesNotMatching(java.lang.String, org.gradle.api.Action)">filesNotMatching</link>(pattern, action)</literal></td><td><para>Configure the <apilink class="org.gradle.api.file.FileCopyDetails"/> for each file whose path does not match the specified
Ant-style pattern. This is equivalent to using eachFile() and selectively applying a configuration based on the
file's path.</para></td></tr><tr><td><literal><link linkend="org.gradle.jvm.tasks.Jar:filter(groovy.lang.Closure)">filter</link>(closure)</literal></td><td><para>Adds a content filter based on the provided closure.  The Closure will be called with each line (stripped of line
endings) and should return a String to replace the line or <literal>null</literal> to remove the line.  If every line is
removed, the result will be an empty file, not an absent one.</para></td></tr><tr><td><literal><link linkend="org.gradle.jvm.tasks.Jar:filter(java.lang.Class)">filter</link>(filterType)</literal></td><td><para>Adds a content filter to be used during the copy.  Multiple calls to filter, add additional filters to the
filter chain.  Each filter should implement <literal>java.io.FilterReader</literal>. Include <literal>org.apache.tools.ant.filters.*</literal> for access to all the standard Ant filters.</para></td></tr><tr><td><literal><link linkend="org.gradle.jvm.tasks.Jar:filter(java.util.Map, java.lang.Class)">filter</link>(properties, filterType)</literal></td><td><para>Adds a content filter to be used during the copy.  Multiple calls to filter, add additional filters to the
filter chain.  Each filter should implement <literal>java.io.FilterReader</literal>. Include <literal>org.apache.tools.ant.filters.*</literal> for access to all the standard Ant filters.</para></td></tr><tr><td><literal><link linkend="org.gradle.jvm.tasks.Jar:filter(org.gradle.api.Transformer)">filter</link>(transformer)</literal></td><td><para>Adds a content filter based on the provided transformer.  The Closure will be called with each line (stripped of line
endings) and should return a String to replace the line or <literal>null</literal> to remove the line.  If every line is
removed, the result will be an empty file, not an absent one.</para></td></tr><tr><td><literal><link linkend="org.gradle.jvm.tasks.Jar:from(java.lang.Object, groovy.lang.Closure)">from</link>(sourcePath, c)</literal></td><td><para>Specifies the source files or directories for a copy and creates a child <literal>CopySourceSpec</literal>. The given source
path is evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/> .</para></td></tr><tr><td><literal><link linkend="org.gradle.jvm.tasks.Jar:from(java.lang.Object, org.gradle.api.Action)">from</link>(sourcePath, configureAction)</literal></td><td><para>Specifies the source files or directories for a copy and creates a child <literal>CopySpec</literal>. The given source
path is evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/> .</para></td></tr><tr><td><literal><link linkend="org.gradle.jvm.tasks.Jar:from(java.lang.Object[])">from</link>(sourcePaths)</literal></td><td><para>Specifies source files or directories for a copy. The given paths are evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/>.</para></td></tr><tr><td><literal><link linkend="org.gradle.jvm.tasks.Jar:include(groovy.lang.Closure)">include</link>(includeSpec)</literal></td><td><para>Adds an include spec. This method may be called multiple times to append new specs. The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></td></tr><tr><td><literal><link linkend="org.gradle.jvm.tasks.Jar:include(java.lang.Iterable)">include</link>(includes)</literal></td><td><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.jvm.tasks.Jar:include(java.lang.String[])">include</link>(includes)</literal></td><td><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.jvm.tasks.Jar:include(org.gradle.api.specs.Spec)">include</link>(includeSpec)</literal></td><td><para>Adds an include spec. This method may be called multiple times to append new specs.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></td></tr><tr><td><literal><link linkend="org.gradle.jvm.tasks.Jar:into(java.lang.Object)">into</link>(destPath)</literal></td><td><para>Specifies the destination directory *inside* the archive for the files.
The destination is evaluated as per <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/>.
Don't mix it up with <apilink class="org.gradle.api.tasks.bundling.AbstractArchiveTask" method="getDestinationDirectory()"/> which specifies the output directory for the archive.</para></td></tr><tr><td><literal><link linkend="org.gradle.jvm.tasks.Jar:into(java.lang.Object, groovy.lang.Closure)">into</link>(destPath, configureClosure)</literal></td><td><para>Creates and configures a child <literal>CopySpec</literal> with a destination directory *inside* the archive for the files.
The destination is evaluated as per <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/>.
Don't mix it up with <apilink class="org.gradle.api.tasks.bundling.AbstractArchiveTask" method="getDestinationDirectory()"/> which specifies the output directory for the archive.</para></td></tr><tr><td><literal><link linkend="org.gradle.jvm.tasks.Jar:into(java.lang.Object, org.gradle.api.Action)">into</link>(destPath, copySpec)</literal></td><td><para>Creates and configures a child <literal>CopySpec</literal> with a destination directory *inside* the archive for the files.
The destination is evaluated as per <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/>.
Don't mix it up with <apilink class="org.gradle.api.tasks.bundling.AbstractArchiveTask" method="getDestinationDirectory()"/> which specifies the output directory for the archive.</para></td></tr><tr><td><literal><link linkend="org.gradle.jvm.tasks.Jar:manifest(groovy.lang.Closure)">manifest</link>(configureClosure)</literal></td><td><para>Configures the manifest for this JAR archive.

</para></td></tr><tr><td><literal><link linkend="org.gradle.jvm.tasks.Jar:manifest(org.gradle.api.Action)">manifest</link>(configureAction)</literal></td><td><para>Configures the manifest for this JAR archive.

</para></td></tr><tr><td><literal><link linkend="org.gradle.jvm.tasks.Jar:metaInf(groovy.lang.Closure)">metaInf</link>(configureClosure)</literal></td><td><para>Adds content to this JAR archive's META-INF directory.

</para></td></tr><tr><td><literal><link linkend="org.gradle.jvm.tasks.Jar:metaInf(org.gradle.api.Action)">metaInf</link>(configureAction)</literal></td><td><para>Adds content to this JAR archive's META-INF directory.

</para></td></tr><tr><td><literal><link linkend="org.gradle.jvm.tasks.Jar:rename(groovy.lang.Closure)">rename</link>(closure)</literal></td><td><para>Renames a source file. The closure will be called with a single parameter, the name of the file.
The closure should return a String object with a new target name. The closure may return null,
in which case the original name will be used.</para></td></tr><tr><td><literal><link linkend="org.gradle.jvm.tasks.Jar:rename(java.lang.String, java.lang.String)">rename</link>(sourceRegEx, replaceWith)</literal></td><td><para>Renames files based on a regular expression.  Uses java.util.regex type of regular expressions.  Note that the
replace string should use the '$1' syntax to refer to capture groups in the source regular expression.  Files
that do not match the source regular expression will be copied with the original name.

</para></td></tr><tr><td><literal><link linkend="org.gradle.jvm.tasks.Jar:rename(java.util.regex.Pattern, java.lang.String)">rename</link>(sourceRegEx, replaceWith)</literal></td><td><para>Renames files based on a regular expression. See <apilink class="org.gradle.api.file.CopyProcessingSpec" method="rename(java.lang.String, java.lang.String)"/>.</para></td></tr><tr><td><literal><link linkend="org.gradle.jvm.tasks.Jar:rename(org.gradle.api.Transformer)">rename</link>(renamer)</literal></td><td><para>Renames a source file. The function will be called with a single parameter, the name of the file.
The function should return a new target name. The function may return null,
in which case the original name will be used.</para></td></tr><tr><td><literal><link linkend="org.gradle.jvm.tasks.Jar:with(org.gradle.api.file.CopySpec[])">with</link>(sourceSpecs)</literal></td><td><para>Adds the given specs as a child of this spec.

</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.tasks.bundling.Jar:archiveAppendix" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>archiveAppendix</literal></title><para>The appendix part of the archive name, if any.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>""</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.bundling.Jar:archiveBaseName" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>archiveBaseName</literal></title><para>The base name of the archive.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>project.base.archivesBaseName</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.bundling.Jar:archiveClassifier" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>archiveClassifier</literal></title><para>The classifier part of the archive name, if any.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>""</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.jvm.tasks.Jar:archiveExtension" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>archiveExtension</literal></title><para>The extension part of the archive name.</para></section><section id="org.gradle.api.tasks.bundling.Jar:archiveFile" role="detail"><title><classname><apilink class="org.gradle.api.provider.Provider"/>&lt;<apilink class="org.gradle.api.file.RegularFile"/>&gt;</classname> <literal>archiveFile</literal></title><para>The <apilink class="org.gradle.api.file.RegularFile"/> where the archive is constructed.
The path is simply the <literal>destinationDirectory</literal> plus the <literal>archiveFileName</literal>.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal><replaceable>${destinationDirectory}</replaceable>/<replaceable>${archiveFileName}</replaceable></literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.bundling.Jar:archiveFileName" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>archiveFileName</literal></title><para>The archive name. If the name has not been explicitly set, the pattern for the name is:
<literal>[archiveBaseName]-[archiveAppendix]-[archiveVersion]-[archiveClassifier].[archiveExtension]</literal></para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal><replaceable>${archiveBaseName}</replaceable>-<replaceable>${archiveAppendix}</replaceable>-<replaceable>${archiveVersion}</replaceable>-<replaceable>${archiveClassifier}</replaceable>.<replaceable>${archiveExtension}</replaceable></literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.bundling.Jar:archiveVersion" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>archiveVersion</literal></title><para>The version part of the archive name.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>project.version</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.bundling.Jar:caseSensitive" role="detail"><title><classname>boolean</classname> <literal>caseSensitive</literal></title><para>Specifies whether case-sensitive pattern matching should be used.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>true</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.bundling.Jar:destinationDirectory" role="detail"><title><apilink class="org.gradle.api.file.DirectoryProperty"/> <literal>destinationDirectory</literal></title><para>The directory where the archive will be placed.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>project.distsDir</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.bundling.Jar:dirPermissions" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<apilink class="org.gradle.api.file.ConfigurableFilePermissions"/>&gt;</classname> <literal>dirPermissions</literal></title><para>Property for querying and configuring directory access permissions.
If the property has no value set, that means that existing permissions are preserved.
It is dependent on the copy action implementation whether these permissions will actually be applied.

For details see <apilink class="org.gradle.api.file.ConfigurableFilePermissions"/>.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>null</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.bundling.Jar:duplicatesStrategy" role="detail"><title><apilink class="org.gradle.api.file.DuplicatesStrategy"/> <literal>duplicatesStrategy</literal></title><para>The strategy to use when trying to copy more than one file to the same destination.
</para><para>
The value can be set with a case insensitive string of the enum value (e.g. <literal>'exclude'</literal> for <apilink class="org.gradle.api.file.DuplicatesStrategy" method="EXCLUDE"/>).
</para><para>
This strategy can be overridden for individual files by using <apilink class="org.gradle.api.file.CopySpec" method="eachFile(org.gradle.api.Action)"/> or <apilink class="org.gradle.api.file.CopySpec" method="filesMatching(java.lang.String, org.gradle.api.Action)"/>.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>DuplicatesStrategy.INHERIT</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.bundling.Jar:entryCompression" role="detail"><title><apilink class="org.gradle.api.tasks.bundling.ZipEntryCompression"/> <literal>entryCompression</literal></title><para>The compression level of the entries of the archive. If set to <apilink class="org.gradle.api.tasks.bundling.ZipEntryCompression" method="DEFLATED"/> (the default), each entry is
compressed using the DEFLATE algorithm. If set to <apilink class="org.gradle.api.tasks.bundling.ZipEntryCompression" method="STORED"/> the entries of the archive are left uncompressed.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>ZipEntryCompression.DEFLATED</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.bundling.Jar:excludes" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>excludes</literal></title><para>The set of exclude patterns.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>[]</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.bundling.Jar:filePermissions" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<apilink class="org.gradle.api.file.ConfigurableFilePermissions"/>&gt;</classname> <literal>filePermissions</literal></title><para>Property for querying and configuring file access permissions.
If the property has no value set, that means that existing permissions are preserved.
It is dependent on the copy action implementation whether these permissions will actually be applied.

For details see <apilink class="org.gradle.api.file.ConfigurableFilePermissions"/>.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>null</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.bundling.Jar:includeEmptyDirs" role="detail"><title><classname>boolean</classname> <literal>includeEmptyDirs</literal></title><para>Tells if empty target directories will be included in the copy.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>true</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.bundling.Jar:includes" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>includes</literal></title><para>The set of include patterns.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>[]</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.jvm.tasks.Jar:manifest" role="detail"><title><apilink class="org.gradle.api.java.archives.Manifest"/> <literal>manifest</literal></title><para>The manifest for this JAR archive.</para></section><section id="org.gradle.jvm.tasks.Jar:metadataCharset" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>metadataCharset</literal></title><para>The character set used to encode JAR metadata like file names.
Defaults to UTF-8.
You can change this property but it is not recommended as JVMs expect JAR metadata to be encoded using UTF-8</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>UTF-8</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.bundling.Jar:preserveFileTimestamps" role="detail"><title><classname>boolean</classname> <literal>preserveFileTimestamps</literal></title><para>Specifies whether file timestamps should be preserved in the archive.
</para><para>
If <literal>false</literal> this ensures that archive entries have the same time for builds between different machines, Java versions and operating systems.
</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>true</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.bundling.Jar:reproducibleFileOrder" role="detail"><title><classname>boolean</classname> <literal>reproducibleFileOrder</literal></title><para>Specifies whether to enforce a reproducible file order when reading files from directories.
</para><para>
Gradle will then walk the directories on disk which are part of this archive in a reproducible order
independent of file systems and operating systems.
This helps Gradle reliably produce byte-for-byte reproducible archives.
</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>false</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.bundling.Jar:source" role="detail"><title><apilink class="org.gradle.api.file.FileCollection"/> <literal>source</literal> (read-only)</title><para>The source files for this task.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>[]</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.bundling.Jar:zip64" role="detail"><title><classname>boolean</classname> <literal>zip64</literal></title><para>Whether the zip can contain more than 65535 files and/or support files greater than 4GB in size.
</para><para>
The standard zip format has hard limits on file size and count.
The <ulink url="http://en.wikipedia.org/wiki/Zip_(file_format)#ZIP64">Zip64 format extension</ulink>
practically removes these limits and is therefore required for building large zips.
</para><para>
However, not all Zip readers support the Zip64 extensions.
Notably, the <ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/zip/ZipInputStream.html"><classname>ZipInputStream</classname></ulink> JDK class does not support Zip64 for versions earlier than Java 7.
This means you should not enable this property if you are building JARs to be used with Java 6 and earlier runtimes.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>false</literal></seg></seglistitem></segmentedlist></section></section><section><title>Method details</title><section id="org.gradle.jvm.tasks.Jar:eachFile(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>eachFile</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> closure)</title><para>Adds an action to be applied to each file as it about to be copied into its destination. The given closure is
called with a <apilink class="org.gradle.api.file.FileCopyDetails"/> as its parameter. Actions are executed in the order
added, and are inherited from the parent spec.</para></section><section id="org.gradle.jvm.tasks.Jar:eachFile(org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>eachFile</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.FileCopyDetails"/>&gt;</classname> action)</title><para>Adds an action to be applied to each file as it is about to be copied into its destination. The action can change
the destination path of the file, filter the contents of the file, or exclude the file from the result entirely.
Actions are executed in the order added, and are inherited from the parent spec.</para></section><section id="org.gradle.jvm.tasks.Jar:exclude(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>exclude</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> excludeSpec)</title><para>Adds an exclude spec. This method may be called multiple times to append new specs.The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter. The closure should return true or false. Example:

</para><para><programlisting language="java">
copySpec {
  from 'source'
  into 'destination'
  //an example of excluding files from certain configuration:
  exclude { it.file in configurations.someConf.files }
}
</programlisting></para><para>

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.jvm.tasks.Jar:exclude(java.lang.Iterable)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>exclude</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> excludes)</title><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.jvm.tasks.Jar:exclude(java.lang.String[])" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>exclude</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>...</classname> excludes)</title><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.jvm.tasks.Jar:exclude(org.gradle.api.specs.Spec)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>exclude</literal>(<classname><apilink class="org.gradle.api.specs.Spec"/>&lt;<apilink class="org.gradle.api.file.FileTreeElement"/>&gt;</classname> excludeSpec)</title><para>Adds an exclude spec. This method may be called multiple times to append new specs.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.jvm.tasks.Jar:expand(java.util.Map)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>expand</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, ?&gt;</classname> properties)</title><para>Expands property references in each file as it is copied. More specifically, each file is transformed using
Groovy's <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/text/SimpleTemplateEngine.html"><classname>SimpleTemplateEngine</classname></ulink>. This means you can use simple property references, such as
<literal>$property</literal> or <literal>${property}</literal> in the file. You can also include arbitrary Groovy code in the
file, such as <literal>${version ?: 'unknown'}</literal> or <literal>${classpath*.name.join(' ')}</literal>
</para><para>
Note that all escape sequences (<literal>\n</literal>, <literal>\t</literal>, <literal>\\</literal>, etc) are converted to the symbols
they represent, so, for example, <literal>\n</literal> becomes newline. If this is undesirable then <apilink class="org.gradle.api.file.ContentFilterable" method="expand(java.util.Map, org.gradle.api.Action)"/>
should be used to disable this behavior.</para></section><section id="org.gradle.jvm.tasks.Jar:expand(java.util.Map, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>expand</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, ?&gt;</classname> properties, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.ExpandDetails"/>&gt;</classname> action)</title><para>Expands property references in each file as it is copied. More specifically, each file is transformed using
Groovy's <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/text/SimpleTemplateEngine.html"><classname>SimpleTemplateEngine</classname></ulink>. This means you can use simple property references, such as
<literal>$property</literal> or <literal>${property}</literal> in the file. You can also include arbitrary Groovy code in the
file, such as <literal>${version ?: 'unknown'}</literal> or <literal>${classpath*.name.join(' ')}</literal>. The template
engine can be configured with the provided action.
</para><para>
Note that by default all escape sequences (<literal>\n</literal>, <literal>\t</literal>, <literal>\\</literal>, etc) are converted to the symbols
they represent, so, for example, <literal>\n</literal> becomes newline. This behavior is controlled by
<apilink class="org.gradle.api.file.ExpandDetails" method="getEscapeBackslash()"/> property. It should be set to <literal>true</literal> to disable escape sequences
conversion:
</para><para><programlisting language="java">
 expand(one: '1', two: 2) {
     escapeBackslash = true
 }
</programlisting></para></section><section id="org.gradle.jvm.tasks.Jar:filesMatching(java.lang.Iterable, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>filesMatching</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> patterns, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.FileCopyDetails"/>&gt;</classname> action)</title><para>Configure the <apilink class="org.gradle.api.file.FileCopyDetails"/> for each file whose path matches any of the specified Ant-style patterns.
This is equivalent to using eachFile() and selectively applying a configuration based on the file's path.</para></section><section id="org.gradle.jvm.tasks.Jar:filesMatching(java.lang.String, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>filesMatching</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> pattern, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.FileCopyDetails"/>&gt;</classname> action)</title><para>Configure the <apilink class="org.gradle.api.file.FileCopyDetails"/> for each file whose path matches the specified Ant-style pattern.
This is equivalent to using eachFile() and selectively applying a configuration based on the file's path.</para></section><section id="org.gradle.jvm.tasks.Jar:filesNotMatching(java.lang.Iterable, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>filesNotMatching</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> patterns, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.FileCopyDetails"/>&gt;</classname> action)</title><para>Configure the <apilink class="org.gradle.api.file.FileCopyDetails"/> for each file whose path does not match any of the specified
Ant-style patterns. This is equivalent to using eachFile() and selectively applying a configuration based on the
file's path.</para></section><section id="org.gradle.jvm.tasks.Jar:filesNotMatching(java.lang.String, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>filesNotMatching</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> pattern, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.FileCopyDetails"/>&gt;</classname> action)</title><para>Configure the <apilink class="org.gradle.api.file.FileCopyDetails"/> for each file whose path does not match the specified
Ant-style pattern. This is equivalent to using eachFile() and selectively applying a configuration based on the
file's path.</para></section><section id="org.gradle.jvm.tasks.Jar:filter(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>filter</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> closure)</title><para>Adds a content filter based on the provided closure.  The Closure will be called with each line (stripped of line
endings) and should return a String to replace the line or <literal>null</literal> to remove the line.  If every line is
removed, the result will be an empty file, not an absent one.</para></section><section id="org.gradle.jvm.tasks.Jar:filter(java.lang.Class)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>filter</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html"><classname>Class</classname></ulink>&lt;? extends <ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/FilterReader.html"><classname>FilterReader</classname></ulink>&gt;</classname> filterType)</title><para>Adds a content filter to be used during the copy.  Multiple calls to filter, add additional filters to the
filter chain.  Each filter should implement <literal>java.io.FilterReader</literal>. Include <literal>org.apache.tools.ant.filters.*</literal> for access to all the standard Ant filters.</para><para> Examples:
</para><para><programlisting language="java">
   filter(StripJavaComments)
   filter(com.mycompany.project.CustomFilter)
</programlisting></para></section><section id="org.gradle.jvm.tasks.Jar:filter(java.util.Map, java.lang.Class)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>filter</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, ?&gt;</classname> properties, <classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html"><classname>Class</classname></ulink>&lt;? extends <ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/FilterReader.html"><classname>FilterReader</classname></ulink>&gt;</classname> filterType)</title><para>Adds a content filter to be used during the copy.  Multiple calls to filter, add additional filters to the
filter chain.  Each filter should implement <literal>java.io.FilterReader</literal>. Include <literal>org.apache.tools.ant.filters.*</literal> for access to all the standard Ant filters.</para><para>Filter properties may be specified using groovy map syntax.</para><para> Examples:
</para><para><programlisting language="java">
   filter(HeadFilter, lines:25, skip:2)
   filter(ReplaceTokens, tokens:[copyright:'2009', version:'2.3.1'])
</programlisting></para></section><section id="org.gradle.jvm.tasks.Jar:filter(org.gradle.api.Transformer)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>filter</literal>(<classname><apilink class="org.gradle.api.Transformer"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> transformer)</title><para>Adds a content filter based on the provided transformer.  The Closure will be called with each line (stripped of line
endings) and should return a String to replace the line or <literal>null</literal> to remove the line.  If every line is
removed, the result will be an empty file, not an absent one.</para></section><section id="org.gradle.jvm.tasks.Jar:from(java.lang.Object, groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>from</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> sourcePath, <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> c)</title><para>Specifies the source files or directories for a copy and creates a child <literal>CopySourceSpec</literal>. The given source
path is evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/> .</para></section><section id="org.gradle.jvm.tasks.Jar:from(java.lang.Object, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>from</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> sourcePath, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.CopySpec"/>&gt;</classname> configureAction)</title><para>Specifies the source files or directories for a copy and creates a child <literal>CopySpec</literal>. The given source
path is evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/> .</para></section><section id="org.gradle.jvm.tasks.Jar:from(java.lang.Object[])" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>from</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink>...</classname> sourcePaths)</title><para>Specifies source files or directories for a copy. The given paths are evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/>.</para></section><section id="org.gradle.jvm.tasks.Jar:include(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>include</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> includeSpec)</title><para>Adds an include spec. This method may be called multiple times to append new specs. The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></section><section id="org.gradle.jvm.tasks.Jar:include(java.lang.Iterable)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>include</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> includes)</title><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></section><section id="org.gradle.jvm.tasks.Jar:include(java.lang.String[])" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>include</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>...</classname> includes)</title><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></section><section id="org.gradle.jvm.tasks.Jar:include(org.gradle.api.specs.Spec)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>include</literal>(<classname><apilink class="org.gradle.api.specs.Spec"/>&lt;<apilink class="org.gradle.api.file.FileTreeElement"/>&gt;</classname> includeSpec)</title><para>Adds an include spec. This method may be called multiple times to append new specs.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></section><section id="org.gradle.jvm.tasks.Jar:into(java.lang.Object)" role="detail"><title><apilink class="org.gradle.api.tasks.bundling.AbstractArchiveTask"/> <literal>into</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> destPath)</title><para>Specifies the destination directory *inside* the archive for the files.
The destination is evaluated as per <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/>.
Don't mix it up with <apilink class="org.gradle.api.tasks.bundling.AbstractArchiveTask" method="getDestinationDirectory()"/> which specifies the output directory for the archive.</para></section><section id="org.gradle.jvm.tasks.Jar:into(java.lang.Object, groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.bundling.AbstractArchiveTask"/> <literal>into</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> destPath, <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> configureClosure)</title><para>Creates and configures a child <literal>CopySpec</literal> with a destination directory *inside* the archive for the files.
The destination is evaluated as per <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/>.
Don't mix it up with <apilink class="org.gradle.api.tasks.bundling.AbstractArchiveTask" method="getDestinationDirectory()"/> which specifies the output directory for the archive.</para></section><section id="org.gradle.jvm.tasks.Jar:into(java.lang.Object, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.file.CopySpec"/> <literal>into</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> destPath, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.CopySpec"/>&gt;</classname> copySpec)</title><para>Creates and configures a child <literal>CopySpec</literal> with a destination directory *inside* the archive for the files.
The destination is evaluated as per <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/>.
Don't mix it up with <apilink class="org.gradle.api.tasks.bundling.AbstractArchiveTask" method="getDestinationDirectory()"/> which specifies the output directory for the archive.</para></section><section id="org.gradle.jvm.tasks.Jar:manifest(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.jvm.tasks.Jar"/> <literal>manifest</literal>(<classname><ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink>&lt;?&gt;</classname> configureClosure)</title><para>Configures the manifest for this JAR archive.

</para><para>The given closure is executed to configure the manifest. The <apilink class="org.gradle.api.java.archives.Manifest"/> is passed to the closure as its delegate.</para></section><section id="org.gradle.jvm.tasks.Jar:manifest(org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.jvm.tasks.Jar"/> <literal>manifest</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.java.archives.Manifest"/>&gt;</classname> configureAction)</title><para>Configures the manifest for this JAR archive.

</para><para>The given action is executed to configure the manifest.</para></section><section id="org.gradle.jvm.tasks.Jar:metaInf(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.file.CopySpec"/> <literal>metaInf</literal>(<classname><ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink>&lt;?&gt;</classname> configureClosure)</title><para>Adds content to this JAR archive's META-INF directory.

</para><para>The given closure is executed to configure a <literal>CopySpec</literal>. The <apilink class="org.gradle.api.file.CopySpec"/> is passed to the closure as its delegate.</para></section><section id="org.gradle.jvm.tasks.Jar:metaInf(org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.file.CopySpec"/> <literal>metaInf</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.CopySpec"/>&gt;</classname> configureAction)</title><para>Adds content to this JAR archive's META-INF directory.

</para><para>The given action is executed to configure a <literal>CopySpec</literal>.</para></section><section id="org.gradle.jvm.tasks.Jar:rename(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>rename</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> closure)</title><para>Renames a source file. The closure will be called with a single parameter, the name of the file.
The closure should return a String object with a new target name. The closure may return null,
in which case the original name will be used.</para></section><section id="org.gradle.jvm.tasks.Jar:rename(java.lang.String, java.lang.String)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>rename</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> sourceRegEx, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> replaceWith)</title><para>Renames files based on a regular expression.  Uses java.util.regex type of regular expressions.  Note that the
replace string should use the '$1' syntax to refer to capture groups in the source regular expression.  Files
that do not match the source regular expression will be copied with the original name.

</para><para> Example:
</para><para><programlisting language="java">
rename '(.*)_OEM_BLUE_(.*)', '$1$2'
</programlisting></para><para>
would map the file 'style_OEM_BLUE_.css' to 'style.css'</para></section><section id="org.gradle.jvm.tasks.Jar:rename(java.util.regex.Pattern, java.lang.String)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>rename</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html"><classname>Pattern</classname></ulink> sourceRegEx, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> replaceWith)</title><para>Renames files based on a regular expression. See <apilink class="org.gradle.api.file.CopyProcessingSpec" method="rename(java.lang.String, java.lang.String)"/>.</para></section><section id="org.gradle.jvm.tasks.Jar:rename(org.gradle.api.Transformer)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>rename</literal>(<classname><apilink class="org.gradle.api.Transformer"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> renamer)</title><para>Renames a source file. The function will be called with a single parameter, the name of the file.
The function should return a new target name. The function may return null,
in which case the original name will be used.</para></section><section id="org.gradle.jvm.tasks.Jar:with(org.gradle.api.file.CopySpec[])" role="detail"><title><apilink class="org.gradle.api.file.CopySpec"/> <literal>with</literal>(<classname><apilink class="org.gradle.api.file.CopySpec"/>...</classname> sourceSpecs)</title><para>Adds the given specs as a child of this spec.

</para><para><programlisting language="java">
def contentSpec = copySpec {
  from("content") {
    include "**/*.txt"
  }
}

task copy(type: Copy) {
  into "$buildDir/copy"
  with contentSpec
}
</programlisting></para></section></section></chapter><chapter id="org.gradle.plugins.ear.Ear"><title>Ear</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.plugins.ear.Ear" style="javadoc"/></seg></seglistitem></segmentedlist><para>Assembles an EAR archive.</para><section><title>Properties</title><table><title>Properties - Ear</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.plugins.ear.Ear:archiveAppendix"><literal>archiveAppendix</literal></link></td><td><para>The appendix part of the archive name, if any.</para></td></tr><tr><td><link linkend="org.gradle.plugins.ear.Ear:archiveBaseName"><literal>archiveBaseName</literal></link></td><td><para>The base name of the archive.</para></td></tr><tr><td><link linkend="org.gradle.plugins.ear.Ear:archiveClassifier"><literal>archiveClassifier</literal></link></td><td><para>The classifier part of the archive name, if any.</para></td></tr><tr><td><link linkend="org.gradle.plugins.ear.Ear:archiveExtension"><literal>archiveExtension</literal></link></td><td><para>The extension part of the archive name.</para></td></tr><tr><td><link linkend="org.gradle.plugins.ear.Ear:archiveFile"><literal>archiveFile</literal></link></td><td><para>The <apilink class="org.gradle.api.file.RegularFile"/> where the archive is constructed.
The path is simply the <literal>destinationDirectory</literal> plus the <literal>archiveFileName</literal>.</para></td></tr><tr><td><link linkend="org.gradle.plugins.ear.Ear:archiveFileName"><literal>archiveFileName</literal></link></td><td><para>The archive name. If the name has not been explicitly set, the pattern for the name is:
<literal>[archiveBaseName]-[archiveAppendix]-[archiveVersion]-[archiveClassifier].[archiveExtension]</literal></para></td></tr><tr><td><link linkend="org.gradle.plugins.ear.Ear:archiveVersion"><literal>archiveVersion</literal></link></td><td><para>The version part of the archive name.</para></td></tr><tr><td><link linkend="org.gradle.plugins.ear.Ear:caseSensitive"><literal>caseSensitive</literal></link></td><td><para>Specifies whether case-sensitive pattern matching should be used.</para></td></tr><tr><td><link linkend="org.gradle.plugins.ear.Ear:destinationDirectory"><literal>destinationDirectory</literal></link></td><td><para>The directory where the archive will be placed.</para></td></tr><tr><td><link linkend="org.gradle.plugins.ear.Ear:dirPermissions"><literal>dirPermissions</literal></link></td><td><para>Property for querying and configuring directory access permissions.
If the property has no value set, that means that existing permissions are preserved.
It is dependent on the copy action implementation whether these permissions will actually be applied.

For details see <apilink class="org.gradle.api.file.ConfigurableFilePermissions"/>.</para></td></tr><tr><td><link linkend="org.gradle.plugins.ear.Ear:duplicatesStrategy"><literal>duplicatesStrategy</literal></link></td><td><para>The strategy to use when trying to copy more than one file to the same destination.
</para></td></tr><tr><td><link linkend="org.gradle.plugins.ear.Ear:entryCompression"><literal>entryCompression</literal></link></td><td><para>The compression level of the entries of the archive. If set to <apilink class="org.gradle.api.tasks.bundling.ZipEntryCompression" method="DEFLATED"/> (the default), each entry is
compressed using the DEFLATE algorithm. If set to <apilink class="org.gradle.api.tasks.bundling.ZipEntryCompression" method="STORED"/> the entries of the archive are left uncompressed.</para></td></tr><tr><td><link linkend="org.gradle.plugins.ear.Ear:excludes"><literal>excludes</literal></link></td><td><para>The set of exclude patterns.</para></td></tr><tr><td><link linkend="org.gradle.plugins.ear.Ear:filePermissions"><literal>filePermissions</literal></link></td><td><para>Property for querying and configuring file access permissions.
If the property has no value set, that means that existing permissions are preserved.
It is dependent on the copy action implementation whether these permissions will actually be applied.

For details see <apilink class="org.gradle.api.file.ConfigurableFilePermissions"/>.</para></td></tr><tr><td><link linkend="org.gradle.plugins.ear.Ear:generateDeploymentDescriptor"><literal>generateDeploymentDescriptor</literal></link></td><td><para>Should deploymentDescriptor be generated?</para></td></tr><tr><td><link linkend="org.gradle.plugins.ear.Ear:includeEmptyDirs"><literal>includeEmptyDirs</literal></link></td><td><para>Tells if empty target directories will be included in the copy.</para></td></tr><tr><td><link linkend="org.gradle.plugins.ear.Ear:includes"><literal>includes</literal></link></td><td><para>The set of include patterns.</para></td></tr><tr><td><link linkend="org.gradle.plugins.ear.Ear:libDirName"><literal>libDirName</literal></link></td><td><para>The name of the library directory in the EAR file. Default is "lib".</para></td></tr><tr><td><link linkend="org.gradle.plugins.ear.Ear:manifest"><literal>manifest</literal></link></td><td><para>The manifest for this JAR archive.</para></td></tr><tr><td><link linkend="org.gradle.plugins.ear.Ear:metadataCharset"><literal>metadataCharset</literal></link></td><td><para>The character set used to encode JAR metadata like file names.
Defaults to UTF-8.
You can change this property but it is not recommended as JVMs expect JAR metadata to be encoded using UTF-8</para></td></tr><tr><td><link linkend="org.gradle.plugins.ear.Ear:preserveFileTimestamps"><literal>preserveFileTimestamps</literal></link></td><td><para>Specifies whether file timestamps should be preserved in the archive.
</para></td></tr><tr><td><link linkend="org.gradle.plugins.ear.Ear:reproducibleFileOrder"><literal>reproducibleFileOrder</literal></link></td><td><para>Specifies whether to enforce a reproducible file order when reading files from directories.
</para></td></tr><tr><td><link linkend="org.gradle.plugins.ear.Ear:source"><literal>source</literal></link></td><td><para>The source files for this task.</para></td></tr><tr><td><link linkend="org.gradle.plugins.ear.Ear:zip64"><literal>zip64</literal></link></td><td><para>Whether the zip can contain more than 65535 files and/or support files greater than 4GB in size.
</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - Ear</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.plugins.ear.Ear:deploymentDescriptor(groovy.lang.Closure)">deploymentDescriptor</link>(configureClosure)</literal></td><td><para>Configures the deployment descriptor for this EAR archive.

</para></td></tr><tr><td><literal><link linkend="org.gradle.plugins.ear.Ear:deploymentDescriptor(org.gradle.api.Action)">deploymentDescriptor</link>(configureAction)</literal></td><td><para>Configures the deployment descriptor for this EAR archive.

</para></td></tr><tr><td><literal><link linkend="org.gradle.plugins.ear.Ear:eachFile(groovy.lang.Closure)">eachFile</link>(closure)</literal></td><td><para>Adds an action to be applied to each file as it about to be copied into its destination. The given closure is
called with a <apilink class="org.gradle.api.file.FileCopyDetails"/> as its parameter. Actions are executed in the order
added, and are inherited from the parent spec.</para></td></tr><tr><td><literal><link linkend="org.gradle.plugins.ear.Ear:eachFile(org.gradle.api.Action)">eachFile</link>(action)</literal></td><td><para>Adds an action to be applied to each file as it is about to be copied into its destination. The action can change
the destination path of the file, filter the contents of the file, or exclude the file from the result entirely.
Actions are executed in the order added, and are inherited from the parent spec.</para></td></tr><tr><td><literal><link linkend="org.gradle.plugins.ear.Ear:exclude(groovy.lang.Closure)">exclude</link>(excludeSpec)</literal></td><td><para>Adds an exclude spec. This method may be called multiple times to append new specs.The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter. The closure should return true or false. Example:

</para></td></tr><tr><td><literal><link linkend="org.gradle.plugins.ear.Ear:exclude(java.lang.Iterable)">exclude</link>(excludes)</literal></td><td><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.plugins.ear.Ear:exclude(java.lang.String[])">exclude</link>(excludes)</literal></td><td><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.plugins.ear.Ear:exclude(org.gradle.api.specs.Spec)">exclude</link>(excludeSpec)</literal></td><td><para>Adds an exclude spec. This method may be called multiple times to append new specs.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.plugins.ear.Ear:expand(java.util.Map)">expand</link>(properties)</literal></td><td><para>Expands property references in each file as it is copied. More specifically, each file is transformed using
Groovy's <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/text/SimpleTemplateEngine.html"><classname>SimpleTemplateEngine</classname></ulink>. This means you can use simple property references, such as
<literal>$property</literal> or <literal>${property}</literal> in the file. You can also include arbitrary Groovy code in the
file, such as <literal>${version ?: 'unknown'}</literal> or <literal>${classpath*.name.join(' ')}</literal>
</para></td></tr><tr><td><literal><link linkend="org.gradle.plugins.ear.Ear:expand(java.util.Map, org.gradle.api.Action)">expand</link>(properties, action)</literal></td><td><para>Expands property references in each file as it is copied. More specifically, each file is transformed using
Groovy's <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/text/SimpleTemplateEngine.html"><classname>SimpleTemplateEngine</classname></ulink>. This means you can use simple property references, such as
<literal>$property</literal> or <literal>${property}</literal> in the file. You can also include arbitrary Groovy code in the
file, such as <literal>${version ?: 'unknown'}</literal> or <literal>${classpath*.name.join(' ')}</literal>. The template
engine can be configured with the provided action.
</para></td></tr><tr><td><literal><link linkend="org.gradle.plugins.ear.Ear:filesMatching(java.lang.Iterable, org.gradle.api.Action)">filesMatching</link>(patterns, action)</literal></td><td><para>Configure the <apilink class="org.gradle.api.file.FileCopyDetails"/> for each file whose path matches any of the specified Ant-style patterns.
This is equivalent to using eachFile() and selectively applying a configuration based on the file's path.</para></td></tr><tr><td><literal><link linkend="org.gradle.plugins.ear.Ear:filesMatching(java.lang.String, org.gradle.api.Action)">filesMatching</link>(pattern, action)</literal></td><td><para>Configure the <apilink class="org.gradle.api.file.FileCopyDetails"/> for each file whose path matches the specified Ant-style pattern.
This is equivalent to using eachFile() and selectively applying a configuration based on the file's path.</para></td></tr><tr><td><literal><link linkend="org.gradle.plugins.ear.Ear:filesNotMatching(java.lang.Iterable, org.gradle.api.Action)">filesNotMatching</link>(patterns, action)</literal></td><td><para>Configure the <apilink class="org.gradle.api.file.FileCopyDetails"/> for each file whose path does not match any of the specified
Ant-style patterns. This is equivalent to using eachFile() and selectively applying a configuration based on the
file's path.</para></td></tr><tr><td><literal><link linkend="org.gradle.plugins.ear.Ear:filesNotMatching(java.lang.String, org.gradle.api.Action)">filesNotMatching</link>(pattern, action)</literal></td><td><para>Configure the <apilink class="org.gradle.api.file.FileCopyDetails"/> for each file whose path does not match the specified
Ant-style pattern. This is equivalent to using eachFile() and selectively applying a configuration based on the
file's path.</para></td></tr><tr><td><literal><link linkend="org.gradle.plugins.ear.Ear:filter(groovy.lang.Closure)">filter</link>(closure)</literal></td><td><para>Adds a content filter based on the provided closure.  The Closure will be called with each line (stripped of line
endings) and should return a String to replace the line or <literal>null</literal> to remove the line.  If every line is
removed, the result will be an empty file, not an absent one.</para></td></tr><tr><td><literal><link linkend="org.gradle.plugins.ear.Ear:filter(java.lang.Class)">filter</link>(filterType)</literal></td><td><para>Adds a content filter to be used during the copy.  Multiple calls to filter, add additional filters to the
filter chain.  Each filter should implement <literal>java.io.FilterReader</literal>. Include <literal>org.apache.tools.ant.filters.*</literal> for access to all the standard Ant filters.</para></td></tr><tr><td><literal><link linkend="org.gradle.plugins.ear.Ear:filter(java.util.Map, java.lang.Class)">filter</link>(properties, filterType)</literal></td><td><para>Adds a content filter to be used during the copy.  Multiple calls to filter, add additional filters to the
filter chain.  Each filter should implement <literal>java.io.FilterReader</literal>. Include <literal>org.apache.tools.ant.filters.*</literal> for access to all the standard Ant filters.</para></td></tr><tr><td><literal><link linkend="org.gradle.plugins.ear.Ear:filter(org.gradle.api.Transformer)">filter</link>(transformer)</literal></td><td><para>Adds a content filter based on the provided transformer.  The Closure will be called with each line (stripped of line
endings) and should return a String to replace the line or <literal>null</literal> to remove the line.  If every line is
removed, the result will be an empty file, not an absent one.</para></td></tr><tr><td><literal><link linkend="org.gradle.plugins.ear.Ear:from(java.lang.Object, groovy.lang.Closure)">from</link>(sourcePath, c)</literal></td><td><para>Specifies the source files or directories for a copy and creates a child <literal>CopySourceSpec</literal>. The given source
path is evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/> .</para></td></tr><tr><td><literal><link linkend="org.gradle.plugins.ear.Ear:from(java.lang.Object, org.gradle.api.Action)">from</link>(sourcePath, configureAction)</literal></td><td><para>Specifies the source files or directories for a copy and creates a child <literal>CopySpec</literal>. The given source
path is evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/> .</para></td></tr><tr><td><literal><link linkend="org.gradle.plugins.ear.Ear:from(java.lang.Object[])">from</link>(sourcePaths)</literal></td><td><para>Specifies source files or directories for a copy. The given paths are evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/>.</para></td></tr><tr><td><literal><link linkend="org.gradle.plugins.ear.Ear:include(groovy.lang.Closure)">include</link>(includeSpec)</literal></td><td><para>Adds an include spec. This method may be called multiple times to append new specs. The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></td></tr><tr><td><literal><link linkend="org.gradle.plugins.ear.Ear:include(java.lang.Iterable)">include</link>(includes)</literal></td><td><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.plugins.ear.Ear:include(java.lang.String[])">include</link>(includes)</literal></td><td><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.plugins.ear.Ear:include(org.gradle.api.specs.Spec)">include</link>(includeSpec)</literal></td><td><para>Adds an include spec. This method may be called multiple times to append new specs.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></td></tr><tr><td><literal><link linkend="org.gradle.plugins.ear.Ear:into(java.lang.Object)">into</link>(destPath)</literal></td><td><para>Specifies the destination directory *inside* the archive for the files.
The destination is evaluated as per <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/>.
Don't mix it up with <apilink class="org.gradle.api.tasks.bundling.AbstractArchiveTask" method="getDestinationDirectory()"/> which specifies the output directory for the archive.</para></td></tr><tr><td><literal><link linkend="org.gradle.plugins.ear.Ear:into(java.lang.Object, groovy.lang.Closure)">into</link>(destPath, configureClosure)</literal></td><td><para>Creates and configures a child <literal>CopySpec</literal> with a destination directory *inside* the archive for the files.
The destination is evaluated as per <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/>.
Don't mix it up with <apilink class="org.gradle.api.tasks.bundling.AbstractArchiveTask" method="getDestinationDirectory()"/> which specifies the output directory for the archive.</para></td></tr><tr><td><literal><link linkend="org.gradle.plugins.ear.Ear:into(java.lang.Object, org.gradle.api.Action)">into</link>(destPath, copySpec)</literal></td><td><para>Creates and configures a child <literal>CopySpec</literal> with a destination directory *inside* the archive for the files.
The destination is evaluated as per <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/>.
Don't mix it up with <apilink class="org.gradle.api.tasks.bundling.AbstractArchiveTask" method="getDestinationDirectory()"/> which specifies the output directory for the archive.</para></td></tr><tr><td><literal><link linkend="org.gradle.plugins.ear.Ear:lib(groovy.lang.Closure)">lib</link>(configureClosure)</literal></td><td><para>Adds dependency libraries to include in the 'lib' directory of the EAR archive.

</para></td></tr><tr><td><literal><link linkend="org.gradle.plugins.ear.Ear:lib(org.gradle.api.Action)">lib</link>(configureAction)</literal></td><td><para>Adds dependency libraries to include in the 'lib' directory of the EAR archive.

</para></td></tr><tr><td><literal><link linkend="org.gradle.plugins.ear.Ear:manifest(groovy.lang.Closure)">manifest</link>(configureClosure)</literal></td><td><para>Configures the manifest for this JAR archive.

</para></td></tr><tr><td><literal><link linkend="org.gradle.plugins.ear.Ear:manifest(org.gradle.api.Action)">manifest</link>(configureAction)</literal></td><td><para>Configures the manifest for this JAR archive.

</para></td></tr><tr><td><literal><link linkend="org.gradle.plugins.ear.Ear:metaInf(groovy.lang.Closure)">metaInf</link>(configureClosure)</literal></td><td><para>Adds content to this JAR archive's META-INF directory.

</para></td></tr><tr><td><literal><link linkend="org.gradle.plugins.ear.Ear:metaInf(org.gradle.api.Action)">metaInf</link>(configureAction)</literal></td><td><para>Adds content to this JAR archive's META-INF directory.

</para></td></tr><tr><td><literal><link linkend="org.gradle.plugins.ear.Ear:rename(groovy.lang.Closure)">rename</link>(closure)</literal></td><td><para>Renames a source file. The closure will be called with a single parameter, the name of the file.
The closure should return a String object with a new target name. The closure may return null,
in which case the original name will be used.</para></td></tr><tr><td><literal><link linkend="org.gradle.plugins.ear.Ear:rename(java.lang.String, java.lang.String)">rename</link>(sourceRegEx, replaceWith)</literal></td><td><para>Renames files based on a regular expression.  Uses java.util.regex type of regular expressions.  Note that the
replace string should use the '$1' syntax to refer to capture groups in the source regular expression.  Files
that do not match the source regular expression will be copied with the original name.

</para></td></tr><tr><td><literal><link linkend="org.gradle.plugins.ear.Ear:rename(java.util.regex.Pattern, java.lang.String)">rename</link>(sourceRegEx, replaceWith)</literal></td><td><para>Renames files based on a regular expression. See <apilink class="org.gradle.api.file.CopyProcessingSpec" method="rename(java.lang.String, java.lang.String)"/>.</para></td></tr><tr><td><literal><link linkend="org.gradle.plugins.ear.Ear:rename(org.gradle.api.Transformer)">rename</link>(renamer)</literal></td><td><para>Renames a source file. The function will be called with a single parameter, the name of the file.
The function should return a new target name. The function may return null,
in which case the original name will be used.</para></td></tr><tr><td><literal><link linkend="org.gradle.plugins.ear.Ear:with(org.gradle.api.file.CopySpec[])">with</link>(sourceSpecs)</literal></td><td><para>Adds the given specs as a child of this spec.

</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.plugins.ear.Ear:archiveAppendix" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>archiveAppendix</literal></title><para>The appendix part of the archive name, if any.</para><segmentedlist><segtitle>Default with <literal>ear</literal> plugin</segtitle><seglistitem><seg><literal>""</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.plugins.ear.Ear:archiveBaseName" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>archiveBaseName</literal></title><para>The base name of the archive.</para><segmentedlist><segtitle>Default with <literal>ear</literal> plugin</segtitle><seglistitem><seg><literal>project.base.archivesBaseName</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.plugins.ear.Ear:archiveClassifier" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>archiveClassifier</literal></title><para>The classifier part of the archive name, if any.</para><segmentedlist><segtitle>Default with <literal>ear</literal> plugin</segtitle><seglistitem><seg><literal>""</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.plugins.ear.Ear:archiveExtension" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>archiveExtension</literal></title><para>The extension part of the archive name.</para></section><section id="org.gradle.plugins.ear.Ear:archiveFile" role="detail"><title><classname><apilink class="org.gradle.api.provider.Provider"/>&lt;<apilink class="org.gradle.api.file.RegularFile"/>&gt;</classname> <literal>archiveFile</literal></title><para>The <apilink class="org.gradle.api.file.RegularFile"/> where the archive is constructed.
The path is simply the <literal>destinationDirectory</literal> plus the <literal>archiveFileName</literal>.</para><segmentedlist><segtitle>Default with <literal>ear</literal> plugin</segtitle><seglistitem><seg><literal><replaceable>${destinationDirectory}</replaceable>/<replaceable>${archiveFileName}</replaceable></literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.plugins.ear.Ear:archiveFileName" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>archiveFileName</literal></title><para>The archive name. If the name has not been explicitly set, the pattern for the name is:
<literal>[archiveBaseName]-[archiveAppendix]-[archiveVersion]-[archiveClassifier].[archiveExtension]</literal></para><segmentedlist><segtitle>Default with <literal>ear</literal> plugin</segtitle><seglistitem><seg><literal><replaceable>${archiveBaseName}</replaceable>-<replaceable>${archiveAppendix}</replaceable>-<replaceable>${archiveVersion}</replaceable>-<replaceable>${archiveClassifier}</replaceable>.<replaceable>${archiveExtension}</replaceable></literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.plugins.ear.Ear:archiveVersion" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>archiveVersion</literal></title><para>The version part of the archive name.</para><segmentedlist><segtitle>Default with <literal>ear</literal> plugin</segtitle><seglistitem><seg><literal>project.version</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.plugins.ear.Ear:caseSensitive" role="detail"><title><classname>boolean</classname> <literal>caseSensitive</literal></title><para>Specifies whether case-sensitive pattern matching should be used.</para><segmentedlist><segtitle>Default with <literal>ear</literal> plugin</segtitle><seglistitem><seg><literal>true</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.plugins.ear.Ear:destinationDirectory" role="detail"><title><apilink class="org.gradle.api.file.DirectoryProperty"/> <literal>destinationDirectory</literal></title><para>The directory where the archive will be placed.</para><segmentedlist><segtitle>Default with <literal>ear</literal> plugin</segtitle><seglistitem><seg><literal>project.distsDir</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.plugins.ear.Ear:dirPermissions" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<apilink class="org.gradle.api.file.ConfigurableFilePermissions"/>&gt;</classname> <literal>dirPermissions</literal></title><para>Property for querying and configuring directory access permissions.
If the property has no value set, that means that existing permissions are preserved.
It is dependent on the copy action implementation whether these permissions will actually be applied.

For details see <apilink class="org.gradle.api.file.ConfigurableFilePermissions"/>.</para><segmentedlist><segtitle>Default with <literal>ear</literal> plugin</segtitle><seglistitem><seg><literal>null</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.plugins.ear.Ear:duplicatesStrategy" role="detail"><title><apilink class="org.gradle.api.file.DuplicatesStrategy"/> <literal>duplicatesStrategy</literal></title><para>The strategy to use when trying to copy more than one file to the same destination.
</para><para>
The value can be set with a case insensitive string of the enum value (e.g. <literal>'exclude'</literal> for <apilink class="org.gradle.api.file.DuplicatesStrategy" method="EXCLUDE"/>).
</para><para>
This strategy can be overridden for individual files by using <apilink class="org.gradle.api.file.CopySpec" method="eachFile(org.gradle.api.Action)"/> or <apilink class="org.gradle.api.file.CopySpec" method="filesMatching(java.lang.String, org.gradle.api.Action)"/>.</para><segmentedlist><segtitle>Default with <literal>ear</literal> plugin</segtitle><seglistitem><seg><literal>DuplicatesStrategy.INHERIT</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.plugins.ear.Ear:entryCompression" role="detail"><title><apilink class="org.gradle.api.tasks.bundling.ZipEntryCompression"/> <literal>entryCompression</literal></title><para>The compression level of the entries of the archive. If set to <apilink class="org.gradle.api.tasks.bundling.ZipEntryCompression" method="DEFLATED"/> (the default), each entry is
compressed using the DEFLATE algorithm. If set to <apilink class="org.gradle.api.tasks.bundling.ZipEntryCompression" method="STORED"/> the entries of the archive are left uncompressed.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>ZipEntryCompression.DEFLATED</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.plugins.ear.Ear:excludes" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>excludes</literal></title><para>The set of exclude patterns.</para><segmentedlist><segtitle>Default with <literal>ear</literal> plugin</segtitle><seglistitem><seg><literal>[]</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.plugins.ear.Ear:filePermissions" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<apilink class="org.gradle.api.file.ConfigurableFilePermissions"/>&gt;</classname> <literal>filePermissions</literal></title><para>Property for querying and configuring file access permissions.
If the property has no value set, that means that existing permissions are preserved.
It is dependent on the copy action implementation whether these permissions will actually be applied.

For details see <apilink class="org.gradle.api.file.ConfigurableFilePermissions"/>.</para><segmentedlist><segtitle>Default with <literal>ear</literal> plugin</segtitle><seglistitem><seg><literal>null</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.plugins.ear.Ear:generateDeploymentDescriptor" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html"><classname>Boolean</classname></ulink>&gt;</classname> <literal>generateDeploymentDescriptor</literal></title><para>Should deploymentDescriptor be generated?</para><segmentedlist><segtitle>Default with <literal>ear</literal> plugin</segtitle><seglistitem><seg><literal>true</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.plugins.ear.Ear:includeEmptyDirs" role="detail"><title><classname>boolean</classname> <literal>includeEmptyDirs</literal></title><para>Tells if empty target directories will be included in the copy.</para><segmentedlist><segtitle>Default with <literal>ear</literal> plugin</segtitle><seglistitem><seg><literal>true</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.plugins.ear.Ear:includes" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>includes</literal></title><para>The set of include patterns.</para><segmentedlist><segtitle>Default with <literal>ear</literal> plugin</segtitle><seglistitem><seg><literal>[]</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.plugins.ear.Ear:libDirName" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>libDirName</literal></title><para>The name of the library directory in the EAR file. Default is "lib".</para><segmentedlist><segtitle>Default with <literal>ear</literal> plugin</segtitle><seglistitem><seg><literal>'lib'</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.plugins.ear.Ear:manifest" role="detail"><title><apilink class="org.gradle.api.java.archives.Manifest"/> <literal>manifest</literal></title><para>The manifest for this JAR archive.</para></section><section id="org.gradle.plugins.ear.Ear:metadataCharset" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>metadataCharset</literal></title><para>The character set used to encode JAR metadata like file names.
Defaults to UTF-8.
You can change this property but it is not recommended as JVMs expect JAR metadata to be encoded using UTF-8</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>UTF-8</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.plugins.ear.Ear:preserveFileTimestamps" role="detail"><title><classname>boolean</classname> <literal>preserveFileTimestamps</literal></title><para>Specifies whether file timestamps should be preserved in the archive.
</para><para>
If <literal>false</literal> this ensures that archive entries have the same time for builds between different machines, Java versions and operating systems.
</para><segmentedlist><segtitle>Default with <literal>ear</literal> plugin</segtitle><seglistitem><seg><literal>true</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.plugins.ear.Ear:reproducibleFileOrder" role="detail"><title><classname>boolean</classname> <literal>reproducibleFileOrder</literal></title><para>Specifies whether to enforce a reproducible file order when reading files from directories.
</para><para>
Gradle will then walk the directories on disk which are part of this archive in a reproducible order
independent of file systems and operating systems.
This helps Gradle reliably produce byte-for-byte reproducible archives.
</para><segmentedlist><segtitle>Default with <literal>ear</literal> plugin</segtitle><seglistitem><seg><literal>false</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.plugins.ear.Ear:source" role="detail"><title><apilink class="org.gradle.api.file.FileCollection"/> <literal>source</literal> (read-only)</title><para>The source files for this task.</para></section><section id="org.gradle.plugins.ear.Ear:zip64" role="detail"><title><classname>boolean</classname> <literal>zip64</literal></title><para>Whether the zip can contain more than 65535 files and/or support files greater than 4GB in size.
</para><para>
The standard zip format has hard limits on file size and count.
The <ulink url="http://en.wikipedia.org/wiki/Zip_(file_format)#ZIP64">Zip64 format extension</ulink>
practically removes these limits and is therefore required for building large zips.
</para><para>
However, not all Zip readers support the Zip64 extensions.
Notably, the <ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/zip/ZipInputStream.html"><classname>ZipInputStream</classname></ulink> JDK class does not support Zip64 for versions earlier than Java 7.
This means you should not enable this property if you are building JARs to be used with Java 6 and earlier runtimes.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>false</literal></seg></seglistitem></segmentedlist></section></section><section><title>Method details</title><section id="org.gradle.plugins.ear.Ear:deploymentDescriptor(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.plugins.ear.Ear"/> <literal>deploymentDescriptor</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> configureClosure)</title><para>Configures the deployment descriptor for this EAR archive.

</para><para>The given closure is executed to configure the deployment descriptor. The <apilink class="org.gradle.plugins.ear.descriptor.DeploymentDescriptor"/> is passed to the closure as its delegate.</para></section><section id="org.gradle.plugins.ear.Ear:deploymentDescriptor(org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.plugins.ear.Ear"/> <literal>deploymentDescriptor</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.plugins.ear.descriptor.DeploymentDescriptor"/>&gt;</classname> configureAction)</title><para>Configures the deployment descriptor for this EAR archive.

</para><para>The given action is executed to configure the deployment descriptor.</para></section><section id="org.gradle.plugins.ear.Ear:eachFile(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>eachFile</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> closure)</title><para>Adds an action to be applied to each file as it about to be copied into its destination. The given closure is
called with a <apilink class="org.gradle.api.file.FileCopyDetails"/> as its parameter. Actions are executed in the order
added, and are inherited from the parent spec.</para></section><section id="org.gradle.plugins.ear.Ear:eachFile(org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>eachFile</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.FileCopyDetails"/>&gt;</classname> action)</title><para>Adds an action to be applied to each file as it is about to be copied into its destination. The action can change
the destination path of the file, filter the contents of the file, or exclude the file from the result entirely.
Actions are executed in the order added, and are inherited from the parent spec.</para></section><section id="org.gradle.plugins.ear.Ear:exclude(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>exclude</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> excludeSpec)</title><para>Adds an exclude spec. This method may be called multiple times to append new specs.The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter. The closure should return true or false. Example:

</para><para><programlisting language="java">
copySpec {
  from 'source'
  into 'destination'
  //an example of excluding files from certain configuration:
  exclude { it.file in configurations.someConf.files }
}
</programlisting></para><para>

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.plugins.ear.Ear:exclude(java.lang.Iterable)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>exclude</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> excludes)</title><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.plugins.ear.Ear:exclude(java.lang.String[])" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>exclude</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>...</classname> excludes)</title><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.plugins.ear.Ear:exclude(org.gradle.api.specs.Spec)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>exclude</literal>(<classname><apilink class="org.gradle.api.specs.Spec"/>&lt;<apilink class="org.gradle.api.file.FileTreeElement"/>&gt;</classname> excludeSpec)</title><para>Adds an exclude spec. This method may be called multiple times to append new specs.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.plugins.ear.Ear:expand(java.util.Map)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>expand</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, ?&gt;</classname> properties)</title><para>Expands property references in each file as it is copied. More specifically, each file is transformed using
Groovy's <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/text/SimpleTemplateEngine.html"><classname>SimpleTemplateEngine</classname></ulink>. This means you can use simple property references, such as
<literal>$property</literal> or <literal>${property}</literal> in the file. You can also include arbitrary Groovy code in the
file, such as <literal>${version ?: 'unknown'}</literal> or <literal>${classpath*.name.join(' ')}</literal>
</para><para>
Note that all escape sequences (<literal>\n</literal>, <literal>\t</literal>, <literal>\\</literal>, etc) are converted to the symbols
they represent, so, for example, <literal>\n</literal> becomes newline. If this is undesirable then <apilink class="org.gradle.api.file.ContentFilterable" method="expand(java.util.Map, org.gradle.api.Action)"/>
should be used to disable this behavior.</para></section><section id="org.gradle.plugins.ear.Ear:expand(java.util.Map, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>expand</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, ?&gt;</classname> properties, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.ExpandDetails"/>&gt;</classname> action)</title><para>Expands property references in each file as it is copied. More specifically, each file is transformed using
Groovy's <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/text/SimpleTemplateEngine.html"><classname>SimpleTemplateEngine</classname></ulink>. This means you can use simple property references, such as
<literal>$property</literal> or <literal>${property}</literal> in the file. You can also include arbitrary Groovy code in the
file, such as <literal>${version ?: 'unknown'}</literal> or <literal>${classpath*.name.join(' ')}</literal>. The template
engine can be configured with the provided action.
</para><para>
Note that by default all escape sequences (<literal>\n</literal>, <literal>\t</literal>, <literal>\\</literal>, etc) are converted to the symbols
they represent, so, for example, <literal>\n</literal> becomes newline. This behavior is controlled by
<apilink class="org.gradle.api.file.ExpandDetails" method="getEscapeBackslash()"/> property. It should be set to <literal>true</literal> to disable escape sequences
conversion:
</para><para><programlisting language="java">
 expand(one: '1', two: 2) {
     escapeBackslash = true
 }
</programlisting></para></section><section id="org.gradle.plugins.ear.Ear:filesMatching(java.lang.Iterable, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>filesMatching</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> patterns, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.FileCopyDetails"/>&gt;</classname> action)</title><para>Configure the <apilink class="org.gradle.api.file.FileCopyDetails"/> for each file whose path matches any of the specified Ant-style patterns.
This is equivalent to using eachFile() and selectively applying a configuration based on the file's path.</para></section><section id="org.gradle.plugins.ear.Ear:filesMatching(java.lang.String, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>filesMatching</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> pattern, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.FileCopyDetails"/>&gt;</classname> action)</title><para>Configure the <apilink class="org.gradle.api.file.FileCopyDetails"/> for each file whose path matches the specified Ant-style pattern.
This is equivalent to using eachFile() and selectively applying a configuration based on the file's path.</para></section><section id="org.gradle.plugins.ear.Ear:filesNotMatching(java.lang.Iterable, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>filesNotMatching</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> patterns, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.FileCopyDetails"/>&gt;</classname> action)</title><para>Configure the <apilink class="org.gradle.api.file.FileCopyDetails"/> for each file whose path does not match any of the specified
Ant-style patterns. This is equivalent to using eachFile() and selectively applying a configuration based on the
file's path.</para></section><section id="org.gradle.plugins.ear.Ear:filesNotMatching(java.lang.String, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>filesNotMatching</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> pattern, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.FileCopyDetails"/>&gt;</classname> action)</title><para>Configure the <apilink class="org.gradle.api.file.FileCopyDetails"/> for each file whose path does not match the specified
Ant-style pattern. This is equivalent to using eachFile() and selectively applying a configuration based on the
file's path.</para></section><section id="org.gradle.plugins.ear.Ear:filter(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>filter</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> closure)</title><para>Adds a content filter based on the provided closure.  The Closure will be called with each line (stripped of line
endings) and should return a String to replace the line or <literal>null</literal> to remove the line.  If every line is
removed, the result will be an empty file, not an absent one.</para></section><section id="org.gradle.plugins.ear.Ear:filter(java.lang.Class)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>filter</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html"><classname>Class</classname></ulink>&lt;? extends <ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/FilterReader.html"><classname>FilterReader</classname></ulink>&gt;</classname> filterType)</title><para>Adds a content filter to be used during the copy.  Multiple calls to filter, add additional filters to the
filter chain.  Each filter should implement <literal>java.io.FilterReader</literal>. Include <literal>org.apache.tools.ant.filters.*</literal> for access to all the standard Ant filters.</para><para> Examples:
</para><para><programlisting language="java">
   filter(StripJavaComments)
   filter(com.mycompany.project.CustomFilter)
</programlisting></para></section><section id="org.gradle.plugins.ear.Ear:filter(java.util.Map, java.lang.Class)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>filter</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, ?&gt;</classname> properties, <classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html"><classname>Class</classname></ulink>&lt;? extends <ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/FilterReader.html"><classname>FilterReader</classname></ulink>&gt;</classname> filterType)</title><para>Adds a content filter to be used during the copy.  Multiple calls to filter, add additional filters to the
filter chain.  Each filter should implement <literal>java.io.FilterReader</literal>. Include <literal>org.apache.tools.ant.filters.*</literal> for access to all the standard Ant filters.</para><para>Filter properties may be specified using groovy map syntax.</para><para> Examples:
</para><para><programlisting language="java">
   filter(HeadFilter, lines:25, skip:2)
   filter(ReplaceTokens, tokens:[copyright:'2009', version:'2.3.1'])
</programlisting></para></section><section id="org.gradle.plugins.ear.Ear:filter(org.gradle.api.Transformer)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>filter</literal>(<classname><apilink class="org.gradle.api.Transformer"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> transformer)</title><para>Adds a content filter based on the provided transformer.  The Closure will be called with each line (stripped of line
endings) and should return a String to replace the line or <literal>null</literal> to remove the line.  If every line is
removed, the result will be an empty file, not an absent one.</para></section><section id="org.gradle.plugins.ear.Ear:from(java.lang.Object, groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>from</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> sourcePath, <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> c)</title><para>Specifies the source files or directories for a copy and creates a child <literal>CopySourceSpec</literal>. The given source
path is evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/> .</para></section><section id="org.gradle.plugins.ear.Ear:from(java.lang.Object, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>from</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> sourcePath, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.CopySpec"/>&gt;</classname> configureAction)</title><para>Specifies the source files or directories for a copy and creates a child <literal>CopySpec</literal>. The given source
path is evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/> .</para></section><section id="org.gradle.plugins.ear.Ear:from(java.lang.Object[])" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>from</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink>...</classname> sourcePaths)</title><para>Specifies source files or directories for a copy. The given paths are evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/>.</para></section><section id="org.gradle.plugins.ear.Ear:include(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>include</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> includeSpec)</title><para>Adds an include spec. This method may be called multiple times to append new specs. The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></section><section id="org.gradle.plugins.ear.Ear:include(java.lang.Iterable)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>include</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> includes)</title><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></section><section id="org.gradle.plugins.ear.Ear:include(java.lang.String[])" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>include</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>...</classname> includes)</title><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></section><section id="org.gradle.plugins.ear.Ear:include(org.gradle.api.specs.Spec)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>include</literal>(<classname><apilink class="org.gradle.api.specs.Spec"/>&lt;<apilink class="org.gradle.api.file.FileTreeElement"/>&gt;</classname> includeSpec)</title><para>Adds an include spec. This method may be called multiple times to append new specs.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></section><section id="org.gradle.plugins.ear.Ear:into(java.lang.Object)" role="detail"><title><apilink class="org.gradle.api.tasks.bundling.AbstractArchiveTask"/> <literal>into</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> destPath)</title><para>Specifies the destination directory *inside* the archive for the files.
The destination is evaluated as per <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/>.
Don't mix it up with <apilink class="org.gradle.api.tasks.bundling.AbstractArchiveTask" method="getDestinationDirectory()"/> which specifies the output directory for the archive.</para></section><section id="org.gradle.plugins.ear.Ear:into(java.lang.Object, groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.bundling.AbstractArchiveTask"/> <literal>into</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> destPath, <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> configureClosure)</title><para>Creates and configures a child <literal>CopySpec</literal> with a destination directory *inside* the archive for the files.
The destination is evaluated as per <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/>.
Don't mix it up with <apilink class="org.gradle.api.tasks.bundling.AbstractArchiveTask" method="getDestinationDirectory()"/> which specifies the output directory for the archive.</para></section><section id="org.gradle.plugins.ear.Ear:into(java.lang.Object, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.file.CopySpec"/> <literal>into</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> destPath, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.CopySpec"/>&gt;</classname> copySpec)</title><para>Creates and configures a child <literal>CopySpec</literal> with a destination directory *inside* the archive for the files.
The destination is evaluated as per <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/>.
Don't mix it up with <apilink class="org.gradle.api.tasks.bundling.AbstractArchiveTask" method="getDestinationDirectory()"/> which specifies the output directory for the archive.</para></section><section id="org.gradle.plugins.ear.Ear:lib(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.file.CopySpec"/> <literal>lib</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> configureClosure)</title><para>Adds dependency libraries to include in the 'lib' directory of the EAR archive.

</para><para>The given closure is executed to configure a <literal>CopySpec</literal>. The <apilink class="org.gradle.api.file.CopySpec"/> is passed to the closure as its delegate.</para></section><section id="org.gradle.plugins.ear.Ear:lib(org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.file.CopySpec"/> <literal>lib</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.CopySpec"/>&gt;</classname> configureAction)</title><para>Adds dependency libraries to include in the 'lib' directory of the EAR archive.

</para><para>The given action is executed to configure a <literal>CopySpec</literal>.</para></section><section id="org.gradle.plugins.ear.Ear:manifest(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.jvm.tasks.Jar"/> <literal>manifest</literal>(<classname><ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink>&lt;?&gt;</classname> configureClosure)</title><para>Configures the manifest for this JAR archive.

</para><para>The given closure is executed to configure the manifest. The <apilink class="org.gradle.api.java.archives.Manifest"/> is passed to the closure as its delegate.</para></section><section id="org.gradle.plugins.ear.Ear:manifest(org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.jvm.tasks.Jar"/> <literal>manifest</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.java.archives.Manifest"/>&gt;</classname> configureAction)</title><para>Configures the manifest for this JAR archive.

</para><para>The given action is executed to configure the manifest.</para></section><section id="org.gradle.plugins.ear.Ear:metaInf(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.file.CopySpec"/> <literal>metaInf</literal>(<classname><ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink>&lt;?&gt;</classname> configureClosure)</title><para>Adds content to this JAR archive's META-INF directory.

</para><para>The given closure is executed to configure a <literal>CopySpec</literal>. The <apilink class="org.gradle.api.file.CopySpec"/> is passed to the closure as its delegate.</para></section><section id="org.gradle.plugins.ear.Ear:metaInf(org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.file.CopySpec"/> <literal>metaInf</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.CopySpec"/>&gt;</classname> configureAction)</title><para>Adds content to this JAR archive's META-INF directory.

</para><para>The given action is executed to configure a <literal>CopySpec</literal>.</para></section><section id="org.gradle.plugins.ear.Ear:rename(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>rename</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> closure)</title><para>Renames a source file. The closure will be called with a single parameter, the name of the file.
The closure should return a String object with a new target name. The closure may return null,
in which case the original name will be used.</para></section><section id="org.gradle.plugins.ear.Ear:rename(java.lang.String, java.lang.String)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>rename</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> sourceRegEx, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> replaceWith)</title><para>Renames files based on a regular expression.  Uses java.util.regex type of regular expressions.  Note that the
replace string should use the '$1' syntax to refer to capture groups in the source regular expression.  Files
that do not match the source regular expression will be copied with the original name.

</para><para> Example:
</para><para><programlisting language="java">
rename '(.*)_OEM_BLUE_(.*)', '$1$2'
</programlisting></para><para>
would map the file 'style_OEM_BLUE_.css' to 'style.css'</para></section><section id="org.gradle.plugins.ear.Ear:rename(java.util.regex.Pattern, java.lang.String)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>rename</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html"><classname>Pattern</classname></ulink> sourceRegEx, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> replaceWith)</title><para>Renames files based on a regular expression. See <apilink class="org.gradle.api.file.CopyProcessingSpec" method="rename(java.lang.String, java.lang.String)"/>.</para></section><section id="org.gradle.plugins.ear.Ear:rename(org.gradle.api.Transformer)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>rename</literal>(<classname><apilink class="org.gradle.api.Transformer"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> renamer)</title><para>Renames a source file. The function will be called with a single parameter, the name of the file.
The function should return a new target name. The function may return null,
in which case the original name will be used.</para></section><section id="org.gradle.plugins.ear.Ear:with(org.gradle.api.file.CopySpec[])" role="detail"><title><apilink class="org.gradle.api.file.CopySpec"/> <literal>with</literal>(<classname><apilink class="org.gradle.api.file.CopySpec"/>...</classname> sourceSpecs)</title><para>Adds the given specs as a child of this spec.

</para><para><programlisting language="java">
def contentSpec = copySpec {
  from("content") {
    include "**/*.txt"
  }
}

task copy(type: Copy) {
  into "$buildDir/copy"
  with contentSpec
}
</programlisting></para></section></section></chapter><chapter id="org.gradle.api.tasks.AbstractExecTask"><title>AbstractExecTask</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.tasks.AbstractExecTask" style="javadoc"/></seg></seglistitem></segmentedlist><segmentedlist><segtitle>Known Subtypes</segtitle><seglistitem><seg><simplelist columns="1" type="vert"><member><apilink class="org.gradle.api.tasks.Exec"/></member><member><apilink class="org.gradle.nativeplatform.test.tasks.RunTestExecutable"/></member></simplelist></seg></seglistitem></segmentedlist><para><literal>AbstractExecTask</literal> is the base class for all exec tasks.</para><section><title>Properties</title><table><title>Properties - AbstractExecTask</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.tasks.AbstractExecTask:args"><literal>args</literal></link></td><td><para>The arguments for the command to be executed. Defaults to an empty list.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.AbstractExecTask:argumentProviders"><literal>argumentProviders</literal></link></td><td><para>Argument providers for the application.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.AbstractExecTask:commandLine"><literal>commandLine</literal></link></td><td><para>The full command line, including the executable plus its arguments.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.AbstractExecTask:environment"><literal>environment</literal></link></td><td><para>The environment variables to use for the process. Defaults to the environment of this process.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.AbstractExecTask:errorOutput"><literal>errorOutput</literal></link></td><td><para>The output stream to consume standard error from the process executing the command. Default to <literal>System.err</literal>.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.AbstractExecTask:executable"><literal>executable</literal></link></td><td><para>The name of the executable to use.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.AbstractExecTask:executionResult"><literal>executionResult</literal></link></td><td><para>The result for the command run by this task. The provider has no value if this task has not been executed yet.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.AbstractExecTask:ignoreExitValue"><literal>ignoreExitValue</literal></link></td><td><para>Tells whether a non-zero exit value is ignored, or an exception thrown. Defaults to <literal>false</literal>.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.AbstractExecTask:standardInput"><literal>standardInput</literal></link></td><td><para>The standard input stream for the process executing the command. The stream is closed after the process
completes. Defaults to an empty stream.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.AbstractExecTask:standardOutput"><literal>standardOutput</literal></link></td><td><para>The output stream to consume standard output from the process executing the command. Defaults to <literal>System.out</literal>.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.AbstractExecTask:workingDir"><literal>workingDir</literal></link></td><td><para>The working directory for the process. Defaults to the project directory.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - AbstractExecTask</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.tasks.AbstractExecTask:args(java.lang.Iterable)">args</link>(args)</literal></td><td><para>Adds arguments for the command to be executed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.AbstractExecTask:args(java.lang.Object[])">args</link>(args)</literal></td><td><para>Adds arguments for the command to be executed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.AbstractExecTask:commandLine(java.lang.Iterable)">commandLine</link>(args)</literal></td><td><para>Sets the full command line, including the executable to be executed plus its arguments.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.AbstractExecTask:commandLine(java.lang.Object[])">commandLine</link>(arguments)</literal></td><td><para>Sets the full command line, including the executable to be executed plus its arguments.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.AbstractExecTask:environment(java.lang.String, java.lang.Object)">environment</link>(name, value)</literal></td><td><para>Adds an environment variable to the environment for this process.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.AbstractExecTask:environment(java.util.Map)">environment</link>(environmentVariables)</literal></td><td><para>Adds some environment variables to the environment for this process.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.AbstractExecTask:executable(java.lang.Object)">executable</link>(executable)</literal></td><td><para>Sets the name of the executable to use.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.AbstractExecTask:workingDir(java.lang.Object)">workingDir</link>(dir)</literal></td><td><para>Sets the working directory for the process. The supplied argument is evaluated as per <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/>.</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.tasks.AbstractExecTask:args" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/List.html"><classname>List</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>args</literal></title><para>The arguments for the command to be executed. Defaults to an empty list.</para></section><section id="org.gradle.api.tasks.AbstractExecTask:argumentProviders" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/List.html"><classname>List</classname></ulink>&lt;<apilink class="org.gradle.process.CommandLineArgumentProvider"/>&gt;</classname> <literal>argumentProviders</literal> (read-only)</title><para>Argument providers for the application.</para></section><section id="org.gradle.api.tasks.AbstractExecTask:commandLine" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/List.html"><classname>List</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>commandLine</literal></title><para>The full command line, including the executable plus its arguments.</para></section><section id="org.gradle.api.tasks.AbstractExecTask:environment" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink>&gt;</classname> <literal>environment</literal></title><para>The environment variables to use for the process. Defaults to the environment of this process.</para></section><section id="org.gradle.api.tasks.AbstractExecTask:errorOutput" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/OutputStream.html"><classname>OutputStream</classname></ulink> <literal>errorOutput</literal></title><para>The output stream to consume standard error from the process executing the command. Default to <literal>System.err</literal>.</para></section><section id="org.gradle.api.tasks.AbstractExecTask:executable" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>executable</literal></title><para>The name of the executable to use.</para></section><section id="org.gradle.api.tasks.AbstractExecTask:executionResult" role="detail"><title><classname><apilink class="org.gradle.api.provider.Provider"/>&lt;<apilink class="org.gradle.process.ExecResult"/>&gt;</classname> <literal>executionResult</literal></title><para>The result for the command run by this task. The provider has no value if this task has not been executed yet.</para></section><section id="org.gradle.api.tasks.AbstractExecTask:ignoreExitValue" role="detail"><title><classname>boolean</classname> <literal>ignoreExitValue</literal></title><para>Tells whether a non-zero exit value is ignored, or an exception thrown. Defaults to <literal>false</literal>.</para></section><section id="org.gradle.api.tasks.AbstractExecTask:standardInput" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/InputStream.html"><classname>InputStream</classname></ulink> <literal>standardInput</literal></title><para>The standard input stream for the process executing the command. The stream is closed after the process
completes. Defaults to an empty stream.</para></section><section id="org.gradle.api.tasks.AbstractExecTask:standardOutput" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/OutputStream.html"><classname>OutputStream</classname></ulink> <literal>standardOutput</literal></title><para>The output stream to consume standard output from the process executing the command. Defaults to <literal>System.out</literal>.</para></section><section id="org.gradle.api.tasks.AbstractExecTask:workingDir" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>workingDir</literal></title><para>The working directory for the process. Defaults to the project directory.</para></section></section><section><title>Method details</title><section id="org.gradle.api.tasks.AbstractExecTask:args(java.lang.Iterable)" role="detail"><title><classname>T</classname> <literal>args</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;?&gt;</classname> args)</title><para>Adds arguments for the command to be executed.</para></section><section id="org.gradle.api.tasks.AbstractExecTask:args(java.lang.Object[])" role="detail"><title><classname>T</classname> <literal>args</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink>...</classname> args)</title><para>Adds arguments for the command to be executed.</para></section><section id="org.gradle.api.tasks.AbstractExecTask:commandLine(java.lang.Iterable)" role="detail"><title><classname>T</classname> <literal>commandLine</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;?&gt;</classname> args)</title><para>Sets the full command line, including the executable to be executed plus its arguments.</para></section><section id="org.gradle.api.tasks.AbstractExecTask:commandLine(java.lang.Object[])" role="detail"><title><classname>T</classname> <literal>commandLine</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink>...</classname> arguments)</title><para>Sets the full command line, including the executable to be executed plus its arguments.</para></section><section id="org.gradle.api.tasks.AbstractExecTask:environment(java.lang.String, java.lang.Object)" role="detail"><title><classname>T</classname> <literal>environment</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> value)</title><para>Adds an environment variable to the environment for this process.</para></section><section id="org.gradle.api.tasks.AbstractExecTask:environment(java.util.Map)" role="detail"><title><classname>T</classname> <literal>environment</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, ?&gt;</classname> environmentVariables)</title><para>Adds some environment variables to the environment for this process.</para></section><section id="org.gradle.api.tasks.AbstractExecTask:executable(java.lang.Object)" role="detail"><title><classname>T</classname> <literal>executable</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> executable)</title><para>Sets the name of the executable to use.</para></section><section id="org.gradle.api.tasks.AbstractExecTask:workingDir(java.lang.Object)" role="detail"><title><classname>T</classname> <literal>workingDir</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> dir)</title><para>Sets the working directory for the process. The supplied argument is evaluated as per <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/>.</para></section></section></chapter><chapter id="org.gradle.api.tasks.Exec"><title>Exec</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.tasks.Exec" style="javadoc"/></seg></seglistitem></segmentedlist><para>Executes a command line process. Example:
</para><programlisting language="java">
task stopTomcat(type:Exec) {
  workingDir '../tomcat/bin'

  //on windows:
  commandLine 'cmd.exe', '/d', '/c', 'stop.bat'

  //on linux
  commandLine './stop.sh'

  //store the output instead of printing to the console:
  standardOutput = new ByteArrayOutputStream()

  //extension method stopTomcat.output() can be used to obtain the output:
  ext.output = {
    return standardOutput.toString()
  }
}
</programlisting><section><title>Properties</title><table><title>Properties - Exec</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.tasks.Exec:args"><literal>args</literal></link></td><td><para>The arguments for the command to be executed. Defaults to an empty list.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.Exec:argumentProviders"><literal>argumentProviders</literal></link></td><td><para>Argument providers for the application.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.Exec:commandLine"><literal>commandLine</literal></link></td><td><para>The full command line, including the executable plus its arguments.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.Exec:environment"><literal>environment</literal></link></td><td><para>The environment variables to use for the process. Defaults to the environment of this process.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.Exec:errorOutput"><literal>errorOutput</literal></link></td><td><para>The output stream to consume standard error from the process executing the command. Default to <literal>System.err</literal>.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.Exec:executable"><literal>executable</literal></link></td><td><para>The name of the executable to use.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.Exec:executionResult"><literal>executionResult</literal></link></td><td><para>The result for the command run by this task. The provider has no value if this task has not been executed yet.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.Exec:ignoreExitValue"><literal>ignoreExitValue</literal></link></td><td><para>Tells whether a non-zero exit value is ignored, or an exception thrown. Defaults to <literal>false</literal>.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.Exec:standardInput"><literal>standardInput</literal></link></td><td><para>The standard input stream for the process executing the command. The stream is closed after the process
completes. Defaults to an empty stream.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.Exec:standardOutput"><literal>standardOutput</literal></link></td><td><para>The output stream to consume standard output from the process executing the command. Defaults to <literal>System.out</literal>.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.Exec:workingDir"><literal>workingDir</literal></link></td><td><para>The working directory for the process. Defaults to the project directory.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - Exec</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.tasks.Exec:args(java.lang.Iterable)">args</link>(args)</literal></td><td><para>Adds arguments for the command to be executed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.Exec:args(java.lang.Object[])">args</link>(args)</literal></td><td><para>Adds arguments for the command to be executed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.Exec:commandLine(java.lang.Iterable)">commandLine</link>(args)</literal></td><td><para>Sets the full command line, including the executable to be executed plus its arguments.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.Exec:commandLine(java.lang.Object[])">commandLine</link>(arguments)</literal></td><td><para>Sets the full command line, including the executable to be executed plus its arguments.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.Exec:environment(java.lang.String, java.lang.Object)">environment</link>(name, value)</literal></td><td><para>Adds an environment variable to the environment for this process.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.Exec:environment(java.util.Map)">environment</link>(environmentVariables)</literal></td><td><para>Adds some environment variables to the environment for this process.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.Exec:executable(java.lang.Object)">executable</link>(executable)</literal></td><td><para>Sets the name of the executable to use.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.Exec:workingDir(java.lang.Object)">workingDir</link>(dir)</literal></td><td><para>Sets the working directory for the process. The supplied argument is evaluated as per <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/>.</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.tasks.Exec:args" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/List.html"><classname>List</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>args</literal></title><para>The arguments for the command to be executed. Defaults to an empty list.</para></section><section id="org.gradle.api.tasks.Exec:argumentProviders" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/List.html"><classname>List</classname></ulink>&lt;<apilink class="org.gradle.process.CommandLineArgumentProvider"/>&gt;</classname> <literal>argumentProviders</literal> (read-only)</title><para>Argument providers for the application.</para></section><section id="org.gradle.api.tasks.Exec:commandLine" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/List.html"><classname>List</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>commandLine</literal></title><para>The full command line, including the executable plus its arguments.</para></section><section id="org.gradle.api.tasks.Exec:environment" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink>&gt;</classname> <literal>environment</literal></title><para>The environment variables to use for the process. Defaults to the environment of this process.</para></section><section id="org.gradle.api.tasks.Exec:errorOutput" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/OutputStream.html"><classname>OutputStream</classname></ulink> <literal>errorOutput</literal></title><para>The output stream to consume standard error from the process executing the command. Default to <literal>System.err</literal>.</para></section><section id="org.gradle.api.tasks.Exec:executable" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>executable</literal></title><para>The name of the executable to use.</para></section><section id="org.gradle.api.tasks.Exec:executionResult" role="detail"><title><classname><apilink class="org.gradle.api.provider.Provider"/>&lt;<apilink class="org.gradle.process.ExecResult"/>&gt;</classname> <literal>executionResult</literal></title><para>The result for the command run by this task. The provider has no value if this task has not been executed yet.</para></section><section id="org.gradle.api.tasks.Exec:ignoreExitValue" role="detail"><title><classname>boolean</classname> <literal>ignoreExitValue</literal></title><para>Tells whether a non-zero exit value is ignored, or an exception thrown. Defaults to <literal>false</literal>.</para></section><section id="org.gradle.api.tasks.Exec:standardInput" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/InputStream.html"><classname>InputStream</classname></ulink> <literal>standardInput</literal></title><para>The standard input stream for the process executing the command. The stream is closed after the process
completes. Defaults to an empty stream.</para></section><section id="org.gradle.api.tasks.Exec:standardOutput" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/OutputStream.html"><classname>OutputStream</classname></ulink> <literal>standardOutput</literal></title><para>The output stream to consume standard output from the process executing the command. Defaults to <literal>System.out</literal>.</para></section><section id="org.gradle.api.tasks.Exec:workingDir" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>workingDir</literal></title><para>The working directory for the process. Defaults to the project directory.</para></section></section><section><title>Method details</title><section id="org.gradle.api.tasks.Exec:args(java.lang.Iterable)" role="detail"><title><classname>T</classname> <literal>args</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;?&gt;</classname> args)</title><para>Adds arguments for the command to be executed.</para></section><section id="org.gradle.api.tasks.Exec:args(java.lang.Object[])" role="detail"><title><classname>T</classname> <literal>args</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink>...</classname> args)</title><para>Adds arguments for the command to be executed.</para></section><section id="org.gradle.api.tasks.Exec:commandLine(java.lang.Iterable)" role="detail"><title><classname>T</classname> <literal>commandLine</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;?&gt;</classname> args)</title><para>Sets the full command line, including the executable to be executed plus its arguments.</para></section><section id="org.gradle.api.tasks.Exec:commandLine(java.lang.Object[])" role="detail"><title><classname>T</classname> <literal>commandLine</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink>...</classname> arguments)</title><para>Sets the full command line, including the executable to be executed plus its arguments.</para></section><section id="org.gradle.api.tasks.Exec:environment(java.lang.String, java.lang.Object)" role="detail"><title><classname>T</classname> <literal>environment</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> value)</title><para>Adds an environment variable to the environment for this process.</para></section><section id="org.gradle.api.tasks.Exec:environment(java.util.Map)" role="detail"><title><classname>T</classname> <literal>environment</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, ?&gt;</classname> environmentVariables)</title><para>Adds some environment variables to the environment for this process.</para></section><section id="org.gradle.api.tasks.Exec:executable(java.lang.Object)" role="detail"><title><classname>T</classname> <literal>executable</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> executable)</title><para>Sets the name of the executable to use.</para></section><section id="org.gradle.api.tasks.Exec:workingDir(java.lang.Object)" role="detail"><title><classname>T</classname> <literal>workingDir</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> dir)</title><para>Sets the working directory for the process. The supplied argument is evaluated as per <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/>.</para></section></section></chapter><chapter id="org.gradle.api.publish.ivy.tasks.GenerateIvyDescriptor"><title>GenerateIvyDescriptor</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.publish.ivy.tasks.GenerateIvyDescriptor" style="javadoc"/></seg></seglistitem></segmentedlist><para>Generates an Ivy XML Module Descriptor file.</para><section><title>Properties</title><table><title>Properties - GenerateIvyDescriptor</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.publish.ivy.tasks.GenerateIvyDescriptor:descriptor"><literal>descriptor</literal></link></td><td><para>The module descriptor metadata.</para></td></tr><tr><td><link linkend="org.gradle.api.publish.ivy.tasks.GenerateIvyDescriptor:destination"><literal>destination</literal></link></td><td><para>The file the descriptor will be written to.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.publish.ivy.tasks.GenerateIvyDescriptor:descriptor" role="detail"><title><apilink class="org.gradle.api.publish.ivy.IvyModuleDescriptorSpec"/> <literal>descriptor</literal></title><para>The module descriptor metadata.</para></section><section id="org.gradle.api.publish.ivy.tasks.GenerateIvyDescriptor:destination" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>destination</literal></title><para>The file the descriptor will be written to.</para></section></section></chapter><chapter id="org.gradle.api.publish.maven.tasks.GenerateMavenPom"><title>GenerateMavenPom</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.publish.maven.tasks.GenerateMavenPom" style="javadoc"/></seg></seglistitem></segmentedlist><para>Generates a Maven module descriptor (POM) file.</para><section><title>Properties</title><table><title>Properties - GenerateMavenPom</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.publish.maven.tasks.GenerateMavenPom:destination"><literal>destination</literal></link></td><td><para>The file the POM will be written to.</para></td></tr><tr><td><link linkend="org.gradle.api.publish.maven.tasks.GenerateMavenPom:pom"><literal>pom</literal></link></td><td><para>The Maven POM.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.publish.maven.tasks.GenerateMavenPom:destination" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>destination</literal></title><para>The file the POM will be written to.</para></section><section id="org.gradle.api.publish.maven.tasks.GenerateMavenPom:pom" role="detail"><title><apilink class="org.gradle.api.publish.maven.MavenPom"/> <literal>pom</literal></title><para>The Maven POM.</para></section></section></chapter><chapter id="org.gradle.api.reporting.GenerateBuildDashboard"><title>GenerateBuildDashboard</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.reporting.GenerateBuildDashboard" style="javadoc"/></seg></seglistitem></segmentedlist><para>Generates build dashboard report.</para><section><title>Properties</title><table><title>Properties - GenerateBuildDashboard</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.reporting.GenerateBuildDashboard:reports"><literal>reports</literal></link></td><td><para>The reports to be generated by this task.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - GenerateBuildDashboard</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.reporting.GenerateBuildDashboard:aggregate(org.gradle.api.reporting.Reporting[])">aggregate</link>(reportings)</literal></td><td><para>Configures which reports are to be aggregated in the build dashboard report generated by this task.

</para></td></tr><tr><td><literal><link linkend="org.gradle.api.reporting.GenerateBuildDashboard:reports(org.gradle.api.Action)">reports</link>(configureAction)</literal></td><td><para>Configures the reports to be generated by this task.

The contained reports can be configured by name and closures.

</para></td></tr></table></section><section><title>Script blocks</title><table><title>Script blocks - GenerateBuildDashboard</title><thead><tr><td>Block</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.reporting.GenerateBuildDashboard:reports(groovy.lang.Closure)"><literal>reports</literal></link></td><td><para>Configures the reports to be generated by this task.

The contained reports can be configured by name and closures.

</para></td></tr></table></section><section><title>Property details</title><section id="org.gradle.api.reporting.GenerateBuildDashboard:reports" role="detail"><title><apilink class="org.gradle.api.reporting.BuildDashboardReports"/> <literal>reports</literal> (read-only)</title><para>The reports to be generated by this task.</para></section></section><section><title>Method details</title><section id="org.gradle.api.reporting.GenerateBuildDashboard:aggregate(org.gradle.api.reporting.Reporting[])" role="detail"><title><classname>void</classname> <literal>aggregate</literal>(<classname><apilink class="org.gradle.api.reporting.Reporting"/>&lt;? extends <apilink class="org.gradle.api.reporting.ReportContainer"/>&lt;?&gt;&gt;...</classname> reportings)</title><para>Configures which reports are to be aggregated in the build dashboard report generated by this task.

</para><programlisting language="java">
buildDashboard {
  aggregate codenarcMain, checkstyleMain
}
</programlisting></section><section id="org.gradle.api.reporting.GenerateBuildDashboard:reports(org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.reporting.BuildDashboardReports"/> <literal>reports</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.reporting.BuildDashboardReports"/>&gt;</classname> configureAction)</title><para>Configures the reports to be generated by this task.

The contained reports can be configured by name and closures.

</para><programlisting language="java">
buildDashboard {
  reports {
    html {
      destination "build/dashboard.html"
    }
  }
}
</programlisting></section></section><section><title>Script block details</title><section id="org.gradle.api.reporting.GenerateBuildDashboard:reports(groovy.lang.Closure)" role="detail"><title><literal>reports</literal> { }</title><para>Configures the reports to be generated by this task.

The contained reports can be configured by name and closures.

</para><programlisting language="java">
buildDashboard {
  reports {
    html {
      destination "build/dashboard.html"
    }
  }
}
</programlisting><segmentedlist><segtitle>Delegates to</segtitle><seglistitem><seg><apilink class="org.gradle.api.reporting.BuildDashboardReports"/> from <link linkend="org.gradle.api.reporting.GenerateBuildDashboard:reports"><literal>reports</literal></link></seg></seglistitem></segmentedlist></section></section></chapter><chapter id="org.gradle.api.tasks.GradleBuild"><title>GradleBuild</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.tasks.GradleBuild" style="javadoc"/></seg></seglistitem></segmentedlist><para>Executes a Gradle build.</para><section><title>Properties</title><table><title>Properties - GradleBuild</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.tasks.GradleBuild:dir"><literal>dir</literal></link></td><td><para>The project directory for the build. Defaults to the project directory.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.GradleBuild:startParameter"><literal>startParameter</literal></link></td><td><para>The full set of parameters that will be used to execute the build.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.GradleBuild:tasks"><literal>tasks</literal></link></td><td><para>The tasks that should be executed for this build.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.tasks.GradleBuild:dir" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>dir</literal></title><para>The project directory for the build. Defaults to the project directory.</para></section><section id="org.gradle.api.tasks.GradleBuild:startParameter" role="detail"><title><apilink class="org.gradle.StartParameter"/> <literal>startParameter</literal></title><para>The full set of parameters that will be used to execute the build.</para></section><section id="org.gradle.api.tasks.GradleBuild:tasks" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/List.html"><classname>List</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>tasks</literal></title><para>The tasks that should be executed for this build.</para></section></section></chapter><chapter id="org.gradle.api.tasks.compile.AbstractCompile"><title>AbstractCompile</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.tasks.compile.AbstractCompile" style="javadoc"/></seg></seglistitem></segmentedlist><segmentedlist><segtitle>Known Subtypes</segtitle><seglistitem><seg><simplelist columns="1" type="vert"><member><apilink class="org.gradle.api.tasks.compile.GroovyCompile"/></member><member><apilink class="org.gradle.api.tasks.compile.JavaCompile"/></member><member><apilink class="org.gradle.language.scala.tasks.AbstractScalaCompile"/></member></simplelist></seg></seglistitem></segmentedlist><para>The base class for all JVM-based language compilation tasks.</para><section><title>Properties</title><table><title>Properties - AbstractCompile</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.tasks.compile.AbstractCompile:classpath"><literal>classpath</literal></link></td><td><para>The classpath to use to compile the source files.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.compile.AbstractCompile:destinationDirectory"><literal>destinationDirectory</literal></link></td><td><para>The directory property that represents the directory to generate the <literal>.class</literal> files into.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.compile.AbstractCompile:excludes"><literal>excludes</literal></link></td><td><para>The set of exclude patterns.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.compile.AbstractCompile:includes"><literal>includes</literal></link></td><td><para>The set of include patterns.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.compile.AbstractCompile:source"><literal>source</literal></link></td><td><para>The source for this task, after the include and exclude patterns have been applied. Ignores source files which do not exist.

</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.compile.AbstractCompile:sourceCompatibility"><literal>sourceCompatibility</literal></link></td><td><para>The Java language level to use to compile the source files.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.compile.AbstractCompile:targetCompatibility"><literal>targetCompatibility</literal></link></td><td><para>The target JVM to generate the <literal>.class</literal> files for.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - AbstractCompile</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.tasks.compile.AbstractCompile:exclude(groovy.lang.Closure)">exclude</link>(excludeSpec)</literal></td><td><para>Adds an exclude spec. This method may be called multiple times to append new specs.The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter. The closure should return true or false. Example:

</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.compile.AbstractCompile:exclude(java.lang.Iterable)">exclude</link>(excludes)</literal></td><td><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.compile.AbstractCompile:exclude(java.lang.String[])">exclude</link>(excludes)</literal></td><td><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.compile.AbstractCompile:exclude(org.gradle.api.specs.Spec)">exclude</link>(excludeSpec)</literal></td><td><para>Adds an exclude spec. This method may be called multiple times to append new specs.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.compile.AbstractCompile:include(groovy.lang.Closure)">include</link>(includeSpec)</literal></td><td><para>Adds an include spec. This method may be called multiple times to append new specs. The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.compile.AbstractCompile:include(java.lang.Iterable)">include</link>(includes)</literal></td><td><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.compile.AbstractCompile:include(java.lang.String[])">include</link>(includes)</literal></td><td><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.compile.AbstractCompile:include(org.gradle.api.specs.Spec)">include</link>(includeSpec)</literal></td><td><para>Adds an include spec. This method may be called multiple times to append new specs.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.compile.AbstractCompile:source(java.lang.Object[])">source</link>(sources)</literal></td><td><para>Adds some source to this task. The given source objects will be evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/>.</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.tasks.compile.AbstractCompile:classpath" role="detail"><title><apilink class="org.gradle.api.file.FileCollection"/> <literal>classpath</literal></title><para>The classpath to use to compile the source files.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal><replaceable>sourceSet</replaceable>.compileClasspath</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.compile.AbstractCompile:destinationDirectory" role="detail"><title><apilink class="org.gradle.api.file.DirectoryProperty"/> <literal>destinationDirectory</literal></title><para>The directory property that represents the directory to generate the <literal>.class</literal> files into.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal><replaceable>sourceSet</replaceable>.<replaceable>sourceDirectorySet</replaceable>.destinationDirectory</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.compile.AbstractCompile:excludes" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>excludes</literal></title><para>The set of exclude patterns.</para></section><section id="org.gradle.api.tasks.compile.AbstractCompile:includes" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>includes</literal></title><para>The set of include patterns.</para></section><section id="org.gradle.api.tasks.compile.AbstractCompile:source" role="detail"><title><apilink class="org.gradle.api.file.FileTree"/> <literal>source</literal></title><para>The source for this task, after the include and exclude patterns have been applied. Ignores source files which do not exist.

</para><para>
The <apilink class="org.gradle.api.tasks.PathSensitivity"/> for the sources is configured to be <apilink class="org.gradle.api.tasks.PathSensitivity" method="ABSOLUTE"/>.
If your sources are less strict, please change it accordingly by overriding this method in your subclass.
</para></section><section id="org.gradle.api.tasks.compile.AbstractCompile:sourceCompatibility" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>sourceCompatibility</literal></title><para>The Java language level to use to compile the source files.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>project.sourceCompatibility</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.compile.AbstractCompile:targetCompatibility" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>targetCompatibility</literal></title><para>The target JVM to generate the <literal>.class</literal> files for.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>project.targetCompatibility</literal></seg></seglistitem></segmentedlist></section></section><section><title>Method details</title><section id="org.gradle.api.tasks.compile.AbstractCompile:exclude(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>exclude</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> excludeSpec)</title><para>Adds an exclude spec. This method may be called multiple times to append new specs.The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter. The closure should return true or false. Example:

</para><para><programlisting language="java">
copySpec {
  from 'source'
  into 'destination'
  //an example of excluding files from certain configuration:
  exclude { it.file in configurations.someConf.files }
}
</programlisting></para><para>

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.api.tasks.compile.AbstractCompile:exclude(java.lang.Iterable)" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>exclude</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> excludes)</title><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.api.tasks.compile.AbstractCompile:exclude(java.lang.String[])" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>exclude</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>...</classname> excludes)</title><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.api.tasks.compile.AbstractCompile:exclude(org.gradle.api.specs.Spec)" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>exclude</literal>(<classname><apilink class="org.gradle.api.specs.Spec"/>&lt;<apilink class="org.gradle.api.file.FileTreeElement"/>&gt;</classname> excludeSpec)</title><para>Adds an exclude spec. This method may be called multiple times to append new specs.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.api.tasks.compile.AbstractCompile:include(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>include</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> includeSpec)</title><para>Adds an include spec. This method may be called multiple times to append new specs. The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></section><section id="org.gradle.api.tasks.compile.AbstractCompile:include(java.lang.Iterable)" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>include</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> includes)</title><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></section><section id="org.gradle.api.tasks.compile.AbstractCompile:include(java.lang.String[])" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>include</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>...</classname> includes)</title><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></section><section id="org.gradle.api.tasks.compile.AbstractCompile:include(org.gradle.api.specs.Spec)" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>include</literal>(<classname><apilink class="org.gradle.api.specs.Spec"/>&lt;<apilink class="org.gradle.api.file.FileTreeElement"/>&gt;</classname> includeSpec)</title><para>Adds an include spec. This method may be called multiple times to append new specs.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></section><section id="org.gradle.api.tasks.compile.AbstractCompile:source(java.lang.Object[])" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>source</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink>...</classname> sources)</title><para>Adds some source to this task. The given source objects will be evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/>.</para></section></section></chapter><chapter id="org.gradle.api.tasks.compile.GroovyCompile"><title>GroovyCompile</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.tasks.compile.GroovyCompile" style="javadoc"/></seg></seglistitem></segmentedlist><para>Compiles Groovy source files, and optionally, Java source files.</para><section><title>Properties</title><table><title>Properties - GroovyCompile</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.tasks.compile.GroovyCompile:classpath"><literal>classpath</literal></link></td><td><para>The classpath to use to compile the source files.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.compile.GroovyCompile:destinationDirectory"><literal>destinationDirectory</literal></link></td><td><para>The directory property that represents the directory to generate the <literal>.class</literal> files into.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.compile.GroovyCompile:excludes"><literal>excludes</literal></link></td><td><para>The set of exclude patterns.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.compile.GroovyCompile:groovyClasspath"><literal>groovyClasspath</literal></link></td><td><para>The classpath containing the version of Groovy to use for compilation.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.compile.GroovyCompile:groovyOptions"><literal>groovyOptions</literal></link></td><td><para>Gets the options for the Groovy compilation. To set specific options for the nested Java compilation, use <apilink class="org.gradle.api.tasks.compile.GroovyCompile" method="getOptions()"/>.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.compile.GroovyCompile:includes"><literal>includes</literal></link></td><td><para>The set of include patterns.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.compile.GroovyCompile:javaLauncher"><literal>javaLauncher</literal></link></td><td><para>The toolchain <apilink class="org.gradle.jvm.toolchain.JavaLauncher"/> to use for executing the Groovy compiler.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.compile.GroovyCompile:options"><literal>options</literal></link></td><td><para>The options for Java compilation.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.compile.GroovyCompile:source"><literal>source</literal></link></td><td><para>The source for this task, after the include and exclude patterns have been applied. Ignores source files which do not exist.

</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.compile.GroovyCompile:sourceCompatibility"><literal>sourceCompatibility</literal></link></td><td><para>The Java language level to use to compile the source files.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.compile.GroovyCompile:targetCompatibility"><literal>targetCompatibility</literal></link></td><td><para>The target JVM to generate the <literal>.class</literal> files for.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - GroovyCompile</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.tasks.compile.GroovyCompile:exclude(groovy.lang.Closure)">exclude</link>(excludeSpec)</literal></td><td><para>Adds an exclude spec. This method may be called multiple times to append new specs.The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter. The closure should return true or false. Example:

</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.compile.GroovyCompile:exclude(java.lang.Iterable)">exclude</link>(excludes)</literal></td><td><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.compile.GroovyCompile:exclude(java.lang.String[])">exclude</link>(excludes)</literal></td><td><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.compile.GroovyCompile:exclude(org.gradle.api.specs.Spec)">exclude</link>(excludeSpec)</literal></td><td><para>Adds an exclude spec. This method may be called multiple times to append new specs.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.compile.GroovyCompile:include(groovy.lang.Closure)">include</link>(includeSpec)</literal></td><td><para>Adds an include spec. This method may be called multiple times to append new specs. The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.compile.GroovyCompile:include(java.lang.Iterable)">include</link>(includes)</literal></td><td><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.compile.GroovyCompile:include(java.lang.String[])">include</link>(includes)</literal></td><td><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.compile.GroovyCompile:include(org.gradle.api.specs.Spec)">include</link>(includeSpec)</literal></td><td><para>Adds an include spec. This method may be called multiple times to append new specs.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.compile.GroovyCompile:source(java.lang.Object[])">source</link>(sources)</literal></td><td><para>Adds some source to this task. The given source objects will be evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/>.</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.tasks.compile.GroovyCompile:classpath" role="detail"><title><apilink class="org.gradle.api.file.FileCollection"/> <literal>classpath</literal></title><para>The classpath to use to compile the source files.</para><segmentedlist><segtitle>Default with <literal>groovy</literal> plugin</segtitle><seglistitem><seg><literal><replaceable>sourceSet</replaceable>.compileClasspath</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.compile.GroovyCompile:destinationDirectory" role="detail"><title><apilink class="org.gradle.api.file.DirectoryProperty"/> <literal>destinationDirectory</literal></title><para>The directory property that represents the directory to generate the <literal>.class</literal> files into.</para><segmentedlist><segtitle>Default with <literal>groovy</literal> plugin</segtitle><seglistitem><seg><literal><replaceable>sourceSet</replaceable>.<replaceable>sourceDirectorySet</replaceable>.destinationDirectory</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.compile.GroovyCompile:excludes" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>excludes</literal></title><para>The set of exclude patterns.</para></section><section id="org.gradle.api.tasks.compile.GroovyCompile:groovyClasspath" role="detail"><title><apilink class="org.gradle.api.file.FileCollection"/> <literal>groovyClasspath</literal></title><para>The classpath containing the version of Groovy to use for compilation.</para><segmentedlist><segtitle>Default with <literal>groovy</literal> plugin</segtitle><seglistitem><seg>Groovy library found on <literal>classpath</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.compile.GroovyCompile:groovyOptions" role="detail"><title><apilink class="org.gradle.api.tasks.compile.GroovyCompileOptions"/> <literal>groovyOptions</literal> (read-only)</title><para>Gets the options for the Groovy compilation. To set specific options for the nested Java compilation, use <apilink class="org.gradle.api.tasks.compile.GroovyCompile" method="getOptions()"/>.</para></section><section id="org.gradle.api.tasks.compile.GroovyCompile:includes" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>includes</literal></title><para>The set of include patterns.</para></section><section id="org.gradle.api.tasks.compile.GroovyCompile:javaLauncher" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<apilink class="org.gradle.jvm.toolchain.JavaLauncher"/>&gt;</classname> <literal>javaLauncher</literal></title><para>The toolchain <apilink class="org.gradle.jvm.toolchain.JavaLauncher"/> to use for executing the Groovy compiler.</para><segmentedlist><segtitle>Default with <literal>groovy</literal> plugin</segtitle><seglistitem><seg><literal>java.toolchain</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.compile.GroovyCompile:options" role="detail"><title><apilink class="org.gradle.api.tasks.compile.CompileOptions"/> <literal>options</literal> (read-only)</title><para>The options for Java compilation.</para></section><section id="org.gradle.api.tasks.compile.GroovyCompile:source" role="detail"><title><apilink class="org.gradle.api.file.FileTree"/> <literal>source</literal> (read-only)</title><para>The source for this task, after the include and exclude patterns have been applied. Ignores source files which do not exist.

</para><para>
The <apilink class="org.gradle.api.tasks.PathSensitivity"/> for the sources is configured to be <apilink class="org.gradle.api.tasks.PathSensitivity" method="ABSOLUTE"/>.
If your sources are less strict, please change it accordingly by overriding this method in your subclass.
</para><segmentedlist><segtitle>Default with <literal>groovy</literal> plugin</segtitle><seglistitem><seg><literal><replaceable>sourceSet</replaceable>.groovy</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.compile.GroovyCompile:sourceCompatibility" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>sourceCompatibility</literal></title><para>The Java language level to use to compile the source files.</para><segmentedlist><segtitle>Default with <literal>groovy</literal> plugin</segtitle><seglistitem><seg><literal>project.sourceCompatibility</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.compile.GroovyCompile:targetCompatibility" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>targetCompatibility</literal></title><para>The target JVM to generate the <literal>.class</literal> files for.</para><segmentedlist><segtitle>Default with <literal>groovy</literal> plugin</segtitle><seglistitem><seg><literal>project.targetCompatibility</literal></seg></seglistitem></segmentedlist></section></section><section><title>Method details</title><section id="org.gradle.api.tasks.compile.GroovyCompile:exclude(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>exclude</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> excludeSpec)</title><para>Adds an exclude spec. This method may be called multiple times to append new specs.The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter. The closure should return true or false. Example:

</para><para><programlisting language="java">
copySpec {
  from 'source'
  into 'destination'
  //an example of excluding files from certain configuration:
  exclude { it.file in configurations.someConf.files }
}
</programlisting></para><para>

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.api.tasks.compile.GroovyCompile:exclude(java.lang.Iterable)" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>exclude</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> excludes)</title><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.api.tasks.compile.GroovyCompile:exclude(java.lang.String[])" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>exclude</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>...</classname> excludes)</title><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.api.tasks.compile.GroovyCompile:exclude(org.gradle.api.specs.Spec)" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>exclude</literal>(<classname><apilink class="org.gradle.api.specs.Spec"/>&lt;<apilink class="org.gradle.api.file.FileTreeElement"/>&gt;</classname> excludeSpec)</title><para>Adds an exclude spec. This method may be called multiple times to append new specs.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.api.tasks.compile.GroovyCompile:include(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>include</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> includeSpec)</title><para>Adds an include spec. This method may be called multiple times to append new specs. The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></section><section id="org.gradle.api.tasks.compile.GroovyCompile:include(java.lang.Iterable)" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>include</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> includes)</title><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></section><section id="org.gradle.api.tasks.compile.GroovyCompile:include(java.lang.String[])" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>include</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>...</classname> includes)</title><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></section><section id="org.gradle.api.tasks.compile.GroovyCompile:include(org.gradle.api.specs.Spec)" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>include</literal>(<classname><apilink class="org.gradle.api.specs.Spec"/>&lt;<apilink class="org.gradle.api.file.FileTreeElement"/>&gt;</classname> includeSpec)</title><para>Adds an include spec. This method may be called multiple times to append new specs.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></section><section id="org.gradle.api.tasks.compile.GroovyCompile:source(java.lang.Object[])" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>source</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink>...</classname> sources)</title><para>Adds some source to this task. The given source objects will be evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/>.</para></section></section></chapter><chapter id="org.gradle.api.tasks.compile.GroovyCompileOptions"><title>GroovyCompileOptions</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.tasks.compile.GroovyCompileOptions" style="javadoc"/></seg></seglistitem></segmentedlist><para>Compilation options to be passed to the Groovy compiler.</para><section><title>Properties</title><table><title>Properties - GroovyCompileOptions</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.tasks.compile.GroovyCompileOptions:configurationScript"><literal>configurationScript</literal></link></td><td><para>A Groovy script file that configures the compiler, allowing extensive control over how the code is compiled.
</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.compile.GroovyCompileOptions:disabledGlobalASTTransformations"><literal>disabledGlobalASTTransformations</literal></link></td><td><para>The set of global AST transformations which should not be loaded into the Groovy compiler.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.compile.GroovyCompileOptions:encoding"><literal>encoding</literal></link></td><td><para>Tells the source encoding. Defaults to <literal>UTF-8</literal>.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.compile.GroovyCompileOptions:failOnError"><literal>failOnError</literal></link></td><td><para>Tells whether the compilation task should fail if compile errors occurred. Defaults to <literal>true</literal>.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.compile.GroovyCompileOptions:fileExtensions"><literal>fileExtensions</literal></link></td><td><para>The list of acceptable source file extensions. Only takes effect when compiling against
Groovy 1.7 or higher. Defaults to <literal>ImmutableList.of("java", "groovy")</literal>.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.compile.GroovyCompileOptions:fork"><literal>fork</literal></link></td><td><para>Tells whether to run the Groovy compiler in a separate process. Defaults to <literal>true</literal>.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.compile.GroovyCompileOptions:forkOptions"><literal>forkOptions</literal></link></td><td><para>Returns options for running the Groovy compiler in a separate process. These options only take effect
if <literal>fork</literal> is set to <literal>true</literal>.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.compile.GroovyCompileOptions:javaAnnotationProcessing"><literal>javaAnnotationProcessing</literal></link></td><td><para>Whether the Groovy code should be subject to Java annotation processing.
</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.compile.GroovyCompileOptions:keepStubs"><literal>keepStubs</literal></link></td><td><para>Tells whether Java stubs for Groovy classes generated during Java/Groovy joint compilation
should be kept after compilation has completed. Useful for joint compilation debugging purposes.
Defaults to <literal>false</literal>.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.compile.GroovyCompileOptions:listFiles"><literal>listFiles</literal></link></td><td><para>Tells whether to print which source files are to be compiled. Defaults to <literal>false</literal>.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.compile.GroovyCompileOptions:optimizationOptions"><literal>optimizationOptions</literal></link></td><td><para>Returns optimization options for the Groovy compiler. Allowed values for an option are <literal>true</literal> and <literal>false</literal>.
Only takes effect when compiling against Groovy 1.8 or higher.

</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.compile.GroovyCompileOptions:parameters"><literal>parameters</literal></link></td><td><para>Whether the Groovy compiler generate metadata for reflection on method parameter names on JDK 8 and above.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.compile.GroovyCompileOptions:stubDir"><literal>stubDir</literal></link></td><td><para>The directory where Java stubs for Groovy classes will be stored during Java/Groovy joint
compilation. Defaults to <literal>null</literal>, in which case a temporary directory will be used.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.compile.GroovyCompileOptions:verbose"><literal>verbose</literal></link></td><td><para>Tells whether to turn on verbose output. Defaults to <literal>false</literal>.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.tasks.compile.GroovyCompileOptions:configurationScript" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>configurationScript</literal></title><para>A Groovy script file that configures the compiler, allowing extensive control over how the code is compiled.
</para><para>
The script is executed as Groovy code, with the following context:
</para><itemizedlist><listitem>The instance of <ulink url="https://docs.groovy-lang.org/latest/html/gapi/org/codehaus/groovy/control/CompilerConfiguration.html">CompilerConfiguration</ulink> available as the <literal>configuration</literal> variable.</listitem><listitem>All static members of <ulink url="https://docs.groovy-lang.org/latest/html/gapi/org/codehaus/groovy/control/customizers/builder/CompilerCustomizationBuilder.html">CompilerCustomizationBuilder</ulink> pre imported.</listitem></itemizedlist><para>
This facilitates the following pattern:
</para><programlisting language="java">
withConfig(configuration) {
  // use compiler configuration DSL here
}
</programlisting><para>
For example, to activate type checking for all Groovy classes…
</para><programlisting language="java">
import groovy.transform.TypeChecked

withConfig(configuration) {
    ast(TypeChecked)
}
</programlisting><para>
Please see <ulink url="https://docs.groovy-lang.org/latest/html/documentation/#compilation-customizers">the Groovy compiler customization builder documentation</ulink>
for more information about the compiler configuration DSL.
</para><para>
<emphasis>This feature is only available if compiling with Groovy 2.1 or later.</emphasis>
</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>null</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.compile.GroovyCompileOptions:disabledGlobalASTTransformations" role="detail"><title><classname><apilink class="org.gradle.api.provider.SetProperty"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>disabledGlobalASTTransformations</literal></title><para>The set of global AST transformations which should not be loaded into the Groovy compiler.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>["groovy.grape.GrabAnnotationTransformation"]</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.compile.GroovyCompileOptions:encoding" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>encoding</literal></title><para>Tells the source encoding. Defaults to <literal>UTF-8</literal>.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>UTF-8</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.compile.GroovyCompileOptions:failOnError" role="detail"><title><classname>boolean</classname> <literal>failOnError</literal></title><para>Tells whether the compilation task should fail if compile errors occurred. Defaults to <literal>true</literal>.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>true</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.compile.GroovyCompileOptions:fileExtensions" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/List.html"><classname>List</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>fileExtensions</literal></title><para>The list of acceptable source file extensions. Only takes effect when compiling against
Groovy 1.7 or higher. Defaults to <literal>ImmutableList.of("java", "groovy")</literal>.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>["java", "groovy"]</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.compile.GroovyCompileOptions:fork" role="detail"><title><classname>boolean</classname> <literal>fork</literal></title><para>Tells whether to run the Groovy compiler in a separate process. Defaults to <literal>true</literal>.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>true</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.compile.GroovyCompileOptions:forkOptions" role="detail"><title><apilink class="org.gradle.api.tasks.compile.GroovyForkOptions"/> <literal>forkOptions</literal> (read-only)</title><para>Returns options for running the Groovy compiler in a separate process. These options only take effect
if <literal>fork</literal> is set to <literal>true</literal>.</para></section><section id="org.gradle.api.tasks.compile.GroovyCompileOptions:javaAnnotationProcessing" role="detail"><title><classname>boolean</classname> <literal>javaAnnotationProcessing</literal></title><para>Whether the Groovy code should be subject to Java annotation processing.
</para><para>
Annotation processing of Groovy code works by having annotation processors visit the Java stubs generated by the
Groovy compiler in order to support joint compilation of Groovy and Java source.
</para><para>
When set to <literal>true</literal>, stubs will be unconditionally generated for all Groovy sources, and Java annotations processors will be executed on those stubs.
</para><para>
When this option is set to <literal>false</literal> (the default), Groovy code will not be subject to annotation processing, but any joint compiled Java code will be.
If the compiler argument <literal>"-proc:none"</literal> was specified as part of the Java compile options, the value of this flag will be ignored.
No annotation processing will be performed regardless, on Java or Groovy source.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>false</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.compile.GroovyCompileOptions:keepStubs" role="detail"><title><classname>boolean</classname> <literal>keepStubs</literal></title><para>Tells whether Java stubs for Groovy classes generated during Java/Groovy joint compilation
should be kept after compilation has completed. Useful for joint compilation debugging purposes.
Defaults to <literal>false</literal>.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>false</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.compile.GroovyCompileOptions:listFiles" role="detail"><title><classname>boolean</classname> <literal>listFiles</literal></title><para>Tells whether to print which source files are to be compiled. Defaults to <literal>false</literal>.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>false</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.compile.GroovyCompileOptions:optimizationOptions" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html"><classname>Boolean</classname></ulink>&gt;</classname> <literal>optimizationOptions</literal></title><para>Returns optimization options for the Groovy compiler. Allowed values for an option are <literal>true</literal> and <literal>false</literal>.
Only takes effect when compiling against Groovy 1.8 or higher.

</para><para>Known options are:

</para><variablelist><varlistentry><term>indy
    </term><listitem>Use the invokedynamic bytecode instruction. Requires JDK7 or higher and Groovy 2.0 or higher. Disabled by default.
    </listitem></varlistentry><varlistentry><term>int
    </term><listitem>Optimize operations on primitive types (e.g. integers). Enabled by default.
    </listitem></varlistentry><varlistentry><term>all
    </term><listitem>Enable or disable all optimizations. Note that some optimizations might be mutually exclusive.
</listitem></varlistentry></variablelist><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>[:]</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.compile.GroovyCompileOptions:parameters" role="detail"><title><classname>boolean</classname> <literal>parameters</literal></title><para>Whether the Groovy compiler generate metadata for reflection on method parameter names on JDK 8 and above.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>false</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.compile.GroovyCompileOptions:stubDir" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>stubDir</literal></title><para>The directory where Java stubs for Groovy classes will be stored during Java/Groovy joint
compilation. Defaults to <literal>null</literal>, in which case a temporary directory will be used.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>null</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.compile.GroovyCompileOptions:verbose" role="detail"><title><classname>boolean</classname> <literal>verbose</literal></title><para>Tells whether to turn on verbose output. Defaults to <literal>false</literal>.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>false</literal></seg></seglistitem></segmentedlist></section></section></chapter><chapter id="org.gradle.api.tasks.compile.BaseForkOptions"><title>BaseForkOptions</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.tasks.compile.BaseForkOptions" style="javadoc"/></seg></seglistitem></segmentedlist><segmentedlist><segtitle>Known Subtypes</segtitle><seglistitem><seg><simplelist columns="1" type="vert"><member><apilink class="org.gradle.api.tasks.compile.ProviderAwareCompilerDaemonForkOptions"/></member></simplelist></seg></seglistitem></segmentedlist><para>Fork options for compilation. Only take effect if <literal>fork</literal>
is <literal>true</literal>.</para><section><title>Properties</title><table><title>Properties - BaseForkOptions</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.tasks.compile.BaseForkOptions:jvmArgs"><literal>jvmArgs</literal></link></td><td><para>Returns any additional JVM arguments for the compiler process.
Defaults to the empty list.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.compile.BaseForkOptions:memoryInitialSize"><literal>memoryInitialSize</literal></link></td><td><para>The initial heap size for the compiler process.
Defaults to <literal>null</literal>, in which case the JVM's default will be used.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.compile.BaseForkOptions:memoryMaximumSize"><literal>memoryMaximumSize</literal></link></td><td><para>The maximum heap size for the compiler process.
Defaults to <literal>null</literal>, in which case the JVM's default will be used.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.tasks.compile.BaseForkOptions:jvmArgs" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/List.html"><classname>List</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>jvmArgs</literal></title><para>Returns any additional JVM arguments for the compiler process.
Defaults to the empty list.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>[]</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.compile.BaseForkOptions:memoryInitialSize" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>memoryInitialSize</literal></title><para>The initial heap size for the compiler process.
Defaults to <literal>null</literal>, in which case the JVM's default will be used.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>null</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.compile.BaseForkOptions:memoryMaximumSize" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>memoryMaximumSize</literal></title><para>The maximum heap size for the compiler process.
Defaults to <literal>null</literal>, in which case the JVM's default will be used.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>null</literal></seg></seglistitem></segmentedlist></section></section></chapter><chapter id="org.gradle.api.tasks.compile.ProviderAwareCompilerDaemonForkOptions"><title>ProviderAwareCompilerDaemonForkOptions</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.tasks.compile.ProviderAwareCompilerDaemonForkOptions" style="javadoc"/></seg></seglistitem></segmentedlist><segmentedlist><segtitle>Known Subtypes</segtitle><seglistitem><seg><simplelist columns="1" type="vert"><member><apilink class="org.gradle.api.tasks.compile.GroovyForkOptions"/></member><member><apilink class="org.gradle.api.tasks.compile.ForkOptions"/></member><member><apilink class="org.gradle.api.tasks.scala.ScalaForkOptions"/></member></simplelist></seg></seglistitem></segmentedlist><caution><para>Note: This class is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Fork options for compilation that can accept user-defined <apilink class="org.gradle.process.CommandLineArgumentProvider"/> objects.

Only take effect if <literal>fork</literal> is <literal>true</literal>.</para><section><title>Properties</title><table><title>Properties - ProviderAwareCompilerDaemonForkOptions</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.tasks.compile.ProviderAwareCompilerDaemonForkOptions:allJvmArgs"><literal>allJvmArgs</literal></link></td><td><caution>Incubating</caution><para>The full set of arguments to use to launch the JVM for the compiler process. This includes arguments to define
system properties, the minimum/maximum heap size, and the bootstrap classpath.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.compile.ProviderAwareCompilerDaemonForkOptions:jvmArgs"><literal>jvmArgs</literal></link></td><td><para>Returns any additional JVM arguments for the compiler process.
Defaults to the empty list.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.compile.ProviderAwareCompilerDaemonForkOptions:jvmArgumentProviders"><literal>jvmArgumentProviders</literal></link></td><td><caution>Incubating</caution><para>Returns any additional JVM argument providers for the compiler process.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.compile.ProviderAwareCompilerDaemonForkOptions:memoryInitialSize"><literal>memoryInitialSize</literal></link></td><td><para>The initial heap size for the compiler process.
Defaults to <literal>null</literal>, in which case the JVM's default will be used.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.compile.ProviderAwareCompilerDaemonForkOptions:memoryMaximumSize"><literal>memoryMaximumSize</literal></link></td><td><para>The maximum heap size for the compiler process.
Defaults to <literal>null</literal>, in which case the JVM's default will be used.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.tasks.compile.ProviderAwareCompilerDaemonForkOptions:allJvmArgs" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/List.html"><classname>List</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>allJvmArgs</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The full set of arguments to use to launch the JVM for the compiler process. This includes arguments to define
system properties, the minimum/maximum heap size, and the bootstrap classpath.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>[]</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.compile.ProviderAwareCompilerDaemonForkOptions:jvmArgs" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/List.html"><classname>List</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>jvmArgs</literal></title><para>Returns any additional JVM arguments for the compiler process.
Defaults to the empty list.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>[]</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.compile.ProviderAwareCompilerDaemonForkOptions:jvmArgumentProviders" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/List.html"><classname>List</classname></ulink>&lt;<apilink class="org.gradle.process.CommandLineArgumentProvider"/>&gt;</classname> <literal>jvmArgumentProviders</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Returns any additional JVM argument providers for the compiler process.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>[]</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.compile.ProviderAwareCompilerDaemonForkOptions:memoryInitialSize" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>memoryInitialSize</literal></title><para>The initial heap size for the compiler process.
Defaults to <literal>null</literal>, in which case the JVM's default will be used.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>null</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.compile.ProviderAwareCompilerDaemonForkOptions:memoryMaximumSize" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>memoryMaximumSize</literal></title><para>The maximum heap size for the compiler process.
Defaults to <literal>null</literal>, in which case the JVM's default will be used.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>null</literal></seg></seglistitem></segmentedlist></section></section></chapter><chapter id="org.gradle.api.tasks.compile.GroovyForkOptions"><title>GroovyForkOptions</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.tasks.compile.GroovyForkOptions" style="javadoc"/></seg></seglistitem></segmentedlist><para>Fork options for Groovy compilation. Only take effect if <literal>GroovyCompileOptions.fork</literal>
is <literal>true</literal>.</para><section><title>Properties</title><table><title>Properties - GroovyForkOptions</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.tasks.compile.GroovyForkOptions:allJvmArgs"><literal>allJvmArgs</literal></link></td><td><caution>Incubating</caution><para>The full set of arguments to use to launch the JVM for the compiler process. This includes arguments to define
system properties, the minimum/maximum heap size, and the bootstrap classpath.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.compile.GroovyForkOptions:jvmArgs"><literal>jvmArgs</literal></link></td><td><para>Returns any additional JVM arguments for the compiler process.
Defaults to the empty list.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.compile.GroovyForkOptions:jvmArgumentProviders"><literal>jvmArgumentProviders</literal></link></td><td><caution>Incubating</caution><para>Returns any additional JVM argument providers for the compiler process.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.compile.GroovyForkOptions:memoryInitialSize"><literal>memoryInitialSize</literal></link></td><td><para>The initial heap size for the compiler process.
Defaults to <literal>null</literal>, in which case the JVM's default will be used.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.compile.GroovyForkOptions:memoryMaximumSize"><literal>memoryMaximumSize</literal></link></td><td><para>The maximum heap size for the compiler process.
Defaults to <literal>null</literal>, in which case the JVM's default will be used.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.tasks.compile.GroovyForkOptions:allJvmArgs" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/List.html"><classname>List</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>allJvmArgs</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The full set of arguments to use to launch the JVM for the compiler process. This includes arguments to define
system properties, the minimum/maximum heap size, and the bootstrap classpath.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>[]</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.compile.GroovyForkOptions:jvmArgs" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/List.html"><classname>List</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>jvmArgs</literal></title><para>Returns any additional JVM arguments for the compiler process.
Defaults to the empty list.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>[]</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.compile.GroovyForkOptions:jvmArgumentProviders" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/List.html"><classname>List</classname></ulink>&lt;<apilink class="org.gradle.process.CommandLineArgumentProvider"/>&gt;</classname> <literal>jvmArgumentProviders</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Returns any additional JVM argument providers for the compiler process.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>[]</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.compile.GroovyForkOptions:memoryInitialSize" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>memoryInitialSize</literal></title><para>The initial heap size for the compiler process.
Defaults to <literal>null</literal>, in which case the JVM's default will be used.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>null</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.compile.GroovyForkOptions:memoryMaximumSize" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>memoryMaximumSize</literal></title><para>The maximum heap size for the compiler process.
Defaults to <literal>null</literal>, in which case the JVM's default will be used.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>null</literal></seg></seglistitem></segmentedlist></section></section></chapter><chapter id="org.gradle.api.tasks.compile.CompileOptions"><title>CompileOptions</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.tasks.compile.CompileOptions" style="javadoc"/></seg></seglistitem></segmentedlist><para>Main options for Java compilation.</para><section><title>Properties</title><table><title>Properties - CompileOptions</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.tasks.compile.CompileOptions:annotationProcessorPath"><literal>annotationProcessorPath</literal></link></td><td><para>The classpath to use to load annotation processors. This path is also used for annotation processor discovery.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.compile.CompileOptions:bootstrapClasspath"><literal>bootstrapClasspath</literal></link></td><td><para>The bootstrap classpath to be used for the compiler process. Defaults to <literal>null</literal>.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.compile.CompileOptions:compilerArgs"><literal>compilerArgs</literal></link></td><td><para>Returns any additional arguments to be passed to the compiler.
Defaults to the empty list.

Compiler arguments not supported by the DSL can be added here.

For example, it is possible to pass the <literal>--enable-preview</literal> option that was added in newer Java versions:
</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.compile.CompileOptions:compilerArgumentProviders"><literal>compilerArgumentProviders</literal></link></td><td><para>Compiler argument providers.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.compile.CompileOptions:debug"><literal>debug</literal></link></td><td><para>Tells whether to include debugging information in the generated class files. Defaults
to <literal>true</literal>. See <apilink class="org.gradle.api.tasks.compile.DebugOptions" method="getDebugLevel()"/> for which debugging information will be generated.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.compile.CompileOptions:debugOptions"><literal>debugOptions</literal></link></td><td><para>Returns options for generating debugging information.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.compile.CompileOptions:deprecation"><literal>deprecation</literal></link></td><td><para>Tells whether to log details of usage of deprecated members or classes. Defaults to <literal>false</literal>.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.compile.CompileOptions:encoding"><literal>encoding</literal></link></td><td><para>The character encoding to be used when reading source files. Defaults to <literal>null</literal>, in which
case the platform default encoding will be used.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.compile.CompileOptions:extensionDirs"><literal>extensionDirs</literal></link></td><td><para>The extension dirs to be used for the compiler process. Defaults to <literal>null</literal>.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.compile.CompileOptions:failOnError"><literal>failOnError</literal></link></td><td><para>Tells whether to fail the build when compilation fails. Defaults to <literal>true</literal>.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.compile.CompileOptions:fork"><literal>fork</literal></link></td><td><para>Tells whether to run the compiler in its own process. Note that this does
not necessarily mean that a new process will be created for each compile task.
Defaults to <literal>false</literal>.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.compile.CompileOptions:forkOptions"><literal>forkOptions</literal></link></td><td><para>Returns options for running the compiler in a child process.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.compile.CompileOptions:generatedSourceOutputDirectory"><literal>generatedSourceOutputDirectory</literal></link></td><td><para>The directory to place source files generated by annotation processors.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.compile.CompileOptions:headerOutputDirectory"><literal>headerOutputDirectory</literal></link></td><td><para>If this option is set to a non-null directory, it will be passed to the Java compiler's `-h` option, prompting it to generate native headers to that directory.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.compile.CompileOptions:incremental"><literal>incremental</literal></link></td><td><para>informs whether to use incremental compilation feature. See <apilink class="org.gradle.api.tasks.compile.CompileOptions" method="setIncremental(boolean)"/></para></td></tr><tr><td><link linkend="org.gradle.api.tasks.compile.CompileOptions:incrementalAfterFailure"><literal>incrementalAfterFailure</literal></link></td><td><caution>Incubating</caution><para>Used to enable or disable incremental compilation after a failure.
</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.compile.CompileOptions:javaModuleMainClass"><literal>javaModuleMainClass</literal></link></td><td><para>Set the main class of the Java module, if the module is supposed to be executable.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.compile.CompileOptions:javaModuleVersion"><literal>javaModuleVersion</literal></link></td><td><para>Set the version of the Java module.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.compile.CompileOptions:listFiles"><literal>listFiles</literal></link></td><td><para>Tells whether to log the files to be compiled. Defaults to <literal>false</literal>.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.compile.CompileOptions:release"><literal>release</literal></link></td><td><para>Configures the Java language version for this compile task (<literal>--release</literal> compiler flag).
</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.compile.CompileOptions:sourcepath"><literal>sourcepath</literal></link></td><td><para>The source path to use for the compilation.
</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.compile.CompileOptions:verbose"><literal>verbose</literal></link></td><td><para>Tells whether to produce verbose output. Defaults to <literal>false</literal>.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.compile.CompileOptions:warnings"><literal>warnings</literal></link></td><td><para>Tells whether to log warning messages. The default is <literal>true</literal>.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.tasks.compile.CompileOptions:annotationProcessorPath" role="detail"><title><apilink class="org.gradle.api.file.FileCollection"/> <literal>annotationProcessorPath</literal></title><para>The classpath to use to load annotation processors. This path is also used for annotation processor discovery.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal><replaceable>sourceSet</replaceable>.annotationProcessorPath</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.compile.CompileOptions:bootstrapClasspath" role="detail"><title><apilink class="org.gradle.api.file.FileCollection"/> <literal>bootstrapClasspath</literal></title><para>The bootstrap classpath to be used for the compiler process. Defaults to <literal>null</literal>.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>null</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.compile.CompileOptions:compilerArgs" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/List.html"><classname>List</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>compilerArgs</literal></title><para>Returns any additional arguments to be passed to the compiler.
Defaults to the empty list.

Compiler arguments not supported by the DSL can be added here.

For example, it is possible to pass the <literal>--enable-preview</literal> option that was added in newer Java versions:
</para><programlisting language="java"><literal>compilerArgs.add("--enable-preview")</literal></programlisting><para>

Note that if <literal>--release</literal> is added then <literal>-target</literal> and <literal>-source</literal>
are ignored.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>[]</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.compile.CompileOptions:compilerArgumentProviders" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/List.html"><classname>List</classname></ulink>&lt;<apilink class="org.gradle.process.CommandLineArgumentProvider"/>&gt;</classname> <literal>compilerArgumentProviders</literal> (read-only)</title><para>Compiler argument providers.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>[]</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.compile.CompileOptions:debug" role="detail"><title><classname>boolean</classname> <literal>debug</literal></title><para>Tells whether to include debugging information in the generated class files. Defaults
to <literal>true</literal>. See <apilink class="org.gradle.api.tasks.compile.DebugOptions" method="getDebugLevel()"/> for which debugging information will be generated.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>true</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.compile.CompileOptions:debugOptions" role="detail"><title><apilink class="org.gradle.api.tasks.compile.DebugOptions"/> <literal>debugOptions</literal> (read-only)</title><para>Returns options for generating debugging information.</para></section><section id="org.gradle.api.tasks.compile.CompileOptions:deprecation" role="detail"><title><classname>boolean</classname> <literal>deprecation</literal></title><para>Tells whether to log details of usage of deprecated members or classes. Defaults to <literal>false</literal>.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>false</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.compile.CompileOptions:encoding" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>encoding</literal></title><para>The character encoding to be used when reading source files. Defaults to <literal>null</literal>, in which
case the platform default encoding will be used.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>null</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.compile.CompileOptions:extensionDirs" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>extensionDirs</literal></title><para>The extension dirs to be used for the compiler process. Defaults to <literal>null</literal>.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>null</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.compile.CompileOptions:failOnError" role="detail"><title><classname>boolean</classname> <literal>failOnError</literal></title><para>Tells whether to fail the build when compilation fails. Defaults to <literal>true</literal>.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>true</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.compile.CompileOptions:fork" role="detail"><title><classname>boolean</classname> <literal>fork</literal></title><para>Tells whether to run the compiler in its own process. Note that this does
not necessarily mean that a new process will be created for each compile task.
Defaults to <literal>false</literal>.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>false</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.compile.CompileOptions:forkOptions" role="detail"><title><apilink class="org.gradle.api.tasks.compile.ForkOptions"/> <literal>forkOptions</literal> (read-only)</title><para>Returns options for running the compiler in a child process.</para></section><section id="org.gradle.api.tasks.compile.CompileOptions:generatedSourceOutputDirectory" role="detail"><title><apilink class="org.gradle.api.file.DirectoryProperty"/> <literal>generatedSourceOutputDirectory</literal></title><para>The directory to place source files generated by annotation processors.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal><replaceable>${project.layout.buildDirectory}</replaceable>/generated/sources/annotationProcessor/<replaceable>${sourceDirectorySet.name}</replaceable>/<replaceable>${sourceSet.name}</replaceable></literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.compile.CompileOptions:headerOutputDirectory" role="detail"><title><apilink class="org.gradle.api.file.DirectoryProperty"/> <literal>headerOutputDirectory</literal></title><para>If this option is set to a non-null directory, it will be passed to the Java compiler's `-h` option, prompting it to generate native headers to that directory.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal><replaceable>${project.layout.buildDirectory}</replaceable>/generated/sources/headers/<replaceable>${sourceDirectorySet.name}</replaceable>/<replaceable>${sourceSet.name}</replaceable></literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.compile.CompileOptions:incremental" role="detail"><title><classname>boolean</classname> <literal>incremental</literal></title><para>informs whether to use incremental compilation feature. See <apilink class="org.gradle.api.tasks.compile.CompileOptions" method="setIncremental(boolean)"/></para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>true</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.compile.CompileOptions:incrementalAfterFailure" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html"><classname>Boolean</classname></ulink>&gt;</classname> <literal>incrementalAfterFailure</literal></title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Used to enable or disable incremental compilation after a failure.
</para><para>
By default, incremental compilation after a failure is enabled for Java and Groovy.
It has no effect for Scala. It has no effect if incremental compilation is not enabled.
</para><para>
When the Java command line compiler is used, i.e. when a custom java home is passed to forkOptions.javaHome or javac is passed to forkOptions.executable,
this optimization is automatically disabled, since the compiler is not invoked via the compiler API.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>true</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.compile.CompileOptions:javaModuleMainClass" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>javaModuleMainClass</literal></title><para>Set the main class of the Java module, if the module is supposed to be executable.</para></section><section id="org.gradle.api.tasks.compile.CompileOptions:javaModuleVersion" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>javaModuleVersion</literal></title><para>Set the version of the Java module.</para></section><section id="org.gradle.api.tasks.compile.CompileOptions:listFiles" role="detail"><title><classname>boolean</classname> <literal>listFiles</literal></title><para>Tells whether to log the files to be compiled. Defaults to <literal>false</literal>.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>false</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.compile.CompileOptions:release" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html"><classname>Integer</classname></ulink>&gt;</classname> <literal>release</literal></title><para>Configures the Java language version for this compile task (<literal>--release</literal> compiler flag).
</para><para>
If set, it will take precedences over the <apilink class="org.gradle.api.tasks.compile.AbstractCompile" method="getSourceCompatibility()"/> and <apilink class="org.gradle.api.tasks.compile.AbstractCompile" method="getTargetCompatibility()"/> settings.
</para><para>
This option is only taken into account by the <apilink class="org.gradle.api.tasks.compile.JavaCompile"/> task.</para></section><section id="org.gradle.api.tasks.compile.CompileOptions:sourcepath" role="detail"><title><apilink class="org.gradle.api.file.FileCollection"/> <literal>sourcepath</literal></title><para>The source path to use for the compilation.
</para><para>
The source path indicates the location of source files that <emphasis>may</emphasis> be compiled if necessary.
It is effectively a complement to the class path, where the classes to be compiled against are in source form.
It does <emphasis>not</emphasis> indicate the actual primary source being compiled.
</para><para>
The source path feature of the Java compiler is rarely needed for modern builds that use dependency management.
</para><para>
The default value for the source path is <literal>null</literal>, which indicates an <emphasis>empty</emphasis> source path.
Note that this is different to the default value for the <literal>-sourcepath</literal> option for <literal>javac</literal>, which is to use the value specified by <literal>-classpath</literal>.
If you wish to use any source path, it must be explicitly set.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>null</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.compile.CompileOptions:verbose" role="detail"><title><classname>boolean</classname> <literal>verbose</literal></title><para>Tells whether to produce verbose output. Defaults to <literal>false</literal>.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>false</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.compile.CompileOptions:warnings" role="detail"><title><classname>boolean</classname> <literal>warnings</literal></title><para>Tells whether to log warning messages. The default is <literal>true</literal>.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>true</literal></seg></seglistitem></segmentedlist></section></section></chapter><chapter id="org.gradle.api.tasks.compile.ForkOptions"><title>ForkOptions</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.tasks.compile.ForkOptions" style="javadoc"/></seg></seglistitem></segmentedlist><para>Fork options for Java compilation. Only take effect if <literal>CompileOptions.fork</literal> is <literal>true</literal>.</para><section><title>Properties</title><table><title>Properties - ForkOptions</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.tasks.compile.ForkOptions:allJvmArgs"><literal>allJvmArgs</literal></link></td><td><caution>Incubating</caution><para>The full set of arguments to use to launch the JVM for the compiler process. This includes arguments to define
system properties, the minimum/maximum heap size, and the bootstrap classpath.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.compile.ForkOptions:executable"><literal>executable</literal></link></td><td><para>The compiler executable to be used.
</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.compile.ForkOptions:javaHome"><literal>javaHome</literal></link></td><td><para>The Java home which contains the compiler to use.
</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.compile.ForkOptions:jvmArgs"><literal>jvmArgs</literal></link></td><td><para>Returns any additional JVM arguments for the compiler process.
Defaults to the empty list.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.compile.ForkOptions:jvmArgumentProviders"><literal>jvmArgumentProviders</literal></link></td><td><caution>Incubating</caution><para>Returns any additional JVM argument providers for the compiler process.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.compile.ForkOptions:memoryInitialSize"><literal>memoryInitialSize</literal></link></td><td><para>The initial heap size for the compiler process.
Defaults to <literal>null</literal>, in which case the JVM's default will be used.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.compile.ForkOptions:memoryMaximumSize"><literal>memoryMaximumSize</literal></link></td><td><para>The maximum heap size for the compiler process.
Defaults to <literal>null</literal>, in which case the JVM's default will be used.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.compile.ForkOptions:tempDir"><literal>tempDir</literal></link></td><td><para>The directory used for temporary files that may be created to pass
command line arguments to the compiler process. Defaults to <literal>null</literal>,
in which case the directory will be chosen automatically.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.tasks.compile.ForkOptions:allJvmArgs" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/List.html"><classname>List</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>allJvmArgs</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The full set of arguments to use to launch the JVM for the compiler process. This includes arguments to define
system properties, the minimum/maximum heap size, and the bootstrap classpath.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>[]</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.compile.ForkOptions:executable" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>executable</literal></title><para>The compiler executable to be used.
</para><para>
Only takes effect if <literal>CompileOptions.fork</literal> is <literal>true</literal>. Defaults to <literal>null</literal>.
</para><para>
Setting the executable disables task output caching.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>null</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.compile.ForkOptions:javaHome" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>javaHome</literal></title><para>The Java home which contains the compiler to use.
</para><para>
Only takes effect if <literal>CompileOptions.fork</literal> is <literal>true</literal>. Defaults to <literal>null</literal>.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>null</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.compile.ForkOptions:jvmArgs" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/List.html"><classname>List</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>jvmArgs</literal></title><para>Returns any additional JVM arguments for the compiler process.
Defaults to the empty list.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>[]</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.compile.ForkOptions:jvmArgumentProviders" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/List.html"><classname>List</classname></ulink>&lt;<apilink class="org.gradle.process.CommandLineArgumentProvider"/>&gt;</classname> <literal>jvmArgumentProviders</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Returns any additional JVM argument providers for the compiler process.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>[]</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.compile.ForkOptions:memoryInitialSize" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>memoryInitialSize</literal></title><para>The initial heap size for the compiler process.
Defaults to <literal>null</literal>, in which case the JVM's default will be used.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>null</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.compile.ForkOptions:memoryMaximumSize" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>memoryMaximumSize</literal></title><para>The maximum heap size for the compiler process.
Defaults to <literal>null</literal>, in which case the JVM's default will be used.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>null</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.compile.ForkOptions:tempDir" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>tempDir</literal></title><para>The directory used for temporary files that may be created to pass
command line arguments to the compiler process. Defaults to <literal>null</literal>,
in which case the directory will be chosen automatically.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>null</literal></seg></seglistitem></segmentedlist></section></section></chapter><chapter id="org.gradle.api.tasks.javadoc.Groovydoc"><title>Groovydoc</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.tasks.javadoc.Groovydoc" style="javadoc"/></seg></seglistitem></segmentedlist><para>Generates HTML API documentation for Groovy source, and optionally, Java source.

</para><para>This task uses Groovy's Groovydoc tool to generate the API documentation. Please note
that the Groovydoc tool has some limitations at the moment. The version of the Groovydoc
that is used, is the one from the Groovy dependency defined in the build script.</para><section><title>Properties</title><table><title>Properties - Groovydoc</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.tasks.javadoc.Groovydoc:access"><literal>access</literal></link></td><td><para>The most restrictive access level to include in the Groovydoc.

</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.javadoc.Groovydoc:classpath"><literal>classpath</literal></link></td><td><para>The classpath used to locate classes referenced by the documented sources.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.javadoc.Groovydoc:destinationDir"><literal>destinationDir</literal></link></td><td><para>The directory to generate the documentation into.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.javadoc.Groovydoc:docTitle"><literal>docTitle</literal></link></td><td><para>The title for the package index(first) page. Set to <literal>null</literal> when there is no document title.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.javadoc.Groovydoc:excludes"><literal>excludes</literal></link></td><td><para>The set of exclude patterns.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.javadoc.Groovydoc:footer"><literal>footer</literal></link></td><td><para>The HTML footer for each page. Set to <literal>null</literal> when there is no footer.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.javadoc.Groovydoc:groovyClasspath"><literal>groovyClasspath</literal></link></td><td><para>The classpath containing the Groovy library to be used.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.javadoc.Groovydoc:header"><literal>header</literal></link></td><td><para>The HTML header for each page. Set to <literal>null</literal> when there is no header.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.javadoc.Groovydoc:includeAuthor"><literal>includeAuthor</literal></link></td><td><para>Whether to include author paragraphs.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.javadoc.Groovydoc:includeMainForScripts"><literal>includeMainForScripts</literal></link></td><td><para>Whether to include main method for scripts.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.javadoc.Groovydoc:includes"><literal>includes</literal></link></td><td><para>The set of include patterns.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.javadoc.Groovydoc:links"><literal>links</literal></link></td><td><para>The links to groovydoc/javadoc output at the given URL.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.javadoc.Groovydoc:noTimestamp"><literal>noTimestamp</literal></link></td><td><para>Whether to include timestamp within hidden comment in generated HTML (Groovy &gt;= 2.4.6).</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.javadoc.Groovydoc:noVersionStamp"><literal>noVersionStamp</literal></link></td><td><para>Whether to include version stamp within hidden comment in generated HTML (Groovy &gt;= 2.4.6).</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.javadoc.Groovydoc:overviewText"><literal>overviewText</literal></link></td><td><para>Returns a HTML text to be used for overview documentation. Set to <literal>null</literal> when there is no overview text.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.javadoc.Groovydoc:processScripts"><literal>processScripts</literal></link></td><td><para>Whether to process scripts.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.javadoc.Groovydoc:source"><literal>source</literal></link></td><td><para>The source for this task, after the include and exclude patterns have been applied. Ignores source files which do not exist.

</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.javadoc.Groovydoc:use"><literal>use</literal></link></td><td><para>Whether to create class and package usage pages.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.javadoc.Groovydoc:windowTitle"><literal>windowTitle</literal></link></td><td><para>The browser window title for the documentation. Set to <literal>null</literal> when there is no window title.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - Groovydoc</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.tasks.javadoc.Groovydoc:exclude(groovy.lang.Closure)">exclude</link>(excludeSpec)</literal></td><td><para>Adds an exclude spec. This method may be called multiple times to append new specs.The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter. The closure should return true or false. Example:

</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.javadoc.Groovydoc:exclude(java.lang.Iterable)">exclude</link>(excludes)</literal></td><td><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.javadoc.Groovydoc:exclude(java.lang.String[])">exclude</link>(excludes)</literal></td><td><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.javadoc.Groovydoc:exclude(org.gradle.api.specs.Spec)">exclude</link>(excludeSpec)</literal></td><td><para>Adds an exclude spec. This method may be called multiple times to append new specs.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.javadoc.Groovydoc:include(groovy.lang.Closure)">include</link>(includeSpec)</literal></td><td><para>Adds an include spec. This method may be called multiple times to append new specs. The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.javadoc.Groovydoc:include(java.lang.Iterable)">include</link>(includes)</literal></td><td><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.javadoc.Groovydoc:include(java.lang.String[])">include</link>(includes)</literal></td><td><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.javadoc.Groovydoc:include(org.gradle.api.specs.Spec)">include</link>(includeSpec)</literal></td><td><para>Adds an include spec. This method may be called multiple times to append new specs.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.javadoc.Groovydoc:link(java.lang.String, java.lang.String[])">link</link>(url, packages)</literal></td><td><para>Add links to groovydoc/javadoc output at the given URL.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.javadoc.Groovydoc:source(java.lang.Object[])">source</link>(sources)</literal></td><td><para>Adds some source to this task. The given source objects will be evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/>.</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.tasks.javadoc.Groovydoc:access" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<apilink class="org.gradle.api.tasks.javadoc.GroovydocAccess"/>&gt;</classname> <literal>access</literal></title><para>The most restrictive access level to include in the Groovydoc.

</para><para>
For example, to include classes and members with package, protected, and public access, use <apilink class="org.gradle.api.tasks.javadoc.GroovydocAccess" method="PACKAGE"/>.
</para><segmentedlist><segtitle>Default with <literal>groovy</literal> plugin</segtitle><seglistitem><seg><literal>GroovydocAccess.PROTECTED</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.javadoc.Groovydoc:classpath" role="detail"><title><apilink class="org.gradle.api.file.FileCollection"/> <literal>classpath</literal></title><para>The classpath used to locate classes referenced by the documented sources.</para><segmentedlist><segtitle>Default with <literal>groovy</literal> plugin</segtitle><seglistitem><seg><literal>sourceSets.main.output + sourceSets.main.compileClasspath</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.javadoc.Groovydoc:destinationDir" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>destinationDir</literal></title><para>The directory to generate the documentation into.</para><segmentedlist><segtitle>Default with <literal>groovy</literal> plugin</segtitle><seglistitem><seg><literal><replaceable>${project.docsDir}</replaceable>/groovydoc</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.javadoc.Groovydoc:docTitle" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>docTitle</literal></title><para>The title for the package index(first) page. Set to <literal>null</literal> when there is no document title.</para><segmentedlist><segtitle>Default with <literal>groovy</literal> plugin</segtitle><seglistitem><seg><literal>project.reporting.apiDocTitle</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.javadoc.Groovydoc:excludes" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>excludes</literal></title><para>The set of exclude patterns.</para></section><section id="org.gradle.api.tasks.javadoc.Groovydoc:footer" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>footer</literal></title><para>The HTML footer for each page. Set to <literal>null</literal> when there is no footer.</para><segmentedlist><segtitle>Default with <literal>groovy</literal> plugin</segtitle><seglistitem><seg><literal>null</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.javadoc.Groovydoc:groovyClasspath" role="detail"><title><apilink class="org.gradle.api.file.FileCollection"/> <literal>groovyClasspath</literal></title><para>The classpath containing the Groovy library to be used.</para><segmentedlist><segtitle>Default with <literal>groovy</literal> plugin</segtitle><seglistitem><seg><literal>project.configurations.groovy</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.javadoc.Groovydoc:header" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>header</literal></title><para>The HTML header for each page. Set to <literal>null</literal> when there is no header.</para><segmentedlist><segtitle>Default with <literal>groovy</literal> plugin</segtitle><seglistitem><seg><literal>null</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.javadoc.Groovydoc:includeAuthor" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html"><classname>Boolean</classname></ulink>&gt;</classname> <literal>includeAuthor</literal></title><para>Whether to include author paragraphs.</para><segmentedlist><segtitle>Default with <literal>groovy</literal> plugin</segtitle><seglistitem><seg><literal>false</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.javadoc.Groovydoc:includeMainForScripts" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html"><classname>Boolean</classname></ulink>&gt;</classname> <literal>includeMainForScripts</literal></title><para>Whether to include main method for scripts.</para><segmentedlist><segtitle>Default with <literal>groovy</literal> plugin</segtitle><seglistitem><seg><literal>true</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.javadoc.Groovydoc:includes" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>includes</literal></title><para>The set of include patterns.</para></section><section id="org.gradle.api.tasks.javadoc.Groovydoc:links" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<apilink class="org.gradle.api.tasks.javadoc.Groovydoc.Link"/>&gt;</classname> <literal>links</literal></title><para>The links to groovydoc/javadoc output at the given URL.</para><segmentedlist><segtitle>Default with <literal>groovy</literal> plugin</segtitle><seglistitem><seg><literal>[]</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.javadoc.Groovydoc:noTimestamp" role="detail"><title><classname>boolean</classname> <literal>noTimestamp</literal></title><para>Whether to include timestamp within hidden comment in generated HTML (Groovy &gt;= 2.4.6).</para><segmentedlist><segtitle>Default with <literal>groovy</literal> plugin</segtitle><seglistitem><seg><literal>false</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.javadoc.Groovydoc:noVersionStamp" role="detail"><title><classname>boolean</classname> <literal>noVersionStamp</literal></title><para>Whether to include version stamp within hidden comment in generated HTML (Groovy &gt;= 2.4.6).</para><segmentedlist><segtitle>Default with <literal>groovy</literal> plugin</segtitle><seglistitem><seg><literal>false</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.javadoc.Groovydoc:overviewText" role="detail"><title><apilink class="org.gradle.api.resources.TextResource"/> <literal>overviewText</literal></title><para>Returns a HTML text to be used for overview documentation. Set to <literal>null</literal> when there is no overview text.</para><segmentedlist><segtitle>Default with <literal>groovy</literal> plugin</segtitle><seglistitem><seg><literal>null</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.javadoc.Groovydoc:processScripts" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html"><classname>Boolean</classname></ulink>&gt;</classname> <literal>processScripts</literal></title><para>Whether to process scripts.</para><segmentedlist><segtitle>Default with <literal>groovy</literal> plugin</segtitle><seglistitem><seg><literal>true</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.javadoc.Groovydoc:source" role="detail"><title><apilink class="org.gradle.api.file.FileTree"/> <literal>source</literal> (read-only)</title><para>The source for this task, after the include and exclude patterns have been applied. Ignores source files which do not exist.

</para><para>
The <apilink class="org.gradle.api.tasks.PathSensitivity"/> for the sources is configured to be <apilink class="org.gradle.api.tasks.PathSensitivity" method="ABSOLUTE"/>.
If your sources are less strict, please change it accordingly by overriding this method in your subclass.
</para><segmentedlist><segtitle>Default with <literal>groovy</literal> plugin</segtitle><seglistitem><seg><literal>sourceSets.main.groovy</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.javadoc.Groovydoc:use" role="detail"><title><classname>boolean</classname> <literal>use</literal></title><para>Whether to create class and package usage pages.</para><segmentedlist><segtitle>Default with <literal>groovy</literal> plugin</segtitle><seglistitem><seg><literal>false</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.javadoc.Groovydoc:windowTitle" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>windowTitle</literal></title><para>The browser window title for the documentation. Set to <literal>null</literal> when there is no window title.</para><segmentedlist><segtitle>Default with <literal>groovy</literal> plugin</segtitle><seglistitem><seg><literal>project.reporting.apiDocTitle</literal></seg></seglistitem></segmentedlist></section></section><section><title>Method details</title><section id="org.gradle.api.tasks.javadoc.Groovydoc:exclude(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>exclude</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> excludeSpec)</title><para>Adds an exclude spec. This method may be called multiple times to append new specs.The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter. The closure should return true or false. Example:

</para><para><programlisting language="java">
copySpec {
  from 'source'
  into 'destination'
  //an example of excluding files from certain configuration:
  exclude { it.file in configurations.someConf.files }
}
</programlisting></para><para>

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.api.tasks.javadoc.Groovydoc:exclude(java.lang.Iterable)" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>exclude</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> excludes)</title><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.api.tasks.javadoc.Groovydoc:exclude(java.lang.String[])" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>exclude</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>...</classname> excludes)</title><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.api.tasks.javadoc.Groovydoc:exclude(org.gradle.api.specs.Spec)" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>exclude</literal>(<classname><apilink class="org.gradle.api.specs.Spec"/>&lt;<apilink class="org.gradle.api.file.FileTreeElement"/>&gt;</classname> excludeSpec)</title><para>Adds an exclude spec. This method may be called multiple times to append new specs.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.api.tasks.javadoc.Groovydoc:include(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>include</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> includeSpec)</title><para>Adds an include spec. This method may be called multiple times to append new specs. The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></section><section id="org.gradle.api.tasks.javadoc.Groovydoc:include(java.lang.Iterable)" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>include</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> includes)</title><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></section><section id="org.gradle.api.tasks.javadoc.Groovydoc:include(java.lang.String[])" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>include</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>...</classname> includes)</title><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></section><section id="org.gradle.api.tasks.javadoc.Groovydoc:include(org.gradle.api.specs.Spec)" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>include</literal>(<classname><apilink class="org.gradle.api.specs.Spec"/>&lt;<apilink class="org.gradle.api.file.FileTreeElement"/>&gt;</classname> includeSpec)</title><para>Adds an include spec. This method may be called multiple times to append new specs.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></section><section id="org.gradle.api.tasks.javadoc.Groovydoc:link(java.lang.String, java.lang.String[])" role="detail"><title><classname>void</classname> <literal>link</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> url, <classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>...</classname> packages)</title><para>Add links to groovydoc/javadoc output at the given URL.</para></section><section id="org.gradle.api.tasks.javadoc.Groovydoc:source(java.lang.Object[])" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>source</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink>...</classname> sources)</title><para>Adds some source to this task. The given source objects will be evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/>.</para></section></section></chapter><chapter id="org.gradle.api.reporting.dependencies.HtmlDependencyReportTask"><title>HtmlDependencyReportTask</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.reporting.dependencies.HtmlDependencyReportTask" style="javadoc"/></seg></seglistitem></segmentedlist><para>Generates an HTML dependency report. This report
combines the features of the ASCII dependency report and those of the ASCII
dependency insight report. For a given project, it generates a tree of the dependencies
of every configuration, and each dependency can be clicked to show the insight of
this dependency.
</para><para>
This task generates a report for the task's containing project by default. But it can also generate
a report for multiple projects, by setting the value of the
<literal>projects</literal> property. Here's how to generate an HTML
dependency report for all the projects of a multi-project build, for example:
</para><programlisting language="java">
htmlDependencyReport {
    projects = project.allprojects
}
</programlisting><para>
The report is generated in the <literal>build/reports/project/dependencies</literal> directory by default.
This can also be changed by setting the <literal>reports.html.destination</literal> property:
</para><programlisting language="java">
htmlDependencyReport {
    reports.html.outputLocation = file("build/reports/project/dependencies")
}
</programlisting><section><title>Properties</title><table><title>Properties - HtmlDependencyReportTask</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.reporting.dependencies.HtmlDependencyReportTask:outputFile"><literal>outputFile</literal></link></td><td><para>The file which the report will be written to. When set to <literal>null</literal>, the report is written to <literal>System.out</literal>.
Defaults to <literal>null</literal>.</para></td></tr><tr><td><link linkend="org.gradle.api.reporting.dependencies.HtmlDependencyReportTask:projects"><literal>projects</literal></link></td><td><para>The set of project to generate this report for. By default, the report is generated for the task's
containing project.</para></td></tr><tr><td><link linkend="org.gradle.api.reporting.dependencies.HtmlDependencyReportTask:reports"><literal>reports</literal></link></td><td><para>A <apilink class="org.gradle.api.reporting.ReportContainer"/> instance.
</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - HtmlDependencyReportTask</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.reporting.dependencies.HtmlDependencyReportTask:reports(org.gradle.api.Action)">reports</link>(configureAction)</literal></td><td><para>Allow configuration of the report container by closure.

</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.reporting.dependencies.HtmlDependencyReportTask:outputFile" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>outputFile</literal></title><para>The file which the report will be written to. When set to <literal>null</literal>, the report is written to <literal>System.out</literal>.
Defaults to <literal>null</literal>.</para></section><section id="org.gradle.api.reporting.dependencies.HtmlDependencyReportTask:projects" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<apilink class="org.gradle.api.Project"/>&gt;</classname> <literal>projects</literal></title><para>The set of project to generate this report for. By default, the report is generated for the task's
containing project.</para></section><section id="org.gradle.api.reporting.dependencies.HtmlDependencyReportTask:reports" role="detail"><title><classname>T</classname> <literal>reports</literal> (read-only)</title><para>A <apilink class="org.gradle.api.reporting.ReportContainer"/> instance.
</para><para>
Implementers specify a specific implementation of <apilink class="org.gradle.api.reporting.ReportContainer"/> that describes the types of reports that
are available.</para></section></section><section><title>Method details</title><section id="org.gradle.api.reporting.dependencies.HtmlDependencyReportTask:reports(org.gradle.api.Action)" role="detail"><title><classname>T</classname> <literal>reports</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <classname>T</classname>&gt;</classname> configureAction)</title><para>Allow configuration of the report container by closure.

</para><programlisting language="java">
reports {
  html {
    required false
  }
  xml.outputLocation = "build/reports/myReport.xml"
}
</programlisting></section></section></chapter><chapter id="org.gradle.testing.jacoco.tasks.JacocoBase"><title>JacocoBase</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.testing.jacoco.tasks.JacocoBase" style="javadoc"/></seg></seglistitem></segmentedlist><segmentedlist><segtitle>Known Subtypes</segtitle><seglistitem><seg><simplelist columns="1" type="vert"><member><apilink class="org.gradle.testing.jacoco.tasks.JacocoReportBase"/></member></simplelist></seg></seglistitem></segmentedlist><para>Base class for Jacoco tasks.</para><section><title>Properties</title><table><title>Properties - JacocoBase</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.testing.jacoco.tasks.JacocoBase:jacocoClasspath"><literal>jacocoClasspath</literal></link></td><td><para>Classpath containing Jacoco classes for use by the task.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.testing.jacoco.tasks.JacocoBase:jacocoClasspath" role="detail"><title><apilink class="org.gradle.api.file.FileCollection"/> <literal>jacocoClasspath</literal></title><para>Classpath containing Jacoco classes for use by the task.</para><segmentedlist><segtitle>Default with <literal>jacoco</literal> plugin</segtitle><seglistitem><seg>
                    <literal>project.configurations.jacocoAnt</literal>
                </seg></seglistitem></segmentedlist></section></section></chapter><chapter id="org.gradle.testing.jacoco.tasks.JacocoReportBase"><title>JacocoReportBase</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.testing.jacoco.tasks.JacocoReportBase" style="javadoc"/></seg></seglistitem></segmentedlist><segmentedlist><segtitle>Known Subtypes</segtitle><seglistitem><seg><simplelist columns="1" type="vert"><member><apilink class="org.gradle.testing.jacoco.tasks.JacocoReport"/></member><member><apilink class="org.gradle.testing.jacoco.tasks.JacocoCoverageVerification"/></member></simplelist></seg></seglistitem></segmentedlist><para>Base class for Jacoco report tasks.</para><section><title>Properties</title><table><title>Properties - JacocoReportBase</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.testing.jacoco.tasks.JacocoReportBase:additionalClassDirs"><literal>additionalClassDirs</literal></link></td><td><para>Additional class dirs that coverage data should be reported for.</para></td></tr><tr><td><link linkend="org.gradle.testing.jacoco.tasks.JacocoReportBase:additionalSourceDirs"><literal>additionalSourceDirs</literal></link></td><td><para>Additional source dirs for the classes coverage data is being reported for.</para></td></tr><tr><td><link linkend="org.gradle.testing.jacoco.tasks.JacocoReportBase:classDirectories"><literal>classDirectories</literal></link></td><td><para>Source sets that coverage should be reported for.</para></td></tr><tr><td><link linkend="org.gradle.testing.jacoco.tasks.JacocoReportBase:executionData"><literal>executionData</literal></link></td><td><para>Collection of execution data files to analyze.</para></td></tr><tr><td><link linkend="org.gradle.testing.jacoco.tasks.JacocoReportBase:jacocoClasspath"><literal>jacocoClasspath</literal></link></td><td><para>Classpath containing Jacoco classes for use by the task.</para></td></tr><tr><td><link linkend="org.gradle.testing.jacoco.tasks.JacocoReportBase:sourceDirectories"><literal>sourceDirectories</literal></link></td><td><para>Source sets that coverage should be reported for.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - JacocoReportBase</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.testing.jacoco.tasks.JacocoReportBase:executionData(java.lang.Object[])">executionData</link>(files)</literal></td><td><para>Adds execution data files to be used during coverage analysis.</para></td></tr><tr><td><literal><link linkend="org.gradle.testing.jacoco.tasks.JacocoReportBase:executionData(org.gradle.api.Task[])">executionData</link>(tasks)</literal></td><td><para>Adds execution data generated by a task to the list of those used during coverage analysis. Only tasks with a <apilink class="org.gradle.testing.jacoco.plugins.JacocoTaskExtension"/> will be included; all others will be ignored.</para></td></tr><tr><td><literal><link linkend="org.gradle.testing.jacoco.tasks.JacocoReportBase:executionData(org.gradle.api.tasks.TaskCollection)">executionData</link>(tasks)</literal></td><td><para>Adds execution data generated by the given tasks to the list of those used during coverage analysis. Only tasks with a <apilink class="org.gradle.testing.jacoco.plugins.JacocoTaskExtension"/> will be included; all others will be ignored.</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.testing.jacoco.tasks.JacocoReportBase:additionalClassDirs" role="detail"><title><apilink class="org.gradle.api.file.ConfigurableFileCollection"/> <literal>additionalClassDirs</literal> (read-only)</title><para>Additional class dirs that coverage data should be reported for.</para></section><section id="org.gradle.testing.jacoco.tasks.JacocoReportBase:additionalSourceDirs" role="detail"><title><apilink class="org.gradle.api.file.ConfigurableFileCollection"/> <literal>additionalSourceDirs</literal> (read-only)</title><para>Additional source dirs for the classes coverage data is being reported for.</para></section><section id="org.gradle.testing.jacoco.tasks.JacocoReportBase:classDirectories" role="detail"><title><apilink class="org.gradle.api.file.ConfigurableFileCollection"/> <literal>classDirectories</literal> (read-only)</title><para>Source sets that coverage should be reported for.</para></section><section id="org.gradle.testing.jacoco.tasks.JacocoReportBase:executionData" role="detail"><title><apilink class="org.gradle.api.file.ConfigurableFileCollection"/> <literal>executionData</literal> (read-only)</title><para>Collection of execution data files to analyze.</para></section><section id="org.gradle.testing.jacoco.tasks.JacocoReportBase:jacocoClasspath" role="detail"><title><apilink class="org.gradle.api.file.FileCollection"/> <literal>jacocoClasspath</literal></title><para>Classpath containing Jacoco classes for use by the task.</para><segmentedlist><segtitle>Default with <literal>jacoco</literal> plugin</segtitle><seglistitem><seg>
                    <literal>project.configurations.jacocoAnt</literal>
                </seg></seglistitem></segmentedlist></section><section id="org.gradle.testing.jacoco.tasks.JacocoReportBase:sourceDirectories" role="detail"><title><apilink class="org.gradle.api.file.ConfigurableFileCollection"/> <literal>sourceDirectories</literal> (read-only)</title><para>Source sets that coverage should be reported for.</para></section></section><section><title>Method details</title><section id="org.gradle.testing.jacoco.tasks.JacocoReportBase:executionData(java.lang.Object[])" role="detail"><title><classname>void</classname> <literal>executionData</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink>...</classname> files)</title><para>Adds execution data files to be used during coverage analysis.</para></section><section id="org.gradle.testing.jacoco.tasks.JacocoReportBase:executionData(org.gradle.api.Task[])" role="detail"><title><classname>void</classname> <literal>executionData</literal>(<classname><apilink class="org.gradle.api.Task"/>...</classname> tasks)</title><para>Adds execution data generated by a task to the list of those used during coverage analysis. Only tasks with a <apilink class="org.gradle.testing.jacoco.plugins.JacocoTaskExtension"/> will be included; all others will be ignored.</para></section><section id="org.gradle.testing.jacoco.tasks.JacocoReportBase:executionData(org.gradle.api.tasks.TaskCollection)" role="detail"><title><classname>void</classname> <literal>executionData</literal>(<apilink class="org.gradle.api.tasks.TaskCollection"/> tasks)</title><para>Adds execution data generated by the given tasks to the list of those used during coverage analysis. Only tasks with a <apilink class="org.gradle.testing.jacoco.plugins.JacocoTaskExtension"/> will be included; all others will be ignored.</para></section></section></chapter><chapter id="org.gradle.testing.jacoco.tasks.JacocoReport"><title>JacocoReport</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.testing.jacoco.tasks.JacocoReport" style="javadoc"/></seg></seglistitem></segmentedlist><para>Task to generate HTML, Xml and CSV reports of Jacoco coverage data.</para><section><title>Properties</title><table><title>Properties - JacocoReport</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.testing.jacoco.tasks.JacocoReport:additionalClassDirs"><literal>additionalClassDirs</literal></link></td><td><para>Additional class dirs that coverage data should be reported for.</para></td></tr><tr><td><link linkend="org.gradle.testing.jacoco.tasks.JacocoReport:additionalSourceDirs"><literal>additionalSourceDirs</literal></link></td><td><para>Additional source dirs for the classes coverage data is being reported for.</para></td></tr><tr><td><link linkend="org.gradle.testing.jacoco.tasks.JacocoReport:classDirectories"><literal>classDirectories</literal></link></td><td><para>Source sets that coverage should be reported for.</para></td></tr><tr><td><link linkend="org.gradle.testing.jacoco.tasks.JacocoReport:executionData"><literal>executionData</literal></link></td><td><para>Collection of execution data files to analyze.</para></td></tr><tr><td><link linkend="org.gradle.testing.jacoco.tasks.JacocoReport:jacocoClasspath"><literal>jacocoClasspath</literal></link></td><td><para>Classpath containing Jacoco classes for use by the task.</para></td></tr><tr><td><link linkend="org.gradle.testing.jacoco.tasks.JacocoReport:reports"><literal>reports</literal></link></td><td><para>The reports to be generated by this task.</para></td></tr><tr><td><link linkend="org.gradle.testing.jacoco.tasks.JacocoReport:sourceDirectories"><literal>sourceDirectories</literal></link></td><td><para>Source sets that coverage should be reported for.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - JacocoReport</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.testing.jacoco.tasks.JacocoReport:executionData(java.lang.Object[])">executionData</link>(files)</literal></td><td><para>Adds execution data files to be used during coverage analysis.</para></td></tr><tr><td><literal><link linkend="org.gradle.testing.jacoco.tasks.JacocoReport:executionData(org.gradle.api.Task[])">executionData</link>(tasks)</literal></td><td><para>Adds execution data generated by a task to the list of those used during coverage analysis. Only tasks with a <apilink class="org.gradle.testing.jacoco.plugins.JacocoTaskExtension"/> will be included; all others will be ignored.</para></td></tr><tr><td><literal><link linkend="org.gradle.testing.jacoco.tasks.JacocoReport:executionData(org.gradle.api.tasks.TaskCollection)">executionData</link>(tasks)</literal></td><td><para>Adds execution data generated by the given tasks to the list of those used during coverage analysis. Only tasks with a <apilink class="org.gradle.testing.jacoco.plugins.JacocoTaskExtension"/> will be included; all others will be ignored.</para></td></tr><tr><td><literal><link linkend="org.gradle.testing.jacoco.tasks.JacocoReport:reports(org.gradle.api.Action)">reports</link>(configureAction)</literal></td><td><para>Allow configuration of the report container by closure.

</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.testing.jacoco.tasks.JacocoReport:additionalClassDirs" role="detail"><title><apilink class="org.gradle.api.file.ConfigurableFileCollection"/> <literal>additionalClassDirs</literal> (read-only)</title><para>Additional class dirs that coverage data should be reported for.</para></section><section id="org.gradle.testing.jacoco.tasks.JacocoReport:additionalSourceDirs" role="detail"><title><apilink class="org.gradle.api.file.ConfigurableFileCollection"/> <literal>additionalSourceDirs</literal> (read-only)</title><para>Additional source dirs for the classes coverage data is being reported for.</para></section><section id="org.gradle.testing.jacoco.tasks.JacocoReport:classDirectories" role="detail"><title><apilink class="org.gradle.api.file.ConfigurableFileCollection"/> <literal>classDirectories</literal> (read-only)</title><para>Source sets that coverage should be reported for.</para></section><section id="org.gradle.testing.jacoco.tasks.JacocoReport:executionData" role="detail"><title><apilink class="org.gradle.api.file.ConfigurableFileCollection"/> <literal>executionData</literal> (read-only)</title><para>Collection of execution data files to analyze.</para></section><section id="org.gradle.testing.jacoco.tasks.JacocoReport:jacocoClasspath" role="detail"><title><apilink class="org.gradle.api.file.FileCollection"/> <literal>jacocoClasspath</literal></title><para>Classpath containing Jacoco classes for use by the task.</para><segmentedlist><segtitle>Default with <literal>jacoco</literal> plugin</segtitle><seglistitem><seg>
                    <literal>project.configurations.jacocoAnt</literal>
                </seg></seglistitem></segmentedlist></section><section id="org.gradle.testing.jacoco.tasks.JacocoReport:reports" role="detail"><title><apilink class="org.gradle.testing.jacoco.tasks.JacocoReportsContainer"/> <literal>reports</literal> (read-only)</title><para>The reports to be generated by this task.</para></section><section id="org.gradle.testing.jacoco.tasks.JacocoReport:sourceDirectories" role="detail"><title><apilink class="org.gradle.api.file.ConfigurableFileCollection"/> <literal>sourceDirectories</literal> (read-only)</title><para>Source sets that coverage should be reported for.</para></section></section><section><title>Method details</title><section id="org.gradle.testing.jacoco.tasks.JacocoReport:executionData(java.lang.Object[])" role="detail"><title><classname>void</classname> <literal>executionData</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink>...</classname> files)</title><para>Adds execution data files to be used during coverage analysis.</para></section><section id="org.gradle.testing.jacoco.tasks.JacocoReport:executionData(org.gradle.api.Task[])" role="detail"><title><classname>void</classname> <literal>executionData</literal>(<classname><apilink class="org.gradle.api.Task"/>...</classname> tasks)</title><para>Adds execution data generated by a task to the list of those used during coverage analysis. Only tasks with a <apilink class="org.gradle.testing.jacoco.plugins.JacocoTaskExtension"/> will be included; all others will be ignored.</para></section><section id="org.gradle.testing.jacoco.tasks.JacocoReport:executionData(org.gradle.api.tasks.TaskCollection)" role="detail"><title><classname>void</classname> <literal>executionData</literal>(<apilink class="org.gradle.api.tasks.TaskCollection"/> tasks)</title><para>Adds execution data generated by the given tasks to the list of those used during coverage analysis. Only tasks with a <apilink class="org.gradle.testing.jacoco.plugins.JacocoTaskExtension"/> will be included; all others will be ignored.</para></section><section id="org.gradle.testing.jacoco.tasks.JacocoReport:reports(org.gradle.api.Action)" role="detail"><title><classname>T</classname> <literal>reports</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <classname>T</classname>&gt;</classname> configureAction)</title><para>Allow configuration of the report container by closure.

</para><programlisting language="java">
reports {
  html {
    required false
  }
  xml.outputLocation = "build/reports/myReport.xml"
}
</programlisting></section></section></chapter><chapter id="org.gradle.testing.jacoco.tasks.JacocoCoverageVerification"><title>JacocoCoverageVerification</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.testing.jacoco.tasks.JacocoCoverageVerification" style="javadoc"/></seg></seglistitem></segmentedlist><para>Task for verifying code coverage metrics. Fails the task if violations are detected based on specified rules.
</para><para>
Requires JaCoCo version &gt;= 0.6.3.</para><section><title>Properties</title><table><title>Properties - JacocoCoverageVerification</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.testing.jacoco.tasks.JacocoCoverageVerification:additionalClassDirs"><literal>additionalClassDirs</literal></link></td><td><para>Additional class dirs that coverage data should be reported for.</para></td></tr><tr><td><link linkend="org.gradle.testing.jacoco.tasks.JacocoCoverageVerification:additionalSourceDirs"><literal>additionalSourceDirs</literal></link></td><td><para>Additional source dirs for the classes coverage data is being reported for.</para></td></tr><tr><td><link linkend="org.gradle.testing.jacoco.tasks.JacocoCoverageVerification:classDirectories"><literal>classDirectories</literal></link></td><td><para>Source sets that coverage should be reported for.</para></td></tr><tr><td><link linkend="org.gradle.testing.jacoco.tasks.JacocoCoverageVerification:executionData"><literal>executionData</literal></link></td><td><para>Collection of execution data files to analyze.</para></td></tr><tr><td><link linkend="org.gradle.testing.jacoco.tasks.JacocoCoverageVerification:jacocoClasspath"><literal>jacocoClasspath</literal></link></td><td><para>Classpath containing Jacoco classes for use by the task.</para></td></tr><tr><td><link linkend="org.gradle.testing.jacoco.tasks.JacocoCoverageVerification:sourceDirectories"><literal>sourceDirectories</literal></link></td><td><para>Source sets that coverage should be reported for.</para></td></tr><tr><td><link linkend="org.gradle.testing.jacoco.tasks.JacocoCoverageVerification:violationRules"><literal>violationRules</literal></link></td><td><para>The violation rules set for this task.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - JacocoCoverageVerification</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.testing.jacoco.tasks.JacocoCoverageVerification:executionData(java.lang.Object[])">executionData</link>(files)</literal></td><td><para>Adds execution data files to be used during coverage analysis.</para></td></tr><tr><td><literal><link linkend="org.gradle.testing.jacoco.tasks.JacocoCoverageVerification:executionData(org.gradle.api.Task[])">executionData</link>(tasks)</literal></td><td><para>Adds execution data generated by a task to the list of those used during coverage analysis. Only tasks with a <apilink class="org.gradle.testing.jacoco.plugins.JacocoTaskExtension"/> will be included; all others will be ignored.</para></td></tr><tr><td><literal><link linkend="org.gradle.testing.jacoco.tasks.JacocoCoverageVerification:executionData(org.gradle.api.tasks.TaskCollection)">executionData</link>(tasks)</literal></td><td><para>Adds execution data generated by the given tasks to the list of those used during coverage analysis. Only tasks with a <apilink class="org.gradle.testing.jacoco.plugins.JacocoTaskExtension"/> will be included; all others will be ignored.</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.testing.jacoco.tasks.JacocoCoverageVerification:additionalClassDirs" role="detail"><title><apilink class="org.gradle.api.file.ConfigurableFileCollection"/> <literal>additionalClassDirs</literal> (read-only)</title><para>Additional class dirs that coverage data should be reported for.</para></section><section id="org.gradle.testing.jacoco.tasks.JacocoCoverageVerification:additionalSourceDirs" role="detail"><title><apilink class="org.gradle.api.file.ConfigurableFileCollection"/> <literal>additionalSourceDirs</literal> (read-only)</title><para>Additional source dirs for the classes coverage data is being reported for.</para></section><section id="org.gradle.testing.jacoco.tasks.JacocoCoverageVerification:classDirectories" role="detail"><title><apilink class="org.gradle.api.file.ConfigurableFileCollection"/> <literal>classDirectories</literal> (read-only)</title><para>Source sets that coverage should be reported for.</para></section><section id="org.gradle.testing.jacoco.tasks.JacocoCoverageVerification:executionData" role="detail"><title><apilink class="org.gradle.api.file.ConfigurableFileCollection"/> <literal>executionData</literal> (read-only)</title><para>Collection of execution data files to analyze.</para></section><section id="org.gradle.testing.jacoco.tasks.JacocoCoverageVerification:jacocoClasspath" role="detail"><title><apilink class="org.gradle.api.file.FileCollection"/> <literal>jacocoClasspath</literal></title><para>Classpath containing Jacoco classes for use by the task.</para><segmentedlist><segtitle>Default with <literal>jacoco</literal> plugin</segtitle><seglistitem><seg>
                    <literal>project.configurations.jacocoAnt</literal>
                </seg></seglistitem></segmentedlist></section><section id="org.gradle.testing.jacoco.tasks.JacocoCoverageVerification:sourceDirectories" role="detail"><title><apilink class="org.gradle.api.file.ConfigurableFileCollection"/> <literal>sourceDirectories</literal> (read-only)</title><para>Source sets that coverage should be reported for.</para></section><section id="org.gradle.testing.jacoco.tasks.JacocoCoverageVerification:violationRules" role="detail"><title><apilink class="org.gradle.testing.jacoco.tasks.rules.JacocoViolationRulesContainer"/> <literal>violationRules</literal> (read-only)</title><para>The violation rules set for this task.</para></section></section><section><title>Method details</title><section id="org.gradle.testing.jacoco.tasks.JacocoCoverageVerification:executionData(java.lang.Object[])" role="detail"><title><classname>void</classname> <literal>executionData</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink>...</classname> files)</title><para>Adds execution data files to be used during coverage analysis.</para></section><section id="org.gradle.testing.jacoco.tasks.JacocoCoverageVerification:executionData(org.gradle.api.Task[])" role="detail"><title><classname>void</classname> <literal>executionData</literal>(<classname><apilink class="org.gradle.api.Task"/>...</classname> tasks)</title><para>Adds execution data generated by a task to the list of those used during coverage analysis. Only tasks with a <apilink class="org.gradle.testing.jacoco.plugins.JacocoTaskExtension"/> will be included; all others will be ignored.</para></section><section id="org.gradle.testing.jacoco.tasks.JacocoCoverageVerification:executionData(org.gradle.api.tasks.TaskCollection)" role="detail"><title><classname>void</classname> <literal>executionData</literal>(<apilink class="org.gradle.api.tasks.TaskCollection"/> tasks)</title><para>Adds execution data generated by the given tasks to the list of those used during coverage analysis. Only tasks with a <apilink class="org.gradle.testing.jacoco.plugins.JacocoTaskExtension"/> will be included; all others will be ignored.</para></section></section></chapter><chapter id="org.gradle.api.tasks.compile.JavaCompile"><title>JavaCompile</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.tasks.compile.JavaCompile" style="javadoc"/></seg></seglistitem></segmentedlist><para>Compiles Java source files.

</para><programlisting language="java">
    plugins {
        id 'java'
    }

    tasks.withType(JavaCompile).configureEach {
        //enable compilation in a separate daemon process
        options.fork = true
    }
</programlisting><section><title>Properties</title><table><title>Properties - JavaCompile</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.tasks.compile.JavaCompile:classpath"><literal>classpath</literal></link></td><td><para>The classpath to use to compile the source files.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.compile.JavaCompile:destinationDirectory"><literal>destinationDirectory</literal></link></td><td><para>The directory property that represents the directory to generate the <literal>.class</literal> files into.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.compile.JavaCompile:excludes"><literal>excludes</literal></link></td><td><para>The set of exclude patterns.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.compile.JavaCompile:includes"><literal>includes</literal></link></td><td><para>The set of include patterns.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.compile.JavaCompile:javaCompiler"><literal>javaCompiler</literal></link></td><td><para>Configures the java compiler to be used to compile the Java source.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.compile.JavaCompile:modularity"><literal>modularity</literal></link></td><td><para>The module path handling of this compile task.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.compile.JavaCompile:options"><literal>options</literal></link></td><td><para>The compilation options.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.compile.JavaCompile:source"><literal>source</literal></link></td><td><para>The source for this task, after the include and exclude patterns have been applied. Ignores source files which do not exist.

</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.compile.JavaCompile:sourceCompatibility"><literal>sourceCompatibility</literal></link></td><td><para>The Java language level to use to compile the source files.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.compile.JavaCompile:targetCompatibility"><literal>targetCompatibility</literal></link></td><td><para>The target JVM to generate the <literal>.class</literal> files for.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - JavaCompile</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.tasks.compile.JavaCompile:exclude(groovy.lang.Closure)">exclude</link>(excludeSpec)</literal></td><td><para>Adds an exclude spec. This method may be called multiple times to append new specs.The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter. The closure should return true or false. Example:

</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.compile.JavaCompile:exclude(java.lang.Iterable)">exclude</link>(excludes)</literal></td><td><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.compile.JavaCompile:exclude(java.lang.String[])">exclude</link>(excludes)</literal></td><td><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.compile.JavaCompile:exclude(org.gradle.api.specs.Spec)">exclude</link>(excludeSpec)</literal></td><td><para>Adds an exclude spec. This method may be called multiple times to append new specs.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.compile.JavaCompile:include(groovy.lang.Closure)">include</link>(includeSpec)</literal></td><td><para>Adds an include spec. This method may be called multiple times to append new specs. The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.compile.JavaCompile:include(java.lang.Iterable)">include</link>(includes)</literal></td><td><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.compile.JavaCompile:include(java.lang.String[])">include</link>(includes)</literal></td><td><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.compile.JavaCompile:include(org.gradle.api.specs.Spec)">include</link>(includeSpec)</literal></td><td><para>Adds an include spec. This method may be called multiple times to append new specs.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.compile.JavaCompile:source(java.lang.Object[])">source</link>(sources)</literal></td><td><para>Adds some source to this task. The given source objects will be evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/>.</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.tasks.compile.JavaCompile:classpath" role="detail"><title><apilink class="org.gradle.api.file.FileCollection"/> <literal>classpath</literal></title><para>The classpath to use to compile the source files.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal><replaceable>sourceSet</replaceable>.compileClasspath</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.compile.JavaCompile:destinationDirectory" role="detail"><title><apilink class="org.gradle.api.file.DirectoryProperty"/> <literal>destinationDirectory</literal></title><para>The directory property that represents the directory to generate the <literal>.class</literal> files into.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal><replaceable>sourceSet</replaceable>.<replaceable>sourceDirectorySet</replaceable>.destinationDirectory</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.compile.JavaCompile:excludes" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>excludes</literal></title><para>The set of exclude patterns.</para></section><section id="org.gradle.api.tasks.compile.JavaCompile:includes" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>includes</literal></title><para>The set of include patterns.</para></section><section id="org.gradle.api.tasks.compile.JavaCompile:javaCompiler" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<apilink class="org.gradle.jvm.toolchain.JavaCompiler"/>&gt;</classname> <literal>javaCompiler</literal></title><para>Configures the java compiler to be used to compile the Java source.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>java.toolchain</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.compile.JavaCompile:modularity" role="detail"><title><apilink class="org.gradle.api.jvm.ModularitySpec"/> <literal>modularity</literal> (read-only)</title><para>The module path handling of this compile task.</para></section><section id="org.gradle.api.tasks.compile.JavaCompile:options" role="detail"><title><apilink class="org.gradle.api.tasks.compile.CompileOptions"/> <literal>options</literal> (read-only)</title><para>The compilation options.</para></section><section id="org.gradle.api.tasks.compile.JavaCompile:source" role="detail"><title><apilink class="org.gradle.api.file.FileTree"/> <literal>source</literal> (read-only)</title><para>The source for this task, after the include and exclude patterns have been applied. Ignores source files which do not exist.

</para><para>
The <apilink class="org.gradle.api.tasks.PathSensitivity"/> for the sources is configured to be <apilink class="org.gradle.api.tasks.PathSensitivity" method="ABSOLUTE"/>.
If your sources are less strict, please change it accordingly by overriding this method in your subclass.
</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal><replaceable>sourceSet</replaceable>.java</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.compile.JavaCompile:sourceCompatibility" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>sourceCompatibility</literal></title><para>The Java language level to use to compile the source files.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>project.sourceCompatibility</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.compile.JavaCompile:targetCompatibility" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>targetCompatibility</literal></title><para>The target JVM to generate the <literal>.class</literal> files for.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>project.targetCompatibility</literal></seg></seglistitem></segmentedlist></section></section><section><title>Method details</title><section id="org.gradle.api.tasks.compile.JavaCompile:exclude(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>exclude</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> excludeSpec)</title><para>Adds an exclude spec. This method may be called multiple times to append new specs.The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter. The closure should return true or false. Example:

</para><para><programlisting language="java">
copySpec {
  from 'source'
  into 'destination'
  //an example of excluding files from certain configuration:
  exclude { it.file in configurations.someConf.files }
}
</programlisting></para><para>

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.api.tasks.compile.JavaCompile:exclude(java.lang.Iterable)" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>exclude</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> excludes)</title><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.api.tasks.compile.JavaCompile:exclude(java.lang.String[])" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>exclude</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>...</classname> excludes)</title><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.api.tasks.compile.JavaCompile:exclude(org.gradle.api.specs.Spec)" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>exclude</literal>(<classname><apilink class="org.gradle.api.specs.Spec"/>&lt;<apilink class="org.gradle.api.file.FileTreeElement"/>&gt;</classname> excludeSpec)</title><para>Adds an exclude spec. This method may be called multiple times to append new specs.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.api.tasks.compile.JavaCompile:include(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>include</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> includeSpec)</title><para>Adds an include spec. This method may be called multiple times to append new specs. The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></section><section id="org.gradle.api.tasks.compile.JavaCompile:include(java.lang.Iterable)" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>include</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> includes)</title><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></section><section id="org.gradle.api.tasks.compile.JavaCompile:include(java.lang.String[])" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>include</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>...</classname> includes)</title><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></section><section id="org.gradle.api.tasks.compile.JavaCompile:include(org.gradle.api.specs.Spec)" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>include</literal>(<classname><apilink class="org.gradle.api.specs.Spec"/>&lt;<apilink class="org.gradle.api.file.FileTreeElement"/>&gt;</classname> includeSpec)</title><para>Adds an include spec. This method may be called multiple times to append new specs.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></section><section id="org.gradle.api.tasks.compile.JavaCompile:source(java.lang.Object[])" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>source</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink>...</classname> sources)</title><para>Adds some source to this task. The given source objects will be evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/>.</para></section></section></chapter><chapter id="org.gradle.api.tasks.javadoc.Javadoc"><title>Javadoc</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.tasks.javadoc.Javadoc" style="javadoc"/></seg></seglistitem></segmentedlist><para>Generates HTML API documentation for Java classes.</para><para>
If you create your own Javadoc tasks remember to specify the 'source' property!
Without source the Javadoc task will not create any documentation. Example:
</para><programlisting language="java">
plugins {
    id 'java'
}

task myJavadocs(type: Javadoc) {
  source = sourceSets.main.allJava
}
</programlisting><para>
An example how to create a task that runs a custom doclet implementation:
</para><programlisting language="java">
plugins {
    id 'java'
}

configurations {
  jaxDoclet
}

dependencies {
  //jaxDoclet "some.interesting:Dependency:1.0"
}

task generateRestApiDocs(type: Javadoc) {
  source = sourceSets.main.allJava
  destinationDir = reporting.file("rest-api-docs")
  options.docletpath = configurations.jaxDoclet.files.asType(List)
  options.doclet = "com.lunatech.doclets.jax.jaxrs.JAXRSDoclet"
  options.addStringOption("jaxrscontext", "http://localhost:8080/myapp")
}
</programlisting><section><title>Properties</title><table><title>Properties - Javadoc</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.tasks.javadoc.Javadoc:classpath"><literal>classpath</literal></link></td><td><para>The classpath to use to resolve type references in the source code.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.javadoc.Javadoc:destinationDir"><literal>destinationDir</literal></link></td><td><para>The directory to generate the documentation into.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.javadoc.Javadoc:excludes"><literal>excludes</literal></link></td><td><para>The set of exclude patterns.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.javadoc.Javadoc:executable"><literal>executable</literal></link></td><td><para>The Javadoc executable to use to generate the Javadoc. When <literal>null</literal>, the Javadoc executable for
the current JVM is used or from the toolchain if configured.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.javadoc.Javadoc:failOnError"><literal>failOnError</literal></link></td><td><para>Specifies whether this task should fail when errors are encountered during Javadoc generation. When <literal>true</literal>,
this task will fail on Javadoc error. When <literal>false</literal>, this task will ignore Javadoc errors.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.javadoc.Javadoc:includes"><literal>includes</literal></link></td><td><para>The set of include patterns.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.javadoc.Javadoc:javadocTool"><literal>javadocTool</literal></link></td><td><para>Configures the javadoc executable to be used to generate javadoc documentation.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.javadoc.Javadoc:maxMemory"><literal>maxMemory</literal></link></td><td><para>The amount of memory allocated to this task.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.javadoc.Javadoc:modularity"><literal>modularity</literal></link></td><td><para>The module path handling of this javadoc task.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.javadoc.Javadoc:options"><literal>options</literal></link></td><td><para>The Javadoc generation options.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.javadoc.Javadoc:source"><literal>source</literal></link></td><td><para>The source for this task, after the include and exclude patterns have been applied. Ignores source files which do not exist.

</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.javadoc.Javadoc:title"><literal>title</literal></link></td><td><para>The title for the generated documentation.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - Javadoc</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.tasks.javadoc.Javadoc:exclude(groovy.lang.Closure)">exclude</link>(excludeSpec)</literal></td><td><para>Adds an exclude spec. This method may be called multiple times to append new specs.The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter. The closure should return true or false. Example:

</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.javadoc.Javadoc:exclude(java.lang.Iterable)">exclude</link>(excludes)</literal></td><td><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.javadoc.Javadoc:exclude(java.lang.String[])">exclude</link>(excludes)</literal></td><td><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.javadoc.Javadoc:exclude(org.gradle.api.specs.Spec)">exclude</link>(excludeSpec)</literal></td><td><para>Adds an exclude spec. This method may be called multiple times to append new specs.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.javadoc.Javadoc:include(groovy.lang.Closure)">include</link>(includeSpec)</literal></td><td><para>Adds an include spec. This method may be called multiple times to append new specs. The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.javadoc.Javadoc:include(java.lang.Iterable)">include</link>(includes)</literal></td><td><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.javadoc.Javadoc:include(java.lang.String[])">include</link>(includes)</literal></td><td><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.javadoc.Javadoc:include(org.gradle.api.specs.Spec)">include</link>(includeSpec)</literal></td><td><para>Adds an include spec. This method may be called multiple times to append new specs.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.javadoc.Javadoc:source(java.lang.Object[])">source</link>(sources)</literal></td><td><para>Adds some source to this task. The given source objects will be evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/>.</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.tasks.javadoc.Javadoc:classpath" role="detail"><title><apilink class="org.gradle.api.file.FileCollection"/> <literal>classpath</literal></title><para>The classpath to use to resolve type references in the source code.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>project.sourceSets.main.compileClasspath</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.javadoc.Javadoc:destinationDir" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>destinationDir</literal></title><para>The directory to generate the documentation into.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal><replaceable>${project.docsDir}</replaceable>/javadoc</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.javadoc.Javadoc:excludes" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>excludes</literal></title><para>The set of exclude patterns.</para></section><section id="org.gradle.api.tasks.javadoc.Javadoc:executable" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>executable</literal></title><para>The Javadoc executable to use to generate the Javadoc. When <literal>null</literal>, the Javadoc executable for
the current JVM is used or from the toolchain if configured.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>null</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.javadoc.Javadoc:failOnError" role="detail"><title><classname>boolean</classname> <literal>failOnError</literal></title><para>Specifies whether this task should fail when errors are encountered during Javadoc generation. When <literal>true</literal>,
this task will fail on Javadoc error. When <literal>false</literal>, this task will ignore Javadoc errors.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>true</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.javadoc.Javadoc:includes" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>includes</literal></title><para>The set of include patterns.</para></section><section id="org.gradle.api.tasks.javadoc.Javadoc:javadocTool" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<apilink class="org.gradle.jvm.toolchain.JavadocTool"/>&gt;</classname> <literal>javadocTool</literal></title><para>Configures the javadoc executable to be used to generate javadoc documentation.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>java.toolchain</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.javadoc.Javadoc:maxMemory" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>maxMemory</literal></title><para>The amount of memory allocated to this task.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>null</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.javadoc.Javadoc:modularity" role="detail"><title><apilink class="org.gradle.api.jvm.ModularitySpec"/> <literal>modularity</literal> (read-only)</title><para>The module path handling of this javadoc task.</para></section><section id="org.gradle.api.tasks.javadoc.Javadoc:options" role="detail"><title><apilink class="org.gradle.external.javadoc.MinimalJavadocOptions"/> <literal>options</literal> (read-only)</title><para>The Javadoc generation options.</para></section><section id="org.gradle.api.tasks.javadoc.Javadoc:source" role="detail"><title><apilink class="org.gradle.api.file.FileTree"/> <literal>source</literal> (read-only)</title><para>The source for this task, after the include and exclude patterns have been applied. Ignores source files which do not exist.

</para><para>
The <apilink class="org.gradle.api.tasks.PathSensitivity"/> for the sources is configured to be <apilink class="org.gradle.api.tasks.PathSensitivity" method="ABSOLUTE"/>.
If your sources are less strict, please change it accordingly by overriding this method in your subclass.
</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>project.sourceSets.main.allJava</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.javadoc.Javadoc:title" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>title</literal></title><para>The title for the generated documentation.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>project.reporting.apiDocTitle</literal></seg></seglistitem></segmentedlist></section></section><section><title>Method details</title><section id="org.gradle.api.tasks.javadoc.Javadoc:exclude(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>exclude</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> excludeSpec)</title><para>Adds an exclude spec. This method may be called multiple times to append new specs.The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter. The closure should return true or false. Example:

</para><para><programlisting language="java">
copySpec {
  from 'source'
  into 'destination'
  //an example of excluding files from certain configuration:
  exclude { it.file in configurations.someConf.files }
}
</programlisting></para><para>

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.api.tasks.javadoc.Javadoc:exclude(java.lang.Iterable)" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>exclude</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> excludes)</title><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.api.tasks.javadoc.Javadoc:exclude(java.lang.String[])" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>exclude</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>...</classname> excludes)</title><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.api.tasks.javadoc.Javadoc:exclude(org.gradle.api.specs.Spec)" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>exclude</literal>(<classname><apilink class="org.gradle.api.specs.Spec"/>&lt;<apilink class="org.gradle.api.file.FileTreeElement"/>&gt;</classname> excludeSpec)</title><para>Adds an exclude spec. This method may be called multiple times to append new specs.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.api.tasks.javadoc.Javadoc:include(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>include</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> includeSpec)</title><para>Adds an include spec. This method may be called multiple times to append new specs. The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></section><section id="org.gradle.api.tasks.javadoc.Javadoc:include(java.lang.Iterable)" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>include</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> includes)</title><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></section><section id="org.gradle.api.tasks.javadoc.Javadoc:include(java.lang.String[])" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>include</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>...</classname> includes)</title><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></section><section id="org.gradle.api.tasks.javadoc.Javadoc:include(org.gradle.api.specs.Spec)" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>include</literal>(<classname><apilink class="org.gradle.api.specs.Spec"/>&lt;<apilink class="org.gradle.api.file.FileTreeElement"/>&gt;</classname> includeSpec)</title><para>Adds an include spec. This method may be called multiple times to append new specs.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></section><section id="org.gradle.api.tasks.javadoc.Javadoc:source(java.lang.Object[])" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>source</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink>...</classname> sources)</title><para>Adds some source to this task. The given source objects will be evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/>.</para></section></section></chapter><chapter id="org.gradle.api.tasks.JavaExec"><title>JavaExec</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.tasks.JavaExec" style="javadoc"/></seg></seglistitem></segmentedlist><para>Executes a Java application in a child process.
</para><para>
Similar to <apilink class="org.gradle.api.tasks.Exec"/>, but starts a JVM with the given classpath and application class.
</para><programlisting language="java">
plugins {
    id 'java'
}

task runApp(type: JavaExec) {
  classpath = sourceSets.main.runtimeClasspath

  mainClass = 'package.Main'

  // arguments to pass to the application
  args 'appArg1'
}

// Using and creating an Executable Jar
jar {
  manifest {
    attributes('Main-Class': 'package.Main')
  }
}

task runExecutableJar(type: JavaExec) {
  // Executable jars can have only _one_ jar on the classpath.
  classpath = files(tasks.jar)

  // 'main' does not need to be specified

  // arguments to pass to the application
  args 'appArg1'
}

</programlisting><para>
The process can be started in debug mode (see <apilink class="org.gradle.api.tasks.JavaExec" method="getDebug()"/>) in an ad-hoc manner by supplying the `--debug-jvm` switch when invoking the build.
</para><programlisting language="java">
gradle someJavaExecTask --debug-jvm
</programlisting><para>
Also, debug configuration can be explicitly set in <apilink class="org.gradle.api.tasks.JavaExec" method="debugOptions(org.gradle.api.Action)"/>:
</para><programlisting language="java">
task runApp(type: JavaExec) {
   ...

   debugOptions {
       enabled = true
       port = 5566
       server = true
       suspend = false
   }
}
</programlisting><section><title>Properties</title><table><title>Properties - JavaExec</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.tasks.JavaExec:allJvmArgs"><literal>allJvmArgs</literal></link></td><td><para>The full set of arguments to use to launch the JVM for the process. This includes arguments to define
system properties, the minimum/maximum heap size, and the bootstrap classpath.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.JavaExec:args"><literal>args</literal></link></td><td><para>The arguments passed to the main class to be executed.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.JavaExec:argumentProviders"><literal>argumentProviders</literal></link></td><td><para>Argument providers for the application.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.JavaExec:bootstrapClasspath"><literal>bootstrapClasspath</literal></link></td><td><para>The bootstrap classpath to use for the process. The default bootstrap classpath for the JVM is used when
this classpath is empty.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.JavaExec:classpath"><literal>classpath</literal></link></td><td><para>The classpath for executing the main class.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.JavaExec:commandLine"><literal>commandLine</literal></link></td><td><para>The full command line, including the executable plus its arguments.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.JavaExec:debug"><literal>debug</literal></link></td><td><para>Determines whether debugging is enabled for the test process. When enabled — <literal>debug = true</literal> — the process
is started in a suspended state, listening on port 5005. You should disable parallel test execution when
debugging and you will need to reattach the debugger occasionally if you use a non-zero value for
<apilink class="org.gradle.api.tasks.testing.Test" method="getForkEvery()"/>.
</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.JavaExec:debugOptions"><literal>debugOptions</literal></link></td><td><para>The Java Debug Wire Protocol properties for the process. If enabled then the <literal>-agentlib:jdwp=...</literal>
will be appended to the JVM arguments with the configuration from the parameter.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.JavaExec:enableAssertions"><literal>enableAssertions</literal></link></td><td><para>Returns true if assertions are enabled for the process.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.JavaExec:environment"><literal>environment</literal></link></td><td><para>The environment variables to use for the process. Defaults to the environment of this process.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.JavaExec:errorOutput"><literal>errorOutput</literal></link></td><td><para>The output stream to consume standard error from the process executing the command. Default to <literal>System.err</literal>.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.JavaExec:executable"><literal>executable</literal></link></td><td><para>The name of the executable to use.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.JavaExec:executionResult"><literal>executionResult</literal></link></td><td><para>The result for the command run by this task. The provider has no value if this task has not been executed yet.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.JavaExec:ignoreExitValue"><literal>ignoreExitValue</literal></link></td><td><para>Tells whether a non-zero exit value is ignored, or an exception thrown. Defaults to <literal>false</literal>.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.JavaExec:javaLauncher"><literal>javaLauncher</literal></link></td><td><para>Configures the java executable to be used to run the tests.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.JavaExec:jvmArgs"><literal>jvmArgs</literal></link></td><td><para>The extra arguments to use to launch the JVM for the process. Does not include system properties and the
minimum/maximum heap size.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.JavaExec:jvmArgumentProviders"><literal>jvmArgumentProviders</literal></link></td><td><para>Command line argument providers for the java process to fork.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.JavaExec:jvmArguments"><literal>jvmArguments</literal></link></td><td><para>Extra JVM arguments to be to use to launch the JVM for the process.

Must be used to set a convention for JVM arguments.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.JavaExec:mainClass"><literal>mainClass</literal></link></td><td><para>The fully qualified name of the Main class to be executed.
</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.JavaExec:mainModule"><literal>mainModule</literal></link></td><td><para>The name of the main module to be executed if the application should run as a Java module.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.JavaExec:maxHeapSize"><literal>maxHeapSize</literal></link></td><td><para>The maximum heap size for the process, if any.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.JavaExec:modularity"><literal>modularity</literal></link></td><td><para>The module path handling for executing the main class.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.JavaExec:standardInput"><literal>standardInput</literal></link></td><td><para>The standard input stream for the process executing the command. The stream is closed after the process
completes. Defaults to an empty stream.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.JavaExec:standardOutput"><literal>standardOutput</literal></link></td><td><para>The output stream to consume standard output from the process executing the command. Defaults to <literal>System.out</literal>.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.JavaExec:systemProperties"><literal>systemProperties</literal></link></td><td><para>The system properties which will be used for the process.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.JavaExec:workingDir"><literal>workingDir</literal></link></td><td><para>The working directory for the process. Defaults to the project directory.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - JavaExec</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.tasks.JavaExec:args(java.lang.Iterable)">args</link>(args)</literal></td><td><para>Adds args for the main class to be executed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.JavaExec:args(java.lang.Object[])">args</link>(args)</literal></td><td><para>Adds args for the main class to be executed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.JavaExec:bootstrapClasspath(java.lang.Object[])">bootstrapClasspath</link>(classpath)</literal></td><td><para>Adds the given values to the end of the bootstrap classpath for the process.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.JavaExec:classpath(java.lang.Object[])">classpath</link>(paths)</literal></td><td><para>Adds elements to the classpath for executing the main class.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.JavaExec:copyTo(org.gradle.process.JavaForkOptions)">copyTo</link>(options)</literal></td><td><para>Copies these options to the given options.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.JavaExec:copyTo(org.gradle.process.ProcessForkOptions)">copyTo</link>(target)</literal></td><td><para>Copies these options to the given target options.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.JavaExec:debugOptions(org.gradle.api.Action)">debugOptions</link>(action)</literal></td><td><para>Configures Java Debug Wire Protocol properties for the process. If <apilink class="org.gradle.process.JavaForkOptions" method="setDebug(boolean)"/> is enabled then
the <literal>-agentlib:jdwp=...</literal>  will be appended to the JVM arguments with the configuration from the parameter.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.JavaExec:environment(java.lang.String, java.lang.Object)">environment</link>(name, value)</literal></td><td><para>Adds an environment variable to the environment for this process.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.JavaExec:environment(java.util.Map)">environment</link>(environmentVariables)</literal></td><td><para>Adds some environment variables to the environment for this process.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.JavaExec:executable(java.lang.Object)">executable</link>(executable)</literal></td><td><para>Sets the name of the executable to use.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.JavaExec:jvmArgs(java.lang.Iterable)">jvmArgs</link>(arguments)</literal></td><td><para>Adds some arguments to use to launch the JVM for the process.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.JavaExec:jvmArgs(java.lang.Object[])">jvmArgs</link>(arguments)</literal></td><td><para>Adds some arguments to use to launch the JVM for the process.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.JavaExec:systemProperties(java.util.Map)">systemProperties</link>(properties)</literal></td><td><para>Adds some system properties to use for the process.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.JavaExec:workingDir(java.lang.Object)">workingDir</link>(dir)</literal></td><td><para>Sets the working directory for the process. The supplied argument is evaluated as per <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/>.</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.tasks.JavaExec:allJvmArgs" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/List.html"><classname>List</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>allJvmArgs</literal></title><para>The full set of arguments to use to launch the JVM for the process. This includes arguments to define
system properties, the minimum/maximum heap size, and the bootstrap classpath.</para></section><section id="org.gradle.api.tasks.JavaExec:args" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/List.html"><classname>List</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>args</literal></title><para>The arguments passed to the main class to be executed.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>[]</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.JavaExec:argumentProviders" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/List.html"><classname>List</classname></ulink>&lt;<apilink class="org.gradle.process.CommandLineArgumentProvider"/>&gt;</classname> <literal>argumentProviders</literal> (read-only)</title><para>Argument providers for the application.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>[]</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.JavaExec:bootstrapClasspath" role="detail"><title><apilink class="org.gradle.api.file.FileCollection"/> <literal>bootstrapClasspath</literal></title><para>The bootstrap classpath to use for the process. The default bootstrap classpath for the JVM is used when
this classpath is empty.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>[]</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.JavaExec:classpath" role="detail"><title><apilink class="org.gradle.api.file.FileCollection"/> <literal>classpath</literal></title><para>The classpath for executing the main class.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>null</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.JavaExec:commandLine" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/List.html"><classname>List</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>commandLine</literal> (read-only)</title><para>The full command line, including the executable plus its arguments.</para></section><section id="org.gradle.api.tasks.JavaExec:debug" role="detail"><title><classname>boolean</classname> <literal>debug</literal></title><para>Determines whether debugging is enabled for the test process. When enabled — <literal>debug = true</literal> — the process
is started in a suspended state, listening on port 5005. You should disable parallel test execution when
debugging and you will need to reattach the debugger occasionally if you use a non-zero value for
<apilink class="org.gradle.api.tasks.testing.Test" method="getForkEvery()"/>.
</para><para>
Since Gradle 5.6, you can configure the port and other Java debug properties via
<apilink class="org.gradle.process.JavaForkOptions" method="debugOptions(org.gradle.api.Action)"/>.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>false</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.JavaExec:debugOptions" role="detail"><title><apilink class="org.gradle.process.JavaDebugOptions"/> <literal>debugOptions</literal> (read-only)</title><para>The Java Debug Wire Protocol properties for the process. If enabled then the <literal>-agentlib:jdwp=...</literal>
will be appended to the JVM arguments with the configuration from the parameter.</para></section><section id="org.gradle.api.tasks.JavaExec:enableAssertions" role="detail"><title><classname>boolean</classname> <literal>enableAssertions</literal></title><para>Returns true if assertions are enabled for the process.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>false</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.JavaExec:environment" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink>&gt;</classname> <literal>environment</literal></title><para>The environment variables to use for the process. Defaults to the environment of this process.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg>Current process' environment</seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.JavaExec:errorOutput" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/OutputStream.html"><classname>OutputStream</classname></ulink> <literal>errorOutput</literal></title><para>The output stream to consume standard error from the process executing the command. Default to <literal>System.err</literal>.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>System.err</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.JavaExec:executable" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>executable</literal></title><para>The name of the executable to use.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><filename>java</filename> executable for current JVM</seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.JavaExec:executionResult" role="detail"><title><classname><apilink class="org.gradle.api.provider.Provider"/>&lt;<apilink class="org.gradle.process.ExecResult"/>&gt;</classname> <literal>executionResult</literal></title><para>The result for the command run by this task. The provider has no value if this task has not been executed yet.</para></section><section id="org.gradle.api.tasks.JavaExec:ignoreExitValue" role="detail"><title><classname>boolean</classname> <literal>ignoreExitValue</literal></title><para>Tells whether a non-zero exit value is ignored, or an exception thrown. Defaults to <literal>false</literal>.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>false</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.JavaExec:javaLauncher" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<apilink class="org.gradle.jvm.toolchain.JavaLauncher"/>&gt;</classname> <literal>javaLauncher</literal></title><para>Configures the java executable to be used to run the tests.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>java.toolchain</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.JavaExec:jvmArgs" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/List.html"><classname>List</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>jvmArgs</literal></title><para>The extra arguments to use to launch the JVM for the process. Does not include system properties and the
minimum/maximum heap size.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>[]</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.JavaExec:jvmArgumentProviders" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/List.html"><classname>List</classname></ulink>&lt;<apilink class="org.gradle.process.CommandLineArgumentProvider"/>&gt;</classname> <literal>jvmArgumentProviders</literal> (read-only)</title><para>Command line argument providers for the java process to fork.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>[]</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.JavaExec:jvmArguments" role="detail"><title><classname><apilink class="org.gradle.api.provider.ListProperty"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>jvmArguments</literal></title><para>Extra JVM arguments to be to use to launch the JVM for the process.

Must be used to set a convention for JVM arguments.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>null</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.JavaExec:mainClass" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>mainClass</literal></title><para>The fully qualified name of the Main class to be executed.
</para><para>
This does not need to be set if using an <ulink url="https://docs.oracle.com/javase/tutorial/deployment/jar/appman.html">Executable Jar</ulink> with a <literal>Main-Class</literal> attribute.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>null</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.JavaExec:mainModule" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>mainModule</literal></title><para>The name of the main module to be executed if the application should run as a Java module.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>null</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.JavaExec:maxHeapSize" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>maxHeapSize</literal></title><para>The maximum heap size for the process, if any.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>null</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.JavaExec:modularity" role="detail"><title><apilink class="org.gradle.api.jvm.ModularitySpec"/> <literal>modularity</literal> (read-only)</title><para>The module path handling for executing the main class.</para></section><section id="org.gradle.api.tasks.JavaExec:standardInput" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/InputStream.html"><classname>InputStream</classname></ulink> <literal>standardInput</literal></title><para>The standard input stream for the process executing the command. The stream is closed after the process
completes. Defaults to an empty stream.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg>An empty <classname>InputStream</classname></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.JavaExec:standardOutput" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/OutputStream.html"><classname>OutputStream</classname></ulink> <literal>standardOutput</literal></title><para>The output stream to consume standard output from the process executing the command. Defaults to <literal>System.out</literal>.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>System.out</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.JavaExec:systemProperties" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink>&gt;</classname> <literal>systemProperties</literal></title><para>The system properties which will be used for the process.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>[:]</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.JavaExec:workingDir" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>workingDir</literal></title><para>The working directory for the process. Defaults to the project directory.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>project.projectDir</literal></seg></seglistitem></segmentedlist></section></section><section><title>Method details</title><section id="org.gradle.api.tasks.JavaExec:args(java.lang.Iterable)" role="detail"><title><apilink class="org.gradle.process.JavaExecSpec"/> <literal>args</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;?&gt;</classname> args)</title><para>Adds args for the main class to be executed.</para></section><section id="org.gradle.api.tasks.JavaExec:args(java.lang.Object[])" role="detail"><title><apilink class="org.gradle.api.tasks.JavaExec"/> <literal>args</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink>...</classname> args)</title><para>Adds args for the main class to be executed.</para></section><section id="org.gradle.api.tasks.JavaExec:bootstrapClasspath(java.lang.Object[])" role="detail"><title><apilink class="org.gradle.api.tasks.JavaExec"/> <literal>bootstrapClasspath</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink>...</classname> classpath)</title><para>Adds the given values to the end of the bootstrap classpath for the process.</para></section><section id="org.gradle.api.tasks.JavaExec:classpath(java.lang.Object[])" role="detail"><title><apilink class="org.gradle.api.tasks.JavaExec"/> <literal>classpath</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink>...</classname> paths)</title><para>Adds elements to the classpath for executing the main class.</para></section><section id="org.gradle.api.tasks.JavaExec:copyTo(org.gradle.process.JavaForkOptions)" role="detail"><title><apilink class="org.gradle.api.tasks.JavaExec"/> <literal>copyTo</literal>(<apilink class="org.gradle.process.JavaForkOptions"/> options)</title><para>Copies these options to the given options.</para></section><section id="org.gradle.api.tasks.JavaExec:copyTo(org.gradle.process.ProcessForkOptions)" role="detail"><title><apilink class="org.gradle.api.tasks.JavaExec"/> <literal>copyTo</literal>(<apilink class="org.gradle.process.ProcessForkOptions"/> target)</title><para>Copies these options to the given target options.</para></section><section id="org.gradle.api.tasks.JavaExec:debugOptions(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>debugOptions</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;<apilink class="org.gradle.process.JavaDebugOptions"/>&gt;</classname> action)</title><para>Configures Java Debug Wire Protocol properties for the process. If <apilink class="org.gradle.process.JavaForkOptions" method="setDebug(boolean)"/> is enabled then
the <literal>-agentlib:jdwp=...</literal>  will be appended to the JVM arguments with the configuration from the parameter.</para></section><section id="org.gradle.api.tasks.JavaExec:environment(java.lang.String, java.lang.Object)" role="detail"><title><apilink class="org.gradle.api.tasks.JavaExec"/> <literal>environment</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> value)</title><para>Adds an environment variable to the environment for this process.</para></section><section id="org.gradle.api.tasks.JavaExec:environment(java.util.Map)" role="detail"><title><apilink class="org.gradle.api.tasks.JavaExec"/> <literal>environment</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, ?&gt;</classname> environmentVariables)</title><para>Adds some environment variables to the environment for this process.</para></section><section id="org.gradle.api.tasks.JavaExec:executable(java.lang.Object)" role="detail"><title><apilink class="org.gradle.api.tasks.JavaExec"/> <literal>executable</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> executable)</title><para>Sets the name of the executable to use.</para></section><section id="org.gradle.api.tasks.JavaExec:jvmArgs(java.lang.Iterable)" role="detail"><title><apilink class="org.gradle.api.tasks.JavaExec"/> <literal>jvmArgs</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;?&gt;</classname> arguments)</title><para>Adds some arguments to use to launch the JVM for the process.</para></section><section id="org.gradle.api.tasks.JavaExec:jvmArgs(java.lang.Object[])" role="detail"><title><apilink class="org.gradle.api.tasks.JavaExec"/> <literal>jvmArgs</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink>...</classname> arguments)</title><para>Adds some arguments to use to launch the JVM for the process.</para></section><section id="org.gradle.api.tasks.JavaExec:systemProperties(java.util.Map)" role="detail"><title><apilink class="org.gradle.api.tasks.JavaExec"/> <literal>systemProperties</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, ? extends <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink>&gt;</classname> properties)</title><para>Adds some system properties to use for the process.</para></section><section id="org.gradle.api.tasks.JavaExec:workingDir(java.lang.Object)" role="detail"><title><apilink class="org.gradle.api.tasks.JavaExec"/> <literal>workingDir</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> dir)</title><para>Sets the working directory for the process. The supplied argument is evaluated as per <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/>.</para></section></section></chapter><chapter id="org.gradle.api.plugins.quality.Pmd"><title>Pmd</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.plugins.quality.Pmd" style="javadoc"/></seg></seglistitem></segmentedlist><para>Runs a set of static code analysis rules on Java source code files and generates a report of problems found.</para><section><title>Properties</title><table><title>Properties - Pmd</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.plugins.quality.Pmd:classpath"><literal>classpath</literal></link></td><td><para>Compile class path for the classes to be analyzed.

The classes on this class path are used during analysis but aren't analyzed themselves.

This is only well supported for PMD 5.2.1 or better.</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.quality.Pmd:consoleOutput"><literal>consoleOutput</literal></link></td><td><para>Whether or not to write PMD results to <literal>System.out</literal>.</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.quality.Pmd:excludes"><literal>excludes</literal></link></td><td><para>The set of exclude patterns.</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.quality.Pmd:ignoreFailures"><literal>ignoreFailures</literal></link></td><td><caution>Incubating</caution><para>Specifies whether the build should break when the verifications performed by this task fail.</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.quality.Pmd:includes"><literal>includes</literal></link></td><td><para>The set of include patterns.</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.quality.Pmd:incrementalAnalysis"><literal>incrementalAnalysis</literal></link></td><td><para>Controls whether to use incremental analysis or not.

This is only supported for PMD 6.0.0 or better. See <ulink url="https://docs.pmd-code.org/pmd-doc-7.13.0/pmd_userdocs_incremental_analysis.html"/> for more details.</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.quality.Pmd:javaLauncher"><literal>javaLauncher</literal></link></td><td><caution>Incubating</caution><para>Java launcher used to start the worker process</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.quality.Pmd:maxFailures"><literal>maxFailures</literal></link></td><td><para>The maximum number of failures to allow before stopping the build.

Defaults to 0, which will stop the build on any failure.  Values 0 and
above are valid.  If </para></td></tr><tr><td><link linkend="org.gradle.api.plugins.quality.Pmd:maxHeapSize"><literal>maxHeapSize</literal></link></td><td><caution>Incubating</caution><para>The maximum heap size for the worker process.  If unspecified, a maximum heap size will be provided by Gradle.

Supports units like the command-line option <literal>-Xmx</literal> such as <literal>"1g"</literal>.</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.quality.Pmd:minHeapSize"><literal>minHeapSize</literal></link></td><td><caution>Incubating</caution><para>The minimum heap size for the worker process.  When unspecified, no minimum heap size is set.

Supports units like the command-line option <literal>-Xms</literal> such as <literal>"1g"</literal>.</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.quality.Pmd:pmdClasspath"><literal>pmdClasspath</literal></link></td><td><para>The class path containing the PMD library to be used.</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.quality.Pmd:reports"><literal>reports</literal></link></td><td><para>The reports to be generated by this task.</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.quality.Pmd:ruleSetConfig"><literal>ruleSetConfig</literal></link></td><td><para>The custom rule set to be used (if any). Replaces <literal>ruleSetFiles</literal>, except that it does not currently support multiple rule sets.

See the <ulink url="https://docs.pmd-code.org/pmd-doc-7.13.0/pmd_userdocs_making_rulesets.html">official documentation</ulink> for how to author a rule set.

</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.quality.Pmd:ruleSetFiles"><literal>ruleSetFiles</literal></link></td><td><para>The custom rule set files to be used. See the <ulink url="https://docs.pmd-code.org/pmd-doc-7.13.0/pmd_userdocs_making_rulesets.html">official documentation</ulink> for how to author a rule set file.
If you want to only use custom rule sets, you must clear <literal>ruleSets</literal>.

</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.quality.Pmd:ruleSets"><literal>ruleSets</literal></link></td><td><para>The built-in rule sets to be used. See the <ulink url="https://docs.pmd-code.org/pmd-doc-7.13.0/pmd_rules_java.html">official list</ulink> of built-in rule sets.

</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.quality.Pmd:rulesMinimumPriority"><literal>rulesMinimumPriority</literal></link></td><td><para>Specifies the rule priority threshold.</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.quality.Pmd:source"><literal>source</literal></link></td><td><para>The source for this task, after the include and exclude patterns have been applied. Ignores source files which do not exist.

</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.quality.Pmd:targetJdk"><literal>targetJdk</literal></link></td><td><para>The target JDK to use with PMD.</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.quality.Pmd:threads"><literal>threads</literal></link></td><td><para>Specifies the number of threads used by PMD.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - Pmd</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.plugins.quality.Pmd:exclude(groovy.lang.Closure)">exclude</link>(excludeSpec)</literal></td><td><para>Adds an exclude spec. This method may be called multiple times to append new specs.The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter. The closure should return true or false. Example:

</para></td></tr><tr><td><literal><link linkend="org.gradle.api.plugins.quality.Pmd:exclude(java.lang.Iterable)">exclude</link>(excludes)</literal></td><td><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.plugins.quality.Pmd:exclude(java.lang.String[])">exclude</link>(excludes)</literal></td><td><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.plugins.quality.Pmd:exclude(org.gradle.api.specs.Spec)">exclude</link>(excludeSpec)</literal></td><td><para>Adds an exclude spec. This method may be called multiple times to append new specs.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.plugins.quality.Pmd:include(groovy.lang.Closure)">include</link>(includeSpec)</literal></td><td><para>Adds an include spec. This method may be called multiple times to append new specs. The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.plugins.quality.Pmd:include(java.lang.Iterable)">include</link>(includes)</literal></td><td><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.plugins.quality.Pmd:include(java.lang.String[])">include</link>(includes)</literal></td><td><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.plugins.quality.Pmd:include(org.gradle.api.specs.Spec)">include</link>(includeSpec)</literal></td><td><para>Adds an include spec. This method may be called multiple times to append new specs.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.plugins.quality.Pmd:reports(org.gradle.api.Action)">reports</link>(configureAction)</literal></td><td><para>Configures the reports to be generated by this task.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.plugins.quality.Pmd:source(java.lang.Object[])">source</link>(sources)</literal></td><td><para>Adds some source to this task. The given source objects will be evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/>.</para></td></tr></table></section><section><title>Script blocks</title><table><title>Script blocks - Pmd</title><thead><tr><td>Block</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.plugins.quality.Pmd:reports(groovy.lang.Closure)"><literal>reports</literal></link></td><td><para>Configures the reports to be generated by this task.</para></td></tr></table></section><section><title>Property details</title><section id="org.gradle.api.plugins.quality.Pmd:classpath" role="detail"><title><apilink class="org.gradle.api.file.FileCollection"/> <literal>classpath</literal></title><para>Compile class path for the classes to be analyzed.

The classes on this class path are used during analysis but aren't analyzed themselves.

This is only well supported for PMD 5.2.1 or better.</para><segmentedlist><segtitle>Default with <literal>pmd</literal> plugin</segtitle><seglistitem><seg>
                    <literal><replaceable>sourceSet</replaceable>.output</literal> and
                    <literal><replaceable>sourceSet</replaceable>.compileClasspath</literal>
                </seg></seglistitem></segmentedlist></section><section id="org.gradle.api.plugins.quality.Pmd:consoleOutput" role="detail"><title><classname>boolean</classname> <literal>consoleOutput</literal></title><para>Whether or not to write PMD results to <literal>System.out</literal>.</para><segmentedlist><segtitle>Default with <literal>pmd</literal> plugin</segtitle><seglistitem><seg><literal>project.pmd.consoleOutput</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.plugins.quality.Pmd:excludes" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>excludes</literal></title><para>The set of exclude patterns.</para></section><section id="org.gradle.api.plugins.quality.Pmd:ignoreFailures" role="detail"><title><classname>boolean</classname> <literal>ignoreFailures</literal></title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Specifies whether the build should break when the verifications performed by this task fail.</para></section><section id="org.gradle.api.plugins.quality.Pmd:includes" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>includes</literal></title><para>The set of include patterns.</para></section><section id="org.gradle.api.plugins.quality.Pmd:incrementalAnalysis" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html"><classname>Boolean</classname></ulink>&gt;</classname> <literal>incrementalAnalysis</literal></title><para>Controls whether to use incremental analysis or not.

This is only supported for PMD 6.0.0 or better. See <ulink url="https://docs.pmd-code.org/pmd-doc-7.13.0/pmd_userdocs_incremental_analysis.html"/> for more details.</para><segmentedlist><segtitle>Default with <literal>pmd</literal> plugin</segtitle><seglistitem><seg>
                    <literal>false</literal>
                </seg></seglistitem></segmentedlist></section><section id="org.gradle.api.plugins.quality.Pmd:javaLauncher" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<apilink class="org.gradle.jvm.toolchain.JavaLauncher"/>&gt;</classname> <literal>javaLauncher</literal></title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Java launcher used to start the worker process</para></section><section id="org.gradle.api.plugins.quality.Pmd:maxFailures" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html"><classname>Integer</classname></ulink>&gt;</classname> <literal>maxFailures</literal></title><para>The maximum number of failures to allow before stopping the build.

Defaults to 0, which will stop the build on any failure.  Values 0 and
above are valid.  If </para><programlisting language="java">ignoreFailures</programlisting><para> is set, this is ignored
and the build will continue (infinite failures allowed).</para><segmentedlist><segtitle>Default with <literal>pmd</literal> plugin</segtitle><seglistitem><seg><literal>project.pmd.maxFailures</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.plugins.quality.Pmd:maxHeapSize" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>maxHeapSize</literal></title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The maximum heap size for the worker process.  If unspecified, a maximum heap size will be provided by Gradle.

Supports units like the command-line option <literal>-Xmx</literal> such as <literal>"1g"</literal>.</para></section><section id="org.gradle.api.plugins.quality.Pmd:minHeapSize" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>minHeapSize</literal></title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The minimum heap size for the worker process.  When unspecified, no minimum heap size is set.

Supports units like the command-line option <literal>-Xms</literal> such as <literal>"1g"</literal>.</para></section><section id="org.gradle.api.plugins.quality.Pmd:pmdClasspath" role="detail"><title><apilink class="org.gradle.api.file.FileCollection"/> <literal>pmdClasspath</literal></title><para>The class path containing the PMD library to be used.</para><segmentedlist><segtitle>Default with <literal>pmd</literal> plugin</segtitle><seglistitem><seg><literal>project.configurations.pmd</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.plugins.quality.Pmd:reports" role="detail"><title><apilink class="org.gradle.api.plugins.quality.PmdReports"/> <literal>reports</literal> (read-only)</title><para>The reports to be generated by this task.</para></section><section id="org.gradle.api.plugins.quality.Pmd:ruleSetConfig" role="detail"><title><apilink class="org.gradle.api.resources.TextResource"/> <literal>ruleSetConfig</literal></title><para>The custom rule set to be used (if any). Replaces <literal>ruleSetFiles</literal>, except that it does not currently support multiple rule sets.

See the <ulink url="https://docs.pmd-code.org/pmd-doc-7.13.0/pmd_userdocs_making_rulesets.html">official documentation</ulink> for how to author a rule set.

</para><programlisting language="java">
    ruleSetConfig = resources.text.fromFile(resources.file("config/pmd/myRuleSets.xml"))
</programlisting><segmentedlist><segtitle>Default with <literal>pmd</literal> plugin</segtitle><seglistitem><seg><literal>project.pmd.ruleSetConfig</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.plugins.quality.Pmd:ruleSetFiles" role="detail"><title><apilink class="org.gradle.api.file.FileCollection"/> <literal>ruleSetFiles</literal></title><para>The custom rule set files to be used. See the <ulink url="https://docs.pmd-code.org/pmd-doc-7.13.0/pmd_userdocs_making_rulesets.html">official documentation</ulink> for how to author a rule set file.
If you want to only use custom rule sets, you must clear <literal>ruleSets</literal>.

</para><programlisting language="java">
    ruleSetFiles = files("config/pmd/myRuleSet.xml")
</programlisting><segmentedlist><segtitle>Default with <literal>pmd</literal> plugin</segtitle><seglistitem><seg><literal>project.pmd.ruleSetFiles</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.plugins.quality.Pmd:ruleSets" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/List.html"><classname>List</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>ruleSets</literal></title><para>The built-in rule sets to be used. See the <ulink url="https://docs.pmd-code.org/pmd-doc-7.13.0/pmd_rules_java.html">official list</ulink> of built-in rule sets.

</para><programlisting language="java">
    ruleSets = ["basic", "braces"]
</programlisting><segmentedlist><segtitle>Default with <literal>pmd</literal> plugin</segtitle><seglistitem><seg><literal>project.pmd.ruleSets</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.plugins.quality.Pmd:rulesMinimumPriority" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html"><classname>Integer</classname></ulink>&gt;</classname> <literal>rulesMinimumPriority</literal></title><para>Specifies the rule priority threshold.</para><segmentedlist><segtitle>Default with <literal>pmd</literal> plugin</segtitle><seglistitem><seg><literal>project.pmd.rulesMinimumPriority</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.plugins.quality.Pmd:source" role="detail"><title><apilink class="org.gradle.api.file.FileTree"/> <literal>source</literal> (read-only)</title><para>The source for this task, after the include and exclude patterns have been applied. Ignores source files which do not exist.

</para><para>
The <apilink class="org.gradle.api.tasks.PathSensitivity"/> for the sources is configured to be <apilink class="org.gradle.api.tasks.PathSensitivity" method="ABSOLUTE"/>.
If your sources are less strict, please change it accordingly by overriding this method in your subclass.
</para><segmentedlist><segtitle>Default with <literal>pmd</literal> plugin</segtitle><seglistitem><seg><literal><replaceable>sourceSet</replaceable>.allJava</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.plugins.quality.Pmd:targetJdk" role="detail"><title><apilink class="org.gradle.api.plugins.quality.TargetJdk"/> <literal>targetJdk</literal></title><para>The target JDK to use with PMD.</para><segmentedlist><segtitle>Default with <literal>pmd</literal> plugin</segtitle><seglistitem><seg><literal>project.pmd.targetJdk</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.plugins.quality.Pmd:threads" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html"><classname>Integer</classname></ulink>&gt;</classname> <literal>threads</literal></title><para>Specifies the number of threads used by PMD.</para><segmentedlist><segtitle>Default with <literal>pmd</literal> plugin</segtitle><seglistitem><seg>
                    <literal>1</literal>
                </seg></seglistitem></segmentedlist></section></section><section><title>Method details</title><section id="org.gradle.api.plugins.quality.Pmd:exclude(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>exclude</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> excludeSpec)</title><para>Adds an exclude spec. This method may be called multiple times to append new specs.The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter. The closure should return true or false. Example:

</para><para><programlisting language="java">
copySpec {
  from 'source'
  into 'destination'
  //an example of excluding files from certain configuration:
  exclude { it.file in configurations.someConf.files }
}
</programlisting></para><para>

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.api.plugins.quality.Pmd:exclude(java.lang.Iterable)" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>exclude</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> excludes)</title><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.api.plugins.quality.Pmd:exclude(java.lang.String[])" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>exclude</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>...</classname> excludes)</title><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.api.plugins.quality.Pmd:exclude(org.gradle.api.specs.Spec)" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>exclude</literal>(<classname><apilink class="org.gradle.api.specs.Spec"/>&lt;<apilink class="org.gradle.api.file.FileTreeElement"/>&gt;</classname> excludeSpec)</title><para>Adds an exclude spec. This method may be called multiple times to append new specs.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.api.plugins.quality.Pmd:include(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>include</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> includeSpec)</title><para>Adds an include spec. This method may be called multiple times to append new specs. The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></section><section id="org.gradle.api.plugins.quality.Pmd:include(java.lang.Iterable)" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>include</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> includes)</title><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></section><section id="org.gradle.api.plugins.quality.Pmd:include(java.lang.String[])" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>include</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>...</classname> includes)</title><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></section><section id="org.gradle.api.plugins.quality.Pmd:include(org.gradle.api.specs.Spec)" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>include</literal>(<classname><apilink class="org.gradle.api.specs.Spec"/>&lt;<apilink class="org.gradle.api.file.FileTreeElement"/>&gt;</classname> includeSpec)</title><para>Adds an include spec. This method may be called multiple times to append new specs.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></section><section id="org.gradle.api.plugins.quality.Pmd:reports(org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.plugins.quality.PmdReports"/> <literal>reports</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.plugins.quality.PmdReports"/>&gt;</classname> configureAction)</title><para>Configures the reports to be generated by this task.</para></section><section id="org.gradle.api.plugins.quality.Pmd:source(java.lang.Object[])" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>source</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink>...</classname> sources)</title><para>Adds some source to this task. The given source objects will be evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/>.</para></section></section><section><title>Script block details</title><section id="org.gradle.api.plugins.quality.Pmd:reports(groovy.lang.Closure)" role="detail"><title><literal>reports</literal> { }</title><para>Configures the reports to be generated by this task.</para><segmentedlist><segtitle>Delegates to</segtitle><seglistitem><seg><apilink class="org.gradle.api.plugins.quality.PmdReports"/> from <link linkend="org.gradle.api.plugins.quality.Pmd:reports"><literal>reports</literal></link></seg></seglistitem></segmentedlist></section></section></chapter><chapter id="org.gradle.language.jvm.tasks.ProcessResources"><title>ProcessResources</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.language.jvm.tasks.ProcessResources" style="javadoc"/></seg></seglistitem></segmentedlist><para>Copies resources from their source to their target directory, potentially processing them.
Makes sure no stale resources remain in the target directory.</para><section><title>Properties</title><table><title>Properties - ProcessResources</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.language.jvm.tasks.ProcessResources:caseSensitive"><literal>caseSensitive</literal></link></td><td><para>Specifies whether case-sensitive pattern matching should be used.</para></td></tr><tr><td><link linkend="org.gradle.language.jvm.tasks.ProcessResources:destinationDir"><literal>destinationDir</literal></link></td><td><para>The directory to copy files into.</para></td></tr><tr><td><link linkend="org.gradle.language.jvm.tasks.ProcessResources:dirPermissions"><literal>dirPermissions</literal></link></td><td><para>Property for querying and configuring directory access permissions.
If the property has no value set, that means that existing permissions are preserved.
It is dependent on the copy action implementation whether these permissions will actually be applied.

For details see <apilink class="org.gradle.api.file.ConfigurableFilePermissions"/>.</para></td></tr><tr><td><link linkend="org.gradle.language.jvm.tasks.ProcessResources:duplicatesStrategy"><literal>duplicatesStrategy</literal></link></td><td><para>The strategy to use when trying to copy more than one file to the same destination.
</para></td></tr><tr><td><link linkend="org.gradle.language.jvm.tasks.ProcessResources:excludes"><literal>excludes</literal></link></td><td><para>The set of exclude patterns.</para></td></tr><tr><td><link linkend="org.gradle.language.jvm.tasks.ProcessResources:filePermissions"><literal>filePermissions</literal></link></td><td><para>Property for querying and configuring file access permissions.
If the property has no value set, that means that existing permissions are preserved.
It is dependent on the copy action implementation whether these permissions will actually be applied.

For details see <apilink class="org.gradle.api.file.ConfigurableFilePermissions"/>.</para></td></tr><tr><td><link linkend="org.gradle.language.jvm.tasks.ProcessResources:includeEmptyDirs"><literal>includeEmptyDirs</literal></link></td><td><para>Tells if empty target directories will be included in the copy.</para></td></tr><tr><td><link linkend="org.gradle.language.jvm.tasks.ProcessResources:includes"><literal>includes</literal></link></td><td><para>The set of include patterns.</para></td></tr><tr><td><link linkend="org.gradle.language.jvm.tasks.ProcessResources:source"><literal>source</literal></link></td><td><para>The source files for this task.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - ProcessResources</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.language.jvm.tasks.ProcessResources:eachFile(groovy.lang.Closure)">eachFile</link>(closure)</literal></td><td><para>Adds an action to be applied to each file as it about to be copied into its destination. The given closure is
called with a <apilink class="org.gradle.api.file.FileCopyDetails"/> as its parameter. Actions are executed in the order
added, and are inherited from the parent spec.</para></td></tr><tr><td><literal><link linkend="org.gradle.language.jvm.tasks.ProcessResources:eachFile(org.gradle.api.Action)">eachFile</link>(action)</literal></td><td><para>Adds an action to be applied to each file as it is about to be copied into its destination. The action can change
the destination path of the file, filter the contents of the file, or exclude the file from the result entirely.
Actions are executed in the order added, and are inherited from the parent spec.</para></td></tr><tr><td><literal><link linkend="org.gradle.language.jvm.tasks.ProcessResources:exclude(groovy.lang.Closure)">exclude</link>(excludeSpec)</literal></td><td><para>Adds an exclude spec. This method may be called multiple times to append new specs.The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter. The closure should return true or false. Example:

</para></td></tr><tr><td><literal><link linkend="org.gradle.language.jvm.tasks.ProcessResources:exclude(java.lang.Iterable)">exclude</link>(excludes)</literal></td><td><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.language.jvm.tasks.ProcessResources:exclude(java.lang.String[])">exclude</link>(excludes)</literal></td><td><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.language.jvm.tasks.ProcessResources:exclude(org.gradle.api.specs.Spec)">exclude</link>(excludeSpec)</literal></td><td><para>Adds an exclude spec. This method may be called multiple times to append new specs.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.language.jvm.tasks.ProcessResources:expand(java.util.Map)">expand</link>(properties)</literal></td><td><para>Expands property references in each file as it is copied. More specifically, each file is transformed using
Groovy's <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/text/SimpleTemplateEngine.html"><classname>SimpleTemplateEngine</classname></ulink>. This means you can use simple property references, such as
<literal>$property</literal> or <literal>${property}</literal> in the file. You can also include arbitrary Groovy code in the
file, such as <literal>${version ?: 'unknown'}</literal> or <literal>${classpath*.name.join(' ')}</literal>
</para></td></tr><tr><td><literal><link linkend="org.gradle.language.jvm.tasks.ProcessResources:expand(java.util.Map, org.gradle.api.Action)">expand</link>(properties, action)</literal></td><td><para>Expands property references in each file as it is copied. More specifically, each file is transformed using
Groovy's <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/text/SimpleTemplateEngine.html"><classname>SimpleTemplateEngine</classname></ulink>. This means you can use simple property references, such as
<literal>$property</literal> or <literal>${property}</literal> in the file. You can also include arbitrary Groovy code in the
file, such as <literal>${version ?: 'unknown'}</literal> or <literal>${classpath*.name.join(' ')}</literal>. The template
engine can be configured with the provided action.
</para></td></tr><tr><td><literal><link linkend="org.gradle.language.jvm.tasks.ProcessResources:filesMatching(java.lang.Iterable, org.gradle.api.Action)">filesMatching</link>(patterns, action)</literal></td><td><para>Configure the <apilink class="org.gradle.api.file.FileCopyDetails"/> for each file whose path matches any of the specified Ant-style patterns.
This is equivalent to using eachFile() and selectively applying a configuration based on the file's path.</para></td></tr><tr><td><literal><link linkend="org.gradle.language.jvm.tasks.ProcessResources:filesMatching(java.lang.String, org.gradle.api.Action)">filesMatching</link>(pattern, action)</literal></td><td><para>Configure the <apilink class="org.gradle.api.file.FileCopyDetails"/> for each file whose path matches the specified Ant-style pattern.
This is equivalent to using eachFile() and selectively applying a configuration based on the file's path.</para></td></tr><tr><td><literal><link linkend="org.gradle.language.jvm.tasks.ProcessResources:filesNotMatching(java.lang.Iterable, org.gradle.api.Action)">filesNotMatching</link>(patterns, action)</literal></td><td><para>Configure the <apilink class="org.gradle.api.file.FileCopyDetails"/> for each file whose path does not match any of the specified
Ant-style patterns. This is equivalent to using eachFile() and selectively applying a configuration based on the
file's path.</para></td></tr><tr><td><literal><link linkend="org.gradle.language.jvm.tasks.ProcessResources:filesNotMatching(java.lang.String, org.gradle.api.Action)">filesNotMatching</link>(pattern, action)</literal></td><td><para>Configure the <apilink class="org.gradle.api.file.FileCopyDetails"/> for each file whose path does not match the specified
Ant-style pattern. This is equivalent to using eachFile() and selectively applying a configuration based on the
file's path.</para></td></tr><tr><td><literal><link linkend="org.gradle.language.jvm.tasks.ProcessResources:filter(groovy.lang.Closure)">filter</link>(closure)</literal></td><td><para>Adds a content filter based on the provided closure.  The Closure will be called with each line (stripped of line
endings) and should return a String to replace the line or <literal>null</literal> to remove the line.  If every line is
removed, the result will be an empty file, not an absent one.</para></td></tr><tr><td><literal><link linkend="org.gradle.language.jvm.tasks.ProcessResources:filter(java.lang.Class)">filter</link>(filterType)</literal></td><td><para>Adds a content filter to be used during the copy.  Multiple calls to filter, add additional filters to the
filter chain.  Each filter should implement <literal>java.io.FilterReader</literal>. Include <literal>org.apache.tools.ant.filters.*</literal> for access to all the standard Ant filters.</para></td></tr><tr><td><literal><link linkend="org.gradle.language.jvm.tasks.ProcessResources:filter(java.util.Map, java.lang.Class)">filter</link>(properties, filterType)</literal></td><td><para>Adds a content filter to be used during the copy.  Multiple calls to filter, add additional filters to the
filter chain.  Each filter should implement <literal>java.io.FilterReader</literal>. Include <literal>org.apache.tools.ant.filters.*</literal> for access to all the standard Ant filters.</para></td></tr><tr><td><literal><link linkend="org.gradle.language.jvm.tasks.ProcessResources:filter(org.gradle.api.Transformer)">filter</link>(transformer)</literal></td><td><para>Adds a content filter based on the provided transformer.  The Closure will be called with each line (stripped of line
endings) and should return a String to replace the line or <literal>null</literal> to remove the line.  If every line is
removed, the result will be an empty file, not an absent one.</para></td></tr><tr><td><literal><link linkend="org.gradle.language.jvm.tasks.ProcessResources:from(java.lang.Object, groovy.lang.Closure)">from</link>(sourcePath, c)</literal></td><td><para>Specifies the source files or directories for a copy and creates a child <literal>CopySourceSpec</literal>. The given source
path is evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/> .</para></td></tr><tr><td><literal><link linkend="org.gradle.language.jvm.tasks.ProcessResources:from(java.lang.Object, org.gradle.api.Action)">from</link>(sourcePath, configureAction)</literal></td><td><para>Specifies the source files or directories for a copy and creates a child <literal>CopySpec</literal>. The given source
path is evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/> .</para></td></tr><tr><td><literal><link linkend="org.gradle.language.jvm.tasks.ProcessResources:from(java.lang.Object[])">from</link>(sourcePaths)</literal></td><td><para>Specifies source files or directories for a copy. The given paths are evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/>.</para></td></tr><tr><td><literal><link linkend="org.gradle.language.jvm.tasks.ProcessResources:include(groovy.lang.Closure)">include</link>(includeSpec)</literal></td><td><para>Adds an include spec. This method may be called multiple times to append new specs. The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></td></tr><tr><td><literal><link linkend="org.gradle.language.jvm.tasks.ProcessResources:include(java.lang.Iterable)">include</link>(includes)</literal></td><td><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.language.jvm.tasks.ProcessResources:include(java.lang.String[])">include</link>(includes)</literal></td><td><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.language.jvm.tasks.ProcessResources:include(org.gradle.api.specs.Spec)">include</link>(includeSpec)</literal></td><td><para>Adds an include spec. This method may be called multiple times to append new specs.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></td></tr><tr><td><literal><link linkend="org.gradle.language.jvm.tasks.ProcessResources:into(java.lang.Object)">into</link>(destDir)</literal></td><td><para>Specifies the destination directory for a copy. The destination is evaluated as per <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/>.</para></td></tr><tr><td><literal><link linkend="org.gradle.language.jvm.tasks.ProcessResources:into(java.lang.Object, groovy.lang.Closure)">into</link>(destPath, configureClosure)</literal></td><td><para>Creates and configures a child <literal>CopySpec</literal> with the given destination path.
The destination is evaluated as per <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/>.</para></td></tr><tr><td><literal><link linkend="org.gradle.language.jvm.tasks.ProcessResources:into(java.lang.Object, org.gradle.api.Action)">into</link>(destPath, copySpec)</literal></td><td><para>Creates and configures a child <literal>CopySpec</literal> with the given destination path.
The destination is evaluated as per <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/>.</para></td></tr><tr><td><literal><link linkend="org.gradle.language.jvm.tasks.ProcessResources:rename(groovy.lang.Closure)">rename</link>(closure)</literal></td><td><para>Renames a source file. The closure will be called with a single parameter, the name of the file.
The closure should return a String object with a new target name. The closure may return null,
in which case the original name will be used.</para></td></tr><tr><td><literal><link linkend="org.gradle.language.jvm.tasks.ProcessResources:rename(java.lang.String, java.lang.String)">rename</link>(sourceRegEx, replaceWith)</literal></td><td><para>Renames files based on a regular expression.  Uses java.util.regex type of regular expressions.  Note that the
replace string should use the '$1' syntax to refer to capture groups in the source regular expression.  Files
that do not match the source regular expression will be copied with the original name.

</para></td></tr><tr><td><literal><link linkend="org.gradle.language.jvm.tasks.ProcessResources:rename(java.util.regex.Pattern, java.lang.String)">rename</link>(sourceRegEx, replaceWith)</literal></td><td><para>Renames files based on a regular expression. See <apilink class="org.gradle.api.file.CopyProcessingSpec" method="rename(java.lang.String, java.lang.String)"/>.</para></td></tr><tr><td><literal><link linkend="org.gradle.language.jvm.tasks.ProcessResources:rename(org.gradle.api.Transformer)">rename</link>(renamer)</literal></td><td><para>Renames a source file. The function will be called with a single parameter, the name of the file.
The function should return a new target name. The function may return null,
in which case the original name will be used.</para></td></tr><tr><td><literal><link linkend="org.gradle.language.jvm.tasks.ProcessResources:with(org.gradle.api.file.CopySpec[])">with</link>(sourceSpecs)</literal></td><td><para>Adds the given specs as a child of this spec.

</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.language.jvm.tasks.ProcessResources:caseSensitive" role="detail"><title><classname>boolean</classname> <literal>caseSensitive</literal></title><para>Specifies whether case-sensitive pattern matching should be used.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>true</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.language.jvm.tasks.ProcessResources:destinationDir" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>destinationDir</literal></title><para>The directory to copy files into.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>null</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.language.jvm.tasks.ProcessResources:dirPermissions" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<apilink class="org.gradle.api.file.ConfigurableFilePermissions"/>&gt;</classname> <literal>dirPermissions</literal></title><para>Property for querying and configuring directory access permissions.
If the property has no value set, that means that existing permissions are preserved.
It is dependent on the copy action implementation whether these permissions will actually be applied.

For details see <apilink class="org.gradle.api.file.ConfigurableFilePermissions"/>.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>null</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.language.jvm.tasks.ProcessResources:duplicatesStrategy" role="detail"><title><apilink class="org.gradle.api.file.DuplicatesStrategy"/> <literal>duplicatesStrategy</literal></title><para>The strategy to use when trying to copy more than one file to the same destination.
</para><para>
The value can be set with a case insensitive string of the enum value (e.g. <literal>'exclude'</literal> for <apilink class="org.gradle.api.file.DuplicatesStrategy" method="EXCLUDE"/>).
</para><para>
This strategy can be overridden for individual files by using <apilink class="org.gradle.api.file.CopySpec" method="eachFile(org.gradle.api.Action)"/> or <apilink class="org.gradle.api.file.CopySpec" method="filesMatching(java.lang.String, org.gradle.api.Action)"/>.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>DuplicatesStrategy.INHERIT</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.language.jvm.tasks.ProcessResources:excludes" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>excludes</literal></title><para>The set of exclude patterns.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>[]</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.language.jvm.tasks.ProcessResources:filePermissions" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<apilink class="org.gradle.api.file.ConfigurableFilePermissions"/>&gt;</classname> <literal>filePermissions</literal></title><para>Property for querying and configuring file access permissions.
If the property has no value set, that means that existing permissions are preserved.
It is dependent on the copy action implementation whether these permissions will actually be applied.

For details see <apilink class="org.gradle.api.file.ConfigurableFilePermissions"/>.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>null</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.language.jvm.tasks.ProcessResources:includeEmptyDirs" role="detail"><title><classname>boolean</classname> <literal>includeEmptyDirs</literal></title><para>Tells if empty target directories will be included in the copy.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>true</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.language.jvm.tasks.ProcessResources:includes" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>includes</literal></title><para>The set of include patterns.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>[]</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.language.jvm.tasks.ProcessResources:source" role="detail"><title><apilink class="org.gradle.api.file.FileCollection"/> <literal>source</literal> (read-only)</title><para>The source files for this task.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>[]</literal></seg></seglistitem></segmentedlist></section></section><section><title>Method details</title><section id="org.gradle.language.jvm.tasks.ProcessResources:eachFile(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>eachFile</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> closure)</title><para>Adds an action to be applied to each file as it about to be copied into its destination. The given closure is
called with a <apilink class="org.gradle.api.file.FileCopyDetails"/> as its parameter. Actions are executed in the order
added, and are inherited from the parent spec.</para></section><section id="org.gradle.language.jvm.tasks.ProcessResources:eachFile(org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>eachFile</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.FileCopyDetails"/>&gt;</classname> action)</title><para>Adds an action to be applied to each file as it is about to be copied into its destination. The action can change
the destination path of the file, filter the contents of the file, or exclude the file from the result entirely.
Actions are executed in the order added, and are inherited from the parent spec.</para></section><section id="org.gradle.language.jvm.tasks.ProcessResources:exclude(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>exclude</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> excludeSpec)</title><para>Adds an exclude spec. This method may be called multiple times to append new specs.The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter. The closure should return true or false. Example:

</para><para><programlisting language="java">
copySpec {
  from 'source'
  into 'destination'
  //an example of excluding files from certain configuration:
  exclude { it.file in configurations.someConf.files }
}
</programlisting></para><para>

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.language.jvm.tasks.ProcessResources:exclude(java.lang.Iterable)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>exclude</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> excludes)</title><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.language.jvm.tasks.ProcessResources:exclude(java.lang.String[])" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>exclude</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>...</classname> excludes)</title><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.language.jvm.tasks.ProcessResources:exclude(org.gradle.api.specs.Spec)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>exclude</literal>(<classname><apilink class="org.gradle.api.specs.Spec"/>&lt;<apilink class="org.gradle.api.file.FileTreeElement"/>&gt;</classname> excludeSpec)</title><para>Adds an exclude spec. This method may be called multiple times to append new specs.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.language.jvm.tasks.ProcessResources:expand(java.util.Map)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>expand</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, ?&gt;</classname> properties)</title><para>Expands property references in each file as it is copied. More specifically, each file is transformed using
Groovy's <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/text/SimpleTemplateEngine.html"><classname>SimpleTemplateEngine</classname></ulink>. This means you can use simple property references, such as
<literal>$property</literal> or <literal>${property}</literal> in the file. You can also include arbitrary Groovy code in the
file, such as <literal>${version ?: 'unknown'}</literal> or <literal>${classpath*.name.join(' ')}</literal>
</para><para>
Note that all escape sequences (<literal>\n</literal>, <literal>\t</literal>, <literal>\\</literal>, etc) are converted to the symbols
they represent, so, for example, <literal>\n</literal> becomes newline. If this is undesirable then <apilink class="org.gradle.api.file.ContentFilterable" method="expand(java.util.Map, org.gradle.api.Action)"/>
should be used to disable this behavior.</para></section><section id="org.gradle.language.jvm.tasks.ProcessResources:expand(java.util.Map, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>expand</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, ?&gt;</classname> properties, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.ExpandDetails"/>&gt;</classname> action)</title><para>Expands property references in each file as it is copied. More specifically, each file is transformed using
Groovy's <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/text/SimpleTemplateEngine.html"><classname>SimpleTemplateEngine</classname></ulink>. This means you can use simple property references, such as
<literal>$property</literal> or <literal>${property}</literal> in the file. You can also include arbitrary Groovy code in the
file, such as <literal>${version ?: 'unknown'}</literal> or <literal>${classpath*.name.join(' ')}</literal>. The template
engine can be configured with the provided action.
</para><para>
Note that by default all escape sequences (<literal>\n</literal>, <literal>\t</literal>, <literal>\\</literal>, etc) are converted to the symbols
they represent, so, for example, <literal>\n</literal> becomes newline. This behavior is controlled by
<apilink class="org.gradle.api.file.ExpandDetails" method="getEscapeBackslash()"/> property. It should be set to <literal>true</literal> to disable escape sequences
conversion:
</para><para><programlisting language="java">
 expand(one: '1', two: 2) {
     escapeBackslash = true
 }
</programlisting></para></section><section id="org.gradle.language.jvm.tasks.ProcessResources:filesMatching(java.lang.Iterable, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>filesMatching</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> patterns, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.FileCopyDetails"/>&gt;</classname> action)</title><para>Configure the <apilink class="org.gradle.api.file.FileCopyDetails"/> for each file whose path matches any of the specified Ant-style patterns.
This is equivalent to using eachFile() and selectively applying a configuration based on the file's path.</para></section><section id="org.gradle.language.jvm.tasks.ProcessResources:filesMatching(java.lang.String, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>filesMatching</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> pattern, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.FileCopyDetails"/>&gt;</classname> action)</title><para>Configure the <apilink class="org.gradle.api.file.FileCopyDetails"/> for each file whose path matches the specified Ant-style pattern.
This is equivalent to using eachFile() and selectively applying a configuration based on the file's path.</para></section><section id="org.gradle.language.jvm.tasks.ProcessResources:filesNotMatching(java.lang.Iterable, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>filesNotMatching</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> patterns, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.FileCopyDetails"/>&gt;</classname> action)</title><para>Configure the <apilink class="org.gradle.api.file.FileCopyDetails"/> for each file whose path does not match any of the specified
Ant-style patterns. This is equivalent to using eachFile() and selectively applying a configuration based on the
file's path.</para></section><section id="org.gradle.language.jvm.tasks.ProcessResources:filesNotMatching(java.lang.String, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>filesNotMatching</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> pattern, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.FileCopyDetails"/>&gt;</classname> action)</title><para>Configure the <apilink class="org.gradle.api.file.FileCopyDetails"/> for each file whose path does not match the specified
Ant-style pattern. This is equivalent to using eachFile() and selectively applying a configuration based on the
file's path.</para></section><section id="org.gradle.language.jvm.tasks.ProcessResources:filter(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>filter</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> closure)</title><para>Adds a content filter based on the provided closure.  The Closure will be called with each line (stripped of line
endings) and should return a String to replace the line or <literal>null</literal> to remove the line.  If every line is
removed, the result will be an empty file, not an absent one.</para></section><section id="org.gradle.language.jvm.tasks.ProcessResources:filter(java.lang.Class)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>filter</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html"><classname>Class</classname></ulink>&lt;? extends <ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/FilterReader.html"><classname>FilterReader</classname></ulink>&gt;</classname> filterType)</title><para>Adds a content filter to be used during the copy.  Multiple calls to filter, add additional filters to the
filter chain.  Each filter should implement <literal>java.io.FilterReader</literal>. Include <literal>org.apache.tools.ant.filters.*</literal> for access to all the standard Ant filters.</para><para> Examples:
</para><para><programlisting language="java">
   filter(StripJavaComments)
   filter(com.mycompany.project.CustomFilter)
</programlisting></para></section><section id="org.gradle.language.jvm.tasks.ProcessResources:filter(java.util.Map, java.lang.Class)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>filter</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, ?&gt;</classname> properties, <classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html"><classname>Class</classname></ulink>&lt;? extends <ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/FilterReader.html"><classname>FilterReader</classname></ulink>&gt;</classname> filterType)</title><para>Adds a content filter to be used during the copy.  Multiple calls to filter, add additional filters to the
filter chain.  Each filter should implement <literal>java.io.FilterReader</literal>. Include <literal>org.apache.tools.ant.filters.*</literal> for access to all the standard Ant filters.</para><para>Filter properties may be specified using groovy map syntax.</para><para> Examples:
</para><para><programlisting language="java">
   filter(HeadFilter, lines:25, skip:2)
   filter(ReplaceTokens, tokens:[copyright:'2009', version:'2.3.1'])
</programlisting></para></section><section id="org.gradle.language.jvm.tasks.ProcessResources:filter(org.gradle.api.Transformer)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>filter</literal>(<classname><apilink class="org.gradle.api.Transformer"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> transformer)</title><para>Adds a content filter based on the provided transformer.  The Closure will be called with each line (stripped of line
endings) and should return a String to replace the line or <literal>null</literal> to remove the line.  If every line is
removed, the result will be an empty file, not an absent one.</para></section><section id="org.gradle.language.jvm.tasks.ProcessResources:from(java.lang.Object, groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>from</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> sourcePath, <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> c)</title><para>Specifies the source files or directories for a copy and creates a child <literal>CopySourceSpec</literal>. The given source
path is evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/> .</para></section><section id="org.gradle.language.jvm.tasks.ProcessResources:from(java.lang.Object, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>from</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> sourcePath, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.CopySpec"/>&gt;</classname> configureAction)</title><para>Specifies the source files or directories for a copy and creates a child <literal>CopySpec</literal>. The given source
path is evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/> .</para></section><section id="org.gradle.language.jvm.tasks.ProcessResources:from(java.lang.Object[])" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>from</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink>...</classname> sourcePaths)</title><para>Specifies source files or directories for a copy. The given paths are evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/>.</para></section><section id="org.gradle.language.jvm.tasks.ProcessResources:include(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>include</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> includeSpec)</title><para>Adds an include spec. This method may be called multiple times to append new specs. The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></section><section id="org.gradle.language.jvm.tasks.ProcessResources:include(java.lang.Iterable)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>include</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> includes)</title><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></section><section id="org.gradle.language.jvm.tasks.ProcessResources:include(java.lang.String[])" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>include</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>...</classname> includes)</title><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></section><section id="org.gradle.language.jvm.tasks.ProcessResources:include(org.gradle.api.specs.Spec)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>include</literal>(<classname><apilink class="org.gradle.api.specs.Spec"/>&lt;<apilink class="org.gradle.api.file.FileTreeElement"/>&gt;</classname> includeSpec)</title><para>Adds an include spec. This method may be called multiple times to append new specs.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></section><section id="org.gradle.language.jvm.tasks.ProcessResources:into(java.lang.Object)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>into</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> destDir)</title><para>Specifies the destination directory for a copy. The destination is evaluated as per <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/>.</para></section><section id="org.gradle.language.jvm.tasks.ProcessResources:into(java.lang.Object, groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>into</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> destPath, <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> configureClosure)</title><para>Creates and configures a child <literal>CopySpec</literal> with the given destination path.
The destination is evaluated as per <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/>.</para></section><section id="org.gradle.language.jvm.tasks.ProcessResources:into(java.lang.Object, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.file.CopySpec"/> <literal>into</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> destPath, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.CopySpec"/>&gt;</classname> copySpec)</title><para>Creates and configures a child <literal>CopySpec</literal> with the given destination path.
The destination is evaluated as per <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/>.</para></section><section id="org.gradle.language.jvm.tasks.ProcessResources:rename(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>rename</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> closure)</title><para>Renames a source file. The closure will be called with a single parameter, the name of the file.
The closure should return a String object with a new target name. The closure may return null,
in which case the original name will be used.</para></section><section id="org.gradle.language.jvm.tasks.ProcessResources:rename(java.lang.String, java.lang.String)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>rename</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> sourceRegEx, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> replaceWith)</title><para>Renames files based on a regular expression.  Uses java.util.regex type of regular expressions.  Note that the
replace string should use the '$1' syntax to refer to capture groups in the source regular expression.  Files
that do not match the source regular expression will be copied with the original name.

</para><para> Example:
</para><para><programlisting language="java">
rename '(.*)_OEM_BLUE_(.*)', '$1$2'
</programlisting></para><para>
would map the file 'style_OEM_BLUE_.css' to 'style.css'</para></section><section id="org.gradle.language.jvm.tasks.ProcessResources:rename(java.util.regex.Pattern, java.lang.String)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>rename</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html"><classname>Pattern</classname></ulink> sourceRegEx, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> replaceWith)</title><para>Renames files based on a regular expression. See <apilink class="org.gradle.api.file.CopyProcessingSpec" method="rename(java.lang.String, java.lang.String)"/>.</para></section><section id="org.gradle.language.jvm.tasks.ProcessResources:rename(org.gradle.api.Transformer)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>rename</literal>(<classname><apilink class="org.gradle.api.Transformer"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> renamer)</title><para>Renames a source file. The function will be called with a single parameter, the name of the file.
The function should return a new target name. The function may return null,
in which case the original name will be used.</para></section><section id="org.gradle.language.jvm.tasks.ProcessResources:with(org.gradle.api.file.CopySpec[])" role="detail"><title><apilink class="org.gradle.api.file.CopySpec"/> <literal>with</literal>(<classname><apilink class="org.gradle.api.file.CopySpec"/>...</classname> sourceSpecs)</title><para>Adds the given specs as a child of this spec.

</para><para><programlisting language="java">
def contentSpec = copySpec {
  from("content") {
    include "**/*.txt"
  }
}

task copy(type: Copy) {
  into "$buildDir/copy"
  with contentSpec
}
</programlisting></para></section></section></chapter><chapter id="org.gradle.api.publish.ivy.tasks.PublishToIvyRepository"><title>PublishToIvyRepository</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.publish.ivy.tasks.PublishToIvyRepository" style="javadoc"/></seg></seglistitem></segmentedlist><para>Publishes an IvyPublication to an IvyArtifactRepository.</para><section><title>Properties</title><table><title>Properties - PublishToIvyRepository</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.publish.ivy.tasks.PublishToIvyRepository:publication"><literal>publication</literal></link></td><td><para>The publication to be published.</para></td></tr><tr><td><link linkend="org.gradle.api.publish.ivy.tasks.PublishToIvyRepository:repository"><literal>repository</literal></link></td><td><para>The repository to publish to.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.publish.ivy.tasks.PublishToIvyRepository:publication" role="detail"><title><apilink class="org.gradle.api.publish.ivy.IvyPublication"/> <literal>publication</literal></title><para>The publication to be published.</para></section><section id="org.gradle.api.publish.ivy.tasks.PublishToIvyRepository:repository" role="detail"><title><apilink class="org.gradle.api.artifacts.repositories.IvyArtifactRepository"/> <literal>repository</literal></title><para>The repository to publish to.</para></section></section></chapter><chapter id="org.gradle.api.artifacts.repositories.ArtifactRepository"><title>ArtifactRepository</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.artifacts.repositories.ArtifactRepository" style="javadoc"/></seg></seglistitem></segmentedlist><segmentedlist><segtitle>Known Subtypes</segtitle><seglistitem><seg><simplelist columns="1" type="vert"><member><apilink class="org.gradle.api.artifacts.repositories.IvyArtifactRepository"/></member><member><apilink class="org.gradle.api.artifacts.repositories.MavenArtifactRepository"/></member></simplelist></seg></seglistitem></segmentedlist><para>A repository for resolving and publishing artifacts.</para><section><title>Properties</title><table><title>Properties - ArtifactRepository</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.artifacts.repositories.ArtifactRepository:name"><literal>name</literal></link></td><td><para>The name for this repository. A name must be unique amongst a repository set. A default name is provided for the repository if none
is provided.

</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.artifacts.repositories.ArtifactRepository:name" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>name</literal></title><para>The name for this repository. A name must be unique amongst a repository set. A default name is provided for the repository if none
is provided.

</para><para>The name is used in logging output and error reporting to point to information related to this repository.</para></section></section></chapter><chapter id="org.gradle.api.artifacts.repositories.UrlArtifactRepository"><title>UrlArtifactRepository</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.artifacts.repositories.UrlArtifactRepository" style="javadoc"/></seg></seglistitem></segmentedlist><segmentedlist><segtitle>Known Subtypes</segtitle><seglistitem><seg><simplelist columns="1" type="vert"><member><apilink class="org.gradle.api.artifacts.repositories.IvyArtifactRepository"/></member><member><apilink class="org.gradle.api.artifacts.repositories.MavenArtifactRepository"/></member></simplelist></seg></seglistitem></segmentedlist><para>A repository that supports resolving artifacts from a URL.</para><section><title>Properties</title><table><title>Properties - UrlArtifactRepository</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.artifacts.repositories.UrlArtifactRepository:allowInsecureProtocol"><literal>allowInsecureProtocol</literal></link></td><td><para>Specifies whether it is acceptable to communicate with a repository over an insecure HTTP connection.
</para></td></tr><tr><td><link linkend="org.gradle.api.artifacts.repositories.UrlArtifactRepository:url"><literal>url</literal></link></td><td><para>The base URL of this repository.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.artifacts.repositories.UrlArtifactRepository:allowInsecureProtocol" role="detail"><title><classname>boolean</classname> <literal>allowInsecureProtocol</literal></title><para>Specifies whether it is acceptable to communicate with a repository over an insecure HTTP connection.
</para><para>
For security purposes this intentionally requires a user to opt-in to using insecure protocols on case by case basis.
</para><para>
Gradle intentionally does not offer a global system/gradle property that allows a universal disable of this check.
</para><para>
<emphasis>Allowing communication over insecure protocols allows for a man-in-the-middle to impersonate the intended server,
and gives an attacker the ability to
<ulink url="https://max.computer/blog/how-to-take-over-the-computer-of-any-java-or-clojure-or-scala-developer/">serve malicious executable code onto the system.</ulink>
</emphasis>
</para><para>
See also:
<ulink url="https://medium.com/bugbountywriteup/want-to-take-over-the-java-ecosystem-all-you-need-is-a-mitm-1fc329d898fb">Want to take over the Java ecosystem? All you need is a MITM!</ulink></para></section><section id="org.gradle.api.artifacts.repositories.UrlArtifactRepository:url" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/net/URI.html"><classname>URI</classname></ulink> <literal>url</literal></title><para>The base URL of this repository.</para></section></section></chapter><chapter id="org.gradle.api.artifacts.repositories.IvyArtifactRepository"><title>IvyArtifactRepository</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.artifacts.repositories.IvyArtifactRepository" style="javadoc"/></seg></seglistitem></segmentedlist><para>An artifact repository which uses an Ivy format to store artifacts and meta-data.
</para><para>
When used to resolve metadata and artifact files, all available patterns will be searched.
</para><para>
When used to upload metadata and artifact files, only a single, primary pattern will be used:
</para><orderedlist><listitem>If a URL is specified via <apilink class="org.gradle.api.artifacts.repositories.IvyArtifactRepository" method="setUrl(java.lang.Object)"/> then that URL will be used for upload, combined with the applied <apilink class="org.gradle.api.artifacts.repositories.IvyArtifactRepository" method="layout(java.lang.String)"/>.</listitem><listitem>If no URL has been specified but additional patterns have been added via <apilink class="org.gradle.api.artifacts.repositories.IvyArtifactRepository" method="artifactPattern(java.lang.String)"/> or <apilink class="org.gradle.api.artifacts.repositories.IvyArtifactRepository" method="ivyPattern(java.lang.String)"/>, then the first defined pattern will be used.</listitem></orderedlist><para>
Repositories of this type are created by the <apilink class="org.gradle.api.artifacts.dsl.RepositoryHandler" method="ivy(org.gradle.api.Action)"/> group of methods.</para><section><title>Properties</title><table><title>Properties - IvyArtifactRepository</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.artifacts.repositories.IvyArtifactRepository:allowInsecureProtocol"><literal>allowInsecureProtocol</literal></link></td><td><para>Specifies whether it is acceptable to communicate with a repository over an insecure HTTP connection.
</para></td></tr><tr><td><link linkend="org.gradle.api.artifacts.repositories.IvyArtifactRepository:authentication"><literal>authentication</literal></link></td><td><para>The authentication schemes for this repository.</para></td></tr><tr><td><link linkend="org.gradle.api.artifacts.repositories.IvyArtifactRepository:credentials"><literal>credentials</literal></link></td><td><para>The credentials of the specified type used to authenticate with this repository.
</para></td></tr><tr><td><link linkend="org.gradle.api.artifacts.repositories.IvyArtifactRepository:name"><literal>name</literal></link></td><td><para>The name for this repository. A name must be unique amongst a repository set. A default name is provided for the repository if none
is provided.

</para></td></tr><tr><td><link linkend="org.gradle.api.artifacts.repositories.IvyArtifactRepository:resolve"><literal>resolve</literal></link></td><td><para>The meta-data provider used when resolving artifacts from this repository. The provider is responsible for locating and interpreting the meta-data
for the modules and artifacts contained in this repository. Using this provider, you can fine tune how this resolution happens.</para></td></tr><tr><td><link linkend="org.gradle.api.artifacts.repositories.IvyArtifactRepository:url"><literal>url</literal></link></td><td><para>The base URL of this repository.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - IvyArtifactRepository</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.artifacts.repositories.IvyArtifactRepository:artifactPattern(java.lang.String)">artifactPattern</link>(pattern)</literal></td><td><para>Adds an independent pattern that will be used to locate artifact files in this repository. This pattern will be used to locate ivy files as well, unless a specific
ivy pattern is supplied via <apilink class="org.gradle.api.artifacts.repositories.IvyArtifactRepository" method="ivyPattern(java.lang.String)"/>.

If this pattern is not a fully-qualified URL, it will be interpreted as a file relative to the project directory.
It is not interpreted relative the URL specified in <apilink class="org.gradle.api.artifacts.repositories.IvyArtifactRepository" method="setUrl(java.lang.Object)"/>.

Patterns added in this way will be in addition to any layout-based patterns added via <apilink class="org.gradle.api.artifacts.repositories.IvyArtifactRepository" method="setUrl(java.lang.Object)"/>.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.repositories.IvyArtifactRepository:authentication(org.gradle.api.Action)">authentication</link>(action)</literal></td><td><para>Configures the authentication schemes for this repository.

</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.repositories.IvyArtifactRepository:credentials(java.lang.Class)">credentials</link>(credentialsType)</literal></td><td><para>Configures the credentials for this repository that will be provided by the build.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.repositories.IvyArtifactRepository:credentials(java.lang.Class, org.gradle.api.Action)">credentials</link>(credentialsType, action)</literal></td><td><para>Configures the credentials for this repository using the supplied action.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.repositories.IvyArtifactRepository:credentials(org.gradle.api.Action)">credentials</link>(action)</literal></td><td><para>Configures the username and password credentials for this repository using the supplied action.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.repositories.IvyArtifactRepository:ivyPattern(java.lang.String)">ivyPattern</link>(pattern)</literal></td><td><para>Adds an independent pattern that will be used to locate ivy files in this repository.

If this pattern is not a fully-qualified URL, it will be interpreted as a file relative to the project directory.
It is not interpreted relative the URL specified in <apilink class="org.gradle.api.artifacts.repositories.IvyArtifactRepository" method="setUrl(java.lang.Object)"/>.

Patterns added in this way will be in addition to any layout-based patterns added via <apilink class="org.gradle.api.artifacts.repositories.IvyArtifactRepository" method="setUrl(java.lang.Object)"/>.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.repositories.IvyArtifactRepository:layout(java.lang.String)">layout</link>(layoutName)</literal></td><td><para>Specifies how the items of the repository are organized.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.repositories.IvyArtifactRepository:metadataSources(org.gradle.api.Action)">metadataSources</link>(configureAction)</literal></td><td><para>Configures the metadata sources for this repository. This method will replace any previously configured sources
of metadata.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.repositories.IvyArtifactRepository:patternLayout(org.gradle.api.Action)">patternLayout</link>(config)</literal></td><td><para>Specifies how the items of the repository are organized.
</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.artifacts.repositories.IvyArtifactRepository:allowInsecureProtocol" role="detail"><title><classname>boolean</classname> <literal>allowInsecureProtocol</literal></title><para>Specifies whether it is acceptable to communicate with a repository over an insecure HTTP connection.
</para><para>
For security purposes this intentionally requires a user to opt-in to using insecure protocols on case by case basis.
</para><para>
Gradle intentionally does not offer a global system/gradle property that allows a universal disable of this check.
</para><para>
<emphasis>Allowing communication over insecure protocols allows for a man-in-the-middle to impersonate the intended server,
and gives an attacker the ability to
<ulink url="https://max.computer/blog/how-to-take-over-the-computer-of-any-java-or-clojure-or-scala-developer/">serve malicious executable code onto the system.</ulink>
</emphasis>
</para><para>
See also:
<ulink url="https://medium.com/bugbountywriteup/want-to-take-over-the-java-ecosystem-all-you-need-is-a-mitm-1fc329d898fb">Want to take over the Java ecosystem? All you need is a MITM!</ulink></para></section><section id="org.gradle.api.artifacts.repositories.IvyArtifactRepository:authentication" role="detail"><title><apilink class="org.gradle.api.artifacts.repositories.AuthenticationContainer"/> <literal>authentication</literal> (read-only)</title><para>The authentication schemes for this repository.</para></section><section id="org.gradle.api.artifacts.repositories.IvyArtifactRepository:credentials" role="detail"><title><classname>T</classname> <literal>credentials</literal> (read-only)</title><para>The credentials of the specified type used to authenticate with this repository.
</para><para>
If no credentials have been assigned to this repository, an empty set of credentials of the specified type is assigned to this repository and returned.</para></section><section id="org.gradle.api.artifacts.repositories.IvyArtifactRepository:name" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>name</literal></title><para>The name for this repository. A name must be unique amongst a repository set. A default name is provided for the repository if none
is provided.

</para><para>The name is used in logging output and error reporting to point to information related to this repository.</para></section><section id="org.gradle.api.artifacts.repositories.IvyArtifactRepository:resolve" role="detail"><title><apilink class="org.gradle.api.artifacts.repositories.IvyArtifactRepositoryMetaDataProvider"/> <literal>resolve</literal></title><para>The meta-data provider used when resolving artifacts from this repository. The provider is responsible for locating and interpreting the meta-data
for the modules and artifacts contained in this repository. Using this provider, you can fine tune how this resolution happens.</para></section><section id="org.gradle.api.artifacts.repositories.IvyArtifactRepository:url" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/net/URI.html"><classname>URI</classname></ulink> <literal>url</literal></title><para>The base URL of this repository.</para></section></section><section><title>Method details</title><section id="org.gradle.api.artifacts.repositories.IvyArtifactRepository:artifactPattern(java.lang.String)" role="detail"><title><classname>void</classname> <literal>artifactPattern</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> pattern)</title><para>Adds an independent pattern that will be used to locate artifact files in this repository. This pattern will be used to locate ivy files as well, unless a specific
ivy pattern is supplied via <apilink class="org.gradle.api.artifacts.repositories.IvyArtifactRepository" method="ivyPattern(java.lang.String)"/>.

If this pattern is not a fully-qualified URL, it will be interpreted as a file relative to the project directory.
It is not interpreted relative the URL specified in <apilink class="org.gradle.api.artifacts.repositories.IvyArtifactRepository" method="setUrl(java.lang.Object)"/>.

Patterns added in this way will be in addition to any layout-based patterns added via <apilink class="org.gradle.api.artifacts.repositories.IvyArtifactRepository" method="setUrl(java.lang.Object)"/>.</para></section><section id="org.gradle.api.artifacts.repositories.IvyArtifactRepository:authentication(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>authentication</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.artifacts.repositories.AuthenticationContainer"/>&gt;</classname> action)</title><para>Configures the authentication schemes for this repository.

</para><para>This method executes the given action against the <apilink class="org.gradle.api.artifacts.repositories.AuthenticationContainer"/> for this project. The <apilink class="org.gradle.api.artifacts.repositories.AuthenticationContainer"/> is passed to the closure as the closure's delegate.
</para><para>
If no authentication schemes have been assigned to this repository, a default set of authentication schemes are used based on the repository's transport scheme.

</para><programlisting language="java">
repositories {
    maven {
        url = "https://example.com/m2"
        authentication {
            basic(BasicAuthentication)
        }
    }
}
</programlisting><para>
Supported authentication scheme types extend <apilink class="org.gradle.authentication.Authentication"/>.</para></section><section id="org.gradle.api.artifacts.repositories.IvyArtifactRepository:credentials(java.lang.Class)" role="detail"><title><classname>void</classname> <literal>credentials</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html"><classname>Class</classname></ulink>&lt;? extends <apilink class="org.gradle.api.credentials.Credentials"/>&gt;</classname> credentialsType)</title><para>Configures the credentials for this repository that will be provided by the build.
</para><para>
Credentials will be provided from Gradle properties based on the repository name.
If credentials for this repository can not be resolved and the repository will be used in the current build, then the build will fail to start and point to the missing configuration.
</para><programlisting language="java">
repositories {
    maven {
        url = "https://example.com/m2"
        credentials(PasswordCredentials)
    }
}
</programlisting><para>
The following credential types are currently supported for the <literal>credentialsType</literal> argument:
</para><itemizedlist><listitem><apilink class="org.gradle.api.credentials.PasswordCredentials"/></listitem><listitem><apilink class="org.gradle.api.credentials.AwsCredentials"/></listitem><listitem><apilink class="org.gradle.api.credentials.HttpHeaderCredentials"/></listitem></itemizedlist></section><section id="org.gradle.api.artifacts.repositories.IvyArtifactRepository:credentials(java.lang.Class, org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>credentials</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html"><classname>Class</classname></ulink>&lt;<classname>T</classname>&gt;</classname> credentialsType, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <classname>T</classname>&gt;</classname> action)</title><para>Configures the credentials for this repository using the supplied action.
</para><para>
If no credentials have been assigned to this repository, an empty set of credentials of the specified type will be assigned to this repository and given to the configuration action.
If credentials have already been specified for this repository, they will be passed to the given configuration action.
</para><programlisting language="java">
repositories {
    maven {
        url = "https://example.com/aws/proxy"
        credentials(AwsCredentials) {
            accessKey = "myAccessKey"
            secretKey = "mySecret"
        }
    }
}
</programlisting><para>
The following credential types are currently supported for the <literal>credentialsType</literal> argument:
</para><itemizedlist><listitem><apilink class="org.gradle.api.artifacts.repositories.PasswordCredentials"/></listitem><listitem><apilink class="org.gradle.api.credentials.AwsCredentials"/></listitem></itemizedlist></section><section id="org.gradle.api.artifacts.repositories.IvyArtifactRepository:credentials(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>credentials</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.artifacts.repositories.PasswordCredentials"/>&gt;</classname> action)</title><para>Configures the username and password credentials for this repository using the supplied action.
</para><para>
If no credentials have been assigned to this repository, an empty set of username and password credentials is assigned to this repository and passed to the action.
</para><programlisting language="java">
repositories {
    maven {
        url = "https://example.com/m2"
        credentials {
            username = 'joe'
            password = 'secret'
        }
    }
}
</programlisting></section><section id="org.gradle.api.artifacts.repositories.IvyArtifactRepository:ivyPattern(java.lang.String)" role="detail"><title><classname>void</classname> <literal>ivyPattern</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> pattern)</title><para>Adds an independent pattern that will be used to locate ivy files in this repository.

If this pattern is not a fully-qualified URL, it will be interpreted as a file relative to the project directory.
It is not interpreted relative the URL specified in <apilink class="org.gradle.api.artifacts.repositories.IvyArtifactRepository" method="setUrl(java.lang.Object)"/>.

Patterns added in this way will be in addition to any layout-based patterns added via <apilink class="org.gradle.api.artifacts.repositories.IvyArtifactRepository" method="setUrl(java.lang.Object)"/>.</para></section><section id="org.gradle.api.artifacts.repositories.IvyArtifactRepository:layout(java.lang.String)" role="detail"><title><classname>void</classname> <literal>layout</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> layoutName)</title><para>Specifies how the items of the repository are organized.
</para><para>
Recognised values are as follows:
</para><section><title>'gradle'</title><para>
A Repository Layout that applies the following patterns:
</para><itemizedlist><listitem>Artifacts: <literal>$baseUri/<literal>[organisation]/[module]/[revision]/[artifact]-[revision](-[classifier])(.[ext])</literal></literal></listitem><listitem>Ivy: <literal>$baseUri/<literal>[organisation]/[module]/[revision]/ivy-[revision].xml</literal></literal></listitem></itemizedlist></section><section><title>'maven'</title><para>
A Repository Layout that applies the following patterns:
</para><itemizedlist><listitem>Artifacts: <literal>$baseUri/<literal>[organisation]/[module]/[revision]/[artifact]-[revision](-[classifier])(.[ext])</literal></literal></listitem><listitem>Ivy: <literal>$baseUri/<literal>[organisation]/[module]/[revision]/ivy-[revision].xml</literal></literal></listitem></itemizedlist><para>
Following the Maven convention, the 'organisation' value is further processed by replacing '.' with '/'.
</para></section><section><title>'ivy'</title><para>
A Repository Layout that applies the following patterns:
</para><itemizedlist><listitem>Artifacts: <literal>$baseUri/<literal>[organisation]/[module]/[revision]/[type]s/[artifact](.[ext])</literal></literal></listitem><listitem>Ivy: <literal>$baseUri/<literal>[organisation]/[module]/[revision]/[type]s/[artifact](.[ext])</literal></literal></listitem></itemizedlist></section></section><section id="org.gradle.api.artifacts.repositories.IvyArtifactRepository:metadataSources(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>metadataSources</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <classname>MetadataSources</classname>&gt;</classname> configureAction)</title><para>Configures the metadata sources for this repository. This method will replace any previously configured sources
of metadata.</para></section><section id="org.gradle.api.artifacts.repositories.IvyArtifactRepository:patternLayout(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>patternLayout</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.artifacts.repositories.IvyPatternRepositoryLayout"/>&gt;</classname> config)</title><para>Specifies how the items of the repository are organized.
</para><para>
The layout is configured with the supplied closure.
</para><programlisting language="java">
repositories {
    ivy {
        patternLayout {
            artifact '[module]/[revision]/[artifact](.[ext])'
            ivy '[module]/[revision]/ivy.xml'
        }
    }
}
</programlisting><para>The available pattern tokens are listed as part of <ulink url="http://ant.apache.org/ivy/history/master/concept.html#patterns">Ivy's Main Concepts documentation</ulink>.</para></section></section></chapter><chapter id="org.gradle.api.artifacts.repositories.IvyArtifactRepositoryMetaDataProvider"><title>IvyArtifactRepositoryMetaDataProvider</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.artifacts.repositories.IvyArtifactRepositoryMetaDataProvider" style="javadoc"/></seg></seglistitem></segmentedlist><para>The meta-data provider for an Ivy repository. Uses the Ivy module descriptor (<literal>ivy.xml</literal>) to determine the meta-data for module versions and artifacts.</para><section><title>Properties</title><table><title>Properties - IvyArtifactRepositoryMetaDataProvider</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.artifacts.repositories.IvyArtifactRepositoryMetaDataProvider:dynamicMode"><literal>dynamicMode</literal></link></td><td><para>Returns true if dynamic resolve mode should be used for Ivy modules. When enabled, the <literal>revConstraint</literal> attribute for each dependency declaration
is used in preference to the <literal>rev</literal> attribute. When disabled (the default), the <literal>rev</literal> attribute is always used.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.artifacts.repositories.IvyArtifactRepositoryMetaDataProvider:dynamicMode" role="detail"><title><classname>boolean</classname> <literal>dynamicMode</literal></title><para>Returns true if dynamic resolve mode should be used for Ivy modules. When enabled, the <literal>revConstraint</literal> attribute for each dependency declaration
is used in preference to the <literal>rev</literal> attribute. When disabled (the default), the <literal>rev</literal> attribute is always used.</para></section></section></chapter><chapter id="org.gradle.api.publish.maven.tasks.AbstractPublishToMaven"><title>AbstractPublishToMaven</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.publish.maven.tasks.AbstractPublishToMaven" style="javadoc"/></seg></seglistitem></segmentedlist><segmentedlist><segtitle>Known Subtypes</segtitle><seglistitem><seg><simplelist columns="1" type="vert"><member><apilink class="org.gradle.api.publish.maven.tasks.PublishToMavenRepository"/></member></simplelist></seg></seglistitem></segmentedlist><para>Base class for tasks that publish a <apilink class="org.gradle.api.publish.maven.MavenPublication"/>.</para><section><title>Properties</title><table><title>Properties - AbstractPublishToMaven</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.publish.maven.tasks.AbstractPublishToMaven:publication"><literal>publication</literal></link></td><td><para>The publication to be published.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.publish.maven.tasks.AbstractPublishToMaven:publication" role="detail"><title><apilink class="org.gradle.api.publish.maven.MavenPublication"/> <literal>publication</literal></title><para>The publication to be published.</para></section></section></chapter><chapter id="org.gradle.api.publish.maven.tasks.PublishToMavenRepository"><title>PublishToMavenRepository</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.publish.maven.tasks.PublishToMavenRepository" style="javadoc"/></seg></seglistitem></segmentedlist><para>Publishes a <apilink class="org.gradle.api.publish.maven.MavenPublication"/> to a <apilink class="org.gradle.api.artifacts.repositories.MavenArtifactRepository"/>.</para><section><title>Properties</title><table><title>Properties - PublishToMavenRepository</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.publish.maven.tasks.PublishToMavenRepository:publication"><literal>publication</literal></link></td><td><para>The publication to be published.</para></td></tr><tr><td><link linkend="org.gradle.api.publish.maven.tasks.PublishToMavenRepository:repository"><literal>repository</literal></link></td><td><para>The repository to publish to.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.publish.maven.tasks.PublishToMavenRepository:publication" role="detail"><title><apilink class="org.gradle.api.publish.maven.MavenPublication"/> <literal>publication</literal></title><para>The publication to be published.</para></section><section id="org.gradle.api.publish.maven.tasks.PublishToMavenRepository:repository" role="detail"><title><apilink class="org.gradle.api.artifacts.repositories.MavenArtifactRepository"/> <literal>repository</literal></title><para>The repository to publish to.</para></section></section></chapter><chapter id="org.gradle.api.artifacts.repositories.MavenArtifactRepository"><title>MavenArtifactRepository</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.artifacts.repositories.MavenArtifactRepository" style="javadoc"/></seg></seglistitem></segmentedlist><para>An artifact repository which uses a Maven format to store artifacts and meta-data.
</para><para>
Repositories of this type are created by the <apilink class="org.gradle.api.artifacts.dsl.RepositoryHandler" method="maven(org.gradle.api.Action)"/> group of methods.</para><section><title>Properties</title><table><title>Properties - MavenArtifactRepository</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.artifacts.repositories.MavenArtifactRepository:allowInsecureProtocol"><literal>allowInsecureProtocol</literal></link></td><td><para>Specifies whether it is acceptable to communicate with a repository over an insecure HTTP connection.
</para></td></tr><tr><td><link linkend="org.gradle.api.artifacts.repositories.MavenArtifactRepository:artifactUrls"><literal>artifactUrls</literal></link></td><td><para>The additional URLs to use to find artifact files. Note that these URLs are not used to find POM files.</para></td></tr><tr><td><link linkend="org.gradle.api.artifacts.repositories.MavenArtifactRepository:authentication"><literal>authentication</literal></link></td><td><para>The authentication schemes for this repository.</para></td></tr><tr><td><link linkend="org.gradle.api.artifacts.repositories.MavenArtifactRepository:credentials"><literal>credentials</literal></link></td><td><para>The credentials of the specified type used to authenticate with this repository.
</para></td></tr><tr><td><link linkend="org.gradle.api.artifacts.repositories.MavenArtifactRepository:name"><literal>name</literal></link></td><td><para>The name for this repository. A name must be unique amongst a repository set. A default name is provided for the repository if none
is provided.

</para></td></tr><tr><td><link linkend="org.gradle.api.artifacts.repositories.MavenArtifactRepository:url"><literal>url</literal></link></td><td><para>The base URL of this repository. This URL is used to find both POMs and artifact files. You can add additional URLs to use to look for artifact files, such as jars, using <apilink class="org.gradle.api.artifacts.repositories.MavenArtifactRepository" method="setArtifactUrls(java.lang.Iterable)"/>.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - MavenArtifactRepository</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.artifacts.repositories.MavenArtifactRepository:artifactUrls(java.lang.Object[])">artifactUrls</link>(urls)</literal></td><td><para>Adds some additional URLs to use to find artifact files. Note that these URLs are not used to find POM files.

</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.repositories.MavenArtifactRepository:authentication(org.gradle.api.Action)">authentication</link>(action)</literal></td><td><para>Configures the authentication schemes for this repository.

</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.repositories.MavenArtifactRepository:credentials(java.lang.Class)">credentials</link>(credentialsType)</literal></td><td><para>Configures the credentials for this repository that will be provided by the build.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.repositories.MavenArtifactRepository:credentials(java.lang.Class, org.gradle.api.Action)">credentials</link>(credentialsType, action)</literal></td><td><para>Configures the credentials for this repository using the supplied action.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.repositories.MavenArtifactRepository:credentials(org.gradle.api.Action)">credentials</link>(action)</literal></td><td><para>Configures the username and password credentials for this repository using the supplied action.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.repositories.MavenArtifactRepository:metadataSources(org.gradle.api.Action)">metadataSources</link>(configureAction)</literal></td><td><para>Configures the metadata sources for this repository. This method will replace any previously configured sources
of metadata.</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.artifacts.repositories.MavenArtifactRepository:allowInsecureProtocol" role="detail"><title><classname>boolean</classname> <literal>allowInsecureProtocol</literal></title><para>Specifies whether it is acceptable to communicate with a repository over an insecure HTTP connection.
</para><para>
For security purposes this intentionally requires a user to opt-in to using insecure protocols on case by case basis.
</para><para>
Gradle intentionally does not offer a global system/gradle property that allows a universal disable of this check.
</para><para>
<emphasis>Allowing communication over insecure protocols allows for a man-in-the-middle to impersonate the intended server,
and gives an attacker the ability to
<ulink url="https://max.computer/blog/how-to-take-over-the-computer-of-any-java-or-clojure-or-scala-developer/">serve malicious executable code onto the system.</ulink>
</emphasis>
</para><para>
See also:
<ulink url="https://medium.com/bugbountywriteup/want-to-take-over-the-java-ecosystem-all-you-need-is-a-mitm-1fc329d898fb">Want to take over the Java ecosystem? All you need is a MITM!</ulink></para></section><section id="org.gradle.api.artifacts.repositories.MavenArtifactRepository:artifactUrls" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/net/URI.html"><classname>URI</classname></ulink>&gt;</classname> <literal>artifactUrls</literal></title><para>The additional URLs to use to find artifact files. Note that these URLs are not used to find POM files.</para></section><section id="org.gradle.api.artifacts.repositories.MavenArtifactRepository:authentication" role="detail"><title><apilink class="org.gradle.api.artifacts.repositories.AuthenticationContainer"/> <literal>authentication</literal> (read-only)</title><para>The authentication schemes for this repository.</para></section><section id="org.gradle.api.artifacts.repositories.MavenArtifactRepository:credentials" role="detail"><title><classname>T</classname> <literal>credentials</literal> (read-only)</title><para>The credentials of the specified type used to authenticate with this repository.
</para><para>
If no credentials have been assigned to this repository, an empty set of credentials of the specified type is assigned to this repository and returned.</para></section><section id="org.gradle.api.artifacts.repositories.MavenArtifactRepository:name" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>name</literal></title><para>The name for this repository. A name must be unique amongst a repository set. A default name is provided for the repository if none
is provided.

</para><para>The name is used in logging output and error reporting to point to information related to this repository.</para></section><section id="org.gradle.api.artifacts.repositories.MavenArtifactRepository:url" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/net/URI.html"><classname>URI</classname></ulink> <literal>url</literal></title><para>The base URL of this repository. This URL is used to find both POMs and artifact files. You can add additional URLs to use to look for artifact files, such as jars, using <apilink class="org.gradle.api.artifacts.repositories.MavenArtifactRepository" method="setArtifactUrls(java.lang.Iterable)"/>.</para></section></section><section><title>Method details</title><section id="org.gradle.api.artifacts.repositories.MavenArtifactRepository:artifactUrls(java.lang.Object[])" role="detail"><title><classname>void</classname> <literal>artifactUrls</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink>...</classname> urls)</title><para>Adds some additional URLs to use to find artifact files. Note that these URLs are not used to find POM files.

</para><para>The provided values are evaluated as per <apilink class="org.gradle.api.Project" method="uri(java.lang.Object)"/>. This means, for example, you can pass in a <literal>File</literal> object, or a relative path to be evaluated
relative to the project directory.</para></section><section id="org.gradle.api.artifacts.repositories.MavenArtifactRepository:authentication(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>authentication</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.artifacts.repositories.AuthenticationContainer"/>&gt;</classname> action)</title><para>Configures the authentication schemes for this repository.

</para><para>This method executes the given action against the <apilink class="org.gradle.api.artifacts.repositories.AuthenticationContainer"/> for this project. The <apilink class="org.gradle.api.artifacts.repositories.AuthenticationContainer"/> is passed to the closure as the closure's delegate.
</para><para>
If no authentication schemes have been assigned to this repository, a default set of authentication schemes are used based on the repository's transport scheme.

</para><programlisting language="java">
repositories {
    maven {
        url = "https://example.com/m2"
        authentication {
            basic(BasicAuthentication)
        }
    }
}
</programlisting><para>
Supported authentication scheme types extend <apilink class="org.gradle.authentication.Authentication"/>.</para></section><section id="org.gradle.api.artifacts.repositories.MavenArtifactRepository:credentials(java.lang.Class)" role="detail"><title><classname>void</classname> <literal>credentials</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html"><classname>Class</classname></ulink>&lt;? extends <apilink class="org.gradle.api.credentials.Credentials"/>&gt;</classname> credentialsType)</title><para>Configures the credentials for this repository that will be provided by the build.
</para><para>
Credentials will be provided from Gradle properties based on the repository name.
If credentials for this repository can not be resolved and the repository will be used in the current build, then the build will fail to start and point to the missing configuration.
</para><programlisting language="java">
repositories {
    maven {
        url = "https://example.com/m2"
        credentials(PasswordCredentials)
    }
}
</programlisting><para>
The following credential types are currently supported for the <literal>credentialsType</literal> argument:
</para><itemizedlist><listitem><apilink class="org.gradle.api.credentials.PasswordCredentials"/></listitem><listitem><apilink class="org.gradle.api.credentials.AwsCredentials"/></listitem><listitem><apilink class="org.gradle.api.credentials.HttpHeaderCredentials"/></listitem></itemizedlist></section><section id="org.gradle.api.artifacts.repositories.MavenArtifactRepository:credentials(java.lang.Class, org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>credentials</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html"><classname>Class</classname></ulink>&lt;<classname>T</classname>&gt;</classname> credentialsType, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <classname>T</classname>&gt;</classname> action)</title><para>Configures the credentials for this repository using the supplied action.
</para><para>
If no credentials have been assigned to this repository, an empty set of credentials of the specified type will be assigned to this repository and given to the configuration action.
If credentials have already been specified for this repository, they will be passed to the given configuration action.
</para><programlisting language="java">
repositories {
    maven {
        url = "https://example.com/aws/proxy"
        credentials(AwsCredentials) {
            accessKey = "myAccessKey"
            secretKey = "mySecret"
        }
    }
}
</programlisting><para>
The following credential types are currently supported for the <literal>credentialsType</literal> argument:
</para><itemizedlist><listitem><apilink class="org.gradle.api.artifacts.repositories.PasswordCredentials"/></listitem><listitem><apilink class="org.gradle.api.credentials.AwsCredentials"/></listitem></itemizedlist></section><section id="org.gradle.api.artifacts.repositories.MavenArtifactRepository:credentials(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>credentials</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.artifacts.repositories.PasswordCredentials"/>&gt;</classname> action)</title><para>Configures the username and password credentials for this repository using the supplied action.
</para><para>
If no credentials have been assigned to this repository, an empty set of username and password credentials is assigned to this repository and passed to the action.
</para><programlisting language="java">
repositories {
    maven {
        url = "https://example.com/m2"
        credentials {
            username = 'joe'
            password = 'secret'
        }
    }
}
</programlisting></section><section id="org.gradle.api.artifacts.repositories.MavenArtifactRepository:metadataSources(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>metadataSources</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <classname>MetadataSources</classname>&gt;</classname> configureAction)</title><para>Configures the metadata sources for this repository. This method will replace any previously configured sources
of metadata.</para></section></section></chapter><chapter id="org.gradle.language.scala.tasks.AbstractScalaCompile"><title>AbstractScalaCompile</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.language.scala.tasks.AbstractScalaCompile" style="javadoc"/></seg></seglistitem></segmentedlist><segmentedlist><segtitle>Known Subtypes</segtitle><seglistitem><seg><simplelist columns="1" type="vert"><member><apilink class="org.gradle.api.tasks.scala.ScalaCompile"/></member></simplelist></seg></seglistitem></segmentedlist><para>An abstract Scala compile task sharing common functionality for compiling scala.</para><section><title>Properties</title><table><title>Properties - AbstractScalaCompile</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.language.scala.tasks.AbstractScalaCompile:classpath"><literal>classpath</literal></link></td><td><para>The classpath to use to compile the source files.</para></td></tr><tr><td><link linkend="org.gradle.language.scala.tasks.AbstractScalaCompile:destinationDirectory"><literal>destinationDirectory</literal></link></td><td><para>The directory property that represents the directory to generate the <literal>.class</literal> files into.</para></td></tr><tr><td><link linkend="org.gradle.language.scala.tasks.AbstractScalaCompile:excludes"><literal>excludes</literal></link></td><td><para>The set of exclude patterns.</para></td></tr><tr><td><link linkend="org.gradle.language.scala.tasks.AbstractScalaCompile:includes"><literal>includes</literal></link></td><td><para>The set of include patterns.</para></td></tr><tr><td><link linkend="org.gradle.language.scala.tasks.AbstractScalaCompile:javaLauncher"><literal>javaLauncher</literal></link></td><td><para>The toolchain <apilink class="org.gradle.jvm.toolchain.JavaLauncher"/> to use for executing the Scala compiler.</para></td></tr><tr><td><link linkend="org.gradle.language.scala.tasks.AbstractScalaCompile:options"><literal>options</literal></link></td><td><para>The Java compilation options.</para></td></tr><tr><td><link linkend="org.gradle.language.scala.tasks.AbstractScalaCompile:scalaCompileOptions"><literal>scalaCompileOptions</literal></link></td><td><para>The Scala compilation options.</para></td></tr><tr><td><link linkend="org.gradle.language.scala.tasks.AbstractScalaCompile:source"><literal>source</literal></link></td><td><para>The source for this task, after the include and exclude patterns have been applied. Ignores source files which do not exist.

</para></td></tr><tr><td><link linkend="org.gradle.language.scala.tasks.AbstractScalaCompile:sourceCompatibility"><literal>sourceCompatibility</literal></link></td><td><para>The Java language level to use to compile the source files.</para></td></tr><tr><td><link linkend="org.gradle.language.scala.tasks.AbstractScalaCompile:targetCompatibility"><literal>targetCompatibility</literal></link></td><td><para>The target JVM to generate the <literal>.class</literal> files for.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - AbstractScalaCompile</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.language.scala.tasks.AbstractScalaCompile:exclude(groovy.lang.Closure)">exclude</link>(excludeSpec)</literal></td><td><para>Adds an exclude spec. This method may be called multiple times to append new specs.The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter. The closure should return true or false. Example:

</para></td></tr><tr><td><literal><link linkend="org.gradle.language.scala.tasks.AbstractScalaCompile:exclude(java.lang.Iterable)">exclude</link>(excludes)</literal></td><td><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.language.scala.tasks.AbstractScalaCompile:exclude(java.lang.String[])">exclude</link>(excludes)</literal></td><td><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.language.scala.tasks.AbstractScalaCompile:exclude(org.gradle.api.specs.Spec)">exclude</link>(excludeSpec)</literal></td><td><para>Adds an exclude spec. This method may be called multiple times to append new specs.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.language.scala.tasks.AbstractScalaCompile:include(groovy.lang.Closure)">include</link>(includeSpec)</literal></td><td><para>Adds an include spec. This method may be called multiple times to append new specs. The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></td></tr><tr><td><literal><link linkend="org.gradle.language.scala.tasks.AbstractScalaCompile:include(java.lang.Iterable)">include</link>(includes)</literal></td><td><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.language.scala.tasks.AbstractScalaCompile:include(java.lang.String[])">include</link>(includes)</literal></td><td><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.language.scala.tasks.AbstractScalaCompile:include(org.gradle.api.specs.Spec)">include</link>(includeSpec)</literal></td><td><para>Adds an include spec. This method may be called multiple times to append new specs.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></td></tr><tr><td><literal><link linkend="org.gradle.language.scala.tasks.AbstractScalaCompile:source(java.lang.Object[])">source</link>(sources)</literal></td><td><para>Adds some source to this task. The given source objects will be evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/>.</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.language.scala.tasks.AbstractScalaCompile:classpath" role="detail"><title><apilink class="org.gradle.api.file.FileCollection"/> <literal>classpath</literal></title><para>The classpath to use to compile the source files.</para><segmentedlist><segtitle>Default with <literal>scala</literal> plugin</segtitle><seglistitem><seg><literal><replaceable>sourceSet</replaceable>.compileClasspath</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.language.scala.tasks.AbstractScalaCompile:destinationDirectory" role="detail"><title><apilink class="org.gradle.api.file.DirectoryProperty"/> <literal>destinationDirectory</literal></title><para>The directory property that represents the directory to generate the <literal>.class</literal> files into.</para><segmentedlist><segtitle>Default with <literal>scala</literal> plugin</segtitle><seglistitem><seg><literal><replaceable>sourceSet</replaceable>.<replaceable>sourceDirectorySet</replaceable>.destinationDirectory</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.language.scala.tasks.AbstractScalaCompile:excludes" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>excludes</literal></title><para>The set of exclude patterns.</para></section><section id="org.gradle.language.scala.tasks.AbstractScalaCompile:includes" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>includes</literal></title><para>The set of include patterns.</para></section><section id="org.gradle.language.scala.tasks.AbstractScalaCompile:javaLauncher" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<apilink class="org.gradle.jvm.toolchain.JavaLauncher"/>&gt;</classname> <literal>javaLauncher</literal></title><para>The toolchain <apilink class="org.gradle.jvm.toolchain.JavaLauncher"/> to use for executing the Scala compiler.</para><segmentedlist><segtitle>Default with <literal>scala</literal> plugin</segtitle><seglistitem><seg><literal>java.toolchain</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.language.scala.tasks.AbstractScalaCompile:options" role="detail"><title><apilink class="org.gradle.api.tasks.compile.CompileOptions"/> <literal>options</literal> (read-only)</title><para>The Java compilation options.</para></section><section id="org.gradle.language.scala.tasks.AbstractScalaCompile:scalaCompileOptions" role="detail"><title><apilink class="org.gradle.language.scala.tasks.BaseScalaCompileOptions"/> <literal>scalaCompileOptions</literal> (read-only)</title><para>The Scala compilation options.</para></section><section id="org.gradle.language.scala.tasks.AbstractScalaCompile:source" role="detail"><title><apilink class="org.gradle.api.file.FileTree"/> <literal>source</literal> (read-only)</title><para>The source for this task, after the include and exclude patterns have been applied. Ignores source files which do not exist.

</para><para>
The <apilink class="org.gradle.api.tasks.PathSensitivity"/> for the sources is configured to be <apilink class="org.gradle.api.tasks.PathSensitivity" method="ABSOLUTE"/>.
If your sources are less strict, please change it accordingly by overriding this method in your subclass.
</para><segmentedlist><segtitle>Default with <literal>scala</literal> plugin</segtitle><seglistitem><seg><literal><replaceable>sourceSet</replaceable>.scala</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.language.scala.tasks.AbstractScalaCompile:sourceCompatibility" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>sourceCompatibility</literal></title><para>The Java language level to use to compile the source files.</para><segmentedlist><segtitle>Default with <literal>scala</literal> plugin</segtitle><seglistitem><seg><literal>project.sourceCompatibility</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.language.scala.tasks.AbstractScalaCompile:targetCompatibility" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>targetCompatibility</literal></title><para>The target JVM to generate the <literal>.class</literal> files for.</para><segmentedlist><segtitle>Default with <literal>scala</literal> plugin</segtitle><seglistitem><seg><literal>project.targetCompatibility</literal></seg></seglistitem></segmentedlist></section></section><section><title>Method details</title><section id="org.gradle.language.scala.tasks.AbstractScalaCompile:exclude(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>exclude</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> excludeSpec)</title><para>Adds an exclude spec. This method may be called multiple times to append new specs.The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter. The closure should return true or false. Example:

</para><para><programlisting language="java">
copySpec {
  from 'source'
  into 'destination'
  //an example of excluding files from certain configuration:
  exclude { it.file in configurations.someConf.files }
}
</programlisting></para><para>

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.language.scala.tasks.AbstractScalaCompile:exclude(java.lang.Iterable)" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>exclude</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> excludes)</title><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.language.scala.tasks.AbstractScalaCompile:exclude(java.lang.String[])" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>exclude</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>...</classname> excludes)</title><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.language.scala.tasks.AbstractScalaCompile:exclude(org.gradle.api.specs.Spec)" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>exclude</literal>(<classname><apilink class="org.gradle.api.specs.Spec"/>&lt;<apilink class="org.gradle.api.file.FileTreeElement"/>&gt;</classname> excludeSpec)</title><para>Adds an exclude spec. This method may be called multiple times to append new specs.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.language.scala.tasks.AbstractScalaCompile:include(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>include</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> includeSpec)</title><para>Adds an include spec. This method may be called multiple times to append new specs. The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></section><section id="org.gradle.language.scala.tasks.AbstractScalaCompile:include(java.lang.Iterable)" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>include</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> includes)</title><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></section><section id="org.gradle.language.scala.tasks.AbstractScalaCompile:include(java.lang.String[])" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>include</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>...</classname> includes)</title><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></section><section id="org.gradle.language.scala.tasks.AbstractScalaCompile:include(org.gradle.api.specs.Spec)" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>include</literal>(<classname><apilink class="org.gradle.api.specs.Spec"/>&lt;<apilink class="org.gradle.api.file.FileTreeElement"/>&gt;</classname> includeSpec)</title><para>Adds an include spec. This method may be called multiple times to append new specs.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></section><section id="org.gradle.language.scala.tasks.AbstractScalaCompile:source(java.lang.Object[])" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>source</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink>...</classname> sources)</title><para>Adds some source to this task. The given source objects will be evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/>.</para></section></section></chapter><chapter id="org.gradle.language.scala.tasks.BaseScalaCompileOptions"><title>BaseScalaCompileOptions</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.language.scala.tasks.BaseScalaCompileOptions" style="javadoc"/></seg></seglistitem></segmentedlist><para>Options for Scala platform compilation.</para><section><title>Properties</title><table><title>Properties - BaseScalaCompileOptions</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.language.scala.tasks.BaseScalaCompileOptions:additionalParameters"><literal>additionalParameters</literal></link></td><td><para>Additional parameters passed to the compiler.
Each parameter must start with '-'.</para></td></tr><tr><td><link linkend="org.gradle.language.scala.tasks.BaseScalaCompileOptions:debugLevel"><literal>debugLevel</literal></link></td><td><para>Generate debugging information.
Legal values: none, source, line, vars, notailcalls</para></td></tr><tr><td><link linkend="org.gradle.language.scala.tasks.BaseScalaCompileOptions:deprecation"><literal>deprecation</literal></link></td><td><para>Generate deprecation information.</para></td></tr><tr><td><link linkend="org.gradle.language.scala.tasks.BaseScalaCompileOptions:encoding"><literal>encoding</literal></link></td><td><para>Encoding of source files.</para></td></tr><tr><td><link linkend="org.gradle.language.scala.tasks.BaseScalaCompileOptions:failOnError"><literal>failOnError</literal></link></td><td><para>Fail the build on compilation errors.</para></td></tr><tr><td><link linkend="org.gradle.language.scala.tasks.BaseScalaCompileOptions:force"><literal>force</literal></link></td><td><para>Whether to force the compilation of all files.
Legal values:
- false (only compile modified files)
- true (always recompile all files)</para></td></tr><tr><td><link linkend="org.gradle.language.scala.tasks.BaseScalaCompileOptions:forkOptions"><literal>forkOptions</literal></link></td><td><para>Options for running the Scala compiler in a separate process.</para></td></tr><tr><td><link linkend="org.gradle.language.scala.tasks.BaseScalaCompileOptions:incrementalOptions"><literal>incrementalOptions</literal></link></td><td><para>Options for incremental compilation of Scala code.</para></td></tr><tr><td><link linkend="org.gradle.language.scala.tasks.BaseScalaCompileOptions:listFiles"><literal>listFiles</literal></link></td><td><para>List files to be compiled.</para></td></tr><tr><td><link linkend="org.gradle.language.scala.tasks.BaseScalaCompileOptions:loggingLevel"><literal>loggingLevel</literal></link></td><td><para>Specifies the amount of logging.
Legal values:  none, verbose, debug</para></td></tr><tr><td><link linkend="org.gradle.language.scala.tasks.BaseScalaCompileOptions:loggingPhases"><literal>loggingPhases</literal></link></td><td><para>Phases of the compiler to log.
Legal values: namer, typer, pickler, uncurry, tailcalls, transmatch, explicitouter, erasure,
lambdalift, flatten, constructors, mixin, icode, jvm, terminal.</para></td></tr><tr><td><link linkend="org.gradle.language.scala.tasks.BaseScalaCompileOptions:optimize"><literal>optimize</literal></link></td><td><para>Run optimizations.</para></td></tr><tr><td><link linkend="org.gradle.language.scala.tasks.BaseScalaCompileOptions:unchecked"><literal>unchecked</literal></link></td><td><para>Generate unchecked information.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.language.scala.tasks.BaseScalaCompileOptions:additionalParameters" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/List.html"><classname>List</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>additionalParameters</literal></title><para>Additional parameters passed to the compiler.
Each parameter must start with '-'.</para><segmentedlist><segtitle>Default with <literal>scala</literal> plugin</segtitle><seglistitem><seg><literal>[]</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.language.scala.tasks.BaseScalaCompileOptions:debugLevel" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>debugLevel</literal></title><para>Generate debugging information.
Legal values: none, source, line, vars, notailcalls</para><segmentedlist><segtitle>Default with <literal>scala</literal> plugin</segtitle><seglistitem><seg><literal>null</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.language.scala.tasks.BaseScalaCompileOptions:deprecation" role="detail"><title><classname>boolean</classname> <literal>deprecation</literal></title><para>Generate deprecation information.</para><segmentedlist><segtitle>Default with <literal>scala</literal> plugin</segtitle><seglistitem><seg><literal>true</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.language.scala.tasks.BaseScalaCompileOptions:encoding" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>encoding</literal></title><para>Encoding of source files.</para><segmentedlist><segtitle>Default with <literal>scala</literal> plugin</segtitle><seglistitem><seg><literal>null</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.language.scala.tasks.BaseScalaCompileOptions:failOnError" role="detail"><title><classname>boolean</classname> <literal>failOnError</literal></title><para>Fail the build on compilation errors.</para><segmentedlist><segtitle>Default with <literal>scala</literal> plugin</segtitle><seglistitem><seg><literal>true</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.language.scala.tasks.BaseScalaCompileOptions:force" role="detail"><title><classname>boolean</classname> <literal>force</literal></title><para>Whether to force the compilation of all files.
Legal values:
- false (only compile modified files)
- true (always recompile all files)</para><segmentedlist><segtitle>Default with <literal>scala</literal> plugin</segtitle><seglistitem><seg><literal>false</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.language.scala.tasks.BaseScalaCompileOptions:forkOptions" role="detail"><title><apilink class="org.gradle.api.tasks.scala.ScalaForkOptions"/> <literal>forkOptions</literal> (read-only)</title><para>Options for running the Scala compiler in a separate process.</para></section><section id="org.gradle.language.scala.tasks.BaseScalaCompileOptions:incrementalOptions" role="detail"><title><apilink class="org.gradle.api.tasks.scala.IncrementalCompileOptions"/> <literal>incrementalOptions</literal> (read-only)</title><para>Options for incremental compilation of Scala code.</para></section><section id="org.gradle.language.scala.tasks.BaseScalaCompileOptions:listFiles" role="detail"><title><classname>boolean</classname> <literal>listFiles</literal></title><para>List files to be compiled.</para><segmentedlist><segtitle>Default with <literal>scala</literal> plugin</segtitle><seglistitem><seg><literal>false</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.language.scala.tasks.BaseScalaCompileOptions:loggingLevel" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>loggingLevel</literal></title><para>Specifies the amount of logging.
Legal values:  none, verbose, debug</para><segmentedlist><segtitle>Default with <literal>scala</literal> plugin</segtitle><seglistitem><seg><literal>null</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.language.scala.tasks.BaseScalaCompileOptions:loggingPhases" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/List.html"><classname>List</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>loggingPhases</literal></title><para>Phases of the compiler to log.
Legal values: namer, typer, pickler, uncurry, tailcalls, transmatch, explicitouter, erasure,
lambdalift, flatten, constructors, mixin, icode, jvm, terminal.</para><segmentedlist><segtitle>Default with <literal>scala</literal> plugin</segtitle><seglistitem><seg><literal>[]</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.language.scala.tasks.BaseScalaCompileOptions:optimize" role="detail"><title><classname>boolean</classname> <literal>optimize</literal></title><para>Run optimizations.</para><segmentedlist><segtitle>Default with <literal>scala</literal> plugin</segtitle><seglistitem><seg><literal>false</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.language.scala.tasks.BaseScalaCompileOptions:unchecked" role="detail"><title><classname>boolean</classname> <literal>unchecked</literal></title><para>Generate unchecked information.</para><segmentedlist><segtitle>Default with <literal>scala</literal> plugin</segtitle><seglistitem><seg><literal>true</literal></seg></seglistitem></segmentedlist></section></section></chapter><chapter id="org.gradle.api.tasks.scala.ScalaForkOptions"><title>ScalaForkOptions</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.tasks.scala.ScalaForkOptions" style="javadoc"/></seg></seglistitem></segmentedlist><para>Fork options for Scala compilation. Only take effect if <literal>BaseScalaCompileOptions.fork</literal>
is <literal>true</literal>.</para><section><title>Properties</title><table><title>Properties - ScalaForkOptions</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.tasks.scala.ScalaForkOptions:allJvmArgs"><literal>allJvmArgs</literal></link></td><td><caution>Incubating</caution><para>The full set of arguments to use to launch the JVM for the compiler process. This includes arguments to define
system properties, the minimum/maximum heap size, and the bootstrap classpath.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.scala.ScalaForkOptions:jvmArgs"><literal>jvmArgs</literal></link></td><td><para>Returns any additional JVM arguments for the compiler process.
Defaults to the empty list.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.scala.ScalaForkOptions:jvmArgumentProviders"><literal>jvmArgumentProviders</literal></link></td><td><caution>Incubating</caution><para>Returns any additional JVM argument providers for the compiler process.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.scala.ScalaForkOptions:memoryInitialSize"><literal>memoryInitialSize</literal></link></td><td><para>The initial heap size for the compiler process.
Defaults to <literal>null</literal>, in which case the JVM's default will be used.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.scala.ScalaForkOptions:memoryMaximumSize"><literal>memoryMaximumSize</literal></link></td><td><para>The maximum heap size for the compiler process.
Defaults to <literal>null</literal>, in which case the JVM's default will be used.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.tasks.scala.ScalaForkOptions:allJvmArgs" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/List.html"><classname>List</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>allJvmArgs</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The full set of arguments to use to launch the JVM for the compiler process. This includes arguments to define
system properties, the minimum/maximum heap size, and the bootstrap classpath.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>[]</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.scala.ScalaForkOptions:jvmArgs" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/List.html"><classname>List</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>jvmArgs</literal></title><para>Returns any additional JVM arguments for the compiler process.
Defaults to the empty list.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>[]</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.scala.ScalaForkOptions:jvmArgumentProviders" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/List.html"><classname>List</classname></ulink>&lt;<apilink class="org.gradle.process.CommandLineArgumentProvider"/>&gt;</classname> <literal>jvmArgumentProviders</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Returns any additional JVM argument providers for the compiler process.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>[]</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.scala.ScalaForkOptions:memoryInitialSize" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>memoryInitialSize</literal></title><para>The initial heap size for the compiler process.
Defaults to <literal>null</literal>, in which case the JVM's default will be used.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>null</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.scala.ScalaForkOptions:memoryMaximumSize" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>memoryMaximumSize</literal></title><para>The maximum heap size for the compiler process.
Defaults to <literal>null</literal>, in which case the JVM's default will be used.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>null</literal></seg></seglistitem></segmentedlist></section></section></chapter><chapter id="org.gradle.api.tasks.scala.ScalaCompile"><title>ScalaCompile</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.tasks.scala.ScalaCompile" style="javadoc"/></seg></seglistitem></segmentedlist><para>Compiles Scala source files, and optionally, Java source files.</para><section><title>Properties</title><table><title>Properties - ScalaCompile</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.tasks.scala.ScalaCompile:classpath"><literal>classpath</literal></link></td><td><para>The classpath to use to compile the source files.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.scala.ScalaCompile:destinationDirectory"><literal>destinationDirectory</literal></link></td><td><para>The directory property that represents the directory to generate the <literal>.class</literal> files into.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.scala.ScalaCompile:excludes"><literal>excludes</literal></link></td><td><para>The set of exclude patterns.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.scala.ScalaCompile:includes"><literal>includes</literal></link></td><td><para>The set of include patterns.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.scala.ScalaCompile:javaLauncher"><literal>javaLauncher</literal></link></td><td><para>The toolchain <apilink class="org.gradle.jvm.toolchain.JavaLauncher"/> to use for executing the Scala compiler.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.scala.ScalaCompile:options"><literal>options</literal></link></td><td><para>The Java compilation options.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.scala.ScalaCompile:scalaClasspath"><literal>scalaClasspath</literal></link></td><td><para>The classpath to use to load the Scala compiler.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.scala.ScalaCompile:scalaCompileOptions"><literal>scalaCompileOptions</literal></link></td><td><para>The Scala compilation options.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.scala.ScalaCompile:scalaCompilerPlugins"><literal>scalaCompilerPlugins</literal></link></td><td><para>The Scala compiler plugins to use.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.scala.ScalaCompile:source"><literal>source</literal></link></td><td><para>The source for this task, after the include and exclude patterns have been applied. Ignores source files which do not exist.

</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.scala.ScalaCompile:sourceCompatibility"><literal>sourceCompatibility</literal></link></td><td><para>The Java language level to use to compile the source files.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.scala.ScalaCompile:targetCompatibility"><literal>targetCompatibility</literal></link></td><td><para>The target JVM to generate the <literal>.class</literal> files for.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - ScalaCompile</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.tasks.scala.ScalaCompile:exclude(groovy.lang.Closure)">exclude</link>(excludeSpec)</literal></td><td><para>Adds an exclude spec. This method may be called multiple times to append new specs.The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter. The closure should return true or false. Example:

</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.scala.ScalaCompile:exclude(java.lang.Iterable)">exclude</link>(excludes)</literal></td><td><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.scala.ScalaCompile:exclude(java.lang.String[])">exclude</link>(excludes)</literal></td><td><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.scala.ScalaCompile:exclude(org.gradle.api.specs.Spec)">exclude</link>(excludeSpec)</literal></td><td><para>Adds an exclude spec. This method may be called multiple times to append new specs.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.scala.ScalaCompile:include(groovy.lang.Closure)">include</link>(includeSpec)</literal></td><td><para>Adds an include spec. This method may be called multiple times to append new specs. The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.scala.ScalaCompile:include(java.lang.Iterable)">include</link>(includes)</literal></td><td><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.scala.ScalaCompile:include(java.lang.String[])">include</link>(includes)</literal></td><td><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.scala.ScalaCompile:include(org.gradle.api.specs.Spec)">include</link>(includeSpec)</literal></td><td><para>Adds an include spec. This method may be called multiple times to append new specs.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.scala.ScalaCompile:source(java.lang.Object[])">source</link>(sources)</literal></td><td><para>Adds some source to this task. The given source objects will be evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/>.</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.tasks.scala.ScalaCompile:classpath" role="detail"><title><apilink class="org.gradle.api.file.FileCollection"/> <literal>classpath</literal></title><para>The classpath to use to compile the source files.</para><segmentedlist><segtitle>Default with <literal>scala</literal> plugin</segtitle><seglistitem><seg><literal><replaceable>sourceSet</replaceable>.compileClasspath</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.scala.ScalaCompile:destinationDirectory" role="detail"><title><apilink class="org.gradle.api.file.DirectoryProperty"/> <literal>destinationDirectory</literal></title><para>The directory property that represents the directory to generate the <literal>.class</literal> files into.</para><segmentedlist><segtitle>Default with <literal>scala</literal> plugin</segtitle><seglistitem><seg><literal><replaceable>sourceSet</replaceable>.<replaceable>sourceDirectorySet</replaceable>.destinationDirectory</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.scala.ScalaCompile:excludes" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>excludes</literal></title><para>The set of exclude patterns.</para></section><section id="org.gradle.api.tasks.scala.ScalaCompile:includes" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>includes</literal></title><para>The set of include patterns.</para></section><section id="org.gradle.api.tasks.scala.ScalaCompile:javaLauncher" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<apilink class="org.gradle.jvm.toolchain.JavaLauncher"/>&gt;</classname> <literal>javaLauncher</literal></title><para>The toolchain <apilink class="org.gradle.jvm.toolchain.JavaLauncher"/> to use for executing the Scala compiler.</para><segmentedlist><segtitle>Default with <literal>scala</literal> plugin</segtitle><seglistitem><seg><literal>java.toolchain</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.scala.ScalaCompile:options" role="detail"><title><apilink class="org.gradle.api.tasks.compile.CompileOptions"/> <literal>options</literal> (read-only)</title><para>The Java compilation options.</para></section><section id="org.gradle.api.tasks.scala.ScalaCompile:scalaClasspath" role="detail"><title><apilink class="org.gradle.api.file.FileCollection"/> <literal>scalaClasspath</literal></title><para>The classpath to use to load the Scala compiler.</para><segmentedlist><segtitle>Default with <literal>scala</literal> plugin</segtitle><seglistitem><seg><literal>scala-compiler</literal> dependency matching the <literal>scala-library</literal> version found on <literal>classpath</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.scala.ScalaCompile:scalaCompileOptions" role="detail"><title><apilink class="org.gradle.language.scala.tasks.BaseScalaCompileOptions"/> <literal>scalaCompileOptions</literal> (read-only)</title><para>The Scala compilation options.</para></section><section id="org.gradle.api.tasks.scala.ScalaCompile:scalaCompilerPlugins" role="detail"><title><apilink class="org.gradle.api.file.FileCollection"/> <literal>scalaCompilerPlugins</literal></title><para>The Scala compiler plugins to use.</para><segmentedlist><segtitle>Default with <literal>scala</literal> plugin</segtitle><seglistitem><seg>The list of compiler plugins is resolved from the <literal>scalaCompilerPlugins</literal> <literal>configuration</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.scala.ScalaCompile:source" role="detail"><title><apilink class="org.gradle.api.file.FileTree"/> <literal>source</literal> (read-only)</title><para>The source for this task, after the include and exclude patterns have been applied. Ignores source files which do not exist.

</para><para>
The <apilink class="org.gradle.api.tasks.PathSensitivity"/> for the sources is configured to be <apilink class="org.gradle.api.tasks.PathSensitivity" method="ABSOLUTE"/>.
If your sources are less strict, please change it accordingly by overriding this method in your subclass.
</para><segmentedlist><segtitle>Default with <literal>scala</literal> plugin</segtitle><seglistitem><seg><literal><replaceable>sourceSet</replaceable>.scala</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.scala.ScalaCompile:sourceCompatibility" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>sourceCompatibility</literal></title><para>The Java language level to use to compile the source files.</para><segmentedlist><segtitle>Default with <literal>scala</literal> plugin</segtitle><seglistitem><seg><literal>project.sourceCompatibility</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.scala.ScalaCompile:targetCompatibility" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>targetCompatibility</literal></title><para>The target JVM to generate the <literal>.class</literal> files for.</para><segmentedlist><segtitle>Default with <literal>scala</literal> plugin</segtitle><seglistitem><seg><literal>project.targetCompatibility</literal></seg></seglistitem></segmentedlist></section></section><section><title>Method details</title><section id="org.gradle.api.tasks.scala.ScalaCompile:exclude(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>exclude</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> excludeSpec)</title><para>Adds an exclude spec. This method may be called multiple times to append new specs.The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter. The closure should return true or false. Example:

</para><para><programlisting language="java">
copySpec {
  from 'source'
  into 'destination'
  //an example of excluding files from certain configuration:
  exclude { it.file in configurations.someConf.files }
}
</programlisting></para><para>

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.api.tasks.scala.ScalaCompile:exclude(java.lang.Iterable)" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>exclude</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> excludes)</title><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.api.tasks.scala.ScalaCompile:exclude(java.lang.String[])" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>exclude</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>...</classname> excludes)</title><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.api.tasks.scala.ScalaCompile:exclude(org.gradle.api.specs.Spec)" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>exclude</literal>(<classname><apilink class="org.gradle.api.specs.Spec"/>&lt;<apilink class="org.gradle.api.file.FileTreeElement"/>&gt;</classname> excludeSpec)</title><para>Adds an exclude spec. This method may be called multiple times to append new specs.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.api.tasks.scala.ScalaCompile:include(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>include</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> includeSpec)</title><para>Adds an include spec. This method may be called multiple times to append new specs. The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></section><section id="org.gradle.api.tasks.scala.ScalaCompile:include(java.lang.Iterable)" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>include</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> includes)</title><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></section><section id="org.gradle.api.tasks.scala.ScalaCompile:include(java.lang.String[])" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>include</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>...</classname> includes)</title><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></section><section id="org.gradle.api.tasks.scala.ScalaCompile:include(org.gradle.api.specs.Spec)" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>include</literal>(<classname><apilink class="org.gradle.api.specs.Spec"/>&lt;<apilink class="org.gradle.api.file.FileTreeElement"/>&gt;</classname> includeSpec)</title><para>Adds an include spec. This method may be called multiple times to append new specs.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></section><section id="org.gradle.api.tasks.scala.ScalaCompile:source(java.lang.Object[])" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>source</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink>...</classname> sources)</title><para>Adds some source to this task. The given source objects will be evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/>.</para></section></section></chapter><chapter id="org.gradle.api.tasks.scala.ScalaDoc"><title>ScalaDoc</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.tasks.scala.ScalaDoc" style="javadoc"/></seg></seglistitem></segmentedlist><para>Generates HTML API documentation for Scala source files.</para><section><title>Properties</title><table><title>Properties - ScalaDoc</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.tasks.scala.ScalaDoc:classpath"><literal>classpath</literal></link></td><td><para>The classpath to use to locate classes referenced by the documented source.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.scala.ScalaDoc:compilationOutputs"><literal>compilationOutputs</literal></link></td><td><para>The compilation outputs produced by the sources that are generating Scaladoc.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.scala.ScalaDoc:destinationDir"><literal>destinationDir</literal></link></td><td><para>The directory to generate the API documentation into.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.scala.ScalaDoc:excludes"><literal>excludes</literal></link></td><td><para>The set of exclude patterns.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.scala.ScalaDoc:includes"><literal>includes</literal></link></td><td><para>The set of include patterns.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.scala.ScalaDoc:javaLauncher"><literal>javaLauncher</literal></link></td><td><para>A JavaLauncher used to run the Scaladoc tool.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.scala.ScalaDoc:maxMemory"><literal>maxMemory</literal></link></td><td><para>The amount of memory allocated to this task.
Ex. 512m, 1G</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.scala.ScalaDoc:scalaClasspath"><literal>scalaClasspath</literal></link></td><td><para>The classpath to use to load the ScalaDoc tool.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.scala.ScalaDoc:scalaDocOptions"><literal>scalaDocOptions</literal></link></td><td><para>The ScalaDoc generation options.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.scala.ScalaDoc:source"><literal>source</literal></link></td><td><para>The source for this task, after the include and exclude patterns have been applied. Ignores source files which do not exist.

</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.scala.ScalaDoc:title"><literal>title</literal></link></td><td><para>The documentation title.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - ScalaDoc</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.tasks.scala.ScalaDoc:exclude(groovy.lang.Closure)">exclude</link>(excludeSpec)</literal></td><td><para>Adds an exclude spec. This method may be called multiple times to append new specs.The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter. The closure should return true or false. Example:

</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.scala.ScalaDoc:exclude(java.lang.Iterable)">exclude</link>(excludes)</literal></td><td><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.scala.ScalaDoc:exclude(java.lang.String[])">exclude</link>(excludes)</literal></td><td><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.scala.ScalaDoc:exclude(org.gradle.api.specs.Spec)">exclude</link>(excludeSpec)</literal></td><td><para>Adds an exclude spec. This method may be called multiple times to append new specs.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.scala.ScalaDoc:include(groovy.lang.Closure)">include</link>(includeSpec)</literal></td><td><para>Adds an include spec. This method may be called multiple times to append new specs. The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.scala.ScalaDoc:include(java.lang.Iterable)">include</link>(includes)</literal></td><td><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.scala.ScalaDoc:include(java.lang.String[])">include</link>(includes)</literal></td><td><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.scala.ScalaDoc:include(org.gradle.api.specs.Spec)">include</link>(includeSpec)</literal></td><td><para>Adds an include spec. This method may be called multiple times to append new specs.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.scala.ScalaDoc:source(java.lang.Object[])">source</link>(sources)</literal></td><td><para>Adds some source to this task. The given source objects will be evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/>.</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.tasks.scala.ScalaDoc:classpath" role="detail"><title><apilink class="org.gradle.api.file.FileCollection"/> <literal>classpath</literal></title><para>The classpath to use to locate classes referenced by the documented source.</para><segmentedlist><segtitle>Default with <literal>scala</literal> plugin</segtitle><seglistitem><seg><literal>project.sourceSets.main.output + project.sourceSets.main.compileClasspath</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.scala.ScalaDoc:compilationOutputs" role="detail"><title><apilink class="org.gradle.api.file.ConfigurableFileCollection"/> <literal>compilationOutputs</literal> (read-only)</title><para>The compilation outputs produced by the sources that are generating Scaladoc.</para><segmentedlist><segtitle>Default with <literal>scala</literal> plugin</segtitle><seglistitem><seg><literal>project.sourceSets.main.output</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.scala.ScalaDoc:destinationDir" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>destinationDir</literal></title><para>The directory to generate the API documentation into.</para><segmentedlist><segtitle>Default with <literal>scala</literal> plugin</segtitle><seglistitem><seg><literal><replaceable>${project.docsDir}</replaceable>/scaladoc</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.scala.ScalaDoc:excludes" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>excludes</literal></title><para>The set of exclude patterns.</para></section><section id="org.gradle.api.tasks.scala.ScalaDoc:includes" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>includes</literal></title><para>The set of include patterns.</para></section><section id="org.gradle.api.tasks.scala.ScalaDoc:javaLauncher" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<apilink class="org.gradle.jvm.toolchain.JavaLauncher"/>&gt;</classname> <literal>javaLauncher</literal></title><para>A JavaLauncher used to run the Scaladoc tool.</para><segmentedlist><segtitle>Default with <literal>scala</literal> plugin</segtitle><seglistitem><seg><literal>java.toolchain</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.scala.ScalaDoc:maxMemory" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>maxMemory</literal></title><para>The amount of memory allocated to this task.
Ex. 512m, 1G</para><segmentedlist><segtitle>Default with <literal>scala</literal> plugin</segtitle><seglistitem><seg><literal>null</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.scala.ScalaDoc:scalaClasspath" role="detail"><title><apilink class="org.gradle.api.file.FileCollection"/> <literal>scalaClasspath</literal></title><para>The classpath to use to load the ScalaDoc tool.</para><segmentedlist><segtitle>Default with <literal>scala</literal> plugin</segtitle><seglistitem><seg><literal>scala-compiler</literal> dependency matching the <literal>scala-library</literal> version found on <literal>classpath</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.scala.ScalaDoc:scalaDocOptions" role="detail"><title><apilink class="org.gradle.api.tasks.scala.ScalaDocOptions"/> <literal>scalaDocOptions</literal> (read-only)</title><para>The ScalaDoc generation options.</para></section><section id="org.gradle.api.tasks.scala.ScalaDoc:source" role="detail"><title><apilink class="org.gradle.api.file.FileTree"/> <literal>source</literal> (read-only)</title><para>The source for this task, after the include and exclude patterns have been applied. Ignores source files which do not exist.

</para><para>
The <apilink class="org.gradle.api.tasks.PathSensitivity"/> for the sources is configured to be <apilink class="org.gradle.api.tasks.PathSensitivity" method="RELATIVE"/>.
</para><segmentedlist><segtitle>Default with <literal>scala</literal> plugin</segtitle><seglistitem><seg><literal>project.sourceSets.main.scala</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.scala.ScalaDoc:title" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>title</literal></title><para>The documentation title.</para><segmentedlist><segtitle>Default with <literal>scala</literal> plugin</segtitle><seglistitem><seg><literal>project.reporting.apiDocTitle</literal></seg></seglistitem></segmentedlist></section></section><section><title>Method details</title><section id="org.gradle.api.tasks.scala.ScalaDoc:exclude(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>exclude</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> excludeSpec)</title><para>Adds an exclude spec. This method may be called multiple times to append new specs.The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter. The closure should return true or false. Example:

</para><para><programlisting language="java">
copySpec {
  from 'source'
  into 'destination'
  //an example of excluding files from certain configuration:
  exclude { it.file in configurations.someConf.files }
}
</programlisting></para><para>

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.api.tasks.scala.ScalaDoc:exclude(java.lang.Iterable)" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>exclude</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> excludes)</title><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.api.tasks.scala.ScalaDoc:exclude(java.lang.String[])" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>exclude</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>...</classname> excludes)</title><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.api.tasks.scala.ScalaDoc:exclude(org.gradle.api.specs.Spec)" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>exclude</literal>(<classname><apilink class="org.gradle.api.specs.Spec"/>&lt;<apilink class="org.gradle.api.file.FileTreeElement"/>&gt;</classname> excludeSpec)</title><para>Adds an exclude spec. This method may be called multiple times to append new specs.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.api.tasks.scala.ScalaDoc:include(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>include</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> includeSpec)</title><para>Adds an include spec. This method may be called multiple times to append new specs. The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></section><section id="org.gradle.api.tasks.scala.ScalaDoc:include(java.lang.Iterable)" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>include</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> includes)</title><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></section><section id="org.gradle.api.tasks.scala.ScalaDoc:include(java.lang.String[])" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>include</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>...</classname> includes)</title><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></section><section id="org.gradle.api.tasks.scala.ScalaDoc:include(org.gradle.api.specs.Spec)" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>include</literal>(<classname><apilink class="org.gradle.api.specs.Spec"/>&lt;<apilink class="org.gradle.api.file.FileTreeElement"/>&gt;</classname> includeSpec)</title><para>Adds an include spec. This method may be called multiple times to append new specs.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></section><section id="org.gradle.api.tasks.scala.ScalaDoc:source(java.lang.Object[])" role="detail"><title><apilink class="org.gradle.api.tasks.SourceTask"/> <literal>source</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink>...</classname> sources)</title><para>Adds some source to this task. The given source objects will be evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/>.</para></section></section></chapter><chapter id="org.gradle.buildconfiguration.tasks.UpdateDaemonJvm"><title>UpdateDaemonJvm</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.buildconfiguration.tasks.UpdateDaemonJvm" style="javadoc"/></seg></seglistitem></segmentedlist><caution><para>Note: This class is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Generates or updates the Gradle Daemon JVM criteria.

This controls the version of the JVM required to run the Gradle Daemon.</para><section><title>Properties</title><table><title>Properties - UpdateDaemonJvm</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.buildconfiguration.tasks.UpdateDaemonJvm:languageVersion"><literal>languageVersion</literal></link></td><td><caution>Incubating</caution><para>The version of the JVM required to run the Gradle Daemon.
</para></td></tr><tr><td><link linkend="org.gradle.buildconfiguration.tasks.UpdateDaemonJvm:toolchainDownloadUrls"><literal>toolchainDownloadUrls</literal></link></td><td><caution>Incubating</caution><para>The download URLs for the toolchains for the given platforms.
</para></td></tr><tr><td><link linkend="org.gradle.buildconfiguration.tasks.UpdateDaemonJvm:toolchainPlatforms"><literal>toolchainPlatforms</literal></link></td><td><caution>Incubating</caution><para>The set of <apilink class="org.gradle.platform.BuildPlatform"/> for which download links should be generated.
</para></td></tr><tr><td><link linkend="org.gradle.buildconfiguration.tasks.UpdateDaemonJvm:vendor"><literal>vendor</literal></link></td><td><caution>Incubating</caution><para>Configures the vendor spec for the daemon toolchain properties generation.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.buildconfiguration.tasks.UpdateDaemonJvm:languageVersion" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<apilink class="org.gradle.jvm.toolchain.JavaLanguageVersion"/>&gt;</classname> <literal>languageVersion</literal></title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The version of the JVM required to run the Gradle Daemon.
</para><para>
By convention, for the task created on the root project, Gradle will use the JVM version of the current JVM.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg>defaults to current JVM version</seg></seglistitem></segmentedlist></section><section id="org.gradle.buildconfiguration.tasks.UpdateDaemonJvm:toolchainDownloadUrls" role="detail"><title><classname><apilink class="org.gradle.api.provider.MapProperty"/>&lt;<apilink class="org.gradle.platform.BuildPlatform"/>, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/net/URI.html"><classname>URI</classname></ulink>&gt;</classname> <literal>toolchainDownloadUrls</literal></title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The download URLs for the toolchains for the given platforms.
</para><para>
By convention, for the task created on the root project, Gradle will combine the <apilink class="org.gradle.buildconfiguration.tasks.UpdateDaemonJvm" method="getToolchainPlatforms()"/>, <apilink class="org.gradle.buildconfiguration.tasks.UpdateDaemonJvm" method="getLanguageVersion()"/> and <apilink class="org.gradle.buildconfiguration.tasks.UpdateDaemonJvm" method="getVendor()"/>
to resolve download URLs using the configured <apilink class="org.gradle.jvm.toolchain.JavaToolchainRepository"/>.
</para><para>
If the convention applies and no toolchain repositories are defined, an exception will be thrown.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg>defaults to using the toolchain repositories to resolve the platforms configured in <literal>toolchainPlatforms</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.buildconfiguration.tasks.UpdateDaemonJvm:toolchainPlatforms" role="detail"><title><classname><apilink class="org.gradle.api.provider.SetProperty"/>&lt;<apilink class="org.gradle.platform.BuildPlatform"/>&gt;</classname> <literal>toolchainPlatforms</literal></title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The set of <apilink class="org.gradle.platform.BuildPlatform"/> for which download links should be generated.
</para><para>
By convention, for the task created on the root project, Gradle sources those from the combination of all supported <apilink class="org.gradle.platform.OperatingSystem"/>
and the following architectures: <apilink class="org.gradle.platform.Architecture" method="X86_64"/> and <apilink class="org.gradle.platform.Architecture" method="AARCH64"/>.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg>defaults to the combination of <literal>aarch64</literal> and <literal>x86_64</literal> architectures
                    with the following operating systems: <literal>Linux</literal>, <literal>MacOS</literal>, <literal>Windows</literal>, <literal>FreeBSD</literal>, <literal>Solaris</literal> and <literal>Unix</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.buildconfiguration.tasks.UpdateDaemonJvm:vendor" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<apilink class="org.gradle.jvm.toolchain.JvmVendorSpec"/>&gt;</classname> <literal>vendor</literal></title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Configures the vendor spec for the daemon toolchain properties generation.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg>defaults to allowing any JVM vendor</seg></seglistitem></segmentedlist></section></section></chapter><chapter id="org.gradle.buildinit.tasks.InitBuild"><title>InitBuild</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.buildinit.tasks.InitBuild" style="javadoc"/></seg></seglistitem></segmentedlist><para>Generates a Gradle project structure.</para><section><title>Properties</title><table><title>Properties - InitBuild</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.buildinit.tasks.InitBuild:allowFileOverwrite"><literal>allowFileOverwrite</literal></link></td><td><caution>Incubating</caution><para>Should we allow existing files in the build directory to be overwritten?

This property can be set via command-line option '--overwrite'. Defaults to false.</para></td></tr><tr><td><link linkend="org.gradle.buildinit.tasks.InitBuild:comments"><literal>comments</literal></link></td><td><caution>Incubating</caution><para>Should clarifying comments be added to files?
</para></td></tr><tr><td><link linkend="org.gradle.buildinit.tasks.InitBuild:dsl"><literal>dsl</literal></link></td><td><para>The desired DSL of build scripts to create, defaults to 'kotlin'.

This property can be set via command-line option '--dsl'.</para></td></tr><tr><td><link linkend="org.gradle.buildinit.tasks.InitBuild:insecureProtocol"><literal>insecureProtocol</literal></link></td><td><para>How to handle insecure (http) URLs used for Maven Repositories.

This property can be set via command-line option '--insecure-protocol'.  The default value is 'warn'.</para></td></tr><tr><td><link linkend="org.gradle.buildinit.tasks.InitBuild:javaVersion"><literal>javaVersion</literal></link></td><td><caution>Incubating</caution><para>Java version to be used by generated Java projects.

When set, Gradle will use the provided value as the target major Java version
for all relevant generated projects.  Gradle will validate the number to ensure
it is a valid and supported major version.</para></td></tr><tr><td><link linkend="org.gradle.buildinit.tasks.InitBuild:packageName"><literal>packageName</literal></link></td><td><para>The name of the package to use for generated source.

This property can be set via command-line option '--package'.</para></td></tr><tr><td><link linkend="org.gradle.buildinit.tasks.InitBuild:projectName"><literal>projectName</literal></link></td><td><para>The name of the generated project, defaults to the name of the directory the project is generated in.

This property can be set via command-line option '--project-name'.</para></td></tr><tr><td><link linkend="org.gradle.buildinit.tasks.InitBuild:splitProject"><literal>splitProject</literal></link></td><td><para>Should the build be split into multiple subprojects?

This property can be set via the command-line options '--split-project'
and '--no-split-project'.</para></td></tr><tr><td><link linkend="org.gradle.buildinit.tasks.InitBuild:testFramework"><literal>testFramework</literal></link></td><td><para>The test framework to be used in the generated project.

This property can be set via command-line option '--test-framework'</para></td></tr><tr><td><link linkend="org.gradle.buildinit.tasks.InitBuild:type"><literal>type</literal></link></td><td><para>The desired type of project to generate, such as 'java-application' or 'kotlin-library'.
</para></td></tr><tr><td><link linkend="org.gradle.buildinit.tasks.InitBuild:useDefaults"><literal>useDefaults</literal></link></td><td><caution>Incubating</caution><para>Should default values automatically be accepted for options that are not configured explicitly?
</para></td></tr><tr><td><link linkend="org.gradle.buildinit.tasks.InitBuild:useIncubating"><literal>useIncubating</literal></link></td><td><para>Can the generated build use new and unstable features?

When enabled, the generated build will use new patterns, APIs or features that
may be unstable between minor releases. Use this if you'd like to try out the
latest features of Gradle.

By default, init will generate a build that uses stable features and behavior.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.buildinit.tasks.InitBuild:allowFileOverwrite" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html"><classname>Boolean</classname></ulink>&gt;</classname> <literal>allowFileOverwrite</literal></title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Should we allow existing files in the build directory to be overwritten?

This property can be set via command-line option '--overwrite'. Defaults to false.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>defaults to 'false'</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.buildinit.tasks.InitBuild:comments" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html"><classname>Boolean</classname></ulink>&gt;</classname> <literal>comments</literal></title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Should clarifying comments be added to files?
</para><para>
This property can be set via the command-line options '--comments' and '--no-comments'.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>true</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.buildinit.tasks.InitBuild:dsl" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>dsl</literal></title><para>The desired DSL of build scripts to create, defaults to 'kotlin'.

This property can be set via command-line option '--dsl'.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>defaults to 'groovy'</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.buildinit.tasks.InitBuild:insecureProtocol" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<apilink class="org.gradle.buildinit.InsecureProtocolOption"/>&gt;</classname> <literal>insecureProtocol</literal></title><para>How to handle insecure (http) URLs used for Maven Repositories.

This property can be set via command-line option '--insecure-protocol'.  The default value is 'warn'.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>defaults to 'warn'</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.buildinit.tasks.InitBuild:javaVersion" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>javaVersion</literal></title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Java version to be used by generated Java projects.

When set, Gradle will use the provided value as the target major Java version
for all relevant generated projects.  Gradle will validate the number to ensure
it is a valid and supported major version.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg>the Java version running Gradle</seg></seglistitem></segmentedlist></section><section id="org.gradle.buildinit.tasks.InitBuild:packageName" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>packageName</literal></title><para>The name of the package to use for generated source.

This property can be set via command-line option '--package'.</para></section><section id="org.gradle.buildinit.tasks.InitBuild:projectName" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>projectName</literal></title><para>The name of the generated project, defaults to the name of the directory the project is generated in.

This property can be set via command-line option '--project-name'.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>defaults to project directory name</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.buildinit.tasks.InitBuild:splitProject" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html"><classname>Boolean</classname></ulink>&gt;</classname> <literal>splitProject</literal></title><para>Should the build be split into multiple subprojects?

This property can be set via the command-line options '--split-project'
and '--no-split-project'.</para></section><section id="org.gradle.buildinit.tasks.InitBuild:testFramework" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>testFramework</literal></title><para>The test framework to be used in the generated project.

This property can be set via command-line option '--test-framework'</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal><replaceable>empty</replaceable> (default test framework depends on the requested <replaceable>type</replaceable>)</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.buildinit.tasks.InitBuild:type" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>type</literal></title><para>The desired type of project to generate, such as 'java-application' or 'kotlin-library'.
</para><para>
This property can be set via command-line option '--type'.
</para><para>
Defaults to 'basic' - a minimal scaffolding, following Gradle best practices.
If a `pom.xml` is found in the project root directory, the type defaults to 'pom'
and the existing project is converted to Gradle.
</para><para>
Possible values for the option are provided by <apilink class="org.gradle.buildinit.tasks.InitBuild" method="getAvailableBuildTypes()"/>.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal><replaceable>empty</replaceable> (or <replaceable>pom</replaceable> if a pom.xml file exists in the project directory)</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.buildinit.tasks.InitBuild:useDefaults" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html"><classname>Boolean</classname></ulink>&gt;</classname> <literal>useDefaults</literal></title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Should default values automatically be accepted for options that are not configured explicitly?
</para><para>
When true, the interactive dialog is skipped, and no user input is required to complete the command.
</para><para>
This property can be set via the command-line options '--use-defaults' and '--no-use-defaults'.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>false</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.buildinit.tasks.InitBuild:useIncubating" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html"><classname>Boolean</classname></ulink>&gt;</classname> <literal>useIncubating</literal></title><para>Can the generated build use new and unstable features?

When enabled, the generated build will use new patterns, APIs or features that
may be unstable between minor releases. Use this if you'd like to try out the
latest features of Gradle.

By default, init will generate a build that uses stable features and behavior.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>defaults to 'false'</literal></seg></seglistitem></segmentedlist></section></section></chapter><chapter id="org.gradle.plugins.signing.Sign"><title>Sign</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.plugins.signing.Sign" style="javadoc"/></seg></seglistitem></segmentedlist><para>A task for creating digital signature files for one or more; tasks, files, publishable artifacts or configurations.

</para><para>The task produces <apilink class="org.gradle.plugins.signing.Signature"/></para><para> objects that are publishable artifacts and can be assigned to another configuration. </para><para> The signature objects are created with defaults and using this
tasks signatory and signature type.</para><section><title>Properties</title><table><title>Properties - Sign</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.plugins.signing.Sign:signatory"><literal>signatory</literal></link></td><td><para>The signatory for this signing task.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - Sign</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.plugins.signing.Sign:sign(java.io.File[])">sign</link>(files)</literal></td><td><para>Configures the task to sign each of the given files</para></td></tr><tr><td><literal><link linkend="org.gradle.plugins.signing.Sign:sign(java.lang.String, java.io.File[])">sign</link>(classifier, files)</literal></td><td><para>Configures the task to sign each of the given artifacts, using the given classifier as the classifier for the resultant signature publish artifact.</para></td></tr><tr><td><literal><link linkend="org.gradle.plugins.signing.Sign:sign(org.gradle.api.Task[])">sign</link>(tasks)</literal></td><td><para>Configures the task to sign the archive produced for each of the given tasks (which must be archive tasks).</para></td></tr><tr><td><literal><link linkend="org.gradle.plugins.signing.Sign:sign(org.gradle.api.artifacts.Configuration[])">sign</link>(configurations)</literal></td><td><para>Configures the task to sign every artifact of the given configurations</para></td></tr><tr><td><literal><link linkend="org.gradle.plugins.signing.Sign:sign(org.gradle.api.artifacts.PublishArtifact[])">sign</link>(publishArtifacts)</literal></td><td><para>Configures the task to sign each of the given artifacts</para></td></tr><tr><td><literal><link linkend="org.gradle.plugins.signing.Sign:sign(org.gradle.api.publish.Publication[])">sign</link>(publications)</literal></td><td><para>Configures the task to sign every artifact of the given publications</para></td></tr><tr><td><literal><link linkend="org.gradle.plugins.signing.Sign:signatory(org.gradle.plugins.signing.signatory.Signatory)">signatory</link>(signatory)</literal></td><td><para>Changes the signatory of the signatures.</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.plugins.signing.Sign:signatory" role="detail"><title><apilink class="org.gradle.plugins.signing.signatory.Signatory"/> <literal>signatory</literal></title><para>The signatory for this signing task.</para></section></section><section><title>Method details</title><section id="org.gradle.plugins.signing.Sign:sign(java.io.File[])" role="detail"><title><classname>void</classname> <literal>sign</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink>...</classname> files)</title><para>Configures the task to sign each of the given files</para></section><section id="org.gradle.plugins.signing.Sign:sign(java.lang.String, java.io.File[])" role="detail"><title><classname>void</classname> <literal>sign</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> classifier, <classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink>...</classname> files)</title><para>Configures the task to sign each of the given artifacts, using the given classifier as the classifier for the resultant signature publish artifact.</para></section><section id="org.gradle.plugins.signing.Sign:sign(org.gradle.api.Task[])" role="detail"><title><classname>void</classname> <literal>sign</literal>(<classname><apilink class="org.gradle.api.Task"/>...</classname> tasks)</title><para>Configures the task to sign the archive produced for each of the given tasks (which must be archive tasks).</para></section><section id="org.gradle.plugins.signing.Sign:sign(org.gradle.api.artifacts.Configuration[])" role="detail"><title><classname>void</classname> <literal>sign</literal>(<classname><apilink class="org.gradle.api.artifacts.Configuration"/>...</classname> configurations)</title><para>Configures the task to sign every artifact of the given configurations</para></section><section id="org.gradle.plugins.signing.Sign:sign(org.gradle.api.artifacts.PublishArtifact[])" role="detail"><title><classname>void</classname> <literal>sign</literal>(<classname><apilink class="org.gradle.api.artifacts.PublishArtifact"/>...</classname> publishArtifacts)</title><para>Configures the task to sign each of the given artifacts</para></section><section id="org.gradle.plugins.signing.Sign:sign(org.gradle.api.publish.Publication[])" role="detail"><title><classname>void</classname> <literal>sign</literal>(<classname><apilink class="org.gradle.api.publish.Publication"/>...</classname> publications)</title><para>Configures the task to sign every artifact of the given publications</para></section><section id="org.gradle.plugins.signing.Sign:signatory(org.gradle.plugins.signing.signatory.Signatory)" role="detail"><title><classname>void</classname> <literal>signatory</literal>(<apilink class="org.gradle.plugins.signing.signatory.Signatory"/> signatory)</title><para>Changes the signatory of the signatures.</para></section></section></chapter><chapter id="org.gradle.api.tasks.Sync"><title>Sync</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.tasks.Sync" style="javadoc"/></seg></seglistitem></segmentedlist><para>Synchronizes the contents of a destination directory with some source directories and files.

</para><para>
This task is like the <apilink class="org.gradle.api.tasks.Copy"/> task, except the destination directory will only contain the files
copied. All files that exist in the destination directory will be deleted before copying files, unless
a <apilink class="org.gradle.api.tasks.Sync" method="preserve(org.gradle.api.Action)"/> is specified.

</para><para>
Examples:
</para><programlisting language="java">

// Sync can be used like a Copy task
// See the Copy documentation for more examples
task syncDependencies(type: Sync) {
    from 'my/shared/dependencyDir'
    into 'build/deps/compile'
}

// You can preserve output that already exists in the
// destination directory. Files matching the preserve
// filter will not be deleted.
task sync(type: Sync) {
    from 'source'
    into 'dest'
    preserve {
        include 'extraDir/**'
        include 'dir1/**'
        exclude 'dir1/extra.txt'
    }
}
</programlisting><section><title>Properties</title><table><title>Properties - Sync</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.tasks.Sync:caseSensitive"><literal>caseSensitive</literal></link></td><td><para>Specifies whether case-sensitive pattern matching should be used.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.Sync:destinationDir"><literal>destinationDir</literal></link></td><td><para>The directory to copy files into.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.Sync:dirPermissions"><literal>dirPermissions</literal></link></td><td><para>Property for querying and configuring directory access permissions.
If the property has no value set, that means that existing permissions are preserved.
It is dependent on the copy action implementation whether these permissions will actually be applied.

For details see <apilink class="org.gradle.api.file.ConfigurableFilePermissions"/>.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.Sync:duplicatesStrategy"><literal>duplicatesStrategy</literal></link></td><td><para>The strategy to use when trying to copy more than one file to the same destination.
</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.Sync:excludes"><literal>excludes</literal></link></td><td><para>The set of exclude patterns.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.Sync:filePermissions"><literal>filePermissions</literal></link></td><td><para>Property for querying and configuring file access permissions.
If the property has no value set, that means that existing permissions are preserved.
It is dependent on the copy action implementation whether these permissions will actually be applied.

For details see <apilink class="org.gradle.api.file.ConfigurableFilePermissions"/>.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.Sync:includeEmptyDirs"><literal>includeEmptyDirs</literal></link></td><td><para>Tells if empty target directories will be included in the copy.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.Sync:includes"><literal>includes</literal></link></td><td><para>The set of include patterns.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.Sync:preserve"><literal>preserve</literal></link></td><td><para>The filter that defines which files to preserve in the destination directory.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.Sync:source"><literal>source</literal></link></td><td><para>The source files for this task.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - Sync</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.tasks.Sync:eachFile(groovy.lang.Closure)">eachFile</link>(closure)</literal></td><td><para>Adds an action to be applied to each file as it about to be copied into its destination. The given closure is
called with a <apilink class="org.gradle.api.file.FileCopyDetails"/> as its parameter. Actions are executed in the order
added, and are inherited from the parent spec.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.Sync:eachFile(org.gradle.api.Action)">eachFile</link>(action)</literal></td><td><para>Adds an action to be applied to each file as it is about to be copied into its destination. The action can change
the destination path of the file, filter the contents of the file, or exclude the file from the result entirely.
Actions are executed in the order added, and are inherited from the parent spec.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.Sync:exclude(groovy.lang.Closure)">exclude</link>(excludeSpec)</literal></td><td><para>Adds an exclude spec. This method may be called multiple times to append new specs.The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter. The closure should return true or false. Example:

</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.Sync:exclude(java.lang.Iterable)">exclude</link>(excludes)</literal></td><td><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.Sync:exclude(java.lang.String[])">exclude</link>(excludes)</literal></td><td><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.Sync:exclude(org.gradle.api.specs.Spec)">exclude</link>(excludeSpec)</literal></td><td><para>Adds an exclude spec. This method may be called multiple times to append new specs.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.Sync:expand(java.util.Map)">expand</link>(properties)</literal></td><td><para>Expands property references in each file as it is copied. More specifically, each file is transformed using
Groovy's <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/text/SimpleTemplateEngine.html"><classname>SimpleTemplateEngine</classname></ulink>. This means you can use simple property references, such as
<literal>$property</literal> or <literal>${property}</literal> in the file. You can also include arbitrary Groovy code in the
file, such as <literal>${version ?: 'unknown'}</literal> or <literal>${classpath*.name.join(' ')}</literal>
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.Sync:expand(java.util.Map, org.gradle.api.Action)">expand</link>(properties, action)</literal></td><td><para>Expands property references in each file as it is copied. More specifically, each file is transformed using
Groovy's <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/text/SimpleTemplateEngine.html"><classname>SimpleTemplateEngine</classname></ulink>. This means you can use simple property references, such as
<literal>$property</literal> or <literal>${property}</literal> in the file. You can also include arbitrary Groovy code in the
file, such as <literal>${version ?: 'unknown'}</literal> or <literal>${classpath*.name.join(' ')}</literal>. The template
engine can be configured with the provided action.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.Sync:filesMatching(java.lang.Iterable, org.gradle.api.Action)">filesMatching</link>(patterns, action)</literal></td><td><para>Configure the <apilink class="org.gradle.api.file.FileCopyDetails"/> for each file whose path matches any of the specified Ant-style patterns.
This is equivalent to using eachFile() and selectively applying a configuration based on the file's path.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.Sync:filesMatching(java.lang.String, org.gradle.api.Action)">filesMatching</link>(pattern, action)</literal></td><td><para>Configure the <apilink class="org.gradle.api.file.FileCopyDetails"/> for each file whose path matches the specified Ant-style pattern.
This is equivalent to using eachFile() and selectively applying a configuration based on the file's path.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.Sync:filesNotMatching(java.lang.Iterable, org.gradle.api.Action)">filesNotMatching</link>(patterns, action)</literal></td><td><para>Configure the <apilink class="org.gradle.api.file.FileCopyDetails"/> for each file whose path does not match any of the specified
Ant-style patterns. This is equivalent to using eachFile() and selectively applying a configuration based on the
file's path.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.Sync:filesNotMatching(java.lang.String, org.gradle.api.Action)">filesNotMatching</link>(pattern, action)</literal></td><td><para>Configure the <apilink class="org.gradle.api.file.FileCopyDetails"/> for each file whose path does not match the specified
Ant-style pattern. This is equivalent to using eachFile() and selectively applying a configuration based on the
file's path.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.Sync:filter(groovy.lang.Closure)">filter</link>(closure)</literal></td><td><para>Adds a content filter based on the provided closure.  The Closure will be called with each line (stripped of line
endings) and should return a String to replace the line or <literal>null</literal> to remove the line.  If every line is
removed, the result will be an empty file, not an absent one.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.Sync:filter(java.lang.Class)">filter</link>(filterType)</literal></td><td><para>Adds a content filter to be used during the copy.  Multiple calls to filter, add additional filters to the
filter chain.  Each filter should implement <literal>java.io.FilterReader</literal>. Include <literal>org.apache.tools.ant.filters.*</literal> for access to all the standard Ant filters.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.Sync:filter(java.util.Map, java.lang.Class)">filter</link>(properties, filterType)</literal></td><td><para>Adds a content filter to be used during the copy.  Multiple calls to filter, add additional filters to the
filter chain.  Each filter should implement <literal>java.io.FilterReader</literal>. Include <literal>org.apache.tools.ant.filters.*</literal> for access to all the standard Ant filters.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.Sync:filter(org.gradle.api.Transformer)">filter</link>(transformer)</literal></td><td><para>Adds a content filter based on the provided transformer.  The Closure will be called with each line (stripped of line
endings) and should return a String to replace the line or <literal>null</literal> to remove the line.  If every line is
removed, the result will be an empty file, not an absent one.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.Sync:from(java.lang.Object, groovy.lang.Closure)">from</link>(sourcePath, c)</literal></td><td><para>Specifies the source files or directories for a copy and creates a child <literal>CopySourceSpec</literal>. The given source
path is evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/> .</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.Sync:from(java.lang.Object, org.gradle.api.Action)">from</link>(sourcePath, configureAction)</literal></td><td><para>Specifies the source files or directories for a copy and creates a child <literal>CopySpec</literal>. The given source
path is evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/> .</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.Sync:from(java.lang.Object[])">from</link>(sourcePaths)</literal></td><td><para>Specifies source files or directories for a copy. The given paths are evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/>.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.Sync:include(groovy.lang.Closure)">include</link>(includeSpec)</literal></td><td><para>Adds an include spec. This method may be called multiple times to append new specs. The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.Sync:include(java.lang.Iterable)">include</link>(includes)</literal></td><td><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.Sync:include(java.lang.String[])">include</link>(includes)</literal></td><td><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.Sync:include(org.gradle.api.specs.Spec)">include</link>(includeSpec)</literal></td><td><para>Adds an include spec. This method may be called multiple times to append new specs.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.Sync:into(java.lang.Object)">into</link>(destDir)</literal></td><td><para>Specifies the destination directory for a copy. The destination is evaluated as per <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/>.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.Sync:into(java.lang.Object, groovy.lang.Closure)">into</link>(destPath, configureClosure)</literal></td><td><para>Creates and configures a child <literal>CopySpec</literal> with the given destination path.
The destination is evaluated as per <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/>.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.Sync:into(java.lang.Object, org.gradle.api.Action)">into</link>(destPath, copySpec)</literal></td><td><para>Creates and configures a child <literal>CopySpec</literal> with the given destination path.
The destination is evaluated as per <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/>.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.Sync:preserve(org.gradle.api.Action)">preserve</link>(action)</literal></td><td><para>Configures the filter that defines which files to preserve in the destination directory.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.Sync:rename(groovy.lang.Closure)">rename</link>(closure)</literal></td><td><para>Renames a source file. The closure will be called with a single parameter, the name of the file.
The closure should return a String object with a new target name. The closure may return null,
in which case the original name will be used.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.Sync:rename(java.lang.String, java.lang.String)">rename</link>(sourceRegEx, replaceWith)</literal></td><td><para>Renames files based on a regular expression.  Uses java.util.regex type of regular expressions.  Note that the
replace string should use the '$1' syntax to refer to capture groups in the source regular expression.  Files
that do not match the source regular expression will be copied with the original name.

</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.Sync:rename(java.util.regex.Pattern, java.lang.String)">rename</link>(sourceRegEx, replaceWith)</literal></td><td><para>Renames files based on a regular expression. See <apilink class="org.gradle.api.file.CopyProcessingSpec" method="rename(java.lang.String, java.lang.String)"/>.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.Sync:rename(org.gradle.api.Transformer)">rename</link>(renamer)</literal></td><td><para>Renames a source file. The function will be called with a single parameter, the name of the file.
The function should return a new target name. The function may return null,
in which case the original name will be used.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.Sync:with(org.gradle.api.file.CopySpec[])">with</link>(sourceSpecs)</literal></td><td><para>Adds the given specs as a child of this spec.

</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.tasks.Sync:caseSensitive" role="detail"><title><classname>boolean</classname> <literal>caseSensitive</literal></title><para>Specifies whether case-sensitive pattern matching should be used.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>true</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.Sync:destinationDir" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>destinationDir</literal></title><para>The directory to copy files into.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>null</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.Sync:dirPermissions" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<apilink class="org.gradle.api.file.ConfigurableFilePermissions"/>&gt;</classname> <literal>dirPermissions</literal></title><para>Property for querying and configuring directory access permissions.
If the property has no value set, that means that existing permissions are preserved.
It is dependent on the copy action implementation whether these permissions will actually be applied.

For details see <apilink class="org.gradle.api.file.ConfigurableFilePermissions"/>.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>null</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.Sync:duplicatesStrategy" role="detail"><title><apilink class="org.gradle.api.file.DuplicatesStrategy"/> <literal>duplicatesStrategy</literal></title><para>The strategy to use when trying to copy more than one file to the same destination.
</para><para>
The value can be set with a case insensitive string of the enum value (e.g. <literal>'exclude'</literal> for <apilink class="org.gradle.api.file.DuplicatesStrategy" method="EXCLUDE"/>).
</para><para>
This strategy can be overridden for individual files by using <apilink class="org.gradle.api.file.CopySpec" method="eachFile(org.gradle.api.Action)"/> or <apilink class="org.gradle.api.file.CopySpec" method="filesMatching(java.lang.String, org.gradle.api.Action)"/>.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>DuplicatesStrategy.INHERIT</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.Sync:excludes" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>excludes</literal></title><para>The set of exclude patterns.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>[]</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.Sync:filePermissions" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<apilink class="org.gradle.api.file.ConfigurableFilePermissions"/>&gt;</classname> <literal>filePermissions</literal></title><para>Property for querying and configuring file access permissions.
If the property has no value set, that means that existing permissions are preserved.
It is dependent on the copy action implementation whether these permissions will actually be applied.

For details see <apilink class="org.gradle.api.file.ConfigurableFilePermissions"/>.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>null</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.Sync:includeEmptyDirs" role="detail"><title><classname>boolean</classname> <literal>includeEmptyDirs</literal></title><para>Tells if empty target directories will be included in the copy.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>true</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.Sync:includes" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>includes</literal></title><para>The set of include patterns.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>[]</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.Sync:preserve" role="detail"><title><apilink class="org.gradle.api.tasks.util.PatternFilterable"/> <literal>preserve</literal> (read-only)</title><para>The filter that defines which files to preserve in the destination directory.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>empty</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.Sync:source" role="detail"><title><apilink class="org.gradle.api.file.FileCollection"/> <literal>source</literal> (read-only)</title><para>The source files for this task.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>[]</literal></seg></seglistitem></segmentedlist></section></section><section><title>Method details</title><section id="org.gradle.api.tasks.Sync:eachFile(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>eachFile</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> closure)</title><para>Adds an action to be applied to each file as it about to be copied into its destination. The given closure is
called with a <apilink class="org.gradle.api.file.FileCopyDetails"/> as its parameter. Actions are executed in the order
added, and are inherited from the parent spec.</para></section><section id="org.gradle.api.tasks.Sync:eachFile(org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>eachFile</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.FileCopyDetails"/>&gt;</classname> action)</title><para>Adds an action to be applied to each file as it is about to be copied into its destination. The action can change
the destination path of the file, filter the contents of the file, or exclude the file from the result entirely.
Actions are executed in the order added, and are inherited from the parent spec.</para></section><section id="org.gradle.api.tasks.Sync:exclude(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>exclude</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> excludeSpec)</title><para>Adds an exclude spec. This method may be called multiple times to append new specs.The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter. The closure should return true or false. Example:

</para><para><programlisting language="java">
copySpec {
  from 'source'
  into 'destination'
  //an example of excluding files from certain configuration:
  exclude { it.file in configurations.someConf.files }
}
</programlisting></para><para>

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.api.tasks.Sync:exclude(java.lang.Iterable)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>exclude</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> excludes)</title><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.api.tasks.Sync:exclude(java.lang.String[])" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>exclude</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>...</classname> excludes)</title><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.api.tasks.Sync:exclude(org.gradle.api.specs.Spec)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>exclude</literal>(<classname><apilink class="org.gradle.api.specs.Spec"/>&lt;<apilink class="org.gradle.api.file.FileTreeElement"/>&gt;</classname> excludeSpec)</title><para>Adds an exclude spec. This method may be called multiple times to append new specs.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.api.tasks.Sync:expand(java.util.Map)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>expand</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, ?&gt;</classname> properties)</title><para>Expands property references in each file as it is copied. More specifically, each file is transformed using
Groovy's <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/text/SimpleTemplateEngine.html"><classname>SimpleTemplateEngine</classname></ulink>. This means you can use simple property references, such as
<literal>$property</literal> or <literal>${property}</literal> in the file. You can also include arbitrary Groovy code in the
file, such as <literal>${version ?: 'unknown'}</literal> or <literal>${classpath*.name.join(' ')}</literal>
</para><para>
Note that all escape sequences (<literal>\n</literal>, <literal>\t</literal>, <literal>\\</literal>, etc) are converted to the symbols
they represent, so, for example, <literal>\n</literal> becomes newline. If this is undesirable then <apilink class="org.gradle.api.file.ContentFilterable" method="expand(java.util.Map, org.gradle.api.Action)"/>
should be used to disable this behavior.</para></section><section id="org.gradle.api.tasks.Sync:expand(java.util.Map, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>expand</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, ?&gt;</classname> properties, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.ExpandDetails"/>&gt;</classname> action)</title><para>Expands property references in each file as it is copied. More specifically, each file is transformed using
Groovy's <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/text/SimpleTemplateEngine.html"><classname>SimpleTemplateEngine</classname></ulink>. This means you can use simple property references, such as
<literal>$property</literal> or <literal>${property}</literal> in the file. You can also include arbitrary Groovy code in the
file, such as <literal>${version ?: 'unknown'}</literal> or <literal>${classpath*.name.join(' ')}</literal>. The template
engine can be configured with the provided action.
</para><para>
Note that by default all escape sequences (<literal>\n</literal>, <literal>\t</literal>, <literal>\\</literal>, etc) are converted to the symbols
they represent, so, for example, <literal>\n</literal> becomes newline. This behavior is controlled by
<apilink class="org.gradle.api.file.ExpandDetails" method="getEscapeBackslash()"/> property. It should be set to <literal>true</literal> to disable escape sequences
conversion:
</para><para><programlisting language="java">
 expand(one: '1', two: 2) {
     escapeBackslash = true
 }
</programlisting></para></section><section id="org.gradle.api.tasks.Sync:filesMatching(java.lang.Iterable, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>filesMatching</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> patterns, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.FileCopyDetails"/>&gt;</classname> action)</title><para>Configure the <apilink class="org.gradle.api.file.FileCopyDetails"/> for each file whose path matches any of the specified Ant-style patterns.
This is equivalent to using eachFile() and selectively applying a configuration based on the file's path.</para></section><section id="org.gradle.api.tasks.Sync:filesMatching(java.lang.String, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>filesMatching</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> pattern, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.FileCopyDetails"/>&gt;</classname> action)</title><para>Configure the <apilink class="org.gradle.api.file.FileCopyDetails"/> for each file whose path matches the specified Ant-style pattern.
This is equivalent to using eachFile() and selectively applying a configuration based on the file's path.</para></section><section id="org.gradle.api.tasks.Sync:filesNotMatching(java.lang.Iterable, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>filesNotMatching</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> patterns, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.FileCopyDetails"/>&gt;</classname> action)</title><para>Configure the <apilink class="org.gradle.api.file.FileCopyDetails"/> for each file whose path does not match any of the specified
Ant-style patterns. This is equivalent to using eachFile() and selectively applying a configuration based on the
file's path.</para></section><section id="org.gradle.api.tasks.Sync:filesNotMatching(java.lang.String, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>filesNotMatching</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> pattern, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.FileCopyDetails"/>&gt;</classname> action)</title><para>Configure the <apilink class="org.gradle.api.file.FileCopyDetails"/> for each file whose path does not match the specified
Ant-style pattern. This is equivalent to using eachFile() and selectively applying a configuration based on the
file's path.</para></section><section id="org.gradle.api.tasks.Sync:filter(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>filter</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> closure)</title><para>Adds a content filter based on the provided closure.  The Closure will be called with each line (stripped of line
endings) and should return a String to replace the line or <literal>null</literal> to remove the line.  If every line is
removed, the result will be an empty file, not an absent one.</para></section><section id="org.gradle.api.tasks.Sync:filter(java.lang.Class)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>filter</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html"><classname>Class</classname></ulink>&lt;? extends <ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/FilterReader.html"><classname>FilterReader</classname></ulink>&gt;</classname> filterType)</title><para>Adds a content filter to be used during the copy.  Multiple calls to filter, add additional filters to the
filter chain.  Each filter should implement <literal>java.io.FilterReader</literal>. Include <literal>org.apache.tools.ant.filters.*</literal> for access to all the standard Ant filters.</para><para> Examples:
</para><para><programlisting language="java">
   filter(StripJavaComments)
   filter(com.mycompany.project.CustomFilter)
</programlisting></para></section><section id="org.gradle.api.tasks.Sync:filter(java.util.Map, java.lang.Class)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>filter</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, ?&gt;</classname> properties, <classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html"><classname>Class</classname></ulink>&lt;? extends <ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/FilterReader.html"><classname>FilterReader</classname></ulink>&gt;</classname> filterType)</title><para>Adds a content filter to be used during the copy.  Multiple calls to filter, add additional filters to the
filter chain.  Each filter should implement <literal>java.io.FilterReader</literal>. Include <literal>org.apache.tools.ant.filters.*</literal> for access to all the standard Ant filters.</para><para>Filter properties may be specified using groovy map syntax.</para><para> Examples:
</para><para><programlisting language="java">
   filter(HeadFilter, lines:25, skip:2)
   filter(ReplaceTokens, tokens:[copyright:'2009', version:'2.3.1'])
</programlisting></para></section><section id="org.gradle.api.tasks.Sync:filter(org.gradle.api.Transformer)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>filter</literal>(<classname><apilink class="org.gradle.api.Transformer"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> transformer)</title><para>Adds a content filter based on the provided transformer.  The Closure will be called with each line (stripped of line
endings) and should return a String to replace the line or <literal>null</literal> to remove the line.  If every line is
removed, the result will be an empty file, not an absent one.</para></section><section id="org.gradle.api.tasks.Sync:from(java.lang.Object, groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>from</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> sourcePath, <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> c)</title><para>Specifies the source files or directories for a copy and creates a child <literal>CopySourceSpec</literal>. The given source
path is evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/> .</para></section><section id="org.gradle.api.tasks.Sync:from(java.lang.Object, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>from</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> sourcePath, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.CopySpec"/>&gt;</classname> configureAction)</title><para>Specifies the source files or directories for a copy and creates a child <literal>CopySpec</literal>. The given source
path is evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/> .</para></section><section id="org.gradle.api.tasks.Sync:from(java.lang.Object[])" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>from</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink>...</classname> sourcePaths)</title><para>Specifies source files or directories for a copy. The given paths are evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/>.</para></section><section id="org.gradle.api.tasks.Sync:include(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>include</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> includeSpec)</title><para>Adds an include spec. This method may be called multiple times to append new specs. The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></section><section id="org.gradle.api.tasks.Sync:include(java.lang.Iterable)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>include</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> includes)</title><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></section><section id="org.gradle.api.tasks.Sync:include(java.lang.String[])" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>include</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>...</classname> includes)</title><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></section><section id="org.gradle.api.tasks.Sync:include(org.gradle.api.specs.Spec)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>include</literal>(<classname><apilink class="org.gradle.api.specs.Spec"/>&lt;<apilink class="org.gradle.api.file.FileTreeElement"/>&gt;</classname> includeSpec)</title><para>Adds an include spec. This method may be called multiple times to append new specs.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></section><section id="org.gradle.api.tasks.Sync:into(java.lang.Object)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>into</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> destDir)</title><para>Specifies the destination directory for a copy. The destination is evaluated as per <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/>.</para></section><section id="org.gradle.api.tasks.Sync:into(java.lang.Object, groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>into</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> destPath, <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> configureClosure)</title><para>Creates and configures a child <literal>CopySpec</literal> with the given destination path.
The destination is evaluated as per <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/>.</para></section><section id="org.gradle.api.tasks.Sync:into(java.lang.Object, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.file.CopySpec"/> <literal>into</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> destPath, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.CopySpec"/>&gt;</classname> copySpec)</title><para>Creates and configures a child <literal>CopySpec</literal> with the given destination path.
The destination is evaluated as per <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/>.</para></section><section id="org.gradle.api.tasks.Sync:preserve(org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.tasks.Sync"/> <literal>preserve</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.tasks.util.PatternFilterable"/>&gt;</classname> action)</title><para>Configures the filter that defines which files to preserve in the destination directory.</para></section><section id="org.gradle.api.tasks.Sync:rename(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>rename</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> closure)</title><para>Renames a source file. The closure will be called with a single parameter, the name of the file.
The closure should return a String object with a new target name. The closure may return null,
in which case the original name will be used.</para></section><section id="org.gradle.api.tasks.Sync:rename(java.lang.String, java.lang.String)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>rename</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> sourceRegEx, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> replaceWith)</title><para>Renames files based on a regular expression.  Uses java.util.regex type of regular expressions.  Note that the
replace string should use the '$1' syntax to refer to capture groups in the source regular expression.  Files
that do not match the source regular expression will be copied with the original name.

</para><para> Example:
</para><para><programlisting language="java">
rename '(.*)_OEM_BLUE_(.*)', '$1$2'
</programlisting></para><para>
would map the file 'style_OEM_BLUE_.css' to 'style.css'</para></section><section id="org.gradle.api.tasks.Sync:rename(java.util.regex.Pattern, java.lang.String)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>rename</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html"><classname>Pattern</classname></ulink> sourceRegEx, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> replaceWith)</title><para>Renames files based on a regular expression. See <apilink class="org.gradle.api.file.CopyProcessingSpec" method="rename(java.lang.String, java.lang.String)"/>.</para></section><section id="org.gradle.api.tasks.Sync:rename(org.gradle.api.Transformer)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>rename</literal>(<classname><apilink class="org.gradle.api.Transformer"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> renamer)</title><para>Renames a source file. The function will be called with a single parameter, the name of the file.
The function should return a new target name. The function may return null,
in which case the original name will be used.</para></section><section id="org.gradle.api.tasks.Sync:with(org.gradle.api.file.CopySpec[])" role="detail"><title><apilink class="org.gradle.api.file.CopySpec"/> <literal>with</literal>(<classname><apilink class="org.gradle.api.file.CopySpec"/>...</classname> sourceSpecs)</title><para>Adds the given specs as a child of this spec.

</para><para><programlisting language="java">
def contentSpec = copySpec {
  from("content") {
    include "**/*.txt"
  }
}

task copy(type: Copy) {
  into "$buildDir/copy"
  with contentSpec
}
</programlisting></para></section></section></chapter><chapter id="org.gradle.api.tasks.bundling.Tar"><title>Tar</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.tasks.bundling.Tar" style="javadoc"/></seg></seglistitem></segmentedlist><para>Assembles a TAR archive.</para><section><title>Properties</title><table><title>Properties - Tar</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.tasks.bundling.Tar:archiveAppendix"><literal>archiveAppendix</literal></link></td><td><para>The appendix part of the archive name, if any.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.bundling.Tar:archiveBaseName"><literal>archiveBaseName</literal></link></td><td><para>The base name of the archive.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.bundling.Tar:archiveClassifier"><literal>archiveClassifier</literal></link></td><td><para>The classifier part of the archive name, if any.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.bundling.Tar:archiveExtension"><literal>archiveExtension</literal></link></td><td><para>The extension part of the archive name.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.bundling.Tar:archiveFile"><literal>archiveFile</literal></link></td><td><para>The <apilink class="org.gradle.api.file.RegularFile"/> where the archive is constructed.
The path is simply the <literal>destinationDirectory</literal> plus the <literal>archiveFileName</literal>.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.bundling.Tar:archiveFileName"><literal>archiveFileName</literal></link></td><td><para>The archive name. If the name has not been explicitly set, the pattern for the name is:
<literal>[archiveBaseName]-[archiveAppendix]-[archiveVersion]-[archiveClassifier].[archiveExtension]</literal></para></td></tr><tr><td><link linkend="org.gradle.api.tasks.bundling.Tar:archiveVersion"><literal>archiveVersion</literal></link></td><td><para>The version part of the archive name.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.bundling.Tar:caseSensitive"><literal>caseSensitive</literal></link></td><td><para>Specifies whether case-sensitive pattern matching should be used.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.bundling.Tar:compression"><literal>compression</literal></link></td><td><para>The compression that is used for this archive.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.bundling.Tar:destinationDirectory"><literal>destinationDirectory</literal></link></td><td><para>The directory where the archive will be placed.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.bundling.Tar:dirPermissions"><literal>dirPermissions</literal></link></td><td><para>Property for querying and configuring directory access permissions.
If the property has no value set, that means that existing permissions are preserved.
It is dependent on the copy action implementation whether these permissions will actually be applied.

For details see <apilink class="org.gradle.api.file.ConfigurableFilePermissions"/>.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.bundling.Tar:duplicatesStrategy"><literal>duplicatesStrategy</literal></link></td><td><para>The strategy to use when trying to copy more than one file to the same destination.
</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.bundling.Tar:excludes"><literal>excludes</literal></link></td><td><para>The set of exclude patterns.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.bundling.Tar:filePermissions"><literal>filePermissions</literal></link></td><td><para>Property for querying and configuring file access permissions.
If the property has no value set, that means that existing permissions are preserved.
It is dependent on the copy action implementation whether these permissions will actually be applied.

For details see <apilink class="org.gradle.api.file.ConfigurableFilePermissions"/>.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.bundling.Tar:includeEmptyDirs"><literal>includeEmptyDirs</literal></link></td><td><para>Tells if empty target directories will be included in the copy.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.bundling.Tar:includes"><literal>includes</literal></link></td><td><para>The set of include patterns.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.bundling.Tar:preserveFileTimestamps"><literal>preserveFileTimestamps</literal></link></td><td><para>Specifies whether file timestamps should be preserved in the archive.
</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.bundling.Tar:reproducibleFileOrder"><literal>reproducibleFileOrder</literal></link></td><td><para>Specifies whether to enforce a reproducible file order when reading files from directories.
</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.bundling.Tar:source"><literal>source</literal></link></td><td><para>The source files for this task.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - Tar</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.Tar:eachFile(groovy.lang.Closure)">eachFile</link>(closure)</literal></td><td><para>Adds an action to be applied to each file as it about to be copied into its destination. The given closure is
called with a <apilink class="org.gradle.api.file.FileCopyDetails"/> as its parameter. Actions are executed in the order
added, and are inherited from the parent spec.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.Tar:eachFile(org.gradle.api.Action)">eachFile</link>(action)</literal></td><td><para>Adds an action to be applied to each file as it is about to be copied into its destination. The action can change
the destination path of the file, filter the contents of the file, or exclude the file from the result entirely.
Actions are executed in the order added, and are inherited from the parent spec.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.Tar:exclude(groovy.lang.Closure)">exclude</link>(excludeSpec)</literal></td><td><para>Adds an exclude spec. This method may be called multiple times to append new specs.The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter. The closure should return true or false. Example:

</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.Tar:exclude(java.lang.Iterable)">exclude</link>(excludes)</literal></td><td><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.Tar:exclude(java.lang.String[])">exclude</link>(excludes)</literal></td><td><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.Tar:exclude(org.gradle.api.specs.Spec)">exclude</link>(excludeSpec)</literal></td><td><para>Adds an exclude spec. This method may be called multiple times to append new specs.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.Tar:expand(java.util.Map)">expand</link>(properties)</literal></td><td><para>Expands property references in each file as it is copied. More specifically, each file is transformed using
Groovy's <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/text/SimpleTemplateEngine.html"><classname>SimpleTemplateEngine</classname></ulink>. This means you can use simple property references, such as
<literal>$property</literal> or <literal>${property}</literal> in the file. You can also include arbitrary Groovy code in the
file, such as <literal>${version ?: 'unknown'}</literal> or <literal>${classpath*.name.join(' ')}</literal>
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.Tar:expand(java.util.Map, org.gradle.api.Action)">expand</link>(properties, action)</literal></td><td><para>Expands property references in each file as it is copied. More specifically, each file is transformed using
Groovy's <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/text/SimpleTemplateEngine.html"><classname>SimpleTemplateEngine</classname></ulink>. This means you can use simple property references, such as
<literal>$property</literal> or <literal>${property}</literal> in the file. You can also include arbitrary Groovy code in the
file, such as <literal>${version ?: 'unknown'}</literal> or <literal>${classpath*.name.join(' ')}</literal>. The template
engine can be configured with the provided action.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.Tar:filesMatching(java.lang.Iterable, org.gradle.api.Action)">filesMatching</link>(patterns, action)</literal></td><td><para>Configure the <apilink class="org.gradle.api.file.FileCopyDetails"/> for each file whose path matches any of the specified Ant-style patterns.
This is equivalent to using eachFile() and selectively applying a configuration based on the file's path.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.Tar:filesMatching(java.lang.String, org.gradle.api.Action)">filesMatching</link>(pattern, action)</literal></td><td><para>Configure the <apilink class="org.gradle.api.file.FileCopyDetails"/> for each file whose path matches the specified Ant-style pattern.
This is equivalent to using eachFile() and selectively applying a configuration based on the file's path.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.Tar:filesNotMatching(java.lang.Iterable, org.gradle.api.Action)">filesNotMatching</link>(patterns, action)</literal></td><td><para>Configure the <apilink class="org.gradle.api.file.FileCopyDetails"/> for each file whose path does not match any of the specified
Ant-style patterns. This is equivalent to using eachFile() and selectively applying a configuration based on the
file's path.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.Tar:filesNotMatching(java.lang.String, org.gradle.api.Action)">filesNotMatching</link>(pattern, action)</literal></td><td><para>Configure the <apilink class="org.gradle.api.file.FileCopyDetails"/> for each file whose path does not match the specified
Ant-style pattern. This is equivalent to using eachFile() and selectively applying a configuration based on the
file's path.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.Tar:filter(groovy.lang.Closure)">filter</link>(closure)</literal></td><td><para>Adds a content filter based on the provided closure.  The Closure will be called with each line (stripped of line
endings) and should return a String to replace the line or <literal>null</literal> to remove the line.  If every line is
removed, the result will be an empty file, not an absent one.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.Tar:filter(java.lang.Class)">filter</link>(filterType)</literal></td><td><para>Adds a content filter to be used during the copy.  Multiple calls to filter, add additional filters to the
filter chain.  Each filter should implement <literal>java.io.FilterReader</literal>. Include <literal>org.apache.tools.ant.filters.*</literal> for access to all the standard Ant filters.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.Tar:filter(java.util.Map, java.lang.Class)">filter</link>(properties, filterType)</literal></td><td><para>Adds a content filter to be used during the copy.  Multiple calls to filter, add additional filters to the
filter chain.  Each filter should implement <literal>java.io.FilterReader</literal>. Include <literal>org.apache.tools.ant.filters.*</literal> for access to all the standard Ant filters.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.Tar:filter(org.gradle.api.Transformer)">filter</link>(transformer)</literal></td><td><para>Adds a content filter based on the provided transformer.  The Closure will be called with each line (stripped of line
endings) and should return a String to replace the line or <literal>null</literal> to remove the line.  If every line is
removed, the result will be an empty file, not an absent one.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.Tar:from(java.lang.Object, groovy.lang.Closure)">from</link>(sourcePath, c)</literal></td><td><para>Specifies the source files or directories for a copy and creates a child <literal>CopySourceSpec</literal>. The given source
path is evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/> .</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.Tar:from(java.lang.Object, org.gradle.api.Action)">from</link>(sourcePath, configureAction)</literal></td><td><para>Specifies the source files or directories for a copy and creates a child <literal>CopySpec</literal>. The given source
path is evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/> .</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.Tar:from(java.lang.Object[])">from</link>(sourcePaths)</literal></td><td><para>Specifies source files or directories for a copy. The given paths are evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/>.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.Tar:include(groovy.lang.Closure)">include</link>(includeSpec)</literal></td><td><para>Adds an include spec. This method may be called multiple times to append new specs. The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.Tar:include(java.lang.Iterable)">include</link>(includes)</literal></td><td><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.Tar:include(java.lang.String[])">include</link>(includes)</literal></td><td><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.Tar:include(org.gradle.api.specs.Spec)">include</link>(includeSpec)</literal></td><td><para>Adds an include spec. This method may be called multiple times to append new specs.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.Tar:into(java.lang.Object)">into</link>(destPath)</literal></td><td><para>Specifies the destination directory *inside* the archive for the files.
The destination is evaluated as per <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/>.
Don't mix it up with <apilink class="org.gradle.api.tasks.bundling.AbstractArchiveTask" method="getDestinationDirectory()"/> which specifies the output directory for the archive.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.Tar:into(java.lang.Object, groovy.lang.Closure)">into</link>(destPath, configureClosure)</literal></td><td><para>Creates and configures a child <literal>CopySpec</literal> with a destination directory *inside* the archive for the files.
The destination is evaluated as per <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/>.
Don't mix it up with <apilink class="org.gradle.api.tasks.bundling.AbstractArchiveTask" method="getDestinationDirectory()"/> which specifies the output directory for the archive.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.Tar:into(java.lang.Object, org.gradle.api.Action)">into</link>(destPath, copySpec)</literal></td><td><para>Creates and configures a child <literal>CopySpec</literal> with a destination directory *inside* the archive for the files.
The destination is evaluated as per <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/>.
Don't mix it up with <apilink class="org.gradle.api.tasks.bundling.AbstractArchiveTask" method="getDestinationDirectory()"/> which specifies the output directory for the archive.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.Tar:rename(groovy.lang.Closure)">rename</link>(closure)</literal></td><td><para>Renames a source file. The closure will be called with a single parameter, the name of the file.
The closure should return a String object with a new target name. The closure may return null,
in which case the original name will be used.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.Tar:rename(java.lang.String, java.lang.String)">rename</link>(sourceRegEx, replaceWith)</literal></td><td><para>Renames files based on a regular expression.  Uses java.util.regex type of regular expressions.  Note that the
replace string should use the '$1' syntax to refer to capture groups in the source regular expression.  Files
that do not match the source regular expression will be copied with the original name.

</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.Tar:rename(java.util.regex.Pattern, java.lang.String)">rename</link>(sourceRegEx, replaceWith)</literal></td><td><para>Renames files based on a regular expression. See <apilink class="org.gradle.api.file.CopyProcessingSpec" method="rename(java.lang.String, java.lang.String)"/>.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.Tar:rename(org.gradle.api.Transformer)">rename</link>(renamer)</literal></td><td><para>Renames a source file. The function will be called with a single parameter, the name of the file.
The function should return a new target name. The function may return null,
in which case the original name will be used.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.Tar:with(org.gradle.api.file.CopySpec[])">with</link>(sourceSpecs)</literal></td><td><para>Adds the given specs as a child of this spec.

</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.tasks.bundling.Tar:archiveAppendix" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>archiveAppendix</literal></title><para>The appendix part of the archive name, if any.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>""</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.bundling.Tar:archiveBaseName" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>archiveBaseName</literal></title><para>The base name of the archive.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>project.base.archivesBaseName</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.bundling.Tar:archiveClassifier" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>archiveClassifier</literal></title><para>The classifier part of the archive name, if any.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>""</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.bundling.Tar:archiveExtension" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>archiveExtension</literal></title><para>The extension part of the archive name.</para></section><section id="org.gradle.api.tasks.bundling.Tar:archiveFile" role="detail"><title><classname><apilink class="org.gradle.api.provider.Provider"/>&lt;<apilink class="org.gradle.api.file.RegularFile"/>&gt;</classname> <literal>archiveFile</literal></title><para>The <apilink class="org.gradle.api.file.RegularFile"/> where the archive is constructed.
The path is simply the <literal>destinationDirectory</literal> plus the <literal>archiveFileName</literal>.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal><replaceable>${destinationDirectory}</replaceable>/<replaceable>${archiveFileName}</replaceable></literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.bundling.Tar:archiveFileName" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>archiveFileName</literal></title><para>The archive name. If the name has not been explicitly set, the pattern for the name is:
<literal>[archiveBaseName]-[archiveAppendix]-[archiveVersion]-[archiveClassifier].[archiveExtension]</literal></para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal><replaceable>${archiveBaseName}</replaceable>-<replaceable>${archiveAppendix}</replaceable>-<replaceable>${archiveVersion}</replaceable>-<replaceable>${archiveClassifier}</replaceable>.<replaceable>${archiveExtension}</replaceable></literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.bundling.Tar:archiveVersion" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>archiveVersion</literal></title><para>The version part of the archive name.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>project.version</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.bundling.Tar:caseSensitive" role="detail"><title><classname>boolean</classname> <literal>caseSensitive</literal></title><para>Specifies whether case-sensitive pattern matching should be used.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>true</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.bundling.Tar:compression" role="detail"><title><apilink class="org.gradle.api.tasks.bundling.Compression"/> <literal>compression</literal></title><para>The compression that is used for this archive.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>Compression.NONE</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.bundling.Tar:destinationDirectory" role="detail"><title><apilink class="org.gradle.api.file.DirectoryProperty"/> <literal>destinationDirectory</literal></title><para>The directory where the archive will be placed.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>project.distsDir</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.bundling.Tar:dirPermissions" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<apilink class="org.gradle.api.file.ConfigurableFilePermissions"/>&gt;</classname> <literal>dirPermissions</literal></title><para>Property for querying and configuring directory access permissions.
If the property has no value set, that means that existing permissions are preserved.
It is dependent on the copy action implementation whether these permissions will actually be applied.

For details see <apilink class="org.gradle.api.file.ConfigurableFilePermissions"/>.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>null</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.bundling.Tar:duplicatesStrategy" role="detail"><title><apilink class="org.gradle.api.file.DuplicatesStrategy"/> <literal>duplicatesStrategy</literal></title><para>The strategy to use when trying to copy more than one file to the same destination.
</para><para>
The value can be set with a case insensitive string of the enum value (e.g. <literal>'exclude'</literal> for <apilink class="org.gradle.api.file.DuplicatesStrategy" method="EXCLUDE"/>).
</para><para>
This strategy can be overridden for individual files by using <apilink class="org.gradle.api.file.CopySpec" method="eachFile(org.gradle.api.Action)"/> or <apilink class="org.gradle.api.file.CopySpec" method="filesMatching(java.lang.String, org.gradle.api.Action)"/>.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>DuplicatesStrategy.INHERIT</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.bundling.Tar:excludes" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>excludes</literal></title><para>The set of exclude patterns.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>[]</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.bundling.Tar:filePermissions" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<apilink class="org.gradle.api.file.ConfigurableFilePermissions"/>&gt;</classname> <literal>filePermissions</literal></title><para>Property for querying and configuring file access permissions.
If the property has no value set, that means that existing permissions are preserved.
It is dependent on the copy action implementation whether these permissions will actually be applied.

For details see <apilink class="org.gradle.api.file.ConfigurableFilePermissions"/>.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>null</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.bundling.Tar:includeEmptyDirs" role="detail"><title><classname>boolean</classname> <literal>includeEmptyDirs</literal></title><para>Tells if empty target directories will be included in the copy.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>true</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.bundling.Tar:includes" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>includes</literal></title><para>The set of include patterns.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>[]</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.bundling.Tar:preserveFileTimestamps" role="detail"><title><classname>boolean</classname> <literal>preserveFileTimestamps</literal></title><para>Specifies whether file timestamps should be preserved in the archive.
</para><para>
If <literal>false</literal> this ensures that archive entries have the same time for builds between different machines, Java versions and operating systems.
</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>true</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.bundling.Tar:reproducibleFileOrder" role="detail"><title><classname>boolean</classname> <literal>reproducibleFileOrder</literal></title><para>Specifies whether to enforce a reproducible file order when reading files from directories.
</para><para>
Gradle will then walk the directories on disk which are part of this archive in a reproducible order
independent of file systems and operating systems.
This helps Gradle reliably produce byte-for-byte reproducible archives.
</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>false</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.bundling.Tar:source" role="detail"><title><apilink class="org.gradle.api.file.FileCollection"/> <literal>source</literal> (read-only)</title><para>The source files for this task.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>[]</literal></seg></seglistitem></segmentedlist></section></section><section><title>Method details</title><section id="org.gradle.api.tasks.bundling.Tar:eachFile(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>eachFile</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> closure)</title><para>Adds an action to be applied to each file as it about to be copied into its destination. The given closure is
called with a <apilink class="org.gradle.api.file.FileCopyDetails"/> as its parameter. Actions are executed in the order
added, and are inherited from the parent spec.</para></section><section id="org.gradle.api.tasks.bundling.Tar:eachFile(org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>eachFile</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.FileCopyDetails"/>&gt;</classname> action)</title><para>Adds an action to be applied to each file as it is about to be copied into its destination. The action can change
the destination path of the file, filter the contents of the file, or exclude the file from the result entirely.
Actions are executed in the order added, and are inherited from the parent spec.</para></section><section id="org.gradle.api.tasks.bundling.Tar:exclude(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>exclude</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> excludeSpec)</title><para>Adds an exclude spec. This method may be called multiple times to append new specs.The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter. The closure should return true or false. Example:

</para><para><programlisting language="java">
copySpec {
  from 'source'
  into 'destination'
  //an example of excluding files from certain configuration:
  exclude { it.file in configurations.someConf.files }
}
</programlisting></para><para>

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.api.tasks.bundling.Tar:exclude(java.lang.Iterable)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>exclude</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> excludes)</title><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.api.tasks.bundling.Tar:exclude(java.lang.String[])" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>exclude</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>...</classname> excludes)</title><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.api.tasks.bundling.Tar:exclude(org.gradle.api.specs.Spec)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>exclude</literal>(<classname><apilink class="org.gradle.api.specs.Spec"/>&lt;<apilink class="org.gradle.api.file.FileTreeElement"/>&gt;</classname> excludeSpec)</title><para>Adds an exclude spec. This method may be called multiple times to append new specs.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.api.tasks.bundling.Tar:expand(java.util.Map)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>expand</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, ?&gt;</classname> properties)</title><para>Expands property references in each file as it is copied. More specifically, each file is transformed using
Groovy's <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/text/SimpleTemplateEngine.html"><classname>SimpleTemplateEngine</classname></ulink>. This means you can use simple property references, such as
<literal>$property</literal> or <literal>${property}</literal> in the file. You can also include arbitrary Groovy code in the
file, such as <literal>${version ?: 'unknown'}</literal> or <literal>${classpath*.name.join(' ')}</literal>
</para><para>
Note that all escape sequences (<literal>\n</literal>, <literal>\t</literal>, <literal>\\</literal>, etc) are converted to the symbols
they represent, so, for example, <literal>\n</literal> becomes newline. If this is undesirable then <apilink class="org.gradle.api.file.ContentFilterable" method="expand(java.util.Map, org.gradle.api.Action)"/>
should be used to disable this behavior.</para></section><section id="org.gradle.api.tasks.bundling.Tar:expand(java.util.Map, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>expand</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, ?&gt;</classname> properties, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.ExpandDetails"/>&gt;</classname> action)</title><para>Expands property references in each file as it is copied. More specifically, each file is transformed using
Groovy's <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/text/SimpleTemplateEngine.html"><classname>SimpleTemplateEngine</classname></ulink>. This means you can use simple property references, such as
<literal>$property</literal> or <literal>${property}</literal> in the file. You can also include arbitrary Groovy code in the
file, such as <literal>${version ?: 'unknown'}</literal> or <literal>${classpath*.name.join(' ')}</literal>. The template
engine can be configured with the provided action.
</para><para>
Note that by default all escape sequences (<literal>\n</literal>, <literal>\t</literal>, <literal>\\</literal>, etc) are converted to the symbols
they represent, so, for example, <literal>\n</literal> becomes newline. This behavior is controlled by
<apilink class="org.gradle.api.file.ExpandDetails" method="getEscapeBackslash()"/> property. It should be set to <literal>true</literal> to disable escape sequences
conversion:
</para><para><programlisting language="java">
 expand(one: '1', two: 2) {
     escapeBackslash = true
 }
</programlisting></para></section><section id="org.gradle.api.tasks.bundling.Tar:filesMatching(java.lang.Iterable, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>filesMatching</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> patterns, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.FileCopyDetails"/>&gt;</classname> action)</title><para>Configure the <apilink class="org.gradle.api.file.FileCopyDetails"/> for each file whose path matches any of the specified Ant-style patterns.
This is equivalent to using eachFile() and selectively applying a configuration based on the file's path.</para></section><section id="org.gradle.api.tasks.bundling.Tar:filesMatching(java.lang.String, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>filesMatching</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> pattern, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.FileCopyDetails"/>&gt;</classname> action)</title><para>Configure the <apilink class="org.gradle.api.file.FileCopyDetails"/> for each file whose path matches the specified Ant-style pattern.
This is equivalent to using eachFile() and selectively applying a configuration based on the file's path.</para></section><section id="org.gradle.api.tasks.bundling.Tar:filesNotMatching(java.lang.Iterable, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>filesNotMatching</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> patterns, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.FileCopyDetails"/>&gt;</classname> action)</title><para>Configure the <apilink class="org.gradle.api.file.FileCopyDetails"/> for each file whose path does not match any of the specified
Ant-style patterns. This is equivalent to using eachFile() and selectively applying a configuration based on the
file's path.</para></section><section id="org.gradle.api.tasks.bundling.Tar:filesNotMatching(java.lang.String, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>filesNotMatching</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> pattern, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.FileCopyDetails"/>&gt;</classname> action)</title><para>Configure the <apilink class="org.gradle.api.file.FileCopyDetails"/> for each file whose path does not match the specified
Ant-style pattern. This is equivalent to using eachFile() and selectively applying a configuration based on the
file's path.</para></section><section id="org.gradle.api.tasks.bundling.Tar:filter(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>filter</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> closure)</title><para>Adds a content filter based on the provided closure.  The Closure will be called with each line (stripped of line
endings) and should return a String to replace the line or <literal>null</literal> to remove the line.  If every line is
removed, the result will be an empty file, not an absent one.</para></section><section id="org.gradle.api.tasks.bundling.Tar:filter(java.lang.Class)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>filter</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html"><classname>Class</classname></ulink>&lt;? extends <ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/FilterReader.html"><classname>FilterReader</classname></ulink>&gt;</classname> filterType)</title><para>Adds a content filter to be used during the copy.  Multiple calls to filter, add additional filters to the
filter chain.  Each filter should implement <literal>java.io.FilterReader</literal>. Include <literal>org.apache.tools.ant.filters.*</literal> for access to all the standard Ant filters.</para><para> Examples:
</para><para><programlisting language="java">
   filter(StripJavaComments)
   filter(com.mycompany.project.CustomFilter)
</programlisting></para></section><section id="org.gradle.api.tasks.bundling.Tar:filter(java.util.Map, java.lang.Class)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>filter</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, ?&gt;</classname> properties, <classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html"><classname>Class</classname></ulink>&lt;? extends <ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/FilterReader.html"><classname>FilterReader</classname></ulink>&gt;</classname> filterType)</title><para>Adds a content filter to be used during the copy.  Multiple calls to filter, add additional filters to the
filter chain.  Each filter should implement <literal>java.io.FilterReader</literal>. Include <literal>org.apache.tools.ant.filters.*</literal> for access to all the standard Ant filters.</para><para>Filter properties may be specified using groovy map syntax.</para><para> Examples:
</para><para><programlisting language="java">
   filter(HeadFilter, lines:25, skip:2)
   filter(ReplaceTokens, tokens:[copyright:'2009', version:'2.3.1'])
</programlisting></para></section><section id="org.gradle.api.tasks.bundling.Tar:filter(org.gradle.api.Transformer)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>filter</literal>(<classname><apilink class="org.gradle.api.Transformer"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> transformer)</title><para>Adds a content filter based on the provided transformer.  The Closure will be called with each line (stripped of line
endings) and should return a String to replace the line or <literal>null</literal> to remove the line.  If every line is
removed, the result will be an empty file, not an absent one.</para></section><section id="org.gradle.api.tasks.bundling.Tar:from(java.lang.Object, groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>from</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> sourcePath, <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> c)</title><para>Specifies the source files or directories for a copy and creates a child <literal>CopySourceSpec</literal>. The given source
path is evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/> .</para></section><section id="org.gradle.api.tasks.bundling.Tar:from(java.lang.Object, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>from</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> sourcePath, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.CopySpec"/>&gt;</classname> configureAction)</title><para>Specifies the source files or directories for a copy and creates a child <literal>CopySpec</literal>. The given source
path is evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/> .</para></section><section id="org.gradle.api.tasks.bundling.Tar:from(java.lang.Object[])" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>from</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink>...</classname> sourcePaths)</title><para>Specifies source files or directories for a copy. The given paths are evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/>.</para></section><section id="org.gradle.api.tasks.bundling.Tar:include(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>include</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> includeSpec)</title><para>Adds an include spec. This method may be called multiple times to append new specs. The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></section><section id="org.gradle.api.tasks.bundling.Tar:include(java.lang.Iterable)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>include</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> includes)</title><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></section><section id="org.gradle.api.tasks.bundling.Tar:include(java.lang.String[])" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>include</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>...</classname> includes)</title><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></section><section id="org.gradle.api.tasks.bundling.Tar:include(org.gradle.api.specs.Spec)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>include</literal>(<classname><apilink class="org.gradle.api.specs.Spec"/>&lt;<apilink class="org.gradle.api.file.FileTreeElement"/>&gt;</classname> includeSpec)</title><para>Adds an include spec. This method may be called multiple times to append new specs.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></section><section id="org.gradle.api.tasks.bundling.Tar:into(java.lang.Object)" role="detail"><title><apilink class="org.gradle.api.tasks.bundling.AbstractArchiveTask"/> <literal>into</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> destPath)</title><para>Specifies the destination directory *inside* the archive for the files.
The destination is evaluated as per <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/>.
Don't mix it up with <apilink class="org.gradle.api.tasks.bundling.AbstractArchiveTask" method="getDestinationDirectory()"/> which specifies the output directory for the archive.</para></section><section id="org.gradle.api.tasks.bundling.Tar:into(java.lang.Object, groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.bundling.AbstractArchiveTask"/> <literal>into</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> destPath, <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> configureClosure)</title><para>Creates and configures a child <literal>CopySpec</literal> with a destination directory *inside* the archive for the files.
The destination is evaluated as per <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/>.
Don't mix it up with <apilink class="org.gradle.api.tasks.bundling.AbstractArchiveTask" method="getDestinationDirectory()"/> which specifies the output directory for the archive.</para></section><section id="org.gradle.api.tasks.bundling.Tar:into(java.lang.Object, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.file.CopySpec"/> <literal>into</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> destPath, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.CopySpec"/>&gt;</classname> copySpec)</title><para>Creates and configures a child <literal>CopySpec</literal> with a destination directory *inside* the archive for the files.
The destination is evaluated as per <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/>.
Don't mix it up with <apilink class="org.gradle.api.tasks.bundling.AbstractArchiveTask" method="getDestinationDirectory()"/> which specifies the output directory for the archive.</para></section><section id="org.gradle.api.tasks.bundling.Tar:rename(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>rename</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> closure)</title><para>Renames a source file. The closure will be called with a single parameter, the name of the file.
The closure should return a String object with a new target name. The closure may return null,
in which case the original name will be used.</para></section><section id="org.gradle.api.tasks.bundling.Tar:rename(java.lang.String, java.lang.String)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>rename</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> sourceRegEx, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> replaceWith)</title><para>Renames files based on a regular expression.  Uses java.util.regex type of regular expressions.  Note that the
replace string should use the '$1' syntax to refer to capture groups in the source regular expression.  Files
that do not match the source regular expression will be copied with the original name.

</para><para> Example:
</para><para><programlisting language="java">
rename '(.*)_OEM_BLUE_(.*)', '$1$2'
</programlisting></para><para>
would map the file 'style_OEM_BLUE_.css' to 'style.css'</para></section><section id="org.gradle.api.tasks.bundling.Tar:rename(java.util.regex.Pattern, java.lang.String)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>rename</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html"><classname>Pattern</classname></ulink> sourceRegEx, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> replaceWith)</title><para>Renames files based on a regular expression. See <apilink class="org.gradle.api.file.CopyProcessingSpec" method="rename(java.lang.String, java.lang.String)"/>.</para></section><section id="org.gradle.api.tasks.bundling.Tar:rename(org.gradle.api.Transformer)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>rename</literal>(<classname><apilink class="org.gradle.api.Transformer"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> renamer)</title><para>Renames a source file. The function will be called with a single parameter, the name of the file.
The function should return a new target name. The function may return null,
in which case the original name will be used.</para></section><section id="org.gradle.api.tasks.bundling.Tar:with(org.gradle.api.file.CopySpec[])" role="detail"><title><apilink class="org.gradle.api.file.CopySpec"/> <literal>with</literal>(<classname><apilink class="org.gradle.api.file.CopySpec"/>...</classname> sourceSpecs)</title><para>Adds the given specs as a child of this spec.

</para><para><programlisting language="java">
def contentSpec = copySpec {
  from("content") {
    include "**/*.txt"
  }
}

task copy(type: Copy) {
  into "$buildDir/copy"
  with contentSpec
}
</programlisting></para></section></section></chapter><chapter id="org.gradle.api.tasks.testing.AbstractTestTask"><title>AbstractTestTask</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.tasks.testing.AbstractTestTask" style="javadoc"/></seg></seglistitem></segmentedlist><segmentedlist><segtitle>Known Subtypes</segtitle><seglistitem><seg><simplelist columns="1" type="vert"><member><apilink class="org.gradle.api.tasks.testing.Test"/></member><member><apilink class="org.gradle.nativeplatform.test.xctest.tasks.XCTest"/></member></simplelist></seg></seglistitem></segmentedlist><para>Abstract class for all test tasks.

</para><itemizedlist><listitem>Support for test listeners</listitem><listitem>Support for reporting</listitem><listitem>Support for report linking in the console output</listitem></itemizedlist><para><emphasis>Note:</emphasis> This abstract class is not intended for implementation by build script or plugin authors.</para><section><title>Properties</title><table><title>Properties - AbstractTestTask</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.tasks.testing.AbstractTestTask:binaryResultsDirectory"><literal>binaryResultsDirectory</literal></link></td><td><para>The root directory property for the test results in internal binary format.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.testing.AbstractTestTask:failOnNoDiscoveredTests"><literal>failOnNoDiscoveredTests</literal></link></td><td><para>Whether the task should fail if test sources are present, but no tests are discovered during test execution.  Defaults to true.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.testing.AbstractTestTask:ignoreFailures"><literal>ignoreFailures</literal></link></td><td><para>Specifies whether the build should break when the verifications performed by this task fail.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.testing.AbstractTestTask:reports"><literal>reports</literal></link></td><td><para>The reports that this task potentially produces.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - AbstractTestTask</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.tasks.testing.AbstractTestTask:addTestListener(org.gradle.api.tasks.testing.TestListener)">addTestListener</link>(listener)</literal></td><td><para>Registers a test listener with this task. Consider also the following handy methods for quicker hooking into test execution: <apilink class="org.gradle.api.tasks.testing.AbstractTestTask" method="beforeTest(groovy.lang.Closure)"/>, <apilink class="org.gradle.api.tasks.testing.AbstractTestTask" method="afterTest(groovy.lang.Closure)"/>, <apilink class="org.gradle.api.tasks.testing.AbstractTestTask" method="beforeSuite(groovy.lang.Closure)"/>, <apilink class="org.gradle.api.tasks.testing.AbstractTestTask" method="afterSuite(groovy.lang.Closure)"/> </para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.testing.AbstractTestTask:addTestOutputListener(org.gradle.api.tasks.testing.TestOutputListener)">addTestOutputListener</link>(listener)</literal></td><td><para>Registers a output listener with this task. Quicker way of hooking into output events is using the <apilink class="org.gradle.api.tasks.testing.AbstractTestTask" method="onOutput(groovy.lang.Closure)"/> method.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.testing.AbstractTestTask:afterSuite(groovy.lang.Closure)">afterSuite</link>(closure)</literal></td><td><para>Adds a closure to be notified after a test suite has executed. A <apilink class="org.gradle.api.tasks.testing.TestDescriptor"/> and <apilink class="org.gradle.api.tasks.testing.TestResult"/> instance are passed to the closure as a
parameter.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.testing.AbstractTestTask:afterTest(groovy.lang.Closure)">afterTest</link>(closure)</literal></td><td><para>Adds a closure to be notified after a test has executed. A <apilink class="org.gradle.api.tasks.testing.TestDescriptor"/> and <apilink class="org.gradle.api.tasks.testing.TestResult"/> instance are passed to the closure as a parameter.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.testing.AbstractTestTask:beforeSuite(groovy.lang.Closure)">beforeSuite</link>(closure)</literal></td><td><para>Adds a closure to be notified before a test suite is executed. A <apilink class="org.gradle.api.tasks.testing.TestDescriptor"/> instance is passed to the closure as a parameter.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.testing.AbstractTestTask:beforeTest(groovy.lang.Closure)">beforeTest</link>(closure)</literal></td><td><para>Adds a closure to be notified before a test is executed. A <apilink class="org.gradle.api.tasks.testing.TestDescriptor"/> instance is passed to the closure as a parameter.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.testing.AbstractTestTask:onOutput(groovy.lang.Closure)">onOutput</link>(closure)</literal></td><td><para>Adds a closure to be notified when output from the test received. A <apilink class="org.gradle.api.tasks.testing.TestDescriptor"/> and <apilink class="org.gradle.api.tasks.testing.TestOutputEvent"/> instance are
passed to the closure as a parameter.

</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.testing.AbstractTestTask:removeTestListener(org.gradle.api.tasks.testing.TestListener)">removeTestListener</link>(listener)</literal></td><td><para>Unregisters a test listener with this task.  This method will only remove listeners that were added by calling <apilink class="org.gradle.api.tasks.testing.AbstractTestTask" method="addTestListener(org.gradle.api.tasks.testing.TestListener)"/> on this task. If the listener was
registered with Gradle using <apilink class="org.gradle.api.invocation.Gradle" method="addListener(java.lang.Object)"/> this method will not do anything. Instead, use <apilink class="org.gradle.api.invocation.Gradle" method="removeListener(java.lang.Object)"/>.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.testing.AbstractTestTask:removeTestOutputListener(org.gradle.api.tasks.testing.TestOutputListener)">removeTestOutputListener</link>(listener)</literal></td><td><para>Unregisters a test output listener with this task.  This method will only remove listeners that were added by calling <apilink class="org.gradle.api.tasks.testing.AbstractTestTask" method="addTestOutputListener(org.gradle.api.tasks.testing.TestOutputListener)"/> on this task.  If the
listener was registered with Gradle using <apilink class="org.gradle.api.invocation.Gradle" method="addListener(java.lang.Object)"/> this method will not do anything. Instead, use <apilink class="org.gradle.api.invocation.Gradle" method="removeListener(java.lang.Object)"/>.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.testing.AbstractTestTask:reports(org.gradle.api.Action)">reports</link>(configureAction)</literal></td><td><para>Configures the reports that this task potentially produces.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.testing.AbstractTestTask:setTestNameIncludePatterns(java.util.List)">setTestNameIncludePatterns</link>(testNamePattern)</literal></td><td><para>Sets the test name patterns to be included in execution.
Classes or method names are supported, wildcard '*' is supported.
For more information see the user guide chapter on testing.

For more information on supported patterns see <apilink class="org.gradle.api.tasks.testing.TestFilter"/></para></td></tr></table></section><section><title>Script blocks</title><table><title>Script blocks - AbstractTestTask</title><thead><tr><td>Block</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.tasks.testing.AbstractTestTask:reports(groovy.lang.Closure)"><literal>reports</literal></link></td><td><para>Configures the reports that this task potentially produces.</para></td></tr></table></section><section><title>Property details</title><section id="org.gradle.api.tasks.testing.AbstractTestTask:binaryResultsDirectory" role="detail"><title><apilink class="org.gradle.api.file.DirectoryProperty"/> <literal>binaryResultsDirectory</literal></title><para>The root directory property for the test results in internal binary format.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal><replaceable>project.testResultsDir</replaceable>/binary/<replaceable>task.name</replaceable></literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.testing.AbstractTestTask:failOnNoDiscoveredTests" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html"><classname>Boolean</classname></ulink>&gt;</classname> <literal>failOnNoDiscoveredTests</literal></title><para>Whether the task should fail if test sources are present, but no tests are discovered during test execution.  Defaults to true.</para></section><section id="org.gradle.api.tasks.testing.AbstractTestTask:ignoreFailures" role="detail"><title><classname>boolean</classname> <literal>ignoreFailures</literal></title><para>Specifies whether the build should break when the verifications performed by this task fail.</para></section><section id="org.gradle.api.tasks.testing.AbstractTestTask:reports" role="detail"><title><apilink class="org.gradle.api.tasks.testing.TestTaskReports"/> <literal>reports</literal> (read-only)</title><para>The reports that this task potentially produces.</para></section></section><section><title>Method details</title><section id="org.gradle.api.tasks.testing.AbstractTestTask:addTestListener(org.gradle.api.tasks.testing.TestListener)" role="detail"><title><classname>void</classname> <literal>addTestListener</literal>(<apilink class="org.gradle.api.tasks.testing.TestListener"/> listener)</title><para>Registers a test listener with this task. Consider also the following handy methods for quicker hooking into test execution: <apilink class="org.gradle.api.tasks.testing.AbstractTestTask" method="beforeTest(groovy.lang.Closure)"/>, <apilink class="org.gradle.api.tasks.testing.AbstractTestTask" method="afterTest(groovy.lang.Closure)"/>, <apilink class="org.gradle.api.tasks.testing.AbstractTestTask" method="beforeSuite(groovy.lang.Closure)"/>, <apilink class="org.gradle.api.tasks.testing.AbstractTestTask" method="afterSuite(groovy.lang.Closure)"/> </para><para> This listener will NOT be notified of tests executed by other tasks. To
get that behavior, use <apilink class="org.gradle.api.invocation.Gradle" method="addListener(java.lang.Object)"/>.</para></section><section id="org.gradle.api.tasks.testing.AbstractTestTask:addTestOutputListener(org.gradle.api.tasks.testing.TestOutputListener)" role="detail"><title><classname>void</classname> <literal>addTestOutputListener</literal>(<apilink class="org.gradle.api.tasks.testing.TestOutputListener"/> listener)</title><para>Registers a output listener with this task. Quicker way of hooking into output events is using the <apilink class="org.gradle.api.tasks.testing.AbstractTestTask" method="onOutput(groovy.lang.Closure)"/> method.</para></section><section id="org.gradle.api.tasks.testing.AbstractTestTask:afterSuite(groovy.lang.Closure)" role="detail"><title><classname>void</classname> <literal>afterSuite</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> closure)</title><para>Adds a closure to be notified after a test suite has executed. A <apilink class="org.gradle.api.tasks.testing.TestDescriptor"/> and <apilink class="org.gradle.api.tasks.testing.TestResult"/> instance are passed to the closure as a
parameter.</para><para>This method is also called after all test suites are executed. The provided descriptor will have a null parent suite.</para></section><section id="org.gradle.api.tasks.testing.AbstractTestTask:afterTest(groovy.lang.Closure)" role="detail"><title><classname>void</classname> <literal>afterTest</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> closure)</title><para>Adds a closure to be notified after a test has executed. A <apilink class="org.gradle.api.tasks.testing.TestDescriptor"/> and <apilink class="org.gradle.api.tasks.testing.TestResult"/> instance are passed to the closure as a parameter.</para></section><section id="org.gradle.api.tasks.testing.AbstractTestTask:beforeSuite(groovy.lang.Closure)" role="detail"><title><classname>void</classname> <literal>beforeSuite</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> closure)</title><para>Adds a closure to be notified before a test suite is executed. A <apilink class="org.gradle.api.tasks.testing.TestDescriptor"/> instance is passed to the closure as a parameter.</para><para>This method is also called before any test suites are executed. The provided descriptor will have a null parent suite.</para></section><section id="org.gradle.api.tasks.testing.AbstractTestTask:beforeTest(groovy.lang.Closure)" role="detail"><title><classname>void</classname> <literal>beforeTest</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> closure)</title><para>Adds a closure to be notified before a test is executed. A <apilink class="org.gradle.api.tasks.testing.TestDescriptor"/> instance is passed to the closure as a parameter.</para></section><section id="org.gradle.api.tasks.testing.AbstractTestTask:onOutput(groovy.lang.Closure)" role="detail"><title><classname>void</classname> <literal>onOutput</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> closure)</title><para>Adds a closure to be notified when output from the test received. A <apilink class="org.gradle.api.tasks.testing.TestDescriptor"/> and <apilink class="org.gradle.api.tasks.testing.TestOutputEvent"/> instance are
passed to the closure as a parameter.

</para><programlisting language="java">
apply plugin: 'java'

test {
   onOutput { descriptor, event -&gt;
       if (event.destination == TestOutputEvent.Destination.StdErr) {
           logger.error("Test: " + descriptor + ", error: " + event.message)
       }
   }
}
</programlisting></section><section id="org.gradle.api.tasks.testing.AbstractTestTask:removeTestListener(org.gradle.api.tasks.testing.TestListener)" role="detail"><title><classname>void</classname> <literal>removeTestListener</literal>(<apilink class="org.gradle.api.tasks.testing.TestListener"/> listener)</title><para>Unregisters a test listener with this task.  This method will only remove listeners that were added by calling <apilink class="org.gradle.api.tasks.testing.AbstractTestTask" method="addTestListener(org.gradle.api.tasks.testing.TestListener)"/> on this task. If the listener was
registered with Gradle using <apilink class="org.gradle.api.invocation.Gradle" method="addListener(java.lang.Object)"/> this method will not do anything. Instead, use <apilink class="org.gradle.api.invocation.Gradle" method="removeListener(java.lang.Object)"/>.</para></section><section id="org.gradle.api.tasks.testing.AbstractTestTask:removeTestOutputListener(org.gradle.api.tasks.testing.TestOutputListener)" role="detail"><title><classname>void</classname> <literal>removeTestOutputListener</literal>(<apilink class="org.gradle.api.tasks.testing.TestOutputListener"/> listener)</title><para>Unregisters a test output listener with this task.  This method will only remove listeners that were added by calling <apilink class="org.gradle.api.tasks.testing.AbstractTestTask" method="addTestOutputListener(org.gradle.api.tasks.testing.TestOutputListener)"/> on this task.  If the
listener was registered with Gradle using <apilink class="org.gradle.api.invocation.Gradle" method="addListener(java.lang.Object)"/> this method will not do anything. Instead, use <apilink class="org.gradle.api.invocation.Gradle" method="removeListener(java.lang.Object)"/>.</para></section><section id="org.gradle.api.tasks.testing.AbstractTestTask:reports(org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.tasks.testing.TestTaskReports"/> <literal>reports</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.tasks.testing.TestTaskReports"/>&gt;</classname> configureAction)</title><para>Configures the reports that this task potentially produces.</para></section><section id="org.gradle.api.tasks.testing.AbstractTestTask:setTestNameIncludePatterns(java.util.List)" role="detail"><title><apilink class="org.gradle.api.tasks.testing.AbstractTestTask"/> <literal>setTestNameIncludePatterns</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/List.html"><classname>List</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> testNamePattern)</title><para>Sets the test name patterns to be included in execution.
Classes or method names are supported, wildcard '*' is supported.
For more information see the user guide chapter on testing.

For more information on supported patterns see <apilink class="org.gradle.api.tasks.testing.TestFilter"/></para></section></section><section><title>Script block details</title><section id="org.gradle.api.tasks.testing.AbstractTestTask:reports(groovy.lang.Closure)" role="detail"><title><literal>reports</literal> { }</title><para>Configures the reports that this task potentially produces.</para><segmentedlist><segtitle>Delegates to</segtitle><seglistitem><seg><apilink class="org.gradle.api.tasks.testing.TestTaskReports"/> from <link linkend="org.gradle.api.tasks.testing.AbstractTestTask:reports"><literal>reports</literal></link></seg></seglistitem></segmentedlist></section></section></chapter><chapter id="org.gradle.testing.jacoco.plugins.JacocoTaskExtension"><title>JacocoTaskExtension</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.testing.jacoco.plugins.JacocoTaskExtension" style="javadoc"/></seg></seglistitem></segmentedlist><para>Extension for tasks that should run with a Jacoco agent to generate coverage execution data.</para><section><title>Properties</title><table><title>Properties - JacocoTaskExtension</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.testing.jacoco.plugins.JacocoTaskExtension:address"><literal>address</literal></link></td><td><para>IP address or hostname to use with <apilink class="org.gradle.testing.jacoco.plugins.JacocoTaskExtension.Output" method="TCP_SERVER"/> or <apilink class="org.gradle.testing.jacoco.plugins.JacocoTaskExtension.Output" method="TCP_CLIENT"/>. Defaults to localhost.</para></td></tr><tr><td><link linkend="org.gradle.testing.jacoco.plugins.JacocoTaskExtension:classDumpDir"><literal>classDumpDir</literal></link></td><td><para>Path to dump all class files the agent sees are dumped to. Defaults to no dumps.</para></td></tr><tr><td><link linkend="org.gradle.testing.jacoco.plugins.JacocoTaskExtension:destinationFile"><literal>destinationFile</literal></link></td><td><para>The path for the execution data to be written to.</para></td></tr><tr><td><link linkend="org.gradle.testing.jacoco.plugins.JacocoTaskExtension:dumpOnExit"><literal>dumpOnExit</literal></link></td><td><para>Whether or not to dump the coverage data at VM shutdown. Defaults to <literal>true</literal>.</para></td></tr><tr><td><link linkend="org.gradle.testing.jacoco.plugins.JacocoTaskExtension:excludeClassLoaders"><literal>excludeClassLoaders</literal></link></td><td><para>List of classloader names that should be excluded from analysis. Names can use wildcards (* and ?). Defaults to an empty list.</para></td></tr><tr><td><link linkend="org.gradle.testing.jacoco.plugins.JacocoTaskExtension:excludes"><literal>excludes</literal></link></td><td><para>List of class names that should be excluded from analysis. Names can use wildcard (* and ?). Defaults to an empty list.</para></td></tr><tr><td><link linkend="org.gradle.testing.jacoco.plugins.JacocoTaskExtension:includes"><literal>includes</literal></link></td><td><para>List of class names that should be included in analysis. Names can use wildcards (* and ?). If left empty, all classes will be included. Defaults to an empty list.</para></td></tr><tr><td><link linkend="org.gradle.testing.jacoco.plugins.JacocoTaskExtension:jmx"><literal>jmx</literal></link></td><td><para>Whether or not to expose functionality via JMX under <literal>org.jacoco:type=Runtime</literal>. Defaults to <literal>false</literal>.

The configuration of the jmx property is only taken into account if the used JaCoCo version supports this option (JaCoCo version &gt;= 0.6.2)</para></td></tr><tr><td><link linkend="org.gradle.testing.jacoco.plugins.JacocoTaskExtension:output"><literal>output</literal></link></td><td><para>The type of output to generate. Defaults to <apilink class="org.gradle.testing.jacoco.plugins.JacocoTaskExtension.Output" method="FILE"/>.</para></td></tr><tr><td><link linkend="org.gradle.testing.jacoco.plugins.JacocoTaskExtension:port"><literal>port</literal></link></td><td><para>Port to bind to for <apilink class="org.gradle.testing.jacoco.plugins.JacocoTaskExtension.Output" method="TCP_SERVER"/> or <apilink class="org.gradle.testing.jacoco.plugins.JacocoTaskExtension.Output" method="TCP_CLIENT"/>. Defaults to 6300.</para></td></tr><tr><td><link linkend="org.gradle.testing.jacoco.plugins.JacocoTaskExtension:sessionId"><literal>sessionId</literal></link></td><td><para>An identifier for the session written to the execution data. Defaults to an auto-generated identifier.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - JacocoTaskExtension</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.testing.jacoco.plugins.JacocoTaskExtension:getAsJvmArg()">getAsJvmArg</link>()</literal></td><td><para>Gets all properties in the format expected of the agent JVM argument.</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.testing.jacoco.plugins.JacocoTaskExtension:address" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>address</literal></title><para>IP address or hostname to use with <apilink class="org.gradle.testing.jacoco.plugins.JacocoTaskExtension.Output" method="TCP_SERVER"/> or <apilink class="org.gradle.testing.jacoco.plugins.JacocoTaskExtension.Output" method="TCP_CLIENT"/>. Defaults to localhost.</para></section><section id="org.gradle.testing.jacoco.plugins.JacocoTaskExtension:classDumpDir" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>classDumpDir</literal></title><para>Path to dump all class files the agent sees are dumped to. Defaults to no dumps.</para></section><section id="org.gradle.testing.jacoco.plugins.JacocoTaskExtension:destinationFile" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>destinationFile</literal></title><para>The path for the execution data to be written to.</para></section><section id="org.gradle.testing.jacoco.plugins.JacocoTaskExtension:dumpOnExit" role="detail"><title><classname>boolean</classname> <literal>dumpOnExit</literal></title><para>Whether or not to dump the coverage data at VM shutdown. Defaults to <literal>true</literal>.</para></section><section id="org.gradle.testing.jacoco.plugins.JacocoTaskExtension:excludeClassLoaders" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/List.html"><classname>List</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>excludeClassLoaders</literal></title><para>List of classloader names that should be excluded from analysis. Names can use wildcards (* and ?). Defaults to an empty list.</para></section><section id="org.gradle.testing.jacoco.plugins.JacocoTaskExtension:excludes" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/List.html"><classname>List</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>excludes</literal></title><para>List of class names that should be excluded from analysis. Names can use wildcard (* and ?). Defaults to an empty list.</para></section><section id="org.gradle.testing.jacoco.plugins.JacocoTaskExtension:includes" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/List.html"><classname>List</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>includes</literal></title><para>List of class names that should be included in analysis. Names can use wildcards (* and ?). If left empty, all classes will be included. Defaults to an empty list.</para></section><section id="org.gradle.testing.jacoco.plugins.JacocoTaskExtension:jmx" role="detail"><title><classname>boolean</classname> <literal>jmx</literal></title><para>Whether or not to expose functionality via JMX under <literal>org.jacoco:type=Runtime</literal>. Defaults to <literal>false</literal>.

The configuration of the jmx property is only taken into account if the used JaCoCo version supports this option (JaCoCo version &gt;= 0.6.2)</para></section><section id="org.gradle.testing.jacoco.plugins.JacocoTaskExtension:output" role="detail"><title><apilink class="org.gradle.testing.jacoco.plugins.JacocoTaskExtension.Output"/> <literal>output</literal></title><para>The type of output to generate. Defaults to <apilink class="org.gradle.testing.jacoco.plugins.JacocoTaskExtension.Output" method="FILE"/>.</para></section><section id="org.gradle.testing.jacoco.plugins.JacocoTaskExtension:port" role="detail"><title><classname>int</classname> <literal>port</literal></title><para>Port to bind to for <apilink class="org.gradle.testing.jacoco.plugins.JacocoTaskExtension.Output" method="TCP_SERVER"/> or <apilink class="org.gradle.testing.jacoco.plugins.JacocoTaskExtension.Output" method="TCP_CLIENT"/>. Defaults to 6300.</para></section><section id="org.gradle.testing.jacoco.plugins.JacocoTaskExtension:sessionId" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>sessionId</literal></title><para>An identifier for the session written to the execution data. Defaults to an auto-generated identifier.</para></section></section><section><title>Method details</title><section id="org.gradle.testing.jacoco.plugins.JacocoTaskExtension:getAsJvmArg()" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>getAsJvmArg</literal>()</title><para>Gets all properties in the format expected of the agent JVM argument.</para></section></section></chapter><chapter id="org.gradle.api.tasks.testing.Test"><title>Test</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.tasks.testing.Test" style="javadoc"/></seg></seglistitem></segmentedlist><para>Executes JUnit (3.8.x, 4.x or 5.x) or TestNG tests. Test are always run in (one or more) separate JVMs.

</para><para>
The sample below shows various configuration options.

</para><programlisting language="java">
plugins {
    id("java-library") // adds 'test' task
}

test {
  // discover and execute JUnit4-based tests
  useJUnit()

  // discover and execute TestNG-based tests
  useTestNG()

  // discover and execute JUnit Platform-based tests
  useJUnitPlatform()

  // set a system property for the test JVM(s)
  systemProperty 'some.prop', 'value'

  // explicitly include or exclude tests
  include 'org/foo/**'
  exclude 'org/boo/**'

  // show standard out and standard error of the test JVM(s) on the console
  testLogging.showStandardStreams = true

  // set heap size for the test JVM(s)
  minHeapSize = "128m"
  maxHeapSize = "512m"

  // set JVM arguments for the test JVM(s)
  jvmArgs('-XX:MaxPermSize=256m')

  // listen to events in the test execution lifecycle
  beforeTest { descriptor -&gt;
     logger.lifecycle("Running test: " + descriptor)
  }

  // fail the 'test' task on the first test failure
  failFast = true

  // skip an actual test execution
  dryRun = true

  // listen to standard out and standard error of the test JVM(s)
  onOutput { descriptor, event -&gt;
     logger.lifecycle("Test: " + descriptor + " produced standard out/err: " + event.message )
  }
}
</programlisting><para>
The test process can be started in debug mode (see <apilink class="org.gradle.api.tasks.testing.Test" method="getDebug()"/>) in an ad-hoc manner by supplying the `--debug-jvm` switch when invoking the build.
</para><programlisting language="java">
gradle someTestTask --debug-jvm
</programlisting><section><title>Properties</title><table><title>Properties - Test</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.tasks.testing.Test:allJvmArgs"><literal>allJvmArgs</literal></link></td><td><para>The full set of arguments to use to launch the JVM for the process. This includes arguments to define
system properties, the minimum/maximum heap size, and the bootstrap classpath.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.testing.Test:binaryResultsDirectory"><literal>binaryResultsDirectory</literal></link></td><td><para>The root directory property for the test results in internal binary format.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.testing.Test:bootstrapClasspath"><literal>bootstrapClasspath</literal></link></td><td><para>The bootstrap classpath to use for the process. The default bootstrap classpath for the JVM is used when
this classpath is empty.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.testing.Test:classpath"><literal>classpath</literal></link></td><td><para>The classpath to use to execute the tests.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.testing.Test:debug"><literal>debug</literal></link></td><td><para>Determines whether debugging is enabled for the test process. When enabled — <literal>debug = true</literal> — the process
is started in a suspended state, listening on port 5005. You should disable parallel test execution when
debugging and you will need to reattach the debugger occasionally if you use a non-zero value for
<apilink class="org.gradle.api.tasks.testing.Test" method="getForkEvery()"/>.
</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.testing.Test:debugOptions"><literal>debugOptions</literal></link></td><td><para>The Java Debug Wire Protocol properties for the process. If enabled then the <literal>-agentlib:jdwp=...</literal>
will be appended to the JVM arguments with the configuration from the parameter.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.testing.Test:dryRun"><literal>dryRun</literal></link></td><td><caution>Incubating</caution><para>Indicates if this task will skip individual test execution.

</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.testing.Test:enableAssertions"><literal>enableAssertions</literal></link></td><td><para>Returns true if assertions are enabled for the process.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.testing.Test:environment"><literal>environment</literal></link></td><td><para>The environment variables to use for the process. Defaults to the environment of this process.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.testing.Test:excludes"><literal>excludes</literal></link></td><td><para>The exclude patterns for test execution.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.testing.Test:executable"><literal>executable</literal></link></td><td><para>The name of the executable to use.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.testing.Test:failFast"><literal>failFast</literal></link></td><td><para>Indicates if this task will fail on the first failed test</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.testing.Test:failOnNoDiscoveredTests"><literal>failOnNoDiscoveredTests</literal></link></td><td><para>Whether the task should fail if test sources are present, but no tests are discovered during test execution.  Defaults to true.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.testing.Test:forkEvery"><literal>forkEvery</literal></link></td><td><para>The maximum number of test classes to execute in a forked test process. The forked test process will be restarted when this limit is reached.

</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.testing.Test:ignoreFailures"><literal>ignoreFailures</literal></link></td><td><para>Specifies whether the build should break when the verifications performed by this task fail.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.testing.Test:includes"><literal>includes</literal></link></td><td><para>The include patterns for test execution.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.testing.Test:javaLauncher"><literal>javaLauncher</literal></link></td><td><para>Configures the java executable to be used to run the tests.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.testing.Test:jvmArgs"><literal>jvmArgs</literal></link></td><td><para>The extra arguments to use to launch the JVM for the process. Does not include system properties and the
minimum/maximum heap size.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.testing.Test:jvmArgumentProviders"><literal>jvmArgumentProviders</literal></link></td><td><para>Command line argument providers for the java process to fork.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.testing.Test:maxHeapSize"><literal>maxHeapSize</literal></link></td><td><para>The maximum heap size for the process, if any.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.testing.Test:maxParallelForks"><literal>maxParallelForks</literal></link></td><td><para>The maximum number of test processes to start in parallel.

</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.testing.Test:minHeapSize"><literal>minHeapSize</literal></link></td><td><para>The minimum heap size for the process, if any.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.testing.Test:modularity"><literal>modularity</literal></link></td><td><para>The module path handling of this test task.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.testing.Test:options"><literal>options</literal></link></td><td><para>Returns test framework specific options. Make sure to call <apilink class="org.gradle.api.tasks.testing.Test" method="useJUnit()"/>, <apilink class="org.gradle.api.tasks.testing.Test" method="useJUnitPlatform()"/> or <apilink class="org.gradle.api.tasks.testing.Test" method="useTestNG()"/> before using this method.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.testing.Test:reports"><literal>reports</literal></link></td><td><para>The reports that this task potentially produces.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.testing.Test:scanForTestClasses"><literal>scanForTestClasses</literal></link></td><td><para>Specifies whether test classes should be detected. When <literal>true</literal> the classes which match the include and exclude patterns are scanned for test classes, and any found are executed. When
<literal>false</literal> the classes which match the include and exclude patterns are executed.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.testing.Test:systemProperties"><literal>systemProperties</literal></link></td><td><para>The system properties which will be used for the process.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.testing.Test:testClassesDirs"><literal>testClassesDirs</literal></link></td><td><para>The directories for the compiled test sources.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.testing.Test:testLogging"><literal>testLogging</literal></link></td><td><para>Allows to set options related to which test events are logged to the console, and on which detail level. For example, to show more information about exceptions use:

</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.testing.Test:workingDir"><literal>workingDir</literal></link></td><td><para>The working directory for the process. Defaults to the project directory.</para></td></tr></table><section><title>Properties added by the <literal>jacoco</literal> plugin</title><titleabbrev><literal>jacoco</literal> plugin</titleabbrev><table><title>Properties - <literal>jacoco</literal> plugin</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.tasks.testing.Test:jacoco"><literal>jacoco</literal></link></td><td><para>The <apilink class="org.gradle.testing.jacoco.plugins.JacocoTaskExtension"/> added by the jacoco plugin.</para></td></tr></table></section></section><section><title>Methods</title><table><title>Methods - Test</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.tasks.testing.Test:addTestListener(org.gradle.api.tasks.testing.TestListener)">addTestListener</link>(listener)</literal></td><td><para>Registers a test listener with this task. Consider also the following handy methods for quicker hooking into test execution: <apilink class="org.gradle.api.tasks.testing.AbstractTestTask" method="beforeTest(groovy.lang.Closure)"/>, <apilink class="org.gradle.api.tasks.testing.AbstractTestTask" method="afterTest(groovy.lang.Closure)"/>, <apilink class="org.gradle.api.tasks.testing.AbstractTestTask" method="beforeSuite(groovy.lang.Closure)"/>, <apilink class="org.gradle.api.tasks.testing.AbstractTestTask" method="afterSuite(groovy.lang.Closure)"/> </para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.testing.Test:addTestOutputListener(org.gradle.api.tasks.testing.TestOutputListener)">addTestOutputListener</link>(listener)</literal></td><td><para>Registers a output listener with this task. Quicker way of hooking into output events is using the <apilink class="org.gradle.api.tasks.testing.AbstractTestTask" method="onOutput(groovy.lang.Closure)"/> method.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.testing.Test:afterSuite(groovy.lang.Closure)">afterSuite</link>(closure)</literal></td><td><para>Adds a closure to be notified after a test suite has executed. A <apilink class="org.gradle.api.tasks.testing.TestDescriptor"/> and <apilink class="org.gradle.api.tasks.testing.TestResult"/> instance are passed to the closure as a
parameter.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.testing.Test:afterTest(groovy.lang.Closure)">afterTest</link>(closure)</literal></td><td><para>Adds a closure to be notified after a test has executed. A <apilink class="org.gradle.api.tasks.testing.TestDescriptor"/> and <apilink class="org.gradle.api.tasks.testing.TestResult"/> instance are passed to the closure as a parameter.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.testing.Test:beforeSuite(groovy.lang.Closure)">beforeSuite</link>(closure)</literal></td><td><para>Adds a closure to be notified before a test suite is executed. A <apilink class="org.gradle.api.tasks.testing.TestDescriptor"/> instance is passed to the closure as a parameter.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.testing.Test:beforeTest(groovy.lang.Closure)">beforeTest</link>(closure)</literal></td><td><para>Adds a closure to be notified before a test is executed. A <apilink class="org.gradle.api.tasks.testing.TestDescriptor"/> instance is passed to the closure as a parameter.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.testing.Test:bootstrapClasspath(java.lang.Object[])">bootstrapClasspath</link>(classpath)</literal></td><td><para>Adds the given values to the end of the bootstrap classpath for the process.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.testing.Test:copyTo(org.gradle.process.JavaForkOptions)">copyTo</link>(target)</literal></td><td><para>Copies these options to the given options.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.testing.Test:copyTo(org.gradle.process.ProcessForkOptions)">copyTo</link>(target)</literal></td><td><para>Copies these options to the given target options.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.testing.Test:debugOptions(org.gradle.api.Action)">debugOptions</link>(action)</literal></td><td><para>Configures Java Debug Wire Protocol properties for the process. If <apilink class="org.gradle.process.JavaForkOptions" method="setDebug(boolean)"/> is enabled then
the <literal>-agentlib:jdwp=...</literal>  will be appended to the JVM arguments with the configuration from the parameter.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.testing.Test:environment(java.lang.String, java.lang.Object)">environment</link>(name, value)</literal></td><td><para>Adds an environment variable to the environment for this process.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.testing.Test:environment(java.util.Map)">environment</link>(environmentVariables)</literal></td><td><para>Adds some environment variables to the environment for this process.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.testing.Test:exclude(groovy.lang.Closure)">exclude</link>(excludeSpec)</literal></td><td><para>Adds an exclude spec. This method may be called multiple times to append new specs.The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter. The closure should return true or false. Example:

</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.testing.Test:exclude(java.lang.Iterable)">exclude</link>(excludes)</literal></td><td><para>Adds exclude patterns for the files in the test classes directory (e.g. '**/*Test.class')).</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.testing.Test:exclude(java.lang.String[])">exclude</link>(excludes)</literal></td><td><para>Adds exclude patterns for the files in the test classes directory (e.g. '**/*Test.class')).</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.testing.Test:exclude(org.gradle.api.specs.Spec)">exclude</link>(excludeSpec)</literal></td><td><para>Adds an exclude spec. This method may be called multiple times to append new specs.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.testing.Test:executable(java.lang.Object)">executable</link>(executable)</literal></td><td><para>Sets the name of the executable to use.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.testing.Test:include(groovy.lang.Closure)">include</link>(includeSpec)</literal></td><td><para>Adds an include spec. This method may be called multiple times to append new specs. The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.testing.Test:include(java.lang.Iterable)">include</link>(includes)</literal></td><td><para>Adds include patterns for the files in the test classes directory (e.g. '**/*Test.class')).</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.testing.Test:include(java.lang.String[])">include</link>(includes)</literal></td><td><para>Adds include patterns for the files in the test classes directory (e.g. '**/*Test.class')).</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.testing.Test:include(org.gradle.api.specs.Spec)">include</link>(includeSpec)</literal></td><td><para>Adds an include spec. This method may be called multiple times to append new specs.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.testing.Test:jvmArgs(java.lang.Iterable)">jvmArgs</link>(arguments)</literal></td><td><para>Adds some arguments to use to launch the JVM for the process.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.testing.Test:jvmArgs(java.lang.Object[])">jvmArgs</link>(arguments)</literal></td><td><para>Adds some arguments to use to launch the JVM for the process.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.testing.Test:onOutput(groovy.lang.Closure)">onOutput</link>(closure)</literal></td><td><para>Adds a closure to be notified when output from the test received. A <apilink class="org.gradle.api.tasks.testing.TestDescriptor"/> and <apilink class="org.gradle.api.tasks.testing.TestOutputEvent"/> instance are
passed to the closure as a parameter.

</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.testing.Test:options(org.gradle.api.Action)">options</link>(testFrameworkConfigure)</literal></td><td><para>Configures test framework specific options.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.testing.Test:removeTestListener(org.gradle.api.tasks.testing.TestListener)">removeTestListener</link>(listener)</literal></td><td><para>Unregisters a test listener with this task.  This method will only remove listeners that were added by calling <apilink class="org.gradle.api.tasks.testing.AbstractTestTask" method="addTestListener(org.gradle.api.tasks.testing.TestListener)"/> on this task. If the listener was
registered with Gradle using <apilink class="org.gradle.api.invocation.Gradle" method="addListener(java.lang.Object)"/> this method will not do anything. Instead, use <apilink class="org.gradle.api.invocation.Gradle" method="removeListener(java.lang.Object)"/>.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.testing.Test:removeTestOutputListener(org.gradle.api.tasks.testing.TestOutputListener)">removeTestOutputListener</link>(listener)</literal></td><td><para>Unregisters a test output listener with this task.  This method will only remove listeners that were added by calling <apilink class="org.gradle.api.tasks.testing.AbstractTestTask" method="addTestOutputListener(org.gradle.api.tasks.testing.TestOutputListener)"/> on this task.  If the
listener was registered with Gradle using <apilink class="org.gradle.api.invocation.Gradle" method="addListener(java.lang.Object)"/> this method will not do anything. Instead, use <apilink class="org.gradle.api.invocation.Gradle" method="removeListener(java.lang.Object)"/>.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.testing.Test:reports(org.gradle.api.Action)">reports</link>(configureAction)</literal></td><td><para>Configures the reports that this task potentially produces.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.testing.Test:setTestNameIncludePatterns(java.util.List)">setTestNameIncludePatterns</link>(testNamePattern)</literal></td><td><para>Sets the test name patterns to be included in execution.
Classes or method names are supported, wildcard '*' is supported.
For more information see the user guide chapter on testing.

For more information on supported patterns see <apilink class="org.gradle.api.tasks.testing.TestFilter"/></para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.testing.Test:systemProperties(java.util.Map)">systemProperties</link>(properties)</literal></td><td><para>Adds some system properties to use for the process.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.testing.Test:useJUnit()">useJUnit</link>()</literal></td><td><para>Specifies that JUnit4 should be used to discover and execute the tests.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.testing.Test:useJUnit(groovy.lang.Closure)">useJUnit</link>(testFrameworkConfigure)</literal></td><td><para>Specifies that JUnit4 should be used to discover and execute the tests with additional configuration.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.testing.Test:useJUnit(org.gradle.api.Action)">useJUnit</link>(testFrameworkConfigure)</literal></td><td><para>Specifies that JUnit4 should be used to discover and execute the tests with additional configuration.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.testing.Test:useJUnitPlatform()">useJUnitPlatform</link>()</literal></td><td><para>Specifies that JUnit Platform should be used to discover and execute the tests.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.testing.Test:useJUnitPlatform(org.gradle.api.Action)">useJUnitPlatform</link>(testFrameworkConfigure)</literal></td><td><para>Specifies that JUnit Platform should be used to discover and execute the tests with additional configuration.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.testing.Test:useTestNG()">useTestNG</link>()</literal></td><td><para>Specifies that TestNG should be used to discover and execute the tests.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.testing.Test:useTestNG(groovy.lang.Closure)">useTestNG</link>(testFrameworkConfigure)</literal></td><td><para>Specifies that TestNG should be used to discover and execute the tests with additional configuration.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.testing.Test:useTestNG(org.gradle.api.Action)">useTestNG</link>(testFrameworkConfigure)</literal></td><td><para>Specifies that TestNG should be used to discover and execute the tests with additional configuration.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.testing.Test:workingDir(java.lang.Object)">workingDir</link>(dir)</literal></td><td><para>Sets the working directory for the process. The supplied argument is evaluated as per <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/>.</para></td></tr></table></section><section><title>Script blocks</title><table><title>Script blocks - Test</title><thead><tr><td>Block</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.tasks.testing.Test:options(groovy.lang.Closure)"><literal>options</literal></link></td><td><para>Configures test framework specific options.
</para></td></tr></table><section><title>Script blocks added by the <literal>jacoco</literal> plugin</title><titleabbrev><literal>jacoco</literal> plugin</titleabbrev><table><title>Script blocks - <literal>jacoco</literal> plugin</title><thead><tr><td>Block</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.tasks.testing.Test:jacoco(groovy.lang.Closure)"><literal>jacoco</literal></link></td><td><para>Configures the <apilink class="org.gradle.testing.jacoco.plugins.JacocoTaskExtension"/> added by the jacoco plugin.</para></td></tr></table></section></section><section><title>Property details</title><section id="org.gradle.api.tasks.testing.Test:allJvmArgs" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/List.html"><classname>List</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>allJvmArgs</literal></title><para>The full set of arguments to use to launch the JVM for the process. This includes arguments to define
system properties, the minimum/maximum heap size, and the bootstrap classpath.</para></section><section id="org.gradle.api.tasks.testing.Test:binaryResultsDirectory" role="detail"><title><apilink class="org.gradle.api.file.DirectoryProperty"/> <literal>binaryResultsDirectory</literal></title><para>The root directory property for the test results in internal binary format.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal><replaceable>project.testResultsDir</replaceable>/binary/<replaceable>task.name</replaceable></literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.testing.Test:bootstrapClasspath" role="detail"><title><apilink class="org.gradle.api.file.FileCollection"/> <literal>bootstrapClasspath</literal></title><para>The bootstrap classpath to use for the process. The default bootstrap classpath for the JVM is used when
this classpath is empty.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>[]</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.testing.Test:classpath" role="detail"><title><apilink class="org.gradle.api.file.FileCollection"/> <literal>classpath</literal></title><para>The classpath to use to execute the tests.</para></section><section id="org.gradle.api.tasks.testing.Test:debug" role="detail"><title><classname>boolean</classname> <literal>debug</literal></title><para>Determines whether debugging is enabled for the test process. When enabled — <literal>debug = true</literal> — the process
is started in a suspended state, listening on port 5005. You should disable parallel test execution when
debugging and you will need to reattach the debugger occasionally if you use a non-zero value for
<apilink class="org.gradle.api.tasks.testing.Test" method="getForkEvery()"/>.
</para><para>
Since Gradle 5.6, you can configure the port and other Java debug properties via
<apilink class="org.gradle.process.JavaForkOptions" method="debugOptions(org.gradle.api.Action)"/>.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>false</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.testing.Test:debugOptions" role="detail"><title><apilink class="org.gradle.process.JavaDebugOptions"/> <literal>debugOptions</literal> (read-only)</title><para>The Java Debug Wire Protocol properties for the process. If enabled then the <literal>-agentlib:jdwp=...</literal>
will be appended to the JVM arguments with the configuration from the parameter.</para></section><section id="org.gradle.api.tasks.testing.Test:dryRun" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html"><classname>Boolean</classname></ulink>&gt;</classname> <literal>dryRun</literal></title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Indicates if this task will skip individual test execution.

</para><para>
For JUnit 4 and 5, this will report tests that would have executed as skipped.
For TestNG, this will report tests that would have executed as passed.
</para><para>
Only versions of TestNG which support native dry-running are supported, i.e. TestNG 6.14 or later.
</para></section><section id="org.gradle.api.tasks.testing.Test:enableAssertions" role="detail"><title><classname>boolean</classname> <literal>enableAssertions</literal></title><para>Returns true if assertions are enabled for the process.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal><literal>true</literal></literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.testing.Test:environment" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink>&gt;</classname> <literal>environment</literal></title><para>The environment variables to use for the process. Defaults to the environment of this process.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg>environment of the current process</seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.testing.Test:excludes" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>excludes</literal></title><para>The exclude patterns for test execution.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg>[]</seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.testing.Test:executable" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>executable</literal></title><para>The name of the executable to use.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><command>java</command> launcher provided by <literal>java.toolchain</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.testing.Test:failFast" role="detail"><title><classname>boolean</classname> <literal>failFast</literal></title><para>Indicates if this task will fail on the first failed test</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>false</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.testing.Test:failOnNoDiscoveredTests" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html"><classname>Boolean</classname></ulink>&gt;</classname> <literal>failOnNoDiscoveredTests</literal></title><para>Whether the task should fail if test sources are present, but no tests are discovered during test execution.  Defaults to true.</para></section><section id="org.gradle.api.tasks.testing.Test:forkEvery" role="detail"><title><classname>long</classname> <literal>forkEvery</literal></title><para>The maximum number of test classes to execute in a forked test process. The forked test process will be restarted when this limit is reached.

</para><para>
By default, Gradle automatically uses a separate JVM when executing tests.
</para><itemizedlist><listitem>A value of <literal>0</literal> (no limit) means to reuse the test process for all test classes. This is the default.</listitem><listitem>A value of <literal>1</literal> means that a new test process is started for <emphasis>every</emphasis> test class. <emphasis>This is very expensive.</emphasis></listitem><listitem>A value of <literal>N</literal> means that a new test process is started after <literal>N</literal> test classes.</listitem></itemizedlist><para>
This property can have a large impact on performance due to the cost of stopping and starting each test process. It is unusual for this property to be changed from the default.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>0</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.testing.Test:ignoreFailures" role="detail"><title><classname>boolean</classname> <literal>ignoreFailures</literal></title><para>Specifies whether the build should break when the verifications performed by this task fail.</para></section><section id="org.gradle.api.tasks.testing.Test:includes" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>includes</literal></title><para>The include patterns for test execution.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg>[]</seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.testing.Test:javaLauncher" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<apilink class="org.gradle.jvm.toolchain.JavaLauncher"/>&gt;</classname> <literal>javaLauncher</literal></title><para>Configures the java executable to be used to run the tests.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>java.toolchain</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.testing.Test:jvmArgs" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/List.html"><classname>List</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>jvmArgs</literal></title><para>The extra arguments to use to launch the JVM for the process. Does not include system properties and the
minimum/maximum heap size.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>[]</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.testing.Test:jvmArgumentProviders" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/List.html"><classname>List</classname></ulink>&lt;<apilink class="org.gradle.process.CommandLineArgumentProvider"/>&gt;</classname> <literal>jvmArgumentProviders</literal> (read-only)</title><para>Command line argument providers for the java process to fork.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>[]</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.testing.Test:maxHeapSize" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>maxHeapSize</literal></title><para>The maximum heap size for the process, if any.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>null</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.testing.Test:maxParallelForks" role="detail"><title><classname>int</classname> <literal>maxParallelForks</literal></title><para>The maximum number of test processes to start in parallel.

</para><para>
By default, Gradle executes a single test class at a time.
</para><itemizedlist><listitem>A value of <literal>1</literal> means to only execute a single test class in a single test process at a time. This is the default.</listitem><listitem>A value of <literal>N</literal> means that up to <literal>N</literal> test processes will be started to execute test classes. <emphasis>This can improve test execution time by running multiple test classes in parallel.</emphasis></listitem></itemizedlist><para>

This property cannot exceed the value of max-workers for the current build. Gradle will also limit the number of started test processes across all <apilink class="org.gradle.api.tasks.testing.Test"/> tasks.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>1</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.testing.Test:minHeapSize" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>minHeapSize</literal></title><para>The minimum heap size for the process, if any.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>null</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.testing.Test:modularity" role="detail"><title><apilink class="org.gradle.api.jvm.ModularitySpec"/> <literal>modularity</literal> (read-only)</title><para>The module path handling of this test task.</para></section><section id="org.gradle.api.tasks.testing.Test:options" role="detail"><title><apilink class="org.gradle.api.tasks.testing.TestFrameworkOptions"/> <literal>options</literal> (read-only)</title><para>Returns test framework specific options. Make sure to call <apilink class="org.gradle.api.tasks.testing.Test" method="useJUnit()"/>, <apilink class="org.gradle.api.tasks.testing.Test" method="useJUnitPlatform()"/> or <apilink class="org.gradle.api.tasks.testing.Test" method="useTestNG()"/> before using this method.</para></section><section id="org.gradle.api.tasks.testing.Test:reports" role="detail"><title><apilink class="org.gradle.api.tasks.testing.TestTaskReports"/> <literal>reports</literal> (read-only)</title><para>The reports that this task potentially produces.</para></section><section id="org.gradle.api.tasks.testing.Test:scanForTestClasses" role="detail"><title><classname>boolean</classname> <literal>scanForTestClasses</literal></title><para>Specifies whether test classes should be detected. When <literal>true</literal> the classes which match the include and exclude patterns are scanned for test classes, and any found are executed. When
<literal>false</literal> the classes which match the include and exclude patterns are executed.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>true</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.testing.Test:systemProperties" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink>&gt;</classname> <literal>systemProperties</literal></title><para>The system properties which will be used for the process.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>[:]</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.testing.Test:testClassesDirs" role="detail"><title><apilink class="org.gradle.api.file.FileCollection"/> <literal>testClassesDirs</literal></title><para>The directories for the compiled test sources.</para></section><section id="org.gradle.api.tasks.testing.Test:testLogging" role="detail"><title><apilink class="org.gradle.api.tasks.testing.logging.TestLoggingContainer"/> <literal>testLogging</literal> (read-only)</title><para>Allows to set options related to which test events are logged to the console, and on which detail level. For example, to show more information about exceptions use:

</para><programlisting language="java">
apply plugin: 'java'

test.testLogging {
    exceptionFormat = "full"
}
</programlisting><para>

For further information see <apilink class="org.gradle.api.tasks.testing.logging.TestLoggingContainer"/>.</para></section><section id="org.gradle.api.tasks.testing.Test:workingDir" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>workingDir</literal></title><para>The working directory for the process. Defaults to the project directory.</para><segmentedlist><segtitle>Default with <literal>java</literal> plugin</segtitle><seglistitem><seg><literal>project.projectDir</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.testing.Test:jacoco" role="detail"><title><apilink class="org.gradle.testing.jacoco.plugins.JacocoTaskExtension"/> <literal>jacoco</literal> (read-only)</title><para>The <apilink class="org.gradle.testing.jacoco.plugins.JacocoTaskExtension"/> added by the jacoco plugin.</para></section></section><section><title>Method details</title><section id="org.gradle.api.tasks.testing.Test:addTestListener(org.gradle.api.tasks.testing.TestListener)" role="detail"><title><classname>void</classname> <literal>addTestListener</literal>(<apilink class="org.gradle.api.tasks.testing.TestListener"/> listener)</title><para>Registers a test listener with this task. Consider also the following handy methods for quicker hooking into test execution: <apilink class="org.gradle.api.tasks.testing.AbstractTestTask" method="beforeTest(groovy.lang.Closure)"/>, <apilink class="org.gradle.api.tasks.testing.AbstractTestTask" method="afterTest(groovy.lang.Closure)"/>, <apilink class="org.gradle.api.tasks.testing.AbstractTestTask" method="beforeSuite(groovy.lang.Closure)"/>, <apilink class="org.gradle.api.tasks.testing.AbstractTestTask" method="afterSuite(groovy.lang.Closure)"/> </para><para> This listener will NOT be notified of tests executed by other tasks. To
get that behavior, use <apilink class="org.gradle.api.invocation.Gradle" method="addListener(java.lang.Object)"/>.</para></section><section id="org.gradle.api.tasks.testing.Test:addTestOutputListener(org.gradle.api.tasks.testing.TestOutputListener)" role="detail"><title><classname>void</classname> <literal>addTestOutputListener</literal>(<apilink class="org.gradle.api.tasks.testing.TestOutputListener"/> listener)</title><para>Registers a output listener with this task. Quicker way of hooking into output events is using the <apilink class="org.gradle.api.tasks.testing.AbstractTestTask" method="onOutput(groovy.lang.Closure)"/> method.</para></section><section id="org.gradle.api.tasks.testing.Test:afterSuite(groovy.lang.Closure)" role="detail"><title><classname>void</classname> <literal>afterSuite</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> closure)</title><para>Adds a closure to be notified after a test suite has executed. A <apilink class="org.gradle.api.tasks.testing.TestDescriptor"/> and <apilink class="org.gradle.api.tasks.testing.TestResult"/> instance are passed to the closure as a
parameter.</para><para>This method is also called after all test suites are executed. The provided descriptor will have a null parent suite.</para></section><section id="org.gradle.api.tasks.testing.Test:afterTest(groovy.lang.Closure)" role="detail"><title><classname>void</classname> <literal>afterTest</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> closure)</title><para>Adds a closure to be notified after a test has executed. A <apilink class="org.gradle.api.tasks.testing.TestDescriptor"/> and <apilink class="org.gradle.api.tasks.testing.TestResult"/> instance are passed to the closure as a parameter.</para></section><section id="org.gradle.api.tasks.testing.Test:beforeSuite(groovy.lang.Closure)" role="detail"><title><classname>void</classname> <literal>beforeSuite</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> closure)</title><para>Adds a closure to be notified before a test suite is executed. A <apilink class="org.gradle.api.tasks.testing.TestDescriptor"/> instance is passed to the closure as a parameter.</para><para>This method is also called before any test suites are executed. The provided descriptor will have a null parent suite.</para></section><section id="org.gradle.api.tasks.testing.Test:beforeTest(groovy.lang.Closure)" role="detail"><title><classname>void</classname> <literal>beforeTest</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> closure)</title><para>Adds a closure to be notified before a test is executed. A <apilink class="org.gradle.api.tasks.testing.TestDescriptor"/> instance is passed to the closure as a parameter.</para></section><section id="org.gradle.api.tasks.testing.Test:bootstrapClasspath(java.lang.Object[])" role="detail"><title><apilink class="org.gradle.api.tasks.testing.Test"/> <literal>bootstrapClasspath</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink>...</classname> classpath)</title><para>Adds the given values to the end of the bootstrap classpath for the process.</para></section><section id="org.gradle.api.tasks.testing.Test:copyTo(org.gradle.process.JavaForkOptions)" role="detail"><title><apilink class="org.gradle.api.tasks.testing.Test"/> <literal>copyTo</literal>(<apilink class="org.gradle.process.JavaForkOptions"/> target)</title><para>Copies these options to the given options.</para></section><section id="org.gradle.api.tasks.testing.Test:copyTo(org.gradle.process.ProcessForkOptions)" role="detail"><title><apilink class="org.gradle.api.tasks.testing.Test"/> <literal>copyTo</literal>(<apilink class="org.gradle.process.ProcessForkOptions"/> target)</title><para>Copies these options to the given target options.</para></section><section id="org.gradle.api.tasks.testing.Test:debugOptions(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>debugOptions</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;<apilink class="org.gradle.process.JavaDebugOptions"/>&gt;</classname> action)</title><para>Configures Java Debug Wire Protocol properties for the process. If <apilink class="org.gradle.process.JavaForkOptions" method="setDebug(boolean)"/> is enabled then
the <literal>-agentlib:jdwp=...</literal>  will be appended to the JVM arguments with the configuration from the parameter.</para></section><section id="org.gradle.api.tasks.testing.Test:environment(java.lang.String, java.lang.Object)" role="detail"><title><apilink class="org.gradle.api.tasks.testing.Test"/> <literal>environment</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> value)</title><para>Adds an environment variable to the environment for this process.</para></section><section id="org.gradle.api.tasks.testing.Test:environment(java.util.Map)" role="detail"><title><apilink class="org.gradle.api.tasks.testing.Test"/> <literal>environment</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, ?&gt;</classname> environmentVariables)</title><para>Adds some environment variables to the environment for this process.</para></section><section id="org.gradle.api.tasks.testing.Test:exclude(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.testing.Test"/> <literal>exclude</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> excludeSpec)</title><para>Adds an exclude spec. This method may be called multiple times to append new specs.The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter. The closure should return true or false. Example:

</para><para><programlisting language="java">
copySpec {
  from 'source'
  into 'destination'
  //an example of excluding files from certain configuration:
  exclude { it.file in configurations.someConf.files }
}
</programlisting></para><para>

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.api.tasks.testing.Test:exclude(java.lang.Iterable)" role="detail"><title><apilink class="org.gradle.api.tasks.testing.Test"/> <literal>exclude</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> excludes)</title><para>Adds exclude patterns for the files in the test classes directory (e.g. '**/*Test.class')).</para></section><section id="org.gradle.api.tasks.testing.Test:exclude(java.lang.String[])" role="detail"><title><apilink class="org.gradle.api.tasks.testing.Test"/> <literal>exclude</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>...</classname> excludes)</title><para>Adds exclude patterns for the files in the test classes directory (e.g. '**/*Test.class')).</para></section><section id="org.gradle.api.tasks.testing.Test:exclude(org.gradle.api.specs.Spec)" role="detail"><title><apilink class="org.gradle.api.tasks.testing.Test"/> <literal>exclude</literal>(<classname><apilink class="org.gradle.api.specs.Spec"/>&lt;<apilink class="org.gradle.api.file.FileTreeElement"/>&gt;</classname> excludeSpec)</title><para>Adds an exclude spec. This method may be called multiple times to append new specs.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.api.tasks.testing.Test:executable(java.lang.Object)" role="detail"><title><apilink class="org.gradle.api.tasks.testing.Test"/> <literal>executable</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> executable)</title><para>Sets the name of the executable to use.</para></section><section id="org.gradle.api.tasks.testing.Test:include(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.testing.Test"/> <literal>include</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> includeSpec)</title><para>Adds an include spec. This method may be called multiple times to append new specs. The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></section><section id="org.gradle.api.tasks.testing.Test:include(java.lang.Iterable)" role="detail"><title><apilink class="org.gradle.api.tasks.testing.Test"/> <literal>include</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> includes)</title><para>Adds include patterns for the files in the test classes directory (e.g. '**/*Test.class')).</para></section><section id="org.gradle.api.tasks.testing.Test:include(java.lang.String[])" role="detail"><title><apilink class="org.gradle.api.tasks.testing.Test"/> <literal>include</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>...</classname> includes)</title><para>Adds include patterns for the files in the test classes directory (e.g. '**/*Test.class')).</para></section><section id="org.gradle.api.tasks.testing.Test:include(org.gradle.api.specs.Spec)" role="detail"><title><apilink class="org.gradle.api.tasks.testing.Test"/> <literal>include</literal>(<classname><apilink class="org.gradle.api.specs.Spec"/>&lt;<apilink class="org.gradle.api.file.FileTreeElement"/>&gt;</classname> includeSpec)</title><para>Adds an include spec. This method may be called multiple times to append new specs.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></section><section id="org.gradle.api.tasks.testing.Test:jvmArgs(java.lang.Iterable)" role="detail"><title><apilink class="org.gradle.api.tasks.testing.Test"/> <literal>jvmArgs</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;?&gt;</classname> arguments)</title><para>Adds some arguments to use to launch the JVM for the process.</para></section><section id="org.gradle.api.tasks.testing.Test:jvmArgs(java.lang.Object[])" role="detail"><title><apilink class="org.gradle.api.tasks.testing.Test"/> <literal>jvmArgs</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink>...</classname> arguments)</title><para>Adds some arguments to use to launch the JVM for the process.</para></section><section id="org.gradle.api.tasks.testing.Test:onOutput(groovy.lang.Closure)" role="detail"><title><classname>void</classname> <literal>onOutput</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> closure)</title><para>Adds a closure to be notified when output from the test received. A <apilink class="org.gradle.api.tasks.testing.TestDescriptor"/> and <apilink class="org.gradle.api.tasks.testing.TestOutputEvent"/> instance are
passed to the closure as a parameter.

</para><programlisting language="java">
apply plugin: 'java'

test {
   onOutput { descriptor, event -&gt;
       if (event.destination == TestOutputEvent.Destination.StdErr) {
           logger.error("Test: " + descriptor + ", error: " + event.message)
       }
   }
}
</programlisting></section><section id="org.gradle.api.tasks.testing.Test:options(org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.tasks.testing.TestFrameworkOptions"/> <literal>options</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.tasks.testing.TestFrameworkOptions"/>&gt;</classname> testFrameworkConfigure)</title><para>Configures test framework specific options.
</para><para>
When a <literal>Test</literal> task is created outside of Test Suites, you should call <apilink class="org.gradle.api.tasks.testing.Test" method="useJUnit()"/>, <apilink class="org.gradle.api.tasks.testing.Test" method="useJUnitPlatform()"/> or <apilink class="org.gradle.api.tasks.testing.Test" method="useTestNG()"/> before using this method.
If no test framework has been set, the task will assume JUnit4.</para></section><section id="org.gradle.api.tasks.testing.Test:removeTestListener(org.gradle.api.tasks.testing.TestListener)" role="detail"><title><classname>void</classname> <literal>removeTestListener</literal>(<apilink class="org.gradle.api.tasks.testing.TestListener"/> listener)</title><para>Unregisters a test listener with this task.  This method will only remove listeners that were added by calling <apilink class="org.gradle.api.tasks.testing.AbstractTestTask" method="addTestListener(org.gradle.api.tasks.testing.TestListener)"/> on this task. If the listener was
registered with Gradle using <apilink class="org.gradle.api.invocation.Gradle" method="addListener(java.lang.Object)"/> this method will not do anything. Instead, use <apilink class="org.gradle.api.invocation.Gradle" method="removeListener(java.lang.Object)"/>.</para></section><section id="org.gradle.api.tasks.testing.Test:removeTestOutputListener(org.gradle.api.tasks.testing.TestOutputListener)" role="detail"><title><classname>void</classname> <literal>removeTestOutputListener</literal>(<apilink class="org.gradle.api.tasks.testing.TestOutputListener"/> listener)</title><para>Unregisters a test output listener with this task.  This method will only remove listeners that were added by calling <apilink class="org.gradle.api.tasks.testing.AbstractTestTask" method="addTestOutputListener(org.gradle.api.tasks.testing.TestOutputListener)"/> on this task.  If the
listener was registered with Gradle using <apilink class="org.gradle.api.invocation.Gradle" method="addListener(java.lang.Object)"/> this method will not do anything. Instead, use <apilink class="org.gradle.api.invocation.Gradle" method="removeListener(java.lang.Object)"/>.</para></section><section id="org.gradle.api.tasks.testing.Test:reports(org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.tasks.testing.TestTaskReports"/> <literal>reports</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.tasks.testing.TestTaskReports"/>&gt;</classname> configureAction)</title><para>Configures the reports that this task potentially produces.</para></section><section id="org.gradle.api.tasks.testing.Test:setTestNameIncludePatterns(java.util.List)" role="detail"><title><apilink class="org.gradle.api.tasks.testing.AbstractTestTask"/> <literal>setTestNameIncludePatterns</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/List.html"><classname>List</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> testNamePattern)</title><para>Sets the test name patterns to be included in execution.
Classes or method names are supported, wildcard '*' is supported.
For more information see the user guide chapter on testing.

For more information on supported patterns see <apilink class="org.gradle.api.tasks.testing.TestFilter"/></para></section><section id="org.gradle.api.tasks.testing.Test:systemProperties(java.util.Map)" role="detail"><title><apilink class="org.gradle.api.tasks.testing.Test"/> <literal>systemProperties</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, ? extends <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink>&gt;</classname> properties)</title><para>Adds some system properties to use for the process.</para></section><section id="org.gradle.api.tasks.testing.Test:useJUnit()" role="detail"><title><classname>void</classname> <literal>useJUnit</literal>()</title><para>Specifies that JUnit4 should be used to discover and execute the tests.</para></section><section id="org.gradle.api.tasks.testing.Test:useJUnit(groovy.lang.Closure)" role="detail"><title><classname>void</classname> <literal>useJUnit</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> testFrameworkConfigure)</title><para>Specifies that JUnit4 should be used to discover and execute the tests with additional configuration.
</para><para>
The supplied action configures an instance of <apilink class="org.gradle.api.tasks.testing.junit.JUnitOptions"/>.</para></section><section id="org.gradle.api.tasks.testing.Test:useJUnit(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>useJUnit</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.tasks.testing.junit.JUnitOptions"/>&gt;</classname> testFrameworkConfigure)</title><para>Specifies that JUnit4 should be used to discover and execute the tests with additional configuration.
</para><para>
The supplied action configures an instance of <apilink class="org.gradle.api.tasks.testing.junit.JUnitOptions"/>.</para></section><section id="org.gradle.api.tasks.testing.Test:useJUnitPlatform()" role="detail"><title><classname>void</classname> <literal>useJUnitPlatform</literal>()</title><para>Specifies that JUnit Platform should be used to discover and execute the tests.
</para><para>
Use this option if your tests use JUnit Jupiter/JUnit5.
</para><para>
JUnit Platform supports multiple test engines, which allows other testing frameworks to be built on top of it.
You may need to use this option even if you are not using JUnit directly.</para></section><section id="org.gradle.api.tasks.testing.Test:useJUnitPlatform(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>useJUnitPlatform</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.tasks.testing.junitplatform.JUnitPlatformOptions"/>&gt;</classname> testFrameworkConfigure)</title><para>Specifies that JUnit Platform should be used to discover and execute the tests with additional configuration.
</para><para>
Use this option if your tests use JUnit Jupiter/JUnit5.
</para><para>
JUnit Platform supports multiple test engines, which allows other testing frameworks to be built on top of it.
You may need to use this option even if you are not using JUnit directly.
</para><para>
The supplied action configures an instance of <apilink class="org.gradle.api.tasks.testing.junitplatform.JUnitPlatformOptions"/>.</para></section><section id="org.gradle.api.tasks.testing.Test:useTestNG()" role="detail"><title><classname>void</classname> <literal>useTestNG</literal>()</title><para>Specifies that TestNG should be used to discover and execute the tests.</para></section><section id="org.gradle.api.tasks.testing.Test:useTestNG(groovy.lang.Closure)" role="detail"><title><classname>void</classname> <literal>useTestNG</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> testFrameworkConfigure)</title><para>Specifies that TestNG should be used to discover and execute the tests with additional configuration.
</para><para>
The supplied action configures an instance of <apilink class="org.gradle.api.tasks.testing.testng.TestNGOptions"/>.</para></section><section id="org.gradle.api.tasks.testing.Test:useTestNG(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>useTestNG</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.tasks.testing.testng.TestNGOptions"/>&gt;</classname> testFrameworkConfigure)</title><para>Specifies that TestNG should be used to discover and execute the tests with additional configuration.
</para><para>
The supplied action configures an instance of <apilink class="org.gradle.api.tasks.testing.testng.TestNGOptions"/>.</para></section><section id="org.gradle.api.tasks.testing.Test:workingDir(java.lang.Object)" role="detail"><title><apilink class="org.gradle.api.tasks.testing.Test"/> <literal>workingDir</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> dir)</title><para>Sets the working directory for the process. The supplied argument is evaluated as per <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/>.</para></section></section><section><title>Script block details</title><section id="org.gradle.api.tasks.testing.Test:options(groovy.lang.Closure)" role="detail"><title><literal>options</literal> { }</title><para>Configures test framework specific options.
</para><para>
When a <literal>Test</literal> task is created outside of Test Suites, you should call <apilink class="org.gradle.api.tasks.testing.Test" method="useJUnit()"/>, <apilink class="org.gradle.api.tasks.testing.Test" method="useJUnitPlatform()"/> or <apilink class="org.gradle.api.tasks.testing.Test" method="useTestNG()"/> before using this method.
If no test framework has been set, the task will assume JUnit4.</para><segmentedlist><segtitle>Delegates to</segtitle><seglistitem><seg><apilink class="org.gradle.api.tasks.testing.TestFrameworkOptions"/> from <link linkend="org.gradle.api.tasks.testing.Test:options"><literal>options</literal></link></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.testing.Test:jacoco(groovy.lang.Closure)" role="detail"><title><literal>jacoco</literal> { }</title><para>Configures the <apilink class="org.gradle.testing.jacoco.plugins.JacocoTaskExtension"/> added by the jacoco plugin.</para><segmentedlist><segtitle>Delegates to</segtitle><seglistitem><seg><apilink class="org.gradle.testing.jacoco.plugins.JacocoTaskExtension"/> from <link linkend="org.gradle.api.tasks.testing.Test:jacoco"><literal>jacoco</literal></link></seg></seglistitem></segmentedlist></section></section></chapter><chapter id="org.gradle.api.tasks.testing.logging.TestLogging"><title>TestLogging</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.tasks.testing.logging.TestLogging" style="javadoc"/></seg></seglistitem></segmentedlist><segmentedlist><segtitle>Known Subtypes</segtitle><seglistitem><seg><simplelist columns="1" type="vert"><member><apilink class="org.gradle.api.tasks.testing.logging.TestLoggingContainer"/></member></simplelist></seg></seglistitem></segmentedlist><para>Options that determine which test events get logged, and at which detail.</para><section><title>Properties</title><table><title>Properties - TestLogging</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.tasks.testing.logging.TestLogging:displayGranularity"><literal>displayGranularity</literal></link></td><td><para>The display granularity of the events to be logged. For example, if set to 0, a method-level event will be displayed as "Test Run &gt; Test Worker x &gt; org.SomeClass &gt; org.someMethod". If
set to 2, the same event will be displayed as "org.someClass &gt; org.someMethod". </para></td></tr><tr><td><link linkend="org.gradle.api.tasks.testing.logging.TestLogging:events"><literal>events</literal></link></td><td><para>The events to be logged.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.testing.logging.TestLogging:exceptionFormat"><literal>exceptionFormat</literal></link></td><td><para>The format to be used for logging test exceptions. Only relevant if <literal>showStackTraces</literal> is <literal>true</literal>.  Defaults to <apilink class="org.gradle.api.tasks.testing.logging.TestExceptionFormat" method="FULL"/> for
the INFO and DEBUG log levels and <apilink class="org.gradle.api.tasks.testing.logging.TestExceptionFormat" method="SHORT"/> for the LIFECYCLE log level.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.testing.logging.TestLogging:maxGranularity"><literal>maxGranularity</literal></link></td><td><para>The maximum granularity of the events to be logged. Typically, 0 corresponds to the Gradle-generated test suite for the whole test run, 1 corresponds to the Gradle-generated test suite
for a particular test JVM, 2 corresponds to a test class, and 3 corresponds to a test method. These values may extend higher if user-defined suites or parameterized test methods are executed.  Events
from levels higher than the specified granularity will be ignored.
</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.testing.logging.TestLogging:minGranularity"><literal>minGranularity</literal></link></td><td><para>The minimum granularity of the events to be logged. Typically, 0 corresponds to events from the Gradle-generated test suite for the whole test run, 1 corresponds to the Gradle-generated test suite
for a particular test JVM, 2 corresponds to a test class, and 3 corresponds to a test method. These values may extend higher if user-defined suites or parameterized test methods are executed.  Events
from levels lower than the specified granularity will be ignored.
</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.testing.logging.TestLogging:showCauses"><literal>showCauses</literal></link></td><td><para>Tells whether causes of exceptions that occur during test execution will be logged. Only relevant if <literal>showExceptions</literal> is <literal>true</literal>.  Defaults to true.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.testing.logging.TestLogging:showExceptions"><literal>showExceptions</literal></link></td><td><para>Tells whether exceptions that occur during test execution will be logged. Typically these exceptions coincide with a "failed" event.  Defaults to true.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.testing.logging.TestLogging:showStackTraces"><literal>showStackTraces</literal></link></td><td><para>Tells whether stack traces of exceptions that occur during test execution will be logged.  Defaults to true.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.testing.logging.TestLogging:showStandardStreams"><literal>showStandardStreams</literal></link></td><td><para>Tells whether output on standard out and standard error will be logged. Equivalent to checking if both log events <literal>TestLogEvent.STANDARD_OUT</literal> and <literal>TestLogEvent.STANDARD_ERROR</literal> are
set.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.testing.logging.TestLogging:stackTraceFilters"><literal>stackTraceFilters</literal></link></td><td><para>The set of filters to be used for sanitizing test stack traces.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.tasks.testing.logging.TestLogging:displayGranularity" role="detail"><title><classname>int</classname> <literal>displayGranularity</literal></title><para>The display granularity of the events to be logged. For example, if set to 0, a method-level event will be displayed as "Test Run &gt; Test Worker x &gt; org.SomeClass &gt; org.someMethod". If
set to 2, the same event will be displayed as "org.someClass &gt; org.someMethod". </para><para>-1 denotes the highest granularity and corresponds to an atomic test.</para></section><section id="org.gradle.api.tasks.testing.logging.TestLogging:events" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<apilink class="org.gradle.api.tasks.testing.logging.TestLogEvent"/>&gt;</classname> <literal>events</literal></title><para>The events to be logged.</para></section><section id="org.gradle.api.tasks.testing.logging.TestLogging:exceptionFormat" role="detail"><title><apilink class="org.gradle.api.tasks.testing.logging.TestExceptionFormat"/> <literal>exceptionFormat</literal></title><para>The format to be used for logging test exceptions. Only relevant if <literal>showStackTraces</literal> is <literal>true</literal>.  Defaults to <apilink class="org.gradle.api.tasks.testing.logging.TestExceptionFormat" method="FULL"/> for
the INFO and DEBUG log levels and <apilink class="org.gradle.api.tasks.testing.logging.TestExceptionFormat" method="SHORT"/> for the LIFECYCLE log level.</para></section><section id="org.gradle.api.tasks.testing.logging.TestLogging:maxGranularity" role="detail"><title><classname>int</classname> <literal>maxGranularity</literal></title><para>The maximum granularity of the events to be logged. Typically, 0 corresponds to the Gradle-generated test suite for the whole test run, 1 corresponds to the Gradle-generated test suite
for a particular test JVM, 2 corresponds to a test class, and 3 corresponds to a test method. These values may extend higher if user-defined suites or parameterized test methods are executed.  Events
from levels higher than the specified granularity will be ignored.
</para><para>The default granularity is -1, which specifies that test events from only the most granular level should be logged.  Setting this value to something lower will cause events
from a higher level to be ignored.  For example, setting the value to 3 will cause only events from the test method level to be logged and any events from iterations of a parameterized test method
will be ignored.</para></section><section id="org.gradle.api.tasks.testing.logging.TestLogging:minGranularity" role="detail"><title><classname>int</classname> <literal>minGranularity</literal></title><para>The minimum granularity of the events to be logged. Typically, 0 corresponds to events from the Gradle-generated test suite for the whole test run, 1 corresponds to the Gradle-generated test suite
for a particular test JVM, 2 corresponds to a test class, and 3 corresponds to a test method. These values may extend higher if user-defined suites or parameterized test methods are executed.  Events
from levels lower than the specified granularity will be ignored.
</para><para>The default granularity is -1, which specifies that test events from only the most granular level should be logged.  In other words, if a test method is not parameterized, only events
from the test method will be logged and events from the test class and lower will be ignored.  On the other hand, if a test method is parameterized, then events from the iterations of that test
method will be logged and events from the test method and lower will be ignored.</para></section><section id="org.gradle.api.tasks.testing.logging.TestLogging:showCauses" role="detail"><title><classname>boolean</classname> <literal>showCauses</literal></title><para>Tells whether causes of exceptions that occur during test execution will be logged. Only relevant if <literal>showExceptions</literal> is <literal>true</literal>.  Defaults to true.</para></section><section id="org.gradle.api.tasks.testing.logging.TestLogging:showExceptions" role="detail"><title><classname>boolean</classname> <literal>showExceptions</literal></title><para>Tells whether exceptions that occur during test execution will be logged. Typically these exceptions coincide with a "failed" event.  Defaults to true.</para></section><section id="org.gradle.api.tasks.testing.logging.TestLogging:showStackTraces" role="detail"><title><classname>boolean</classname> <literal>showStackTraces</literal></title><para>Tells whether stack traces of exceptions that occur during test execution will be logged.  Defaults to true.</para></section><section id="org.gradle.api.tasks.testing.logging.TestLogging:showStandardStreams" role="detail"><title><classname>boolean</classname> <literal>showStandardStreams</literal></title><para>Tells whether output on standard out and standard error will be logged. Equivalent to checking if both log events <literal>TestLogEvent.STANDARD_OUT</literal> and <literal>TestLogEvent.STANDARD_ERROR</literal> are
set.</para></section><section id="org.gradle.api.tasks.testing.logging.TestLogging:stackTraceFilters" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<apilink class="org.gradle.api.tasks.testing.logging.TestStackTraceFilter"/>&gt;</classname> <literal>stackTraceFilters</literal></title><para>The set of filters to be used for sanitizing test stack traces.</para></section></section></chapter><chapter id="org.gradle.api.tasks.testing.logging.TestLoggingContainer"><title>TestLoggingContainer</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.tasks.testing.logging.TestLoggingContainer" style="javadoc"/></seg></seglistitem></segmentedlist><para>Container for all test logging related options. Different options
can be set for each log level. Options that are set directly (without
specifying a log level) apply to log level LIFECYCLE. Example:

</para><programlisting language="java">
apply plugin: 'java'

test {
    testLogging {
        // set options for log level LIFECYCLE
        events("failed")
        exceptionFormat = "short"

        // set options for log level DEBUG
        debug {
            events("started", "skipped", "failed")
            exceptionFormat = "full"
        }

        // remove standard output/error logging from --info builds
        // by assigning only 'failed' and 'skipped' events
        info.events = ["failed", "skipped"]
    }
}
</programlisting><para>

The defaults that are in place show progressively more information
on log levels WARN, LIFECYCLE, INFO, and DEBUG, respectively.</para><section><title>Properties</title><table><title>Properties - TestLoggingContainer</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.tasks.testing.logging.TestLoggingContainer:debug"><literal>debug</literal></link></td><td><para>Returns logging options for debug level.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.testing.logging.TestLoggingContainer:displayGranularity"><literal>displayGranularity</literal></link></td><td><para>The display granularity of the events to be logged. For example, if set to 0, a method-level event will be displayed as "Test Run &gt; Test Worker x &gt; org.SomeClass &gt; org.someMethod". If
set to 2, the same event will be displayed as "org.someClass &gt; org.someMethod". </para></td></tr><tr><td><link linkend="org.gradle.api.tasks.testing.logging.TestLoggingContainer:error"><literal>error</literal></link></td><td><para>Returns logging options for error level.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.testing.logging.TestLoggingContainer:events"><literal>events</literal></link></td><td><para>The events to be logged.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.testing.logging.TestLoggingContainer:exceptionFormat"><literal>exceptionFormat</literal></link></td><td><para>The format to be used for logging test exceptions. Only relevant if <literal>showStackTraces</literal> is <literal>true</literal>.  Defaults to <apilink class="org.gradle.api.tasks.testing.logging.TestExceptionFormat" method="FULL"/> for
the INFO and DEBUG log levels and <apilink class="org.gradle.api.tasks.testing.logging.TestExceptionFormat" method="SHORT"/> for the LIFECYCLE log level.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.testing.logging.TestLoggingContainer:info"><literal>info</literal></link></td><td><para>Gets logging options for info level.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.testing.logging.TestLoggingContainer:lifecycle"><literal>lifecycle</literal></link></td><td><para>Returns logging options for lifecycle level.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.testing.logging.TestLoggingContainer:maxGranularity"><literal>maxGranularity</literal></link></td><td><para>The maximum granularity of the events to be logged. Typically, 0 corresponds to the Gradle-generated test suite for the whole test run, 1 corresponds to the Gradle-generated test suite
for a particular test JVM, 2 corresponds to a test class, and 3 corresponds to a test method. These values may extend higher if user-defined suites or parameterized test methods are executed.  Events
from levels higher than the specified granularity will be ignored.
</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.testing.logging.TestLoggingContainer:minGranularity"><literal>minGranularity</literal></link></td><td><para>The minimum granularity of the events to be logged. Typically, 0 corresponds to events from the Gradle-generated test suite for the whole test run, 1 corresponds to the Gradle-generated test suite
for a particular test JVM, 2 corresponds to a test class, and 3 corresponds to a test method. These values may extend higher if user-defined suites or parameterized test methods are executed.  Events
from levels lower than the specified granularity will be ignored.
</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.testing.logging.TestLoggingContainer:quiet"><literal>quiet</literal></link></td><td><para>Returns logging options for quiet level.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.testing.logging.TestLoggingContainer:showCauses"><literal>showCauses</literal></link></td><td><para>Tells whether causes of exceptions that occur during test execution will be logged. Only relevant if <literal>showExceptions</literal> is <literal>true</literal>.  Defaults to true.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.testing.logging.TestLoggingContainer:showExceptions"><literal>showExceptions</literal></link></td><td><para>Tells whether exceptions that occur during test execution will be logged. Typically these exceptions coincide with a "failed" event.  Defaults to true.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.testing.logging.TestLoggingContainer:showStackTraces"><literal>showStackTraces</literal></link></td><td><para>Tells whether stack traces of exceptions that occur during test execution will be logged.  Defaults to true.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.testing.logging.TestLoggingContainer:showStandardStreams"><literal>showStandardStreams</literal></link></td><td><para>Tells whether output on standard out and standard error will be logged. Equivalent to checking if both log events <literal>TestLogEvent.STANDARD_OUT</literal> and <literal>TestLogEvent.STANDARD_ERROR</literal> are
set.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.testing.logging.TestLoggingContainer:stackTraceFilters"><literal>stackTraceFilters</literal></link></td><td><para>The set of filters to be used for sanitizing test stack traces.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.testing.logging.TestLoggingContainer:warn"><literal>warn</literal></link></td><td><para>Gets logging options for warn level.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.tasks.testing.logging.TestLoggingContainer:debug" role="detail"><title><apilink class="org.gradle.api.tasks.testing.logging.TestLogging"/> <literal>debug</literal></title><para>Returns logging options for debug level.</para></section><section id="org.gradle.api.tasks.testing.logging.TestLoggingContainer:displayGranularity" role="detail"><title><classname>int</classname> <literal>displayGranularity</literal></title><para>The display granularity of the events to be logged. For example, if set to 0, a method-level event will be displayed as "Test Run &gt; Test Worker x &gt; org.SomeClass &gt; org.someMethod". If
set to 2, the same event will be displayed as "org.someClass &gt; org.someMethod". </para><para>-1 denotes the highest granularity and corresponds to an atomic test.</para></section><section id="org.gradle.api.tasks.testing.logging.TestLoggingContainer:error" role="detail"><title><apilink class="org.gradle.api.tasks.testing.logging.TestLogging"/> <literal>error</literal></title><para>Returns logging options for error level.</para></section><section id="org.gradle.api.tasks.testing.logging.TestLoggingContainer:events" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<apilink class="org.gradle.api.tasks.testing.logging.TestLogEvent"/>&gt;</classname> <literal>events</literal></title><para>The events to be logged.</para></section><section id="org.gradle.api.tasks.testing.logging.TestLoggingContainer:exceptionFormat" role="detail"><title><apilink class="org.gradle.api.tasks.testing.logging.TestExceptionFormat"/> <literal>exceptionFormat</literal></title><para>The format to be used for logging test exceptions. Only relevant if <literal>showStackTraces</literal> is <literal>true</literal>.  Defaults to <apilink class="org.gradle.api.tasks.testing.logging.TestExceptionFormat" method="FULL"/> for
the INFO and DEBUG log levels and <apilink class="org.gradle.api.tasks.testing.logging.TestExceptionFormat" method="SHORT"/> for the LIFECYCLE log level.</para></section><section id="org.gradle.api.tasks.testing.logging.TestLoggingContainer:info" role="detail"><title><apilink class="org.gradle.api.tasks.testing.logging.TestLogging"/> <literal>info</literal></title><para>Gets logging options for info level.</para></section><section id="org.gradle.api.tasks.testing.logging.TestLoggingContainer:lifecycle" role="detail"><title><apilink class="org.gradle.api.tasks.testing.logging.TestLogging"/> <literal>lifecycle</literal></title><para>Returns logging options for lifecycle level.</para></section><section id="org.gradle.api.tasks.testing.logging.TestLoggingContainer:maxGranularity" role="detail"><title><classname>int</classname> <literal>maxGranularity</literal></title><para>The maximum granularity of the events to be logged. Typically, 0 corresponds to the Gradle-generated test suite for the whole test run, 1 corresponds to the Gradle-generated test suite
for a particular test JVM, 2 corresponds to a test class, and 3 corresponds to a test method. These values may extend higher if user-defined suites or parameterized test methods are executed.  Events
from levels higher than the specified granularity will be ignored.
</para><para>The default granularity is -1, which specifies that test events from only the most granular level should be logged.  Setting this value to something lower will cause events
from a higher level to be ignored.  For example, setting the value to 3 will cause only events from the test method level to be logged and any events from iterations of a parameterized test method
will be ignored.</para></section><section id="org.gradle.api.tasks.testing.logging.TestLoggingContainer:minGranularity" role="detail"><title><classname>int</classname> <literal>minGranularity</literal></title><para>The minimum granularity of the events to be logged. Typically, 0 corresponds to events from the Gradle-generated test suite for the whole test run, 1 corresponds to the Gradle-generated test suite
for a particular test JVM, 2 corresponds to a test class, and 3 corresponds to a test method. These values may extend higher if user-defined suites or parameterized test methods are executed.  Events
from levels lower than the specified granularity will be ignored.
</para><para>The default granularity is -1, which specifies that test events from only the most granular level should be logged.  In other words, if a test method is not parameterized, only events
from the test method will be logged and events from the test class and lower will be ignored.  On the other hand, if a test method is parameterized, then events from the iterations of that test
method will be logged and events from the test method and lower will be ignored.</para></section><section id="org.gradle.api.tasks.testing.logging.TestLoggingContainer:quiet" role="detail"><title><apilink class="org.gradle.api.tasks.testing.logging.TestLogging"/> <literal>quiet</literal></title><para>Returns logging options for quiet level.</para></section><section id="org.gradle.api.tasks.testing.logging.TestLoggingContainer:showCauses" role="detail"><title><classname>boolean</classname> <literal>showCauses</literal></title><para>Tells whether causes of exceptions that occur during test execution will be logged. Only relevant if <literal>showExceptions</literal> is <literal>true</literal>.  Defaults to true.</para></section><section id="org.gradle.api.tasks.testing.logging.TestLoggingContainer:showExceptions" role="detail"><title><classname>boolean</classname> <literal>showExceptions</literal></title><para>Tells whether exceptions that occur during test execution will be logged. Typically these exceptions coincide with a "failed" event.  Defaults to true.</para></section><section id="org.gradle.api.tasks.testing.logging.TestLoggingContainer:showStackTraces" role="detail"><title><classname>boolean</classname> <literal>showStackTraces</literal></title><para>Tells whether stack traces of exceptions that occur during test execution will be logged.  Defaults to true.</para></section><section id="org.gradle.api.tasks.testing.logging.TestLoggingContainer:showStandardStreams" role="detail"><title><classname>boolean</classname> <literal>showStandardStreams</literal></title><para>Tells whether output on standard out and standard error will be logged. Equivalent to checking if both log events <literal>TestLogEvent.STANDARD_OUT</literal> and <literal>TestLogEvent.STANDARD_ERROR</literal> are
set.</para></section><section id="org.gradle.api.tasks.testing.logging.TestLoggingContainer:stackTraceFilters" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<apilink class="org.gradle.api.tasks.testing.logging.TestStackTraceFilter"/>&gt;</classname> <literal>stackTraceFilters</literal></title><para>The set of filters to be used for sanitizing test stack traces.</para></section><section id="org.gradle.api.tasks.testing.logging.TestLoggingContainer:warn" role="detail"><title><apilink class="org.gradle.api.tasks.testing.logging.TestLogging"/> <literal>warn</literal></title><para>Gets logging options for warn level.</para></section></section></chapter><chapter id="org.gradle.api.tasks.testing.TestReport"><title>TestReport</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.tasks.testing.TestReport" style="javadoc"/></seg></seglistitem></segmentedlist><para>Generates an HTML test report from the results of one or more <apilink class="org.gradle.api.tasks.testing.Test"/> tasks.</para><section><title>Properties</title><table><title>Properties - TestReport</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.tasks.testing.TestReport:destinationDirectory"><literal>destinationDirectory</literal></link></td><td><para>The directory to write the HTML report to.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.testing.TestReport:testResults"><literal>testResults</literal></link></td><td><para>The set of binary test results to include in the report.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.tasks.testing.TestReport:destinationDirectory" role="detail"><title><apilink class="org.gradle.api.file.DirectoryProperty"/> <literal>destinationDirectory</literal></title><para>The directory to write the HTML report to.</para></section><section id="org.gradle.api.tasks.testing.TestReport:testResults" role="detail"><title><apilink class="org.gradle.api.file.ConfigurableFileCollection"/> <literal>testResults</literal> (read-only)</title><para>The set of binary test results to include in the report.</para></section></section></chapter><chapter id="org.gradle.api.tasks.bundling.War"><title>War</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.tasks.bundling.War" style="javadoc"/></seg></seglistitem></segmentedlist><para>Assembles a WAR archive.</para><section><title>Properties</title><table><title>Properties - War</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.tasks.bundling.War:archiveAppendix"><literal>archiveAppendix</literal></link></td><td><para>The appendix part of the archive name, if any.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.bundling.War:archiveBaseName"><literal>archiveBaseName</literal></link></td><td><para>The base name of the archive.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.bundling.War:archiveClassifier"><literal>archiveClassifier</literal></link></td><td><para>The classifier part of the archive name, if any.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.bundling.War:archiveExtension"><literal>archiveExtension</literal></link></td><td><para>The extension part of the archive name.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.bundling.War:archiveFile"><literal>archiveFile</literal></link></td><td><para>The <apilink class="org.gradle.api.file.RegularFile"/> where the archive is constructed.
The path is simply the <literal>destinationDirectory</literal> plus the <literal>archiveFileName</literal>.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.bundling.War:archiveFileName"><literal>archiveFileName</literal></link></td><td><para>The archive name. If the name has not been explicitly set, the pattern for the name is:
<literal>[archiveBaseName]-[archiveAppendix]-[archiveVersion]-[archiveClassifier].[archiveExtension]</literal></para></td></tr><tr><td><link linkend="org.gradle.api.tasks.bundling.War:archiveVersion"><literal>archiveVersion</literal></link></td><td><para>The version part of the archive name.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.bundling.War:caseSensitive"><literal>caseSensitive</literal></link></td><td><para>Specifies whether case-sensitive pattern matching should be used.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.bundling.War:classpath"><literal>classpath</literal></link></td><td><para>The classpath to include in the WAR archive. Any JAR or ZIP files in this classpath are included in the <literal>WEB-INF/lib</literal> directory. Any directories in this classpath are included in
the <literal>WEB-INF/classes</literal> directory.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.bundling.War:destinationDirectory"><literal>destinationDirectory</literal></link></td><td><para>The directory where the archive will be placed.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.bundling.War:dirPermissions"><literal>dirPermissions</literal></link></td><td><para>Property for querying and configuring directory access permissions.
If the property has no value set, that means that existing permissions are preserved.
It is dependent on the copy action implementation whether these permissions will actually be applied.

For details see <apilink class="org.gradle.api.file.ConfigurableFilePermissions"/>.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.bundling.War:duplicatesStrategy"><literal>duplicatesStrategy</literal></link></td><td><para>The strategy to use when trying to copy more than one file to the same destination.
</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.bundling.War:entryCompression"><literal>entryCompression</literal></link></td><td><para>The compression level of the entries of the archive. If set to <apilink class="org.gradle.api.tasks.bundling.ZipEntryCompression" method="DEFLATED"/> (the default), each entry is
compressed using the DEFLATE algorithm. If set to <apilink class="org.gradle.api.tasks.bundling.ZipEntryCompression" method="STORED"/> the entries of the archive are left uncompressed.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.bundling.War:excludes"><literal>excludes</literal></link></td><td><para>The set of exclude patterns.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.bundling.War:filePermissions"><literal>filePermissions</literal></link></td><td><para>Property for querying and configuring file access permissions.
If the property has no value set, that means that existing permissions are preserved.
It is dependent on the copy action implementation whether these permissions will actually be applied.

For details see <apilink class="org.gradle.api.file.ConfigurableFilePermissions"/>.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.bundling.War:includeEmptyDirs"><literal>includeEmptyDirs</literal></link></td><td><para>Tells if empty target directories will be included in the copy.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.bundling.War:includes"><literal>includes</literal></link></td><td><para>The set of include patterns.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.bundling.War:manifest"><literal>manifest</literal></link></td><td><para>The manifest for this JAR archive.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.bundling.War:metadataCharset"><literal>metadataCharset</literal></link></td><td><para>The character set used to encode JAR metadata like file names.
Defaults to UTF-8.
You can change this property but it is not recommended as JVMs expect JAR metadata to be encoded using UTF-8</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.bundling.War:preserveFileTimestamps"><literal>preserveFileTimestamps</literal></link></td><td><para>Specifies whether file timestamps should be preserved in the archive.
</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.bundling.War:reproducibleFileOrder"><literal>reproducibleFileOrder</literal></link></td><td><para>Specifies whether to enforce a reproducible file order when reading files from directories.
</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.bundling.War:source"><literal>source</literal></link></td><td><para>The source files for this task.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.bundling.War:webXml"><literal>webXml</literal></link></td><td><para>The <literal>web.xml</literal> file to include in the WAR archive. When <literal>null</literal>, no <literal>web.xml</literal> file is included in the WAR.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.bundling.War:zip64"><literal>zip64</literal></link></td><td><para>Whether the zip can contain more than 65535 files and/or support files greater than 4GB in size.
</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - War</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.War:classpath(java.lang.Object[])">classpath</link>(classpath)</literal></td><td><para>Adds files to the classpath to include in the WAR archive.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.War:eachFile(groovy.lang.Closure)">eachFile</link>(closure)</literal></td><td><para>Adds an action to be applied to each file as it about to be copied into its destination. The given closure is
called with a <apilink class="org.gradle.api.file.FileCopyDetails"/> as its parameter. Actions are executed in the order
added, and are inherited from the parent spec.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.War:eachFile(org.gradle.api.Action)">eachFile</link>(action)</literal></td><td><para>Adds an action to be applied to each file as it is about to be copied into its destination. The action can change
the destination path of the file, filter the contents of the file, or exclude the file from the result entirely.
Actions are executed in the order added, and are inherited from the parent spec.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.War:exclude(groovy.lang.Closure)">exclude</link>(excludeSpec)</literal></td><td><para>Adds an exclude spec. This method may be called multiple times to append new specs.The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter. The closure should return true or false. Example:

</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.War:exclude(java.lang.Iterable)">exclude</link>(excludes)</literal></td><td><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.War:exclude(java.lang.String[])">exclude</link>(excludes)</literal></td><td><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.War:exclude(org.gradle.api.specs.Spec)">exclude</link>(excludeSpec)</literal></td><td><para>Adds an exclude spec. This method may be called multiple times to append new specs.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.War:expand(java.util.Map)">expand</link>(properties)</literal></td><td><para>Expands property references in each file as it is copied. More specifically, each file is transformed using
Groovy's <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/text/SimpleTemplateEngine.html"><classname>SimpleTemplateEngine</classname></ulink>. This means you can use simple property references, such as
<literal>$property</literal> or <literal>${property}</literal> in the file. You can also include arbitrary Groovy code in the
file, such as <literal>${version ?: 'unknown'}</literal> or <literal>${classpath*.name.join(' ')}</literal>
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.War:expand(java.util.Map, org.gradle.api.Action)">expand</link>(properties, action)</literal></td><td><para>Expands property references in each file as it is copied. More specifically, each file is transformed using
Groovy's <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/text/SimpleTemplateEngine.html"><classname>SimpleTemplateEngine</classname></ulink>. This means you can use simple property references, such as
<literal>$property</literal> or <literal>${property}</literal> in the file. You can also include arbitrary Groovy code in the
file, such as <literal>${version ?: 'unknown'}</literal> or <literal>${classpath*.name.join(' ')}</literal>. The template
engine can be configured with the provided action.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.War:filesMatching(java.lang.Iterable, org.gradle.api.Action)">filesMatching</link>(patterns, action)</literal></td><td><para>Configure the <apilink class="org.gradle.api.file.FileCopyDetails"/> for each file whose path matches any of the specified Ant-style patterns.
This is equivalent to using eachFile() and selectively applying a configuration based on the file's path.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.War:filesMatching(java.lang.String, org.gradle.api.Action)">filesMatching</link>(pattern, action)</literal></td><td><para>Configure the <apilink class="org.gradle.api.file.FileCopyDetails"/> for each file whose path matches the specified Ant-style pattern.
This is equivalent to using eachFile() and selectively applying a configuration based on the file's path.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.War:filesNotMatching(java.lang.Iterable, org.gradle.api.Action)">filesNotMatching</link>(patterns, action)</literal></td><td><para>Configure the <apilink class="org.gradle.api.file.FileCopyDetails"/> for each file whose path does not match any of the specified
Ant-style patterns. This is equivalent to using eachFile() and selectively applying a configuration based on the
file's path.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.War:filesNotMatching(java.lang.String, org.gradle.api.Action)">filesNotMatching</link>(pattern, action)</literal></td><td><para>Configure the <apilink class="org.gradle.api.file.FileCopyDetails"/> for each file whose path does not match the specified
Ant-style pattern. This is equivalent to using eachFile() and selectively applying a configuration based on the
file's path.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.War:filter(groovy.lang.Closure)">filter</link>(closure)</literal></td><td><para>Adds a content filter based on the provided closure.  The Closure will be called with each line (stripped of line
endings) and should return a String to replace the line or <literal>null</literal> to remove the line.  If every line is
removed, the result will be an empty file, not an absent one.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.War:filter(java.lang.Class)">filter</link>(filterType)</literal></td><td><para>Adds a content filter to be used during the copy.  Multiple calls to filter, add additional filters to the
filter chain.  Each filter should implement <literal>java.io.FilterReader</literal>. Include <literal>org.apache.tools.ant.filters.*</literal> for access to all the standard Ant filters.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.War:filter(java.util.Map, java.lang.Class)">filter</link>(properties, filterType)</literal></td><td><para>Adds a content filter to be used during the copy.  Multiple calls to filter, add additional filters to the
filter chain.  Each filter should implement <literal>java.io.FilterReader</literal>. Include <literal>org.apache.tools.ant.filters.*</literal> for access to all the standard Ant filters.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.War:filter(org.gradle.api.Transformer)">filter</link>(transformer)</literal></td><td><para>Adds a content filter based on the provided transformer.  The Closure will be called with each line (stripped of line
endings) and should return a String to replace the line or <literal>null</literal> to remove the line.  If every line is
removed, the result will be an empty file, not an absent one.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.War:from(java.lang.Object, groovy.lang.Closure)">from</link>(sourcePath, c)</literal></td><td><para>Specifies the source files or directories for a copy and creates a child <literal>CopySourceSpec</literal>. The given source
path is evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/> .</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.War:from(java.lang.Object, org.gradle.api.Action)">from</link>(sourcePath, configureAction)</literal></td><td><para>Specifies the source files or directories for a copy and creates a child <literal>CopySpec</literal>. The given source
path is evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/> .</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.War:from(java.lang.Object[])">from</link>(sourcePaths)</literal></td><td><para>Specifies source files or directories for a copy. The given paths are evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/>.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.War:include(groovy.lang.Closure)">include</link>(includeSpec)</literal></td><td><para>Adds an include spec. This method may be called multiple times to append new specs. The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.War:include(java.lang.Iterable)">include</link>(includes)</literal></td><td><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.War:include(java.lang.String[])">include</link>(includes)</literal></td><td><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.War:include(org.gradle.api.specs.Spec)">include</link>(includeSpec)</literal></td><td><para>Adds an include spec. This method may be called multiple times to append new specs.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.War:into(java.lang.Object)">into</link>(destPath)</literal></td><td><para>Specifies the destination directory *inside* the archive for the files.
The destination is evaluated as per <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/>.
Don't mix it up with <apilink class="org.gradle.api.tasks.bundling.AbstractArchiveTask" method="getDestinationDirectory()"/> which specifies the output directory for the archive.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.War:into(java.lang.Object, groovy.lang.Closure)">into</link>(destPath, configureClosure)</literal></td><td><para>Creates and configures a child <literal>CopySpec</literal> with a destination directory *inside* the archive for the files.
The destination is evaluated as per <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/>.
Don't mix it up with <apilink class="org.gradle.api.tasks.bundling.AbstractArchiveTask" method="getDestinationDirectory()"/> which specifies the output directory for the archive.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.War:into(java.lang.Object, org.gradle.api.Action)">into</link>(destPath, copySpec)</literal></td><td><para>Creates and configures a child <literal>CopySpec</literal> with a destination directory *inside* the archive for the files.
The destination is evaluated as per <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/>.
Don't mix it up with <apilink class="org.gradle.api.tasks.bundling.AbstractArchiveTask" method="getDestinationDirectory()"/> which specifies the output directory for the archive.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.War:manifest(groovy.lang.Closure)">manifest</link>(configureClosure)</literal></td><td><para>Configures the manifest for this JAR archive.

</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.War:manifest(org.gradle.api.Action)">manifest</link>(configureAction)</literal></td><td><para>Configures the manifest for this JAR archive.

</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.War:metaInf(groovy.lang.Closure)">metaInf</link>(configureClosure)</literal></td><td><para>Adds content to this JAR archive's META-INF directory.

</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.War:metaInf(org.gradle.api.Action)">metaInf</link>(configureAction)</literal></td><td><para>Adds content to this JAR archive's META-INF directory.

</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.War:rename(groovy.lang.Closure)">rename</link>(closure)</literal></td><td><para>Renames a source file. The closure will be called with a single parameter, the name of the file.
The closure should return a String object with a new target name. The closure may return null,
in which case the original name will be used.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.War:rename(java.lang.String, java.lang.String)">rename</link>(sourceRegEx, replaceWith)</literal></td><td><para>Renames files based on a regular expression.  Uses java.util.regex type of regular expressions.  Note that the
replace string should use the '$1' syntax to refer to capture groups in the source regular expression.  Files
that do not match the source regular expression will be copied with the original name.

</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.War:rename(java.util.regex.Pattern, java.lang.String)">rename</link>(sourceRegEx, replaceWith)</literal></td><td><para>Renames files based on a regular expression. See <apilink class="org.gradle.api.file.CopyProcessingSpec" method="rename(java.lang.String, java.lang.String)"/>.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.War:rename(org.gradle.api.Transformer)">rename</link>(renamer)</literal></td><td><para>Renames a source file. The function will be called with a single parameter, the name of the file.
The function should return a new target name. The function may return null,
in which case the original name will be used.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.War:webInf(groovy.lang.Closure)">webInf</link>(configureClosure)</literal></td><td><para>Adds some content to the <literal>WEB-INF</literal> directory for this WAR archive.

</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.War:webInf(org.gradle.api.Action)">webInf</link>(configureAction)</literal></td><td><para>Adds some content to the <literal>WEB-INF</literal> directory for this WAR archive.

</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.bundling.War:with(org.gradle.api.file.CopySpec[])">with</link>(sourceSpecs)</literal></td><td><para>Adds the given specs as a child of this spec.

</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.tasks.bundling.War:archiveAppendix" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>archiveAppendix</literal></title><para>The appendix part of the archive name, if any.</para><segmentedlist><segtitle>Default with <literal>war</literal> plugin</segtitle><seglistitem><seg><literal>""</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.bundling.War:archiveBaseName" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>archiveBaseName</literal></title><para>The base name of the archive.</para><segmentedlist><segtitle>Default with <literal>war</literal> plugin</segtitle><seglistitem><seg><literal>project.base.archivesBaseName</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.bundling.War:archiveClassifier" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>archiveClassifier</literal></title><para>The classifier part of the archive name, if any.</para><segmentedlist><segtitle>Default with <literal>war</literal> plugin</segtitle><seglistitem><seg><literal>""</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.bundling.War:archiveExtension" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>archiveExtension</literal></title><para>The extension part of the archive name.</para></section><section id="org.gradle.api.tasks.bundling.War:archiveFile" role="detail"><title><classname><apilink class="org.gradle.api.provider.Provider"/>&lt;<apilink class="org.gradle.api.file.RegularFile"/>&gt;</classname> <literal>archiveFile</literal></title><para>The <apilink class="org.gradle.api.file.RegularFile"/> where the archive is constructed.
The path is simply the <literal>destinationDirectory</literal> plus the <literal>archiveFileName</literal>.</para><segmentedlist><segtitle>Default with <literal>war</literal> plugin</segtitle><seglistitem><seg><literal><replaceable>${destinationDirectory}</replaceable>/<replaceable>${archiveFileName}</replaceable></literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.bundling.War:archiveFileName" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>archiveFileName</literal></title><para>The archive name. If the name has not been explicitly set, the pattern for the name is:
<literal>[archiveBaseName]-[archiveAppendix]-[archiveVersion]-[archiveClassifier].[archiveExtension]</literal></para><segmentedlist><segtitle>Default with <literal>war</literal> plugin</segtitle><seglistitem><seg><literal><replaceable>${archiveBaseName}</replaceable>-<replaceable>${archiveAppendix}</replaceable>-<replaceable>${archiveVersion}</replaceable>-<replaceable>${archiveClassifier}</replaceable>.<replaceable>${archiveExtension}</replaceable></literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.bundling.War:archiveVersion" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>archiveVersion</literal></title><para>The version part of the archive name.</para><segmentedlist><segtitle>Default with <literal>war</literal> plugin</segtitle><seglistitem><seg><literal>project.version</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.bundling.War:caseSensitive" role="detail"><title><classname>boolean</classname> <literal>caseSensitive</literal></title><para>Specifies whether case-sensitive pattern matching should be used.</para><segmentedlist><segtitle>Default with <literal>war</literal> plugin</segtitle><seglistitem><seg><literal>true</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.bundling.War:classpath" role="detail"><title><apilink class="org.gradle.api.file.FileCollection"/> <literal>classpath</literal></title><para>The classpath to include in the WAR archive. Any JAR or ZIP files in this classpath are included in the <literal>WEB-INF/lib</literal> directory. Any directories in this classpath are included in
the <literal>WEB-INF/classes</literal> directory.</para><segmentedlist><segtitle>Default with <literal>war</literal> plugin</segtitle><seglistitem><seg><literal>project.sourceSets.main.runtimeClasspath - project.configurations.providedRuntime</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.bundling.War:destinationDirectory" role="detail"><title><apilink class="org.gradle.api.file.DirectoryProperty"/> <literal>destinationDirectory</literal></title><para>The directory where the archive will be placed.</para><segmentedlist><segtitle>Default with <literal>war</literal> plugin</segtitle><seglistitem><seg><literal>project.distsDir</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.bundling.War:dirPermissions" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<apilink class="org.gradle.api.file.ConfigurableFilePermissions"/>&gt;</classname> <literal>dirPermissions</literal></title><para>Property for querying and configuring directory access permissions.
If the property has no value set, that means that existing permissions are preserved.
It is dependent on the copy action implementation whether these permissions will actually be applied.

For details see <apilink class="org.gradle.api.file.ConfigurableFilePermissions"/>.</para><segmentedlist><segtitle>Default with <literal>war</literal> plugin</segtitle><seglistitem><seg><literal>null</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.bundling.War:duplicatesStrategy" role="detail"><title><apilink class="org.gradle.api.file.DuplicatesStrategy"/> <literal>duplicatesStrategy</literal></title><para>The strategy to use when trying to copy more than one file to the same destination.
</para><para>
The value can be set with a case insensitive string of the enum value (e.g. <literal>'exclude'</literal> for <apilink class="org.gradle.api.file.DuplicatesStrategy" method="EXCLUDE"/>).
</para><para>
This strategy can be overridden for individual files by using <apilink class="org.gradle.api.file.CopySpec" method="eachFile(org.gradle.api.Action)"/> or <apilink class="org.gradle.api.file.CopySpec" method="filesMatching(java.lang.String, org.gradle.api.Action)"/>.</para><segmentedlist><segtitle>Default with <literal>war</literal> plugin</segtitle><seglistitem><seg><literal>DuplicatesStrategy.INHERIT</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.bundling.War:entryCompression" role="detail"><title><apilink class="org.gradle.api.tasks.bundling.ZipEntryCompression"/> <literal>entryCompression</literal></title><para>The compression level of the entries of the archive. If set to <apilink class="org.gradle.api.tasks.bundling.ZipEntryCompression" method="DEFLATED"/> (the default), each entry is
compressed using the DEFLATE algorithm. If set to <apilink class="org.gradle.api.tasks.bundling.ZipEntryCompression" method="STORED"/> the entries of the archive are left uncompressed.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>ZipEntryCompression.DEFLATED</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.bundling.War:excludes" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>excludes</literal></title><para>The set of exclude patterns.</para><segmentedlist><segtitle>Default with <literal>war</literal> plugin</segtitle><seglistitem><seg><literal>[]</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.bundling.War:filePermissions" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<apilink class="org.gradle.api.file.ConfigurableFilePermissions"/>&gt;</classname> <literal>filePermissions</literal></title><para>Property for querying and configuring file access permissions.
If the property has no value set, that means that existing permissions are preserved.
It is dependent on the copy action implementation whether these permissions will actually be applied.

For details see <apilink class="org.gradle.api.file.ConfigurableFilePermissions"/>.</para><segmentedlist><segtitle>Default with <literal>war</literal> plugin</segtitle><seglistitem><seg><literal>null</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.bundling.War:includeEmptyDirs" role="detail"><title><classname>boolean</classname> <literal>includeEmptyDirs</literal></title><para>Tells if empty target directories will be included in the copy.</para><segmentedlist><segtitle>Default with <literal>war</literal> plugin</segtitle><seglistitem><seg><literal>true</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.bundling.War:includes" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html"><classname>Set</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>includes</literal></title><para>The set of include patterns.</para><segmentedlist><segtitle>Default with <literal>war</literal> plugin</segtitle><seglistitem><seg><literal>[]</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.bundling.War:manifest" role="detail"><title><apilink class="org.gradle.api.java.archives.Manifest"/> <literal>manifest</literal></title><para>The manifest for this JAR archive.</para></section><section id="org.gradle.api.tasks.bundling.War:metadataCharset" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>metadataCharset</literal></title><para>The character set used to encode JAR metadata like file names.
Defaults to UTF-8.
You can change this property but it is not recommended as JVMs expect JAR metadata to be encoded using UTF-8</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>UTF-8</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.bundling.War:preserveFileTimestamps" role="detail"><title><classname>boolean</classname> <literal>preserveFileTimestamps</literal></title><para>Specifies whether file timestamps should be preserved in the archive.
</para><para>
If <literal>false</literal> this ensures that archive entries have the same time for builds between different machines, Java versions and operating systems.
</para><segmentedlist><segtitle>Default with <literal>war</literal> plugin</segtitle><seglistitem><seg><literal>true</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.bundling.War:reproducibleFileOrder" role="detail"><title><classname>boolean</classname> <literal>reproducibleFileOrder</literal></title><para>Specifies whether to enforce a reproducible file order when reading files from directories.
</para><para>
Gradle will then walk the directories on disk which are part of this archive in a reproducible order
independent of file systems and operating systems.
This helps Gradle reliably produce byte-for-byte reproducible archives.
</para><segmentedlist><segtitle>Default with <literal>war</literal> plugin</segtitle><seglistitem><seg><literal>false</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.bundling.War:source" role="detail"><title><apilink class="org.gradle.api.file.FileCollection"/> <literal>source</literal> (read-only)</title><para>The source files for this task.</para></section><section id="org.gradle.api.tasks.bundling.War:webXml" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>webXml</literal></title><para>The <literal>web.xml</literal> file to include in the WAR archive. When <literal>null</literal>, no <literal>web.xml</literal> file is included in the WAR.</para><segmentedlist><segtitle>Default with <literal>war</literal> plugin</segtitle><seglistitem><seg><literal>null</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.bundling.War:zip64" role="detail"><title><classname>boolean</classname> <literal>zip64</literal></title><para>Whether the zip can contain more than 65535 files and/or support files greater than 4GB in size.
</para><para>
The standard zip format has hard limits on file size and count.
The <ulink url="http://en.wikipedia.org/wiki/Zip_(file_format)#ZIP64">Zip64 format extension</ulink>
practically removes these limits and is therefore required for building large zips.
</para><para>
However, not all Zip readers support the Zip64 extensions.
Notably, the <ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/zip/ZipInputStream.html"><classname>ZipInputStream</classname></ulink> JDK class does not support Zip64 for versions earlier than Java 7.
This means you should not enable this property if you are building JARs to be used with Java 6 and earlier runtimes.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>false</literal></seg></seglistitem></segmentedlist></section></section><section><title>Method details</title><section id="org.gradle.api.tasks.bundling.War:classpath(java.lang.Object[])" role="detail"><title><classname>void</classname> <literal>classpath</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink>...</classname> classpath)</title><para>Adds files to the classpath to include in the WAR archive.</para></section><section id="org.gradle.api.tasks.bundling.War:eachFile(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>eachFile</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> closure)</title><para>Adds an action to be applied to each file as it about to be copied into its destination. The given closure is
called with a <apilink class="org.gradle.api.file.FileCopyDetails"/> as its parameter. Actions are executed in the order
added, and are inherited from the parent spec.</para></section><section id="org.gradle.api.tasks.bundling.War:eachFile(org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>eachFile</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.FileCopyDetails"/>&gt;</classname> action)</title><para>Adds an action to be applied to each file as it is about to be copied into its destination. The action can change
the destination path of the file, filter the contents of the file, or exclude the file from the result entirely.
Actions are executed in the order added, and are inherited from the parent spec.</para></section><section id="org.gradle.api.tasks.bundling.War:exclude(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>exclude</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> excludeSpec)</title><para>Adds an exclude spec. This method may be called multiple times to append new specs.The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter. The closure should return true or false. Example:

</para><para><programlisting language="java">
copySpec {
  from 'source'
  into 'destination'
  //an example of excluding files from certain configuration:
  exclude { it.file in configurations.someConf.files }
}
</programlisting></para><para>

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.api.tasks.bundling.War:exclude(java.lang.Iterable)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>exclude</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> excludes)</title><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.api.tasks.bundling.War:exclude(java.lang.String[])" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>exclude</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>...</classname> excludes)</title><para>Adds an ANT style exclude pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.api.tasks.bundling.War:exclude(org.gradle.api.specs.Spec)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>exclude</literal>(<classname><apilink class="org.gradle.api.specs.Spec"/>&lt;<apilink class="org.gradle.api.file.FileTreeElement"/>&gt;</classname> excludeSpec)</title><para>Adds an exclude spec. This method may be called multiple times to append new specs.

If excludes are not provided, then no files will be excluded. If excludes are provided, then files must not match
any exclude pattern to be processed.</para></section><section id="org.gradle.api.tasks.bundling.War:expand(java.util.Map)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>expand</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, ?&gt;</classname> properties)</title><para>Expands property references in each file as it is copied. More specifically, each file is transformed using
Groovy's <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/text/SimpleTemplateEngine.html"><classname>SimpleTemplateEngine</classname></ulink>. This means you can use simple property references, such as
<literal>$property</literal> or <literal>${property}</literal> in the file. You can also include arbitrary Groovy code in the
file, such as <literal>${version ?: 'unknown'}</literal> or <literal>${classpath*.name.join(' ')}</literal>
</para><para>
Note that all escape sequences (<literal>\n</literal>, <literal>\t</literal>, <literal>\\</literal>, etc) are converted to the symbols
they represent, so, for example, <literal>\n</literal> becomes newline. If this is undesirable then <apilink class="org.gradle.api.file.ContentFilterable" method="expand(java.util.Map, org.gradle.api.Action)"/>
should be used to disable this behavior.</para></section><section id="org.gradle.api.tasks.bundling.War:expand(java.util.Map, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>expand</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, ?&gt;</classname> properties, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.ExpandDetails"/>&gt;</classname> action)</title><para>Expands property references in each file as it is copied. More specifically, each file is transformed using
Groovy's <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/text/SimpleTemplateEngine.html"><classname>SimpleTemplateEngine</classname></ulink>. This means you can use simple property references, such as
<literal>$property</literal> or <literal>${property}</literal> in the file. You can also include arbitrary Groovy code in the
file, such as <literal>${version ?: 'unknown'}</literal> or <literal>${classpath*.name.join(' ')}</literal>. The template
engine can be configured with the provided action.
</para><para>
Note that by default all escape sequences (<literal>\n</literal>, <literal>\t</literal>, <literal>\\</literal>, etc) are converted to the symbols
they represent, so, for example, <literal>\n</literal> becomes newline. This behavior is controlled by
<apilink class="org.gradle.api.file.ExpandDetails" method="getEscapeBackslash()"/> property. It should be set to <literal>true</literal> to disable escape sequences
conversion:
</para><para><programlisting language="java">
 expand(one: '1', two: 2) {
     escapeBackslash = true
 }
</programlisting></para></section><section id="org.gradle.api.tasks.bundling.War:filesMatching(java.lang.Iterable, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>filesMatching</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> patterns, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.FileCopyDetails"/>&gt;</classname> action)</title><para>Configure the <apilink class="org.gradle.api.file.FileCopyDetails"/> for each file whose path matches any of the specified Ant-style patterns.
This is equivalent to using eachFile() and selectively applying a configuration based on the file's path.</para></section><section id="org.gradle.api.tasks.bundling.War:filesMatching(java.lang.String, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>filesMatching</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> pattern, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.FileCopyDetails"/>&gt;</classname> action)</title><para>Configure the <apilink class="org.gradle.api.file.FileCopyDetails"/> for each file whose path matches the specified Ant-style pattern.
This is equivalent to using eachFile() and selectively applying a configuration based on the file's path.</para></section><section id="org.gradle.api.tasks.bundling.War:filesNotMatching(java.lang.Iterable, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>filesNotMatching</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> patterns, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.FileCopyDetails"/>&gt;</classname> action)</title><para>Configure the <apilink class="org.gradle.api.file.FileCopyDetails"/> for each file whose path does not match any of the specified
Ant-style patterns. This is equivalent to using eachFile() and selectively applying a configuration based on the
file's path.</para></section><section id="org.gradle.api.tasks.bundling.War:filesNotMatching(java.lang.String, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>filesNotMatching</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> pattern, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.FileCopyDetails"/>&gt;</classname> action)</title><para>Configure the <apilink class="org.gradle.api.file.FileCopyDetails"/> for each file whose path does not match the specified
Ant-style pattern. This is equivalent to using eachFile() and selectively applying a configuration based on the
file's path.</para></section><section id="org.gradle.api.tasks.bundling.War:filter(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>filter</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> closure)</title><para>Adds a content filter based on the provided closure.  The Closure will be called with each line (stripped of line
endings) and should return a String to replace the line or <literal>null</literal> to remove the line.  If every line is
removed, the result will be an empty file, not an absent one.</para></section><section id="org.gradle.api.tasks.bundling.War:filter(java.lang.Class)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>filter</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html"><classname>Class</classname></ulink>&lt;? extends <ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/FilterReader.html"><classname>FilterReader</classname></ulink>&gt;</classname> filterType)</title><para>Adds a content filter to be used during the copy.  Multiple calls to filter, add additional filters to the
filter chain.  Each filter should implement <literal>java.io.FilterReader</literal>. Include <literal>org.apache.tools.ant.filters.*</literal> for access to all the standard Ant filters.</para><para> Examples:
</para><para><programlisting language="java">
   filter(StripJavaComments)
   filter(com.mycompany.project.CustomFilter)
</programlisting></para></section><section id="org.gradle.api.tasks.bundling.War:filter(java.util.Map, java.lang.Class)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>filter</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, ?&gt;</classname> properties, <classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html"><classname>Class</classname></ulink>&lt;? extends <ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/FilterReader.html"><classname>FilterReader</classname></ulink>&gt;</classname> filterType)</title><para>Adds a content filter to be used during the copy.  Multiple calls to filter, add additional filters to the
filter chain.  Each filter should implement <literal>java.io.FilterReader</literal>. Include <literal>org.apache.tools.ant.filters.*</literal> for access to all the standard Ant filters.</para><para>Filter properties may be specified using groovy map syntax.</para><para> Examples:
</para><para><programlisting language="java">
   filter(HeadFilter, lines:25, skip:2)
   filter(ReplaceTokens, tokens:[copyright:'2009', version:'2.3.1'])
</programlisting></para></section><section id="org.gradle.api.tasks.bundling.War:filter(org.gradle.api.Transformer)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>filter</literal>(<classname><apilink class="org.gradle.api.Transformer"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> transformer)</title><para>Adds a content filter based on the provided transformer.  The Closure will be called with each line (stripped of line
endings) and should return a String to replace the line or <literal>null</literal> to remove the line.  If every line is
removed, the result will be an empty file, not an absent one.</para></section><section id="org.gradle.api.tasks.bundling.War:from(java.lang.Object, groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>from</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> sourcePath, <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> c)</title><para>Specifies the source files or directories for a copy and creates a child <literal>CopySourceSpec</literal>. The given source
path is evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/> .</para></section><section id="org.gradle.api.tasks.bundling.War:from(java.lang.Object, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>from</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> sourcePath, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.CopySpec"/>&gt;</classname> configureAction)</title><para>Specifies the source files or directories for a copy and creates a child <literal>CopySpec</literal>. The given source
path is evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/> .</para></section><section id="org.gradle.api.tasks.bundling.War:from(java.lang.Object[])" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>from</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink>...</classname> sourcePaths)</title><para>Specifies source files or directories for a copy. The given paths are evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/>.</para></section><section id="org.gradle.api.tasks.bundling.War:include(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>include</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> includeSpec)</title><para>Adds an include spec. This method may be called multiple times to append new specs. The given closure is passed a
<apilink class="org.gradle.api.file.FileTreeElement"/> as its parameter.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></section><section id="org.gradle.api.tasks.bundling.War:include(java.lang.Iterable)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>include</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> includes)</title><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></section><section id="org.gradle.api.tasks.bundling.War:include(java.lang.String[])" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>include</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>...</classname> includes)</title><para>Adds an ANT style include pattern. This method may be called multiple times to append new patterns and multiple
patterns may be specified in a single call.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns to be processed.</para></section><section id="org.gradle.api.tasks.bundling.War:include(org.gradle.api.specs.Spec)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>include</literal>(<classname><apilink class="org.gradle.api.specs.Spec"/>&lt;<apilink class="org.gradle.api.file.FileTreeElement"/>&gt;</classname> includeSpec)</title><para>Adds an include spec. This method may be called multiple times to append new specs.

If includes are not provided, then all files in this container will be included. If includes are provided, then a
file must match at least one of the include patterns or specs to be included.</para></section><section id="org.gradle.api.tasks.bundling.War:into(java.lang.Object)" role="detail"><title><apilink class="org.gradle.api.tasks.bundling.AbstractArchiveTask"/> <literal>into</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> destPath)</title><para>Specifies the destination directory *inside* the archive for the files.
The destination is evaluated as per <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/>.
Don't mix it up with <apilink class="org.gradle.api.tasks.bundling.AbstractArchiveTask" method="getDestinationDirectory()"/> which specifies the output directory for the archive.</para></section><section id="org.gradle.api.tasks.bundling.War:into(java.lang.Object, groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.bundling.AbstractArchiveTask"/> <literal>into</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> destPath, <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> configureClosure)</title><para>Creates and configures a child <literal>CopySpec</literal> with a destination directory *inside* the archive for the files.
The destination is evaluated as per <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/>.
Don't mix it up with <apilink class="org.gradle.api.tasks.bundling.AbstractArchiveTask" method="getDestinationDirectory()"/> which specifies the output directory for the archive.</para></section><section id="org.gradle.api.tasks.bundling.War:into(java.lang.Object, org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.file.CopySpec"/> <literal>into</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> destPath, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.CopySpec"/>&gt;</classname> copySpec)</title><para>Creates and configures a child <literal>CopySpec</literal> with a destination directory *inside* the archive for the files.
The destination is evaluated as per <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/>.
Don't mix it up with <apilink class="org.gradle.api.tasks.bundling.AbstractArchiveTask" method="getDestinationDirectory()"/> which specifies the output directory for the archive.</para></section><section id="org.gradle.api.tasks.bundling.War:manifest(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.jvm.tasks.Jar"/> <literal>manifest</literal>(<classname><ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink>&lt;?&gt;</classname> configureClosure)</title><para>Configures the manifest for this JAR archive.

</para><para>The given closure is executed to configure the manifest. The <apilink class="org.gradle.api.java.archives.Manifest"/> is passed to the closure as its delegate.</para></section><section id="org.gradle.api.tasks.bundling.War:manifest(org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.jvm.tasks.Jar"/> <literal>manifest</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.java.archives.Manifest"/>&gt;</classname> configureAction)</title><para>Configures the manifest for this JAR archive.

</para><para>The given action is executed to configure the manifest.</para></section><section id="org.gradle.api.tasks.bundling.War:metaInf(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.file.CopySpec"/> <literal>metaInf</literal>(<classname><ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink>&lt;?&gt;</classname> configureClosure)</title><para>Adds content to this JAR archive's META-INF directory.

</para><para>The given closure is executed to configure a <literal>CopySpec</literal>. The <apilink class="org.gradle.api.file.CopySpec"/> is passed to the closure as its delegate.</para></section><section id="org.gradle.api.tasks.bundling.War:metaInf(org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.file.CopySpec"/> <literal>metaInf</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.CopySpec"/>&gt;</classname> configureAction)</title><para>Adds content to this JAR archive's META-INF directory.

</para><para>The given action is executed to configure a <literal>CopySpec</literal>.</para></section><section id="org.gradle.api.tasks.bundling.War:rename(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>rename</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> closure)</title><para>Renames a source file. The closure will be called with a single parameter, the name of the file.
The closure should return a String object with a new target name. The closure may return null,
in which case the original name will be used.</para></section><section id="org.gradle.api.tasks.bundling.War:rename(java.lang.String, java.lang.String)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>rename</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> sourceRegEx, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> replaceWith)</title><para>Renames files based on a regular expression.  Uses java.util.regex type of regular expressions.  Note that the
replace string should use the '$1' syntax to refer to capture groups in the source regular expression.  Files
that do not match the source regular expression will be copied with the original name.

</para><para> Example:
</para><para><programlisting language="java">
rename '(.*)_OEM_BLUE_(.*)', '$1$2'
</programlisting></para><para>
would map the file 'style_OEM_BLUE_.css' to 'style.css'</para></section><section id="org.gradle.api.tasks.bundling.War:rename(java.util.regex.Pattern, java.lang.String)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>rename</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html"><classname>Pattern</classname></ulink> sourceRegEx, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> replaceWith)</title><para>Renames files based on a regular expression. See <apilink class="org.gradle.api.file.CopyProcessingSpec" method="rename(java.lang.String, java.lang.String)"/>.</para></section><section id="org.gradle.api.tasks.bundling.War:rename(org.gradle.api.Transformer)" role="detail"><title><apilink class="org.gradle.api.tasks.AbstractCopyTask"/> <literal>rename</literal>(<classname><apilink class="org.gradle.api.Transformer"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> renamer)</title><para>Renames a source file. The function will be called with a single parameter, the name of the file.
The function should return a new target name. The function may return null,
in which case the original name will be used.</para></section><section id="org.gradle.api.tasks.bundling.War:webInf(groovy.lang.Closure)" role="detail"><title><apilink class="org.gradle.api.file.CopySpec"/> <literal>webInf</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> configureClosure)</title><para>Adds some content to the <literal>WEB-INF</literal> directory for this WAR archive.

</para><para>The given closure is executed to configure a <apilink class="org.gradle.api.file.CopySpec"/>. The <literal>CopySpec</literal> is passed to the closure as its delegate.</para></section><section id="org.gradle.api.tasks.bundling.War:webInf(org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.file.CopySpec"/> <literal>webInf</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.CopySpec"/>&gt;</classname> configureAction)</title><para>Adds some content to the <literal>WEB-INF</literal> directory for this WAR archive.

</para><para>The given action is executed to configure a <apilink class="org.gradle.api.file.CopySpec"/>.</para></section><section id="org.gradle.api.tasks.bundling.War:with(org.gradle.api.file.CopySpec[])" role="detail"><title><apilink class="org.gradle.api.file.CopySpec"/> <literal>with</literal>(<classname><apilink class="org.gradle.api.file.CopySpec"/>...</classname> sourceSpecs)</title><para>Adds the given specs as a child of this spec.

</para><para><programlisting language="java">
def contentSpec = copySpec {
  from("content") {
    include "**/*.txt"
  }
}

task copy(type: Copy) {
  into "$buildDir/copy"
  with contentSpec
}
</programlisting></para></section></section></chapter><chapter id="org.gradle.api.tasks.wrapper.Wrapper"><title>Wrapper</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.tasks.wrapper.Wrapper" style="javadoc"/></seg></seglistitem></segmentedlist><para>Generates scripts (for *nix and windows) which allow you to build your project with Gradle, without having to
install Gradle.

</para><para>When a user executes a wrapper script the first time, the script downloads and installs the appropriate Gradle
distribution and runs the build against this downloaded distribution. Any installed Gradle distribution is ignored
when using the wrapper scripts.

</para><para>The scripts generated by this task are intended to be committed to your version control system. This task also
generates a small <literal>gradle-wrapper.jar</literal> bootstrap JAR file and properties file which should also be committed to
your VCS. The scripts delegate to this JAR.</para><section><title>Properties</title><table><title>Properties - Wrapper</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.tasks.wrapper.Wrapper:archiveBase"><literal>archiveBase</literal></link></td><td><para>The archive base specifies whether the unpacked wrapper distribution should be stored in the project or in the
gradle user home dir.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.wrapper.Wrapper:archivePath"><literal>archivePath</literal></link></td><td><para>The path where the gradle distributions archive should be saved (i.e. the parent dir). The path is
relative to the archive base directory.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.wrapper.Wrapper:distributionBase"><literal>distributionBase</literal></link></td><td><para>The distribution base specifies whether the unpacked wrapper distribution should be stored in the project or in
the gradle user home dir.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.wrapper.Wrapper:distributionPath"><literal>distributionPath</literal></link></td><td><para>The path where the gradle distributions needed by the wrapper are unzipped. The path is relative to the
distribution base directory</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.wrapper.Wrapper:distributionType"><literal>distributionType</literal></link></td><td><para>The type of the Gradle distribution to be used by the wrapper.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.wrapper.Wrapper:distributionUrl"><literal>distributionUrl</literal></link></td><td><para>The URL to download the gradle distribution from.

</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.wrapper.Wrapper:gradleVersion"><literal>gradleVersion</literal></link></td><td><para>The gradle version for the wrapper.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.wrapper.Wrapper:jarFile"><literal>jarFile</literal></link></td><td><para>The file to write the wrapper jar file to.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.wrapper.Wrapper:networkTimeout"><literal>networkTimeout</literal></link></td><td><caution>Incubating</caution><para>The network timeout specifies how many ms to wait for when the wrapper is performing network operations, such
as downloading the wrapper jar.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.wrapper.Wrapper:propertiesFile"><literal>propertiesFile</literal></link></td><td><para>The file to write the wrapper properties to.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.wrapper.Wrapper:scriptFile"><literal>scriptFile</literal></link></td><td><para>The file to write the wrapper script to.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.wrapper.Wrapper:validateDistributionUrl"><literal>validateDistributionUrl</literal></link></td><td><caution>Incubating</caution><para>Indicates if this task will validate the distribution url that has been configured.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.tasks.wrapper.Wrapper:archiveBase" role="detail"><title><apilink class="org.gradle.api.tasks.wrapper.Wrapper.PathBase"/> <literal>archiveBase</literal></title><para>The archive base specifies whether the unpacked wrapper distribution should be stored in the project or in the
gradle user home dir.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>PathBase.GRADLE_USER_HOME</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.wrapper.Wrapper:archivePath" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>archivePath</literal></title><para>The path where the gradle distributions archive should be saved (i.e. the parent dir). The path is
relative to the archive base directory.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>'wrapper/dists'</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.wrapper.Wrapper:distributionBase" role="detail"><title><apilink class="org.gradle.api.tasks.wrapper.Wrapper.PathBase"/> <literal>distributionBase</literal></title><para>The distribution base specifies whether the unpacked wrapper distribution should be stored in the project or in
the gradle user home dir.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>PathBase.GRADLE_USER_HOME</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.wrapper.Wrapper:distributionPath" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>distributionPath</literal></title><para>The path where the gradle distributions needed by the wrapper are unzipped. The path is relative to the
distribution base directory</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>'wrapper/dists'</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.wrapper.Wrapper:distributionType" role="detail"><title><apilink class="org.gradle.api.tasks.wrapper.Wrapper.DistributionType"/> <literal>distributionType</literal></title><para>The type of the Gradle distribution to be used by the wrapper.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>DistributionType.BIN</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.wrapper.Wrapper:distributionUrl" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>distributionUrl</literal></title><para>The URL to download the gradle distribution from.

</para><para>If not set, the download URL is the default for the specified <apilink class="org.gradle.api.tasks.wrapper.Wrapper" method="getGradleVersion()"/>.

</para><para>If <apilink class="org.gradle.api.tasks.wrapper.Wrapper" method="getGradleVersion()"/> is not set, will return null.

</para><para>The wrapper downloads a certain distribution only once and caches it. If your distribution base is the
project, you might submit the distribution to your version control system. That way no download is necessary at
all. This might be in particular interesting, if you provide a custom gradle snapshot to the wrapper, because you
don't need to provide a download server then.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>"http\://services.gradle.org/distributions/gradle-${gradleVersion}-bin.zip"</literal>
                    (or
                    <literal>"http\://services.gradle.org/distributions-snapshots/gradle-${gradleVersion}-bin.zip"</literal>
                    for snapshot versions).
                </seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.wrapper.Wrapper:gradleVersion" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>gradleVersion</literal></title><para>The gradle version for the wrapper.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>gradle.gradleVersion</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.wrapper.Wrapper:jarFile" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>jarFile</literal></title><para>The file to write the wrapper jar file to.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal><replaceable>${project.projectDir}</replaceable>/gradle/wrapper/gradle-wrapper.jar</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.wrapper.Wrapper:networkTimeout" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html"><classname>Integer</classname></ulink>&gt;</classname> <literal>networkTimeout</literal></title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The network timeout specifies how many ms to wait for when the wrapper is performing network operations, such
as downloading the wrapper jar.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>10000</literal>ms</seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.wrapper.Wrapper:propertiesFile" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>propertiesFile</literal> (read-only)</title><para>The file to write the wrapper properties to.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>jarFile</literal>, replacing <literal>.jar</literal> with <literal>.properties</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.wrapper.Wrapper:scriptFile" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>scriptFile</literal></title><para>The file to write the wrapper script to.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal><replaceable>${project.projectDir}</replaceable>/gradlew</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.wrapper.Wrapper:validateDistributionUrl" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html"><classname>Boolean</classname></ulink>&gt;</classname> <literal>validateDistributionUrl</literal></title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Indicates if this task will validate the distribution url that has been configured.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>true</literal></seg></seglistitem></segmentedlist></section></section></chapter><chapter id="org.gradle.api.tasks.WriteProperties"><title>WriteProperties</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.tasks.WriteProperties" style="javadoc"/></seg></seglistitem></segmentedlist><para>Writes a <ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Properties.html"><classname>Properties</classname></ulink> in a way that the results can be expected to be reproducible.

</para><para>There are a number of differences compared to how properties are stored:</para><itemizedlist><listitem>no timestamp comment is generated at the beginning of the file</listitem><listitem>the lines in the resulting files are separated by a pre-set separator (defaults to
        '\n') instead of the system default line separator</listitem><listitem>the properties are sorted alphabetically</listitem></itemizedlist><para>Like with <ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Properties.html"><classname>Properties</classname></ulink>, Unicode characters are escaped when using the
default Latin-1 (ISO-8559-1) encoding.</para><section><title>Properties</title><table><title>Properties - WriteProperties</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.tasks.WriteProperties:comment"><literal>comment</literal></link></td><td><para>The optional comment to add at the beginning of the properties file.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.WriteProperties:destinationFile"><literal>destinationFile</literal></link></td><td><para>The output properties file.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.WriteProperties:encoding"><literal>encoding</literal></link></td><td><para>The encoding used to write the properties file. Defaults to ISO_8859_1.
If set to anything different, unicode escaping is turned off.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.WriteProperties:lineSeparator"><literal>lineSeparator</literal></link></td><td><para>The line separator to be used when creating the properties file.
Defaults to `\n`.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.WriteProperties:properties"><literal>properties</literal></link></td><td><para>Returns an immutable view of properties to be written to the properties file.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - WriteProperties</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.tasks.WriteProperties:properties(java.util.Map)">properties</link>(properties)</literal></td><td><para>Adds multiple properties to be written to the properties file.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.tasks.WriteProperties:property(java.lang.String, java.lang.Object)">property</link>(name, value)</literal></td><td><para>Adds a property to be written to the properties file.
</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.tasks.WriteProperties:comment" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>comment</literal></title><para>The optional comment to add at the beginning of the properties file.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>null</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.WriteProperties:destinationFile" role="detail"><title><apilink class="org.gradle.api.file.RegularFileProperty"/> <literal>destinationFile</literal></title><para>The output properties file.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>null</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.WriteProperties:encoding" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>encoding</literal></title><para>The encoding used to write the properties file. Defaults to ISO_8859_1.
If set to anything different, unicode escaping is turned off.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>ISO-8859-1</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.WriteProperties:lineSeparator" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>lineSeparator</literal></title><para>The line separator to be used when creating the properties file.
Defaults to `\n`.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>'\n'</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.api.tasks.WriteProperties:properties" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>properties</literal></title><para>Returns an immutable view of properties to be written to the properties file.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal>[:]</literal></seg></seglistitem></segmentedlist></section></section><section><title>Method details</title><section id="org.gradle.api.tasks.WriteProperties:properties(java.util.Map)" role="detail"><title><classname>void</classname> <literal>properties</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink>&gt;</classname> properties)</title><para>Adds multiple properties to be written to the properties file.
</para><para>
This is a convenience method for calling <apilink class="org.gradle.api.tasks.WriteProperties" method="property(java.lang.String, java.lang.Object)"/> multiple times.
</para></section><section id="org.gradle.api.tasks.WriteProperties:property(java.lang.String, java.lang.Object)" role="detail"><title><classname>void</classname> <literal>property</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> value)</title><para>Adds a property to be written to the properties file.
</para><para>
A property's value will be coerced to a <literal>String</literal> with <literal>String#valueOf(Object)</literal> or a
<ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/Callable.html"><classname>Callable</classname></ulink> returning a value to be coerced into a <literal>String</literal>.
</para><para>
Values are not allowed to be null.
</para></section></section></chapter><chapter id="org.gradle.testing.base.TestingExtension"><title>TestingExtension</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.testing.base.TestingExtension" style="javadoc"/></seg></seglistitem></segmentedlist><caution><para>Note: This class is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>This DSL element exists to contain a collection of <apilink class="org.gradle.testing.base.TestSuite"/>s.</para><section><title>Properties</title><table><title>Properties - TestingExtension</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.testing.base.TestingExtension:suites"><literal>suites</literal></link></td><td><caution>Incubating</caution><para>Available test suites in this project.

The type of test suites available depend on which other plugins are applied.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.testing.base.TestingExtension:suites" role="detail"><title><classname><apilink class="org.gradle.api.ExtensiblePolymorphicDomainObjectContainer"/>&lt;<apilink class="org.gradle.testing.base.TestSuite"/>&gt;</classname> <literal>suites</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Available test suites in this project.

The type of test suites available depend on which other plugins are applied.</para></section></section></chapter><chapter id="org.gradle.testing.base.TestSuite"><title>TestSuite</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.testing.base.TestSuite" style="javadoc"/></seg></seglistitem></segmentedlist><segmentedlist><segtitle>Known Subtypes</segtitle><seglistitem><seg><simplelist columns="1" type="vert"><member><apilink class="org.gradle.api.plugins.jvm.JvmTestSuite"/></member></simplelist></seg></seglistitem></segmentedlist><caution><para>Note: This class is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Base test suite component. A test suite is a collection of tests.</para><section><title>Properties</title><table><title>Properties - TestSuite</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.testing.base.TestSuite:targets"><literal>targets</literal></link></td><td><caution>Incubating</caution><para>Available targets for this test suite.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.testing.base.TestSuite:targets" role="detail"><title><classname><apilink class="org.gradle.api.DomainObjectCollection"/>&lt;? extends <apilink class="org.gradle.testing.base.TestSuiteTarget"/>&gt;</classname> <literal>targets</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Available targets for this test suite.</para></section></section></chapter><chapter id="org.gradle.api.plugins.jvm.JvmTestSuite"><title>JvmTestSuite</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.plugins.jvm.JvmTestSuite" style="javadoc"/></seg></seglistitem></segmentedlist><caution><para>Note: This class is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>A test suite is a collection of JVM-based tests.
</para><para>
Each test suite consists of
</para><itemizedlist><listitem>A <apilink class="org.gradle.api.tasks.SourceSet"/></listitem><listitem>A set of <apilink class="org.gradle.api.plugins.jvm.JvmComponentDependencies"/></listitem><listitem>One or more <apilink class="org.gradle.api.plugins.jvm.JvmTestSuiteTarget"/></listitem><listitem>A testing framework</listitem></itemizedlist><para>
Based on the testing framework declared, Gradle will automatically add the appropriate dependencies and configure the underlying test task.
</para><section><title>Properties</title><table><title>Properties - JvmTestSuite</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.plugins.jvm.JvmTestSuite:buildDependencies"><literal>buildDependencies</literal></link></td><td><para>Returns a dependency which contains the tasks which build this artifact. All <literal>Buildable</literal> implementations
must ensure that the returned dependency object is live, so that it tracks changes to the dependencies of this
buildable.</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.jvm.JvmTestSuite:dependencies"><literal>dependencies</literal></link></td><td><caution>Incubating</caution><para>Dependency handler for this component.</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.jvm.JvmTestSuite:sources"><literal>sources</literal></link></td><td><caution>Incubating</caution><para>The container of <apilink class="org.gradle.api.plugins.jvm.JvmTestSuiteTarget"/> objects part of this suite.

Source set associated with this test suite. The name of this source set is the same as the test suite.</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.jvm.JvmTestSuite:targets"><literal>targets</literal></link></td><td><caution>Incubating</caution><para>Collection of test suite targets.

Each test suite target executes the tests in this test suite with a particular context and task.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - JvmTestSuite</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.plugins.jvm.JvmTestSuite:useJUnit()">useJUnit</link>()</literal></td><td><caution>Incubating</caution><para>Use the <ulink url="https://junit.org/junit4/">JUnit4</ulink> testing framework.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.plugins.jvm.JvmTestSuite:useJUnit(java.lang.String)">useJUnit</link>(version)</literal></td><td><caution>Incubating</caution><para>Use the <ulink url="https://junit.org/junit4/">JUnit4</ulink> testing framework with a specific version.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.plugins.jvm.JvmTestSuite:useJUnit(org.gradle.api.provider.Provider)">useJUnit</link>(version)</literal></td><td><caution>Incubating</caution><para>Use the <ulink url="https://junit.org/junit4/">JUnit4</ulink> testing framework with a specific version.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.plugins.jvm.JvmTestSuite:useJUnitJupiter()">useJUnitJupiter</link>()</literal></td><td><caution>Incubating</caution><para>Use the <ulink url="https://junit.org/junit5/docs/current/user-guide/">JUnit Jupiter</ulink> testing framework.

</para></td></tr><tr><td><literal><link linkend="org.gradle.api.plugins.jvm.JvmTestSuite:useJUnitJupiter(java.lang.String)">useJUnitJupiter</link>(version)</literal></td><td><caution>Incubating</caution><para>Use the <ulink url="https://junit.org/junit5/docs/current/user-guide/">JUnit Jupiter</ulink> testing framework with a specific version.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.plugins.jvm.JvmTestSuite:useJUnitJupiter(org.gradle.api.provider.Provider)">useJUnitJupiter</link>(version)</literal></td><td><caution>Incubating</caution><para>Use the <ulink url="https://junit.org/junit5/docs/current/user-guide/">JUnit Jupiter</ulink> testing framework with a specific version.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.plugins.jvm.JvmTestSuite:useSpock()">useSpock</link>()</literal></td><td><caution>Incubating</caution><para>Use the <ulink url="https://spockframework.org/">Spock Framework</ulink> testing framework.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.plugins.jvm.JvmTestSuite:useSpock(java.lang.String)">useSpock</link>(version)</literal></td><td><caution>Incubating</caution><para>Use the <ulink url="https://spockframework.org/">Spock Framework</ulink> testing framework with a specific version.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.plugins.jvm.JvmTestSuite:useSpock(org.gradle.api.provider.Provider)">useSpock</link>(version)</literal></td><td><caution>Incubating</caution><para>Use the <ulink url="https://spockframework.org/">Spock Framework</ulink> testing framework with a specific version.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.plugins.jvm.JvmTestSuite:useTestNG()">useTestNG</link>()</literal></td><td><caution>Incubating</caution><para>Use the <ulink url="https://testng.org/doc/">TestNG</ulink> testing framework.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.plugins.jvm.JvmTestSuite:useTestNG(java.lang.String)">useTestNG</link>(version)</literal></td><td><caution>Incubating</caution><para>Use the <ulink url="https://testng.org/doc/">TestNG</ulink> testing framework with a specific version.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.plugins.jvm.JvmTestSuite:useTestNG(org.gradle.api.provider.Provider)">useTestNG</link>(version)</literal></td><td><caution>Incubating</caution><para>Use the <ulink url="https://testng.org/doc/">TestNG</ulink> testing framework with a specific version.</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.plugins.jvm.JvmTestSuite:buildDependencies" role="detail"><title><apilink class="org.gradle.api.tasks.TaskDependency"/> <literal>buildDependencies</literal> (read-only)</title><para>Returns a dependency which contains the tasks which build this artifact. All <literal>Buildable</literal> implementations
must ensure that the returned dependency object is live, so that it tracks changes to the dependencies of this
buildable.</para></section><section id="org.gradle.api.plugins.jvm.JvmTestSuite:dependencies" role="detail"><title><apilink class="org.gradle.api.plugins.jvm.JvmComponentDependencies"/> <literal>dependencies</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Dependency handler for this component.</para></section><section id="org.gradle.api.plugins.jvm.JvmTestSuite:sources" role="detail"><title><apilink class="org.gradle.api.tasks.SourceSet"/> <literal>sources</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The container of <apilink class="org.gradle.api.plugins.jvm.JvmTestSuiteTarget"/> objects part of this suite.

Source set associated with this test suite. The name of this source set is the same as the test suite.</para></section><section id="org.gradle.api.plugins.jvm.JvmTestSuite:targets" role="detail"><title><classname><apilink class="org.gradle.api.ExtensiblePolymorphicDomainObjectContainer"/>&lt;? extends <apilink class="org.gradle.api.plugins.jvm.JvmTestSuiteTarget"/>&gt;</classname> <literal>targets</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Collection of test suite targets.

Each test suite target executes the tests in this test suite with a particular context and task.</para></section></section><section><title>Method details</title><section id="org.gradle.api.plugins.jvm.JvmTestSuite:useJUnit()" role="detail"><title><classname>void</classname> <literal>useJUnit</literal>()</title><caution><para>Note: This method is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Use the <ulink url="https://junit.org/junit4/">JUnit4</ulink> testing framework.
</para><para>
    Gradle will provide the version of JUnit4 to use. Defaults to version <literal>4.13.2</literal>
</para></section><section id="org.gradle.api.plugins.jvm.JvmTestSuite:useJUnit(java.lang.String)" role="detail"><title><classname>void</classname> <literal>useJUnit</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> version)</title><caution><para>Note: This method is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Use the <ulink url="https://junit.org/junit4/">JUnit4</ulink> testing framework with a specific version.</para></section><section id="org.gradle.api.plugins.jvm.JvmTestSuite:useJUnit(org.gradle.api.provider.Provider)" role="detail"><title><classname>void</classname> <literal>useJUnit</literal>(<classname><apilink class="org.gradle.api.provider.Provider"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> version)</title><caution><para>Note: This method is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Use the <ulink url="https://junit.org/junit4/">JUnit4</ulink> testing framework with a specific version.</para></section><section id="org.gradle.api.plugins.jvm.JvmTestSuite:useJUnitJupiter()" role="detail"><title><classname>void</classname> <literal>useJUnitJupiter</literal>()</title><caution><para>Note: This method is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Use the <ulink url="https://junit.org/junit5/docs/current/user-guide/">JUnit Jupiter</ulink> testing framework.

</para><para>
    Gradle will provide the version of JUnit Jupiter to use. Defaults to version <literal>5.8.2</literal>
</para></section><section id="org.gradle.api.plugins.jvm.JvmTestSuite:useJUnitJupiter(java.lang.String)" role="detail"><title><classname>void</classname> <literal>useJUnitJupiter</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> version)</title><caution><para>Note: This method is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Use the <ulink url="https://junit.org/junit5/docs/current/user-guide/">JUnit Jupiter</ulink> testing framework with a specific version.</para></section><section id="org.gradle.api.plugins.jvm.JvmTestSuite:useJUnitJupiter(org.gradle.api.provider.Provider)" role="detail"><title><classname>void</classname> <literal>useJUnitJupiter</literal>(<classname><apilink class="org.gradle.api.provider.Provider"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> version)</title><caution><para>Note: This method is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Use the <ulink url="https://junit.org/junit5/docs/current/user-guide/">JUnit Jupiter</ulink> testing framework with a specific version.</para></section><section id="org.gradle.api.plugins.jvm.JvmTestSuite:useSpock()" role="detail"><title><classname>void</classname> <literal>useSpock</literal>()</title><caution><para>Note: This method is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Use the <ulink url="https://spockframework.org/">Spock Framework</ulink> testing framework.
</para><para>
    Gradle will provide the version of Spock to use. Defaults to version <literal>2.3-groovy-4.0</literal>
</para></section><section id="org.gradle.api.plugins.jvm.JvmTestSuite:useSpock(java.lang.String)" role="detail"><title><classname>void</classname> <literal>useSpock</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> version)</title><caution><para>Note: This method is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Use the <ulink url="https://spockframework.org/">Spock Framework</ulink> testing framework with a specific version.</para></section><section id="org.gradle.api.plugins.jvm.JvmTestSuite:useSpock(org.gradle.api.provider.Provider)" role="detail"><title><classname>void</classname> <literal>useSpock</literal>(<classname><apilink class="org.gradle.api.provider.Provider"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> version)</title><caution><para>Note: This method is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Use the <ulink url="https://spockframework.org/">Spock Framework</ulink> testing framework with a specific version.</para></section><section id="org.gradle.api.plugins.jvm.JvmTestSuite:useTestNG()" role="detail"><title><classname>void</classname> <literal>useTestNG</literal>()</title><caution><para>Note: This method is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Use the <ulink url="https://testng.org/doc/">TestNG</ulink> testing framework.
</para><para>
    Gradle will provide the version of TestNG to use. Defaults to version <literal>7.4.0</literal>
</para></section><section id="org.gradle.api.plugins.jvm.JvmTestSuite:useTestNG(java.lang.String)" role="detail"><title><classname>void</classname> <literal>useTestNG</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> version)</title><caution><para>Note: This method is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Use the <ulink url="https://testng.org/doc/">TestNG</ulink> testing framework with a specific version.</para></section><section id="org.gradle.api.plugins.jvm.JvmTestSuite:useTestNG(org.gradle.api.provider.Provider)" role="detail"><title><classname>void</classname> <literal>useTestNG</literal>(<classname><apilink class="org.gradle.api.provider.Provider"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> version)</title><caution><para>Note: This method is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Use the <ulink url="https://testng.org/doc/">TestNG</ulink> testing framework with a specific version.</para></section></section></chapter><chapter id="org.gradle.api.plugins.jvm.PlatformDependencyModifiers"><title>PlatformDependencyModifiers</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.plugins.jvm.PlatformDependencyModifiers" style="javadoc"/></seg></seglistitem></segmentedlist><segmentedlist><segtitle>Known Subtypes</segtitle><seglistitem><seg><simplelist columns="1" type="vert"><member><apilink class="org.gradle.api.plugins.jvm.JvmComponentDependencies"/></member></simplelist></seg></seglistitem></segmentedlist><caution><para>Note: This class is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Dependency modifier APIs that can find platform and enforced platforms in other modules for <literal>dependencies</literal> blocks.</para><section><title>Properties</title><table><title>Properties - PlatformDependencyModifiers</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.plugins.jvm.PlatformDependencyModifiers:enforcedPlatform"><literal>enforcedPlatform</literal></link></td><td><caution>Incubating</caution><para>A dependency modifier that can modify a dependency to select an enforced platform variant.</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.jvm.PlatformDependencyModifiers:platform"><literal>platform</literal></link></td><td><caution>Incubating</caution><para>A dependency modifier that can modify a dependency to select a platform variant.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.plugins.jvm.PlatformDependencyModifiers:enforcedPlatform" role="detail"><title><classname>EnforcedPlatformDependencyModifier</classname> <literal>enforcedPlatform</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>A dependency modifier that can modify a dependency to select an enforced platform variant.</para></section><section id="org.gradle.api.plugins.jvm.PlatformDependencyModifiers:platform" role="detail"><title><classname>PlatformDependencyModifier</classname> <literal>platform</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>A dependency modifier that can modify a dependency to select a platform variant.</para></section></section></chapter><chapter id="org.gradle.api.plugins.jvm.TestFixturesDependencyModifiers"><title>TestFixturesDependencyModifiers</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.plugins.jvm.TestFixturesDependencyModifiers" style="javadoc"/></seg></seglistitem></segmentedlist><segmentedlist><segtitle>Known Subtypes</segtitle><seglistitem><seg><simplelist columns="1" type="vert"><member><apilink class="org.gradle.api.plugins.jvm.JvmComponentDependencies"/></member></simplelist></seg></seglistitem></segmentedlist><caution><para>Note: This class is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Dependency modifier APIs that can find test fixtures in other modules for <literal>dependencies</literal> blocks.</para><section><title>Properties</title><table><title>Properties - TestFixturesDependencyModifiers</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.plugins.jvm.TestFixturesDependencyModifiers:testFixtures"><literal>testFixtures</literal></link></td><td><caution>Incubating</caution><para>A dependency modifier that can modify a dependency to select a test fixtures variant.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.plugins.jvm.TestFixturesDependencyModifiers:testFixtures" role="detail"><title><classname>TestFixturesDependencyModifier</classname> <literal>testFixtures</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>A dependency modifier that can modify a dependency to select a test fixtures variant.</para></section></section></chapter><chapter id="org.gradle.api.artifacts.dsl.Dependencies"><title>Dependencies</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.artifacts.dsl.Dependencies" style="javadoc"/></seg></seglistitem></segmentedlist><segmentedlist><segtitle>Known Subtypes</segtitle><seglistitem><seg><simplelist columns="1" type="vert"><member><apilink class="org.gradle.api.artifacts.dsl.GradleDependencies"/></member></simplelist></seg></seglistitem></segmentedlist><para>Universal APIs that are available for all <literal>dependencies</literal> blocks.</para><section><title>Properties</title><para>No properties</para></section><section><title>Methods</title><table><title>Methods - Dependencies</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.artifacts.dsl.Dependencies:module(java.lang.CharSequence)">module</link>(dependencyNotation)</literal></td><td><para>Create an <apilink class="org.gradle.api.artifacts.ExternalModuleDependency"/> from the given notation.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.dsl.Dependencies:module(java.lang.String, java.lang.String, java.lang.String)">module</link>(group, name, version)</literal></td><td><para>Create an <apilink class="org.gradle.api.artifacts.ExternalModuleDependency"/> from a series of strings.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.dsl.Dependencies:project()">project</link>()</literal></td><td><para>Returns the current project as a <apilink class="org.gradle.api.artifacts.ProjectDependency"/>.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.dsl.Dependencies:project(java.lang.String)">project</link>(projectPath)</literal></td><td><para>Converts an absolute or relative path to a project into a <apilink class="org.gradle.api.artifacts.ProjectDependency"/>. Project paths are separated by colons.

This method fails if the project cannot be found.</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Method details</title><section id="org.gradle.api.artifacts.dsl.Dependencies:module(java.lang.CharSequence)" role="detail"><title><apilink class="org.gradle.api.artifacts.ExternalModuleDependency"/> <literal>module</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/CharSequence.html"><classname>CharSequence</classname></ulink> dependencyNotation)</title><para>Create an <apilink class="org.gradle.api.artifacts.ExternalModuleDependency"/> from the given notation.</para></section><section id="org.gradle.api.artifacts.dsl.Dependencies:module(java.lang.String, java.lang.String, java.lang.String)" role="detail"><title><apilink class="org.gradle.api.artifacts.ExternalModuleDependency"/> <literal>module</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> group, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> version)</title><para>Create an <apilink class="org.gradle.api.artifacts.ExternalModuleDependency"/> from a series of strings.</para></section><section id="org.gradle.api.artifacts.dsl.Dependencies:project()" role="detail"><title><apilink class="org.gradle.api.artifacts.ProjectDependency"/> <literal>project</literal>()</title><para>Returns the current project as a <apilink class="org.gradle.api.artifacts.ProjectDependency"/>.</para></section><section id="org.gradle.api.artifacts.dsl.Dependencies:project(java.lang.String)" role="detail"><title><apilink class="org.gradle.api.artifacts.ProjectDependency"/> <literal>project</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> projectPath)</title><para>Converts an absolute or relative path to a project into a <apilink class="org.gradle.api.artifacts.ProjectDependency"/>. Project paths are separated by colons.

This method fails if the project cannot be found.</para></section></section></chapter><chapter id="org.gradle.api.artifacts.dsl.GradleDependencies"><title>GradleDependencies</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.artifacts.dsl.GradleDependencies" style="javadoc"/></seg></seglistitem></segmentedlist><segmentedlist><segtitle>Known Subtypes</segtitle><seglistitem><seg><simplelist columns="1" type="vert"><member><apilink class="org.gradle.api.plugins.jvm.JvmComponentDependencies"/></member></simplelist></seg></seglistitem></segmentedlist><para>Dependency APIs available for <literal>dependencies</literal> blocks that can build software that relies on Gradle APIs.</para><section><title>Properties</title><para>No properties</para></section><section><title>Methods</title><table><title>Methods - GradleDependencies</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.artifacts.dsl.GradleDependencies:gradleApi()">gradleApi</link>()</literal></td><td><para>Creates a dependency on the API of the current version of Gradle.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.dsl.GradleDependencies:gradleTestKit()">gradleTestKit</link>()</literal></td><td><para>Creates a dependency on the <ulink url="https://docs.gradle.org/current/userguide/test_kit.html">Gradle test-kit</ulink> API.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.dsl.GradleDependencies:localGroovy()">localGroovy</link>()</literal></td><td><para>Creates a dependency on the version of Groovy that is distributed with the current version of Gradle.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.dsl.GradleDependencies:module(java.lang.CharSequence)">module</link>(dependencyNotation)</literal></td><td><para>Create an <apilink class="org.gradle.api.artifacts.ExternalModuleDependency"/> from the given notation.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.dsl.GradleDependencies:module(java.lang.String, java.lang.String, java.lang.String)">module</link>(group, name, version)</literal></td><td><para>Create an <apilink class="org.gradle.api.artifacts.ExternalModuleDependency"/> from a series of strings.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.dsl.GradleDependencies:project()">project</link>()</literal></td><td><para>Returns the current project as a <apilink class="org.gradle.api.artifacts.ProjectDependency"/>.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.dsl.GradleDependencies:project(java.lang.String)">project</link>(projectPath)</literal></td><td><para>Converts an absolute or relative path to a project into a <apilink class="org.gradle.api.artifacts.ProjectDependency"/>. Project paths are separated by colons.

This method fails if the project cannot be found.</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Method details</title><section id="org.gradle.api.artifacts.dsl.GradleDependencies:gradleApi()" role="detail"><title><apilink class="org.gradle.api.artifacts.Dependency"/> <literal>gradleApi</literal>()</title><para>Creates a dependency on the API of the current version of Gradle.</para></section><section id="org.gradle.api.artifacts.dsl.GradleDependencies:gradleTestKit()" role="detail"><title><apilink class="org.gradle.api.artifacts.Dependency"/> <literal>gradleTestKit</literal>()</title><para>Creates a dependency on the <ulink url="https://docs.gradle.org/current/userguide/test_kit.html">Gradle test-kit</ulink> API.</para></section><section id="org.gradle.api.artifacts.dsl.GradleDependencies:localGroovy()" role="detail"><title><apilink class="org.gradle.api.artifacts.Dependency"/> <literal>localGroovy</literal>()</title><para>Creates a dependency on the version of Groovy that is distributed with the current version of Gradle.</para></section><section id="org.gradle.api.artifacts.dsl.GradleDependencies:module(java.lang.CharSequence)" role="detail"><title><apilink class="org.gradle.api.artifacts.ExternalModuleDependency"/> <literal>module</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/CharSequence.html"><classname>CharSequence</classname></ulink> dependencyNotation)</title><para>Create an <apilink class="org.gradle.api.artifacts.ExternalModuleDependency"/> from the given notation.</para></section><section id="org.gradle.api.artifacts.dsl.GradleDependencies:module(java.lang.String, java.lang.String, java.lang.String)" role="detail"><title><apilink class="org.gradle.api.artifacts.ExternalModuleDependency"/> <literal>module</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> group, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> version)</title><para>Create an <apilink class="org.gradle.api.artifacts.ExternalModuleDependency"/> from a series of strings.</para></section><section id="org.gradle.api.artifacts.dsl.GradleDependencies:project()" role="detail"><title><apilink class="org.gradle.api.artifacts.ProjectDependency"/> <literal>project</literal>()</title><para>Returns the current project as a <apilink class="org.gradle.api.artifacts.ProjectDependency"/>.</para></section><section id="org.gradle.api.artifacts.dsl.GradleDependencies:project(java.lang.String)" role="detail"><title><apilink class="org.gradle.api.artifacts.ProjectDependency"/> <literal>project</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> projectPath)</title><para>Converts an absolute or relative path to a project into a <apilink class="org.gradle.api.artifacts.ProjectDependency"/>. Project paths are separated by colons.

This method fails if the project cannot be found.</para></section></section></chapter><chapter id="org.gradle.api.plugins.jvm.JvmComponentDependencies"><title>JvmComponentDependencies</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.plugins.jvm.JvmComponentDependencies" style="javadoc"/></seg></seglistitem></segmentedlist><caution><para>Note: This class is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>This DSL element is used to add dependencies to a component, for instance a <apilink class="org.gradle.testing.base.TestSuite"/>

</para><itemizedlist><listitem><literal>implementation</literal> dependencies are used at compilation and runtime.</listitem><listitem><literal>compileOnly</literal> dependencies are used only at compilation and are not available at runtime.</listitem><listitem><literal>runtimeOnly</literal> dependencies are not available at compilation and are used only at runtime.</listitem><listitem><literal>annotationProcessor</literal> dependencies are used only at compilation for the annotation processor classpath</listitem></itemizedlist><section><title>Properties</title><table><title>Properties - JvmComponentDependencies</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.plugins.jvm.JvmComponentDependencies:annotationProcessor"><literal>annotationProcessor</literal></link></td><td><caution>Incubating</caution><para>Returns a <apilink class="org.gradle.api.artifacts.dsl.DependencyCollector"/> that collects the set of annotation processor dependencies.
</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.jvm.JvmComponentDependencies:compileOnly"><literal>compileOnly</literal></link></td><td><caution>Incubating</caution><para>Returns a <apilink class="org.gradle.api.artifacts.dsl.DependencyCollector"/> that collects the set of compile-only dependencies.
</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.jvm.JvmComponentDependencies:enforcedPlatform"><literal>enforcedPlatform</literal></link></td><td><caution>Incubating</caution><para>A dependency modifier that can modify a dependency to select an enforced platform variant.</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.jvm.JvmComponentDependencies:implementation"><literal>implementation</literal></link></td><td><caution>Incubating</caution><para>Returns a <apilink class="org.gradle.api.artifacts.dsl.DependencyCollector"/> that collects the set of implementation dependencies.
</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.jvm.JvmComponentDependencies:platform"><literal>platform</literal></link></td><td><caution>Incubating</caution><para>A dependency modifier that can modify a dependency to select a platform variant.</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.jvm.JvmComponentDependencies:runtimeOnly"><literal>runtimeOnly</literal></link></td><td><caution>Incubating</caution><para>Returns a <apilink class="org.gradle.api.artifacts.dsl.DependencyCollector"/> that collects the set of runtime-only dependencies.
</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.jvm.JvmComponentDependencies:testFixtures"><literal>testFixtures</literal></link></td><td><caution>Incubating</caution><para>A dependency modifier that can modify a dependency to select a test fixtures variant.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - JvmComponentDependencies</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.plugins.jvm.JvmComponentDependencies:gradleApi()">gradleApi</link>()</literal></td><td><para>Creates a dependency on the API of the current version of Gradle.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.plugins.jvm.JvmComponentDependencies:gradleTestKit()">gradleTestKit</link>()</literal></td><td><para>Creates a dependency on the <ulink url="https://docs.gradle.org/current/userguide/test_kit.html">Gradle test-kit</ulink> API.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.plugins.jvm.JvmComponentDependencies:localGroovy()">localGroovy</link>()</literal></td><td><para>Creates a dependency on the version of Groovy that is distributed with the current version of Gradle.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.plugins.jvm.JvmComponentDependencies:module(java.lang.CharSequence)">module</link>(dependencyNotation)</literal></td><td><para>Create an <apilink class="org.gradle.api.artifacts.ExternalModuleDependency"/> from the given notation.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.plugins.jvm.JvmComponentDependencies:module(java.lang.String, java.lang.String, java.lang.String)">module</link>(group, name, version)</literal></td><td><para>Create an <apilink class="org.gradle.api.artifacts.ExternalModuleDependency"/> from a series of strings.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.plugins.jvm.JvmComponentDependencies:project()">project</link>()</literal></td><td><para>Returns the current project as a <apilink class="org.gradle.api.artifacts.ProjectDependency"/>.</para></td></tr><tr><td><literal><link linkend="org.gradle.api.plugins.jvm.JvmComponentDependencies:project(java.lang.String)">project</link>(projectPath)</literal></td><td><para>Converts an absolute or relative path to a project into a <apilink class="org.gradle.api.artifacts.ProjectDependency"/>. Project paths are separated by colons.

This method fails if the project cannot be found.</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.plugins.jvm.JvmComponentDependencies:annotationProcessor" role="detail"><title><apilink class="org.gradle.api.artifacts.dsl.DependencyCollector"/> <literal>annotationProcessor</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Returns a <apilink class="org.gradle.api.artifacts.dsl.DependencyCollector"/> that collects the set of annotation processor dependencies.
</para><para>
<literal>annotationProcessor</literal> dependencies are used only at compilation, and are added to the annotation processor classpath.</para></section><section id="org.gradle.api.plugins.jvm.JvmComponentDependencies:compileOnly" role="detail"><title><apilink class="org.gradle.api.artifacts.dsl.DependencyCollector"/> <literal>compileOnly</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Returns a <apilink class="org.gradle.api.artifacts.dsl.DependencyCollector"/> that collects the set of compile-only dependencies.
</para><para>
<literal>compileOnly</literal> dependencies are used only at compilation and are not available at runtime.</para></section><section id="org.gradle.api.plugins.jvm.JvmComponentDependencies:enforcedPlatform" role="detail"><title><classname>EnforcedPlatformDependencyModifier</classname> <literal>enforcedPlatform</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>A dependency modifier that can modify a dependency to select an enforced platform variant.</para></section><section id="org.gradle.api.plugins.jvm.JvmComponentDependencies:implementation" role="detail"><title><apilink class="org.gradle.api.artifacts.dsl.DependencyCollector"/> <literal>implementation</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Returns a <apilink class="org.gradle.api.artifacts.dsl.DependencyCollector"/> that collects the set of implementation dependencies.
</para><para>
<literal>implementation</literal> dependencies are used at compilation and runtime.</para></section><section id="org.gradle.api.plugins.jvm.JvmComponentDependencies:platform" role="detail"><title><classname>PlatformDependencyModifier</classname> <literal>platform</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>A dependency modifier that can modify a dependency to select a platform variant.</para></section><section id="org.gradle.api.plugins.jvm.JvmComponentDependencies:runtimeOnly" role="detail"><title><apilink class="org.gradle.api.artifacts.dsl.DependencyCollector"/> <literal>runtimeOnly</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Returns a <apilink class="org.gradle.api.artifacts.dsl.DependencyCollector"/> that collects the set of runtime-only dependencies.
</para><para>
<literal>runtimeOnly</literal> dependencies are not available at compilation and are used only at runtime.</para></section><section id="org.gradle.api.plugins.jvm.JvmComponentDependencies:testFixtures" role="detail"><title><classname>TestFixturesDependencyModifier</classname> <literal>testFixtures</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>A dependency modifier that can modify a dependency to select a test fixtures variant.</para></section></section><section><title>Method details</title><section id="org.gradle.api.plugins.jvm.JvmComponentDependencies:gradleApi()" role="detail"><title><apilink class="org.gradle.api.artifacts.Dependency"/> <literal>gradleApi</literal>()</title><para>Creates a dependency on the API of the current version of Gradle.</para></section><section id="org.gradle.api.plugins.jvm.JvmComponentDependencies:gradleTestKit()" role="detail"><title><apilink class="org.gradle.api.artifacts.Dependency"/> <literal>gradleTestKit</literal>()</title><para>Creates a dependency on the <ulink url="https://docs.gradle.org/current/userguide/test_kit.html">Gradle test-kit</ulink> API.</para></section><section id="org.gradle.api.plugins.jvm.JvmComponentDependencies:localGroovy()" role="detail"><title><apilink class="org.gradle.api.artifacts.Dependency"/> <literal>localGroovy</literal>()</title><para>Creates a dependency on the version of Groovy that is distributed with the current version of Gradle.</para></section><section id="org.gradle.api.plugins.jvm.JvmComponentDependencies:module(java.lang.CharSequence)" role="detail"><title><apilink class="org.gradle.api.artifacts.ExternalModuleDependency"/> <literal>module</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/CharSequence.html"><classname>CharSequence</classname></ulink> dependencyNotation)</title><para>Create an <apilink class="org.gradle.api.artifacts.ExternalModuleDependency"/> from the given notation.</para></section><section id="org.gradle.api.plugins.jvm.JvmComponentDependencies:module(java.lang.String, java.lang.String, java.lang.String)" role="detail"><title><apilink class="org.gradle.api.artifacts.ExternalModuleDependency"/> <literal>module</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> group, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> version)</title><para>Create an <apilink class="org.gradle.api.artifacts.ExternalModuleDependency"/> from a series of strings.</para></section><section id="org.gradle.api.plugins.jvm.JvmComponentDependencies:project()" role="detail"><title><apilink class="org.gradle.api.artifacts.ProjectDependency"/> <literal>project</literal>()</title><para>Returns the current project as a <apilink class="org.gradle.api.artifacts.ProjectDependency"/>.</para></section><section id="org.gradle.api.plugins.jvm.JvmComponentDependencies:project(java.lang.String)" role="detail"><title><apilink class="org.gradle.api.artifacts.ProjectDependency"/> <literal>project</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> projectPath)</title><para>Converts an absolute or relative path to a project into a <apilink class="org.gradle.api.artifacts.ProjectDependency"/>. Project paths are separated by colons.

This method fails if the project cannot be found.</para></section></section></chapter><chapter id="org.gradle.testing.base.TestSuiteTarget"><title>TestSuiteTarget</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.testing.base.TestSuiteTarget" style="javadoc"/></seg></seglistitem></segmentedlist><segmentedlist><segtitle>Known Subtypes</segtitle><seglistitem><seg><simplelist columns="1" type="vert"><member><apilink class="org.gradle.api.plugins.jvm.JvmTestSuiteTarget"/></member></simplelist></seg></seglistitem></segmentedlist><caution><para>Note: This class is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Base test suite target.

A test suite target is a collection of tests that run in a particular context (operating system, Java runtime, etc).</para><section><title>Properties</title><table><title>Properties - TestSuiteTarget</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.testing.base.TestSuiteTarget:binaryResultsDirectory"><literal>binaryResultsDirectory</literal></link></td><td><caution>Incubating</caution><para>The directory containing the binary results produced by executing this test suite target.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.testing.base.TestSuiteTarget:binaryResultsDirectory" role="detail"><title><classname><apilink class="org.gradle.api.provider.Provider"/>&lt;<apilink class="org.gradle.api.file.Directory"/>&gt;</classname> <literal>binaryResultsDirectory</literal></title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The directory containing the binary results produced by executing this test suite target.</para></section></section></chapter><chapter id="org.gradle.api.plugins.jvm.JvmTestSuiteTarget"><title>JvmTestSuiteTarget</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.plugins.jvm.JvmTestSuiteTarget" style="javadoc"/></seg></seglistitem></segmentedlist><caution><para>Note: This class is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Defines the target environment against which a <apilink class="org.gradle.api.plugins.jvm.JvmTestSuite"/> will be run.</para><section><title>Properties</title><table><title>Properties - JvmTestSuiteTarget</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.plugins.jvm.JvmTestSuiteTarget:binaryResultsDirectory"><literal>binaryResultsDirectory</literal></link></td><td><caution>Incubating</caution><para>The directory containing the binary results produced by executing this test suite target.</para></td></tr><tr><td><link linkend="org.gradle.api.plugins.jvm.JvmTestSuiteTarget:testTask"><literal>testTask</literal></link></td><td><caution>Incubating</caution><para>The <apilink class="org.gradle.api.tasks.testing.Test"/> task that runs the tests for the associated test suite.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.plugins.jvm.JvmTestSuiteTarget:binaryResultsDirectory" role="detail"><title><classname><apilink class="org.gradle.api.provider.Provider"/>&lt;<apilink class="org.gradle.api.file.Directory"/>&gt;</classname> <literal>binaryResultsDirectory</literal></title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The directory containing the binary results produced by executing this test suite target.</para></section><section id="org.gradle.api.plugins.jvm.JvmTestSuiteTarget:testTask" role="detail"><title><classname><apilink class="org.gradle.api.tasks.TaskProvider"/>&lt;<apilink class="org.gradle.api.tasks.testing.Test"/>&gt;</classname> <literal>testTask</literal></title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The <apilink class="org.gradle.api.tasks.testing.Test"/> task that runs the tests for the associated test suite.</para></section></section></chapter><chapter id="org.gradle.api.reporting.SingleFileReport"><title>SingleFileReport</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.reporting.SingleFileReport" style="javadoc"/></seg></seglistitem></segmentedlist><segmentedlist><segtitle>Known Subtypes</segtitle><seglistitem><seg><simplelist columns="1" type="vert"><member><apilink class="org.gradle.api.reporting.CustomizableHtmlReport"/></member></simplelist></seg></seglistitem></segmentedlist><para>A report that is a single file.</para><section><title>Properties</title><para>No properties</para></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section></chapter><chapter id="org.gradle.api.reporting.CustomizableHtmlReport"><title>CustomizableHtmlReport</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.reporting.CustomizableHtmlReport" style="javadoc"/></seg></seglistitem></segmentedlist><para>A HTML Report whose generation can be customized with a XSLT stylesheet.</para><section><title>Properties</title><table><title>Properties - CustomizableHtmlReport</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.reporting.CustomizableHtmlReport:stylesheet"><literal>stylesheet</literal></link></td><td><para>The stylesheet to use to generate the HTML report.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.reporting.CustomizableHtmlReport:stylesheet" role="detail"><title><apilink class="org.gradle.api.resources.TextResource"/> <literal>stylesheet</literal></title><para>The stylesheet to use to generate the HTML report.</para></section></section></chapter><chapter id="org.gradle.api.reporting.DirectoryReport"><title>DirectoryReport</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.reporting.DirectoryReport" style="javadoc"/></seg></seglistitem></segmentedlist><para>A directory based report to be created.</para><section><title>Properties</title><table><title>Properties - DirectoryReport</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.reporting.DirectoryReport:entryPoint"><literal>entryPoint</literal></link></td><td><para>The entry point of a directory based Report

This can be the index.html file in a HTML report</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.reporting.DirectoryReport:entryPoint" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>entryPoint</literal> (read-only)</title><para>The entry point of a directory based Report

This can be the index.html file in a HTML report</para></section></section></chapter><chapter id="org.gradle.api.reporting.Report"><title>Report</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.reporting.Report" style="javadoc"/></seg></seglistitem></segmentedlist><para>A file based report to be created.
</para><para>
Tasks that produce reports expose instances of this type for configuration via the <apilink class="org.gradle.api.reporting.Reporting"/> interface.</para><section><title>Properties</title><table><title>Properties - Report</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.reporting.Report:displayName"><literal>displayName</literal></link></td><td><para>A more descriptive name of this report. Used when the report is referenced for end users.</para></td></tr><tr><td><link linkend="org.gradle.api.reporting.Report:name"><literal>name</literal></link></td><td><para>The symbolic name of this report.
</para></td></tr><tr><td><link linkend="org.gradle.api.reporting.Report:outputLocation"><literal>outputLocation</literal></link></td><td><para>The location on the filesystem to generate the report to.</para></td></tr><tr><td><link linkend="org.gradle.api.reporting.Report:outputType"><literal>outputType</literal></link></td><td><para>The type of output that the report generates.</para></td></tr><tr><td><link linkend="org.gradle.api.reporting.Report:required"><literal>required</literal></link></td><td><para>A flag that determines whether this report should be generated or not.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.reporting.Report:displayName" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>displayName</literal> (read-only)</title><para>A more descriptive name of this report. Used when the report is referenced for end users.</para></section><section id="org.gradle.api.reporting.Report:name" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>name</literal> (read-only)</title><para>The symbolic name of this report.
</para><para>
The name of the report usually indicates the format (e.g. XML, HTML etc.) but can be anything.
</para><para>
When part of a <apilink class="org.gradle.api.reporting.ReportContainer"/>, reports are accessed via their name. That is, given a report container variable
named <literal>reports</literal> containing a report who's <literal>getName()</literal> returns <literal>"html"</literal>, the report could be accessed
via:
</para><programlisting language="java">
reports.html
</programlisting></section><section id="org.gradle.api.reporting.Report:outputLocation" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;? extends <apilink class="org.gradle.api.file.FileSystemLocation"/>&gt;</classname> <literal>outputLocation</literal></title><para>The location on the filesystem to generate the report to.</para></section><section id="org.gradle.api.reporting.Report:outputType" role="detail"><title><classname>OutputType</classname> <literal>outputType</literal> (read-only)</title><para>The type of output that the report generates.</para></section><section id="org.gradle.api.reporting.Report:required" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html"><classname>Boolean</classname></ulink>&gt;</classname> <literal>required</literal></title><para>A flag that determines whether this report should be generated or not.</para></section></section></chapter><chapter id="org.gradle.api.reporting.ReportContainer"><title>ReportContainer</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.reporting.ReportContainer" style="javadoc"/></seg></seglistitem></segmentedlist><para>A container of <apilink class="org.gradle.api.reporting.Report"/> objects, that represent potential reports.
</para><para>
Things that produce reports (typically tasks) expose a report container that contains <apilink class="org.gradle.api.reporting.Report"/> objects for each
possible report that they can produce. Each report object can be configured individually, including whether or not it should
be produced by way of its <apilink class="org.gradle.api.reporting.Report" method="getRequired()"/> required} property.
</para><para>
<literal>ReportContainer</literal> implementations are <emphasis>immutable</emphasis> in that standard collection methods such as <literal>add()</literal>, <literal>remove()</literal>
and <literal>clear()</literal> will throw an <classname>ImmutableViolationException</classname>. However, implementations may provide new methods that allow
the addition of new report object and/or the removal of existing report objects.</para><section><title>Properties</title><table><title>Properties - ReportContainer</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.reporting.ReportContainer:enabled"><literal>enabled</literal></link></td><td><para>Returns an immutable collection of all the enabled <apilink class="org.gradle.api.reporting.Report"/> objects in this container.
</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - ReportContainer</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.reporting.ReportContainer:getByName(java.lang.String)">getByName</link>(name)</literal></td><td><para>Locates an object by name, failing if there is no such object.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.reporting.ReportContainer:getByName(java.lang.String, groovy.lang.Closure)">getByName</link>(name, configureClosure)</literal></td><td><para>Locates an object by name, failing if there is no such object. The given configure closure is executed against
the object before it is returned from this method. The object is passed to the closure as its delegate.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.reporting.ReportContainer:getByName(java.lang.String, org.gradle.api.Action)">getByName</link>(name, configureAction)</literal></td><td><para>Locates an object by name, failing if there is no such object. The given configure action is executed against
the object before it is returned from this method.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.reporting.ReportContainer:named(java.lang.String)">named</link>(name)</literal></td><td><para>Locates a object by name, failing if there is no such object.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.reporting.ReportContainer:named(java.lang.String, java.lang.Class)">named</link>(name, type)</literal></td><td><para>Locates a object by name and type, failing if there is no such object.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.reporting.ReportContainer:named(java.lang.String, java.lang.Class, org.gradle.api.Action)">named</link>(name, type, configurationAction)</literal></td><td><para>Locates a object by name and type, failing if there is no such object.
The given configure action is executed against the object before it is returned from the provider.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.reporting.ReportContainer:named(java.lang.String, org.gradle.api.Action)">named</link>(name, configurationAction)</literal></td><td><para>Locates a object by name, failing if there is no such object.
The given configure action is executed against the object before it is returned from the provider.
</para></td></tr><tr><td><literal><link linkend="org.gradle.api.reporting.ReportContainer:named(org.gradle.api.specs.Spec)">named</link>(nameFilter)</literal></td><td><caution>Incubating</caution><para>Returns a collection containing the objects with names matching the provided filter.
The returned collection is live, so that when matching objects are added to this collection,
they are also visible in the filtered collection.
</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.reporting.ReportContainer:enabled" role="detail"><title><classname><apilink class="org.gradle.api.NamedDomainObjectSet"/>&lt;<classname>T</classname>&gt;</classname> <literal>enabled</literal> (read-only)</title><para>Returns an immutable collection of all the enabled <apilink class="org.gradle.api.reporting.Report"/> objects in this container.
</para><para>
The returned collection is live. That is, as reports are enabled/disabled the returned collection always
reflects the current set of enabled reports.</para></section></section><section><title>Method details</title><section id="org.gradle.api.reporting.ReportContainer:getByName(java.lang.String)" role="detail"><title><classname>T</classname> <literal>getByName</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name)</title><para>Locates an object by name, failing if there is no such object.
</para><para>
This operation is eager and will cause the returned element to be realized.</para></section><section id="org.gradle.api.reporting.ReportContainer:getByName(java.lang.String, groovy.lang.Closure)" role="detail"><title><classname>T</classname> <literal>getByName</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> configureClosure)</title><para>Locates an object by name, failing if there is no such object. The given configure closure is executed against
the object before it is returned from this method. The object is passed to the closure as its delegate.
</para><para>
This operation is eager and will cause the returned element to be realized.</para></section><section id="org.gradle.api.reporting.ReportContainer:getByName(java.lang.String, org.gradle.api.Action)" role="detail"><title><classname>T</classname> <literal>getByName</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <classname>T</classname>&gt;</classname> configureAction)</title><para>Locates an object by name, failing if there is no such object. The given configure action is executed against
the object before it is returned from this method.
</para><para>
This operation is eager and will cause the returned element to be realized.</para></section><section id="org.gradle.api.reporting.ReportContainer:named(java.lang.String)" role="detail"><title><classname><apilink class="org.gradle.api.NamedDomainObjectProvider"/>&lt;<classname>T</classname>&gt;</classname> <literal>named</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name)</title><para>Locates a object by name, failing if there is no such object.
</para><para>
This method is lazy and will not cause the returned element to be realized.</para></section><section id="org.gradle.api.reporting.ReportContainer:named(java.lang.String, java.lang.Class)" role="detail"><title><classname><apilink class="org.gradle.api.NamedDomainObjectProvider"/>&lt;<classname>S</classname>&gt;</classname> <literal>named</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html"><classname>Class</classname></ulink>&lt;<classname>S</classname>&gt;</classname> type)</title><para>Locates a object by name and type, failing if there is no such object.
</para><para>
This method is lazy and will not cause the returned element to be realized.</para></section><section id="org.gradle.api.reporting.ReportContainer:named(java.lang.String, java.lang.Class, org.gradle.api.Action)" role="detail"><title><classname><apilink class="org.gradle.api.NamedDomainObjectProvider"/>&lt;<classname>S</classname>&gt;</classname> <literal>named</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html"><classname>Class</classname></ulink>&lt;<classname>S</classname>&gt;</classname> type, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <classname>S</classname>&gt;</classname> configurationAction)</title><para>Locates a object by name and type, failing if there is no such object.
The given configure action is executed against the object before it is returned from the provider.
</para><para>
This method is lazy and will not cause the returned element to be realized.</para></section><section id="org.gradle.api.reporting.ReportContainer:named(java.lang.String, org.gradle.api.Action)" role="detail"><title><classname><apilink class="org.gradle.api.NamedDomainObjectProvider"/>&lt;<classname>T</classname>&gt;</classname> <literal>named</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <classname><apilink class="org.gradle.api.Action"/>&lt;? super <classname>T</classname>&gt;</classname> configurationAction)</title><para>Locates a object by name, failing if there is no such object.
The given configure action is executed against the object before it is returned from the provider.
</para><para>
This method is lazy and will not cause the returned element to be realized.</para></section><section id="org.gradle.api.reporting.ReportContainer:named(org.gradle.api.specs.Spec)" role="detail"><title><classname><apilink class="org.gradle.api.NamedDomainObjectCollection"/>&lt;<classname>T</classname>&gt;</classname> <literal>named</literal>(<classname><apilink class="org.gradle.api.specs.Spec"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> nameFilter)</title><caution><para>Note: This method is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Returns a collection containing the objects with names matching the provided filter.
The returned collection is live, so that when matching objects are added to this collection,
they are also visible in the filtered collection.
</para><para>
This method is an intermediate operation. It does not change the realized/unrealized state of the elements in the collection.</para></section></section></chapter><chapter id="org.gradle.api.tasks.testing.AggregateTestReport"><title>AggregateTestReport</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.tasks.testing.AggregateTestReport" style="javadoc"/></seg></seglistitem></segmentedlist><caution><para>Note: This class is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>A container for the inputs of an aggregated test report.</para><section><title>Properties</title><table><title>Properties - AggregateTestReport</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.tasks.testing.AggregateTestReport:reportTask"><literal>reportTask</literal></link></td><td><caution>Incubating</caution><para>Contains the <apilink class="org.gradle.api.tasks.testing.TestReport"/> task instance which produces this report.</para></td></tr><tr><td><link linkend="org.gradle.api.tasks.testing.AggregateTestReport:testSuiteName"><literal>testSuiteName</literal></link></td><td><caution>Incubating</caution><para>Contains the name of the test suite in target projects that this report will aggregate.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.tasks.testing.AggregateTestReport:reportTask" role="detail"><title><classname><apilink class="org.gradle.api.tasks.TaskProvider"/>&lt;<apilink class="org.gradle.api.tasks.testing.TestReport"/>&gt;</classname> <literal>reportTask</literal></title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Contains the <apilink class="org.gradle.api.tasks.testing.TestReport"/> task instance which produces this report.</para></section><section id="org.gradle.api.tasks.testing.AggregateTestReport:testSuiteName" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>testSuiteName</literal></title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Contains the name of the test suite in target projects that this report will aggregate.</para></section></section></chapter><chapter id="org.gradle.testing.jacoco.plugins.JacocoCoverageReport"><title>JacocoCoverageReport</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.testing.jacoco.plugins.JacocoCoverageReport" style="javadoc"/></seg></seglistitem></segmentedlist><caution><para>Note: This class is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>A container for the inputs of an aggregated JaCoCo code coverage report.</para><section><title>Properties</title><table><title>Properties - JacocoCoverageReport</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.testing.jacoco.plugins.JacocoCoverageReport:reportTask"><literal>reportTask</literal></link></td><td><caution>Incubating</caution><para>Contains the <apilink class="org.gradle.testing.jacoco.tasks.JacocoReport"/> task instance which produces this report</para></td></tr><tr><td><link linkend="org.gradle.testing.jacoco.plugins.JacocoCoverageReport:testSuiteName"><literal>testSuiteName</literal></link></td><td><caution>Incubating</caution><para>Contains the name of the test suite in target projects that this report will aggregate.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.testing.jacoco.plugins.JacocoCoverageReport:reportTask" role="detail"><title><classname><apilink class="org.gradle.api.tasks.TaskProvider"/>&lt;<apilink class="org.gradle.testing.jacoco.tasks.JacocoReport"/>&gt;</classname> <literal>reportTask</literal></title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Contains the <apilink class="org.gradle.testing.jacoco.tasks.JacocoReport"/> task instance which produces this report</para></section><section id="org.gradle.testing.jacoco.plugins.JacocoCoverageReport:testSuiteName" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>testSuiteName</literal></title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Contains the name of the test suite in target projects that this report will aggregate.</para></section></section></chapter><chapter id="org.gradle.plugins.ide.api.GeneratorTask"><title>GeneratorTask</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.plugins.ide.api.GeneratorTask" style="javadoc"/></seg></seglistitem></segmentedlist><segmentedlist><segtitle>Known Subtypes</segtitle><seglistitem><seg><simplelist columns="3" type="vert"><member><apilink class="org.gradle.plugins.ide.api.XmlGeneratorTask"/></member><member><apilink class="org.gradle.plugins.ide.api.PropertiesGeneratorTask"/></member><member><apilink class="org.gradle.plugins.ide.api.PropertyListGeneratorTask"/></member><member><apilink class="org.gradle.ide.visualstudio.tasks.GenerateSolutionFileTask"/></member></simplelist></seg></seglistitem></segmentedlist><para>A <literal>GeneratorTask</literal> generates a configuration file based on a domain object of type T.
When executed the task:
</para><itemizedlist><listitem>loads the object from the input file, if it exists.</listitem><listitem>Calls the beforeConfigured actions, passing the object to each action.</listitem><listitem>Configures the object in some task-specific way.</listitem><listitem>Calls the afterConfigured actions, passing the object to each action.</listitem><listitem>writes the object to the output file.</listitem></itemizedlist><section><title>Properties</title><table><title>Properties - GeneratorTask</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.plugins.ide.api.GeneratorTask:inputFile"><literal>inputFile</literal></link></td><td><para>The input file to load the initial configuration from. Defaults to the output file. If the specified input file
does not exist, this task uses some default initial configuration.</para></td></tr><tr><td><link linkend="org.gradle.plugins.ide.api.GeneratorTask:outputFile"><literal>outputFile</literal></link></td><td><para>The output file to write the final configuration to.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.plugins.ide.api.GeneratorTask:inputFile" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>inputFile</literal></title><para>The input file to load the initial configuration from. Defaults to the output file. If the specified input file
does not exist, this task uses some default initial configuration.</para></section><section id="org.gradle.plugins.ide.api.GeneratorTask:outputFile" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>outputFile</literal></title><para>The output file to write the final configuration to.</para></section></section></chapter><chapter id="org.gradle.plugins.ide.api.XmlGeneratorTask"><title>XmlGeneratorTask</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.plugins.ide.api.XmlGeneratorTask" style="javadoc"/></seg></seglistitem></segmentedlist><segmentedlist><segtitle>Known Subtypes</segtitle><seglistitem><seg><simplelist columns="3" type="vert"><member><apilink class="org.gradle.plugins.ide.eclipse.GenerateEclipseProject"/></member><member><apilink class="org.gradle.plugins.ide.eclipse.GenerateEclipseClasspath"/></member><member><apilink class="org.gradle.plugins.ide.eclipse.GenerateEclipseWtpComponent"/></member><member><apilink class="org.gradle.plugins.ide.eclipse.GenerateEclipseWtpFacet"/></member><member><apilink class="org.gradle.plugins.ide.idea.GenerateIdeaModule"/></member><member><apilink class="org.gradle.plugins.ide.idea.GenerateIdeaProject"/></member><member><apilink class="org.gradle.plugins.ide.idea.GenerateIdeaWorkspace"/></member><member><apilink class="org.gradle.ide.xcode.tasks.GenerateSchemeFileTask"/></member><member><apilink class="org.gradle.ide.xcode.tasks.GenerateXcodeWorkspaceFileTask"/></member><member><apilink class="org.gradle.ide.visualstudio.tasks.GenerateProjectFileTask"/></member><member><apilink class="org.gradle.ide.visualstudio.tasks.GenerateFiltersFileTask"/></member></simplelist></seg></seglistitem></segmentedlist><para>A convenience superclass for those tasks which generate XML configuration files from a domain object of type T.</para><section><title>Properties</title><table><title>Properties - XmlGeneratorTask</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.plugins.ide.api.XmlGeneratorTask:inputFile"><literal>inputFile</literal></link></td><td><para>The input file to load the initial configuration from. Defaults to the output file. If the specified input file
does not exist, this task uses some default initial configuration.</para></td></tr><tr><td><link linkend="org.gradle.plugins.ide.api.XmlGeneratorTask:outputFile"><literal>outputFile</literal></link></td><td><para>The output file to write the final configuration to.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.plugins.ide.api.XmlGeneratorTask:inputFile" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>inputFile</literal></title><para>The input file to load the initial configuration from. Defaults to the output file. If the specified input file
does not exist, this task uses some default initial configuration.</para></section><section id="org.gradle.plugins.ide.api.XmlGeneratorTask:outputFile" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>outputFile</literal></title><para>The output file to write the final configuration to.</para></section></section></chapter><chapter id="org.gradle.plugins.ide.eclipse.GenerateEclipseProject"><title>GenerateEclipseProject</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.plugins.ide.eclipse.GenerateEclipseProject" style="javadoc"/></seg></seglistitem></segmentedlist><para>Generates an Eclipse <literal>.project</literal> file. If you want to fine tune the eclipse configuration
</para><para>
At this moment nearly all configuration is done via <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseProject"/>.</para><section><title>Properties</title><table><title>Properties - GenerateEclipseProject</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.plugins.ide.eclipse.GenerateEclipseProject:inputFile"><literal>inputFile</literal></link></td><td><para>The input file to load the initial configuration from. Defaults to the output file. If the specified input file
does not exist, this task uses some default initial configuration.</para></td></tr><tr><td><link linkend="org.gradle.plugins.ide.eclipse.GenerateEclipseProject:outputFile"><literal>outputFile</literal></link></td><td><para>The output file to write the final configuration to.</para></td></tr><tr><td><link linkend="org.gradle.plugins.ide.eclipse.GenerateEclipseProject:projectModel"><literal>projectModel</literal></link></td><td><para>The Eclipse project model that contains the details required to generate the project file.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.plugins.ide.eclipse.GenerateEclipseProject:inputFile" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>inputFile</literal></title><para>The input file to load the initial configuration from. Defaults to the output file. If the specified input file
does not exist, this task uses some default initial configuration.</para></section><section id="org.gradle.plugins.ide.eclipse.GenerateEclipseProject:outputFile" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>outputFile</literal></title><para>The output file to write the final configuration to.</para></section><section id="org.gradle.plugins.ide.eclipse.GenerateEclipseProject:projectModel" role="detail"><title><apilink class="org.gradle.plugins.ide.eclipse.model.EclipseProject"/> <literal>projectModel</literal></title><para>The Eclipse project model that contains the details required to generate the project file.</para><segmentedlist><segtitle>Default with <literal>eclipse</literal> plugins</segtitle><seglistitem><seg><literal>project.eclipse.project</literal></seg></seglistitem></segmentedlist></section></section></chapter><chapter id="org.gradle.plugins.ide.eclipse.GenerateEclipseClasspath"><title>GenerateEclipseClasspath</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.plugins.ide.eclipse.GenerateEclipseClasspath" style="javadoc"/></seg></seglistitem></segmentedlist><para>Generates an Eclipse <literal>.classpath</literal> file. If you want to fine tune the eclipse configuration
</para><para>
At this moment nearly all configuration is done via <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseClasspath"/>.</para><section><title>Properties</title><table><title>Properties - GenerateEclipseClasspath</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.plugins.ide.eclipse.GenerateEclipseClasspath:classpath"><literal>classpath</literal></link></td><td><para>The Eclipse Classpath model containing the information required to generate the classpath file.</para></td></tr><tr><td><link linkend="org.gradle.plugins.ide.eclipse.GenerateEclipseClasspath:inputFile"><literal>inputFile</literal></link></td><td><para>The input file to load the initial configuration from. Defaults to the output file. If the specified input file
does not exist, this task uses some default initial configuration.</para></td></tr><tr><td><link linkend="org.gradle.plugins.ide.eclipse.GenerateEclipseClasspath:outputFile"><literal>outputFile</literal></link></td><td><para>The output file to write the final configuration to.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.plugins.ide.eclipse.GenerateEclipseClasspath:classpath" role="detail"><title><apilink class="org.gradle.plugins.ide.eclipse.model.EclipseClasspath"/> <literal>classpath</literal></title><para>The Eclipse Classpath model containing the information required to generate the classpath file.</para><segmentedlist><segtitle>Default with <literal>eclipse</literal> plugins</segtitle><seglistitem><seg><literal>project.eclipse.classpath</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.plugins.ide.eclipse.GenerateEclipseClasspath:inputFile" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>inputFile</literal></title><para>The input file to load the initial configuration from. Defaults to the output file. If the specified input file
does not exist, this task uses some default initial configuration.</para></section><section id="org.gradle.plugins.ide.eclipse.GenerateEclipseClasspath:outputFile" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>outputFile</literal></title><para>The output file to write the final configuration to.</para></section></section></chapter><chapter id="org.gradle.plugins.ide.api.PropertiesGeneratorTask"><title>PropertiesGeneratorTask</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.plugins.ide.api.PropertiesGeneratorTask" style="javadoc"/></seg></seglistitem></segmentedlist><segmentedlist><segtitle>Known Subtypes</segtitle><seglistitem><seg><simplelist columns="1" type="vert"><member><apilink class="org.gradle.plugins.ide.eclipse.GenerateEclipseJdt"/></member></simplelist></seg></seglistitem></segmentedlist><para>A convenience superclass for those tasks which generate Properties configuration files from a domain object of type T.</para><section><title>Properties</title><table><title>Properties - PropertiesGeneratorTask</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.plugins.ide.api.PropertiesGeneratorTask:inputFile"><literal>inputFile</literal></link></td><td><para>The input file to load the initial configuration from. Defaults to the output file. If the specified input file
does not exist, this task uses some default initial configuration.</para></td></tr><tr><td><link linkend="org.gradle.plugins.ide.api.PropertiesGeneratorTask:outputFile"><literal>outputFile</literal></link></td><td><para>The output file to write the final configuration to.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.plugins.ide.api.PropertiesGeneratorTask:inputFile" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>inputFile</literal></title><para>The input file to load the initial configuration from. Defaults to the output file. If the specified input file
does not exist, this task uses some default initial configuration.</para></section><section id="org.gradle.plugins.ide.api.PropertiesGeneratorTask:outputFile" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>outputFile</literal></title><para>The output file to write the final configuration to.</para></section></section></chapter><chapter id="org.gradle.plugins.ide.eclipse.GenerateEclipseJdt"><title>GenerateEclipseJdt</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.plugins.ide.eclipse.GenerateEclipseJdt" style="javadoc"/></seg></seglistitem></segmentedlist><para>Generates the Eclipse JDT configuration file. If you want to fine tune the eclipse configuration
</para><para>
At this moment nearly all configuration is done via <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseJdt"/>.</para><section><title>Properties</title><table><title>Properties - GenerateEclipseJdt</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.plugins.ide.eclipse.GenerateEclipseJdt:inputFile"><literal>inputFile</literal></link></td><td><para>The input file to load the initial configuration from. Defaults to the output file. If the specified input file
does not exist, this task uses some default initial configuration.</para></td></tr><tr><td><link linkend="org.gradle.plugins.ide.eclipse.GenerateEclipseJdt:jdt"><literal>jdt</literal></link></td><td><para>Eclipse JDT model that contains information needed to generate the JDT file.</para></td></tr><tr><td><link linkend="org.gradle.plugins.ide.eclipse.GenerateEclipseJdt:outputFile"><literal>outputFile</literal></link></td><td><para>The output file to write the final configuration to.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.plugins.ide.eclipse.GenerateEclipseJdt:inputFile" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>inputFile</literal></title><para>The input file to load the initial configuration from. Defaults to the output file. If the specified input file
does not exist, this task uses some default initial configuration.</para></section><section id="org.gradle.plugins.ide.eclipse.GenerateEclipseJdt:jdt" role="detail"><title><apilink class="org.gradle.plugins.ide.eclipse.model.EclipseJdt"/> <literal>jdt</literal></title><para>Eclipse JDT model that contains information needed to generate the JDT file.</para><segmentedlist><segtitle>Default with <literal>eclipse</literal> and <literal>java</literal> plugins</segtitle><seglistitem><seg><literal>project.eclipse.jdt</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.plugins.ide.eclipse.GenerateEclipseJdt:outputFile" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>outputFile</literal></title><para>The output file to write the final configuration to.</para></section></section></chapter><chapter id="org.gradle.plugins.ide.eclipse.GenerateEclipseWtpComponent"><title>GenerateEclipseWtpComponent</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.plugins.ide.eclipse.GenerateEclipseWtpComponent" style="javadoc"/></seg></seglistitem></segmentedlist><para>Generates the org.eclipse.wst.common.component settings file for Eclipse WTP.
If you want to fine tune the eclipse configuration
</para><para>
At this moment nearly all configuration is done via <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseWtpComponent"/>.</para><section><title>Properties</title><table><title>Properties - GenerateEclipseWtpComponent</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.plugins.ide.eclipse.GenerateEclipseWtpComponent:component"><literal>component</literal></link></td><td><para>The Eclipse WTP component model that contains details required to generate the settings file.</para></td></tr><tr><td><link linkend="org.gradle.plugins.ide.eclipse.GenerateEclipseWtpComponent:inputFile"><literal>inputFile</literal></link></td><td><para>The input file to load the initial configuration from. Defaults to the output file. If the specified input file
does not exist, this task uses some default initial configuration.</para></td></tr><tr><td><link linkend="org.gradle.plugins.ide.eclipse.GenerateEclipseWtpComponent:outputFile"><literal>outputFile</literal></link></td><td><para>The output file to write the final configuration to.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.plugins.ide.eclipse.GenerateEclipseWtpComponent:component" role="detail"><title><apilink class="org.gradle.plugins.ide.eclipse.model.EclipseWtpComponent"/> <literal>component</literal></title><para>The Eclipse WTP component model that contains details required to generate the settings file.</para><segmentedlist><segtitle>Default with <literal>eclipse-wtp</literal> and <literal>war</literal> or <literal>ear</literal> plugins</segtitle><seglistitem><seg><literal>project.eclipse.wtp.component</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.plugins.ide.eclipse.GenerateEclipseWtpComponent:inputFile" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>inputFile</literal></title><para>The input file to load the initial configuration from. Defaults to the output file. If the specified input file
does not exist, this task uses some default initial configuration.</para></section><section id="org.gradle.plugins.ide.eclipse.GenerateEclipseWtpComponent:outputFile" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>outputFile</literal></title><para>The output file to write the final configuration to.</para></section></section></chapter><chapter id="org.gradle.plugins.ide.eclipse.GenerateEclipseWtpFacet"><title>GenerateEclipseWtpFacet</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.plugins.ide.eclipse.GenerateEclipseWtpFacet" style="javadoc"/></seg></seglistitem></segmentedlist><para>Generates the org.eclipse.wst.common.project.facet.core settings file for Eclipse WTP.
If you want to fine tune the eclipse configuration
</para><para>
At this moment nearly all configuration is done via <apilink class="org.gradle.plugins.ide.eclipse.model.EclipseWtpFacet"/>.</para><section><title>Properties</title><table><title>Properties - GenerateEclipseWtpFacet</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.plugins.ide.eclipse.GenerateEclipseWtpFacet:facet"><literal>facet</literal></link></td><td><para>The Eclipse WTP facet model containing the details required to generate the settings file.</para></td></tr><tr><td><link linkend="org.gradle.plugins.ide.eclipse.GenerateEclipseWtpFacet:inputFile"><literal>inputFile</literal></link></td><td><para>The input file to load the initial configuration from. Defaults to the output file. If the specified input file
does not exist, this task uses some default initial configuration.</para></td></tr><tr><td><link linkend="org.gradle.plugins.ide.eclipse.GenerateEclipseWtpFacet:outputFile"><literal>outputFile</literal></link></td><td><para>The output file to write the final configuration to.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.plugins.ide.eclipse.GenerateEclipseWtpFacet:facet" role="detail"><title><apilink class="org.gradle.plugins.ide.eclipse.model.EclipseWtpFacet"/> <literal>facet</literal></title><para>The Eclipse WTP facet model containing the details required to generate the settings file.</para><segmentedlist><segtitle>Default with <literal>eclipse</literal> and <literal>war</literal> plugins</segtitle><seglistitem><seg><literal>project.eclipse.wtp.facet</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.plugins.ide.eclipse.GenerateEclipseWtpFacet:inputFile" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>inputFile</literal></title><para>The input file to load the initial configuration from. Defaults to the output file. If the specified input file
does not exist, this task uses some default initial configuration.</para></section><section id="org.gradle.plugins.ide.eclipse.GenerateEclipseWtpFacet:outputFile" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>outputFile</literal></title><para>The output file to write the final configuration to.</para></section></section></chapter><chapter id="org.gradle.plugins.ide.idea.GenerateIdeaModule"><title>GenerateIdeaModule</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.plugins.ide.idea.GenerateIdeaModule" style="javadoc"/></seg></seglistitem></segmentedlist><para>Generates an IDEA module file. If you want to fine tune the idea configuration
</para><para>
Please refer to interesting examples on idea configuration in <apilink class="org.gradle.plugins.ide.idea.model.IdeaModule"/>.
</para><para>
At this moment nearly all configuration is done via <apilink class="org.gradle.plugins.ide.idea.model.IdeaModule"/>.</para><section><title>Properties</title><table><title>Properties - GenerateIdeaModule</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.plugins.ide.idea.GenerateIdeaModule:inputFile"><literal>inputFile</literal></link></td><td><para>The input file to load the initial configuration from. Defaults to the output file. If the specified input file
does not exist, this task uses some default initial configuration.</para></td></tr><tr><td><link linkend="org.gradle.plugins.ide.idea.GenerateIdeaModule:module"><literal>module</literal></link></td><td><para>The Idea module model containing the details required to generate the module file.</para></td></tr><tr><td><link linkend="org.gradle.plugins.ide.idea.GenerateIdeaModule:outputFile"><literal>outputFile</literal></link></td><td><para>Configures output *.iml file. It's <emphasis>optional</emphasis> because the task should configure it correctly for you (including making sure it is unique in the multi-module build). If you really need to
change the output file name it is much easier to do it via the <emphasis>idea.module.name</emphasis> property. </para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.plugins.ide.idea.GenerateIdeaModule:inputFile" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>inputFile</literal></title><para>The input file to load the initial configuration from. Defaults to the output file. If the specified input file
does not exist, this task uses some default initial configuration.</para></section><section id="org.gradle.plugins.ide.idea.GenerateIdeaModule:module" role="detail"><title><apilink class="org.gradle.plugins.ide.idea.model.IdeaModule"/> <literal>module</literal></title><para>The Idea module model containing the details required to generate the module file.</para><segmentedlist><segtitle>Default with <literal>idea</literal> plugin</segtitle><seglistitem><seg><literal>project.idea.module</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.plugins.ide.idea.GenerateIdeaModule:outputFile" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>outputFile</literal></title><para>Configures output *.iml file. It's <emphasis>optional</emphasis> because the task should configure it correctly for you (including making sure it is unique in the multi-module build). If you really need to
change the output file name it is much easier to do it via the <emphasis>idea.module.name</emphasis> property. </para><para> Please refer to documentation in <apilink class="org.gradle.plugins.ide.idea.model.IdeaModule"/> <emphasis>name</emphasis> property. In IntelliJ IDEA
the module name is the same as the name of the *.iml file.</para><segmentedlist><segtitle>Default with <literal>idea</literal> plugin</segtitle><seglistitem><seg><literal><replaceable>${project.projectDir}</replaceable>/<replaceable>${project.name}</replaceable>.iml</literal>
                    (sometimes the <replaceable>project.name</replaceable> is prefixed with parts of <replaceable>${project.path}</replaceable> to guarantee uniqueness).
                    Bear in mind that usually it is easier to use moduleName property instead of outputFile property.
                </seg></seglistitem></segmentedlist></section></section></chapter><chapter id="org.gradle.plugins.ide.idea.GenerateIdeaProject"><title>GenerateIdeaProject</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.plugins.ide.idea.GenerateIdeaProject" style="javadoc"/></seg></seglistitem></segmentedlist><para>Generates an IDEA project file for root project *only*. If you want to fine tune the idea configuration </para><para> At this moment nearly all configuration is done via <apilink class="org.gradle.plugins.ide.idea.model.IdeaProject"/>.</para><section><title>Properties</title><table><title>Properties - GenerateIdeaProject</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.plugins.ide.idea.GenerateIdeaProject:ideaProject"><literal>ideaProject</literal></link></td><td><para>The Idea project model containing the details required to generate the project file.</para></td></tr><tr><td><link linkend="org.gradle.plugins.ide.idea.GenerateIdeaProject:inputFile"><literal>inputFile</literal></link></td><td><para>The input file to load the initial configuration from. Defaults to the output file. If the specified input file
does not exist, this task uses some default initial configuration.</para></td></tr><tr><td><link linkend="org.gradle.plugins.ide.idea.GenerateIdeaProject:outputFile"><literal>outputFile</literal></link></td><td><para>output *.ipr file</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.plugins.ide.idea.GenerateIdeaProject:ideaProject" role="detail"><title><apilink class="org.gradle.plugins.ide.idea.model.IdeaProject"/> <literal>ideaProject</literal></title><para>The Idea project model containing the details required to generate the project file.</para><segmentedlist><segtitle>Default with <literal>idea</literal> plugin</segtitle><seglistitem><seg><literal>project.idea.project</literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.plugins.ide.idea.GenerateIdeaProject:inputFile" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>inputFile</literal></title><para>The input file to load the initial configuration from. Defaults to the output file. If the specified input file
does not exist, this task uses some default initial configuration.</para></section><section id="org.gradle.plugins.ide.idea.GenerateIdeaProject:outputFile" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>outputFile</literal></title><para>output *.ipr file</para><segmentedlist><segtitle>Default with <literal>idea</literal> plugin</segtitle><seglistitem><seg><literal><replaceable>${project.projectDir}</replaceable>/<replaceable>${project.name}</replaceable>.ipr</literal></seg></seglistitem></segmentedlist></section></section></chapter><chapter id="org.gradle.plugins.ide.idea.GenerateIdeaWorkspace"><title>GenerateIdeaWorkspace</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.plugins.ide.idea.GenerateIdeaWorkspace" style="javadoc"/></seg></seglistitem></segmentedlist><para>Generates an IDEA workspace file *only* for root project. There's little you can configure about workspace generation at the moment.</para><section><title>Properties</title><table><title>Properties - GenerateIdeaWorkspace</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.plugins.ide.idea.GenerateIdeaWorkspace:inputFile"><literal>inputFile</literal></link></td><td><para>The input file to load the initial configuration from. Defaults to the output file. If the specified input file
does not exist, this task uses some default initial configuration.</para></td></tr><tr><td><link linkend="org.gradle.plugins.ide.idea.GenerateIdeaWorkspace:outputFile"><literal>outputFile</literal></link></td><td><para>The output file to write the final configuration to.</para></td></tr><tr><td><link linkend="org.gradle.plugins.ide.idea.GenerateIdeaWorkspace:workspace"><literal>workspace</literal></link></td><td><para>The Idea workspace model containing the details required to generate the workspace file.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.plugins.ide.idea.GenerateIdeaWorkspace:inputFile" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>inputFile</literal></title><para>The input file to load the initial configuration from. Defaults to the output file. If the specified input file
does not exist, this task uses some default initial configuration.</para></section><section id="org.gradle.plugins.ide.idea.GenerateIdeaWorkspace:outputFile" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>outputFile</literal></title><para>The output file to write the final configuration to.</para></section><section id="org.gradle.plugins.ide.idea.GenerateIdeaWorkspace:workspace" role="detail"><title><apilink class="org.gradle.plugins.ide.idea.model.IdeaWorkspace"/> <literal>workspace</literal></title><para>The Idea workspace model containing the details required to generate the workspace file.</para><segmentedlist><segtitle>Default with <literal>idea</literal> plugin</segtitle><seglistitem><seg><literal>project.idea.workspace</literal></seg></seglistitem></segmentedlist></section></section></chapter><chapter id="org.gradle.ide.xcode.tasks.GenerateSchemeFileTask"><title>GenerateSchemeFileTask</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.ide.xcode.tasks.GenerateSchemeFileTask" style="javadoc"/></seg></seglistitem></segmentedlist><caution><para>Note: This class is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Task for generating a Xcode scheme file (e.g. <literal>Foo.xcodeproj/xcshareddata/xcschemes/Foo.xcscheme</literal>). An Xcode scheme defines a collection of targets to build, a configuration to use when building, and a collection of tests to execute.

</para><para>You can have as many schemes as you want, but only one can be active at a time. You can include a scheme in a project—in which case it’s available in every workspace that includes that project, or in the workspace—in which case it’s available only in that workspace.</para><para>This task is used in conjunction with <apilink class="org.gradle.ide.xcode.tasks.GenerateXcodeProjectFileTask"/>.</para><section><title>Properties</title><table><title>Properties - GenerateSchemeFileTask</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.ide.xcode.tasks.GenerateSchemeFileTask:inputFile"><literal>inputFile</literal></link></td><td><para>The input file to load the initial configuration from. Defaults to the output file. If the specified input file
does not exist, this task uses some default initial configuration.</para></td></tr><tr><td><link linkend="org.gradle.ide.xcode.tasks.GenerateSchemeFileTask:outputFile"><literal>outputFile</literal></link></td><td><para>The output file to write the final configuration to.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.ide.xcode.tasks.GenerateSchemeFileTask:inputFile" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>inputFile</literal></title><para>The input file to load the initial configuration from. Defaults to the output file. If the specified input file
does not exist, this task uses some default initial configuration.</para></section><section id="org.gradle.ide.xcode.tasks.GenerateSchemeFileTask:outputFile" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>outputFile</literal></title><para>The output file to write the final configuration to.</para></section></section></chapter><chapter id="org.gradle.plugins.ide.api.PropertyListGeneratorTask"><title>PropertyListGeneratorTask</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.plugins.ide.api.PropertyListGeneratorTask" style="javadoc"/></seg></seglistitem></segmentedlist><segmentedlist><segtitle>Known Subtypes</segtitle><seglistitem><seg><simplelist columns="1" type="vert"><member><apilink class="org.gradle.ide.xcode.tasks.GenerateWorkspaceSettingsFileTask"/></member><member><apilink class="org.gradle.ide.xcode.tasks.GenerateXcodeProjectFileTask"/></member></simplelist></seg></seglistitem></segmentedlist><caution><para>Note: This class is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>A convenience superclass for those tasks which generate Property List configuration files from a domain object of type T.</para><section><title>Properties</title><table><title>Properties - PropertyListGeneratorTask</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.plugins.ide.api.PropertyListGeneratorTask:inputFile"><literal>inputFile</literal></link></td><td><para>The input file to load the initial configuration from. Defaults to the output file. If the specified input file
does not exist, this task uses some default initial configuration.</para></td></tr><tr><td><link linkend="org.gradle.plugins.ide.api.PropertyListGeneratorTask:outputFile"><literal>outputFile</literal></link></td><td><para>The output file to write the final configuration to.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.plugins.ide.api.PropertyListGeneratorTask:inputFile" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>inputFile</literal></title><para>The input file to load the initial configuration from. Defaults to the output file. If the specified input file
does not exist, this task uses some default initial configuration.</para></section><section id="org.gradle.plugins.ide.api.PropertyListGeneratorTask:outputFile" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>outputFile</literal></title><para>The output file to write the final configuration to.</para></section></section></chapter><chapter id="org.gradle.ide.xcode.tasks.GenerateWorkspaceSettingsFileTask"><title>GenerateWorkspaceSettingsFileTask</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.ide.xcode.tasks.GenerateWorkspaceSettingsFileTask" style="javadoc"/></seg></seglistitem></segmentedlist><caution><para>Note: This class is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Task for generating a Xcode workspace settings file (e.g. <literal>Foo.xcodeproj/project.xcworkspace/xcshareddata/WorkspaceSettings.xcsettings</literal>).

</para><para>This task is used in conjunction with <apilink class="org.gradle.ide.xcode.tasks.GenerateXcodeWorkspaceFileTask"/>.</para><section><title>Properties</title><table><title>Properties - GenerateWorkspaceSettingsFileTask</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.ide.xcode.tasks.GenerateWorkspaceSettingsFileTask:inputFile"><literal>inputFile</literal></link></td><td><para>The input file to load the initial configuration from. Defaults to the output file. If the specified input file
does not exist, this task uses some default initial configuration.</para></td></tr><tr><td><link linkend="org.gradle.ide.xcode.tasks.GenerateWorkspaceSettingsFileTask:outputFile"><literal>outputFile</literal></link></td><td><para>The output file to write the final configuration to.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.ide.xcode.tasks.GenerateWorkspaceSettingsFileTask:inputFile" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>inputFile</literal></title><para>The input file to load the initial configuration from. Defaults to the output file. If the specified input file
does not exist, this task uses some default initial configuration.</para></section><section id="org.gradle.ide.xcode.tasks.GenerateWorkspaceSettingsFileTask:outputFile" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>outputFile</literal></title><para>The output file to write the final configuration to.</para></section></section></chapter><chapter id="org.gradle.ide.xcode.tasks.GenerateXcodeProjectFileTask"><title>GenerateXcodeProjectFileTask</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.ide.xcode.tasks.GenerateXcodeProjectFileTask" style="javadoc"/></seg></seglistitem></segmentedlist><caution><para>Note: This class is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Task for generating a Xcode project file (e.g. <literal>Foo.xcodeproj/project.pbxproj</literal>). A project contains all the elements used to build your products and maintains the relationships between those elements. It contains one or more targets, which specify how to build products. A project defines default build settings for all the targets in the project (each target can also specify its own build settings, which override the project build settings).</para><section><title>Properties</title><table><title>Properties - GenerateXcodeProjectFileTask</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.ide.xcode.tasks.GenerateXcodeProjectFileTask:inputFile"><literal>inputFile</literal></link></td><td><para>The input file to load the initial configuration from. Defaults to the output file. If the specified input file
does not exist, this task uses some default initial configuration.</para></td></tr><tr><td><link linkend="org.gradle.ide.xcode.tasks.GenerateXcodeProjectFileTask:outputFile"><literal>outputFile</literal></link></td><td><para>The output file to write the final configuration to.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.ide.xcode.tasks.GenerateXcodeProjectFileTask:inputFile" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>inputFile</literal></title><para>The input file to load the initial configuration from. Defaults to the output file. If the specified input file
does not exist, this task uses some default initial configuration.</para></section><section id="org.gradle.ide.xcode.tasks.GenerateXcodeProjectFileTask:outputFile" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>outputFile</literal></title><para>The output file to write the final configuration to.</para></section></section></chapter><chapter id="org.gradle.ide.xcode.tasks.GenerateXcodeWorkspaceFileTask"><title>GenerateXcodeWorkspaceFileTask</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.ide.xcode.tasks.GenerateXcodeWorkspaceFileTask" style="javadoc"/></seg></seglistitem></segmentedlist><caution><para>Note: This class is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Task for generating a Xcode workspace file (e.g. <literal>Foo.xcworkspace/contents.xcworkspacedata</literal>). A workspace can contain any number of Xcode projects.</para><section><title>Properties</title><table><title>Properties - GenerateXcodeWorkspaceFileTask</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.ide.xcode.tasks.GenerateXcodeWorkspaceFileTask:inputFile"><literal>inputFile</literal></link></td><td><para>The input file to load the initial configuration from. Defaults to the output file. If the specified input file
does not exist, this task uses some default initial configuration.</para></td></tr><tr><td><link linkend="org.gradle.ide.xcode.tasks.GenerateXcodeWorkspaceFileTask:outputFile"><literal>outputFile</literal></link></td><td><para>The output file to write the final configuration to.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.ide.xcode.tasks.GenerateXcodeWorkspaceFileTask:inputFile" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>inputFile</literal></title><para>The input file to load the initial configuration from. Defaults to the output file. If the specified input file
does not exist, this task uses some default initial configuration.</para></section><section id="org.gradle.ide.xcode.tasks.GenerateXcodeWorkspaceFileTask:outputFile" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>outputFile</literal></title><para>The output file to write the final configuration to.</para></section></section></chapter><chapter id="org.gradle.ide.visualstudio.tasks.GenerateSolutionFileTask"><title>GenerateSolutionFileTask</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.ide.visualstudio.tasks.GenerateSolutionFileTask" style="javadoc"/></seg></seglistitem></segmentedlist><caution><para>Note: This class is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Task for generating a Visual Studio solution file (e.g. <literal>foo.sln</literal>).</para><section><title>Properties</title><table><title>Properties - GenerateSolutionFileTask</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.ide.visualstudio.tasks.GenerateSolutionFileTask:inputFile"><literal>inputFile</literal></link></td><td><para>The input file to load the initial configuration from. Defaults to the output file. If the specified input file
does not exist, this task uses some default initial configuration.</para></td></tr><tr><td><link linkend="org.gradle.ide.visualstudio.tasks.GenerateSolutionFileTask:outputFile"><literal>outputFile</literal></link></td><td><para>The output file to write the final configuration to.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.ide.visualstudio.tasks.GenerateSolutionFileTask:inputFile" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>inputFile</literal></title><para>The input file to load the initial configuration from. Defaults to the output file. If the specified input file
does not exist, this task uses some default initial configuration.</para></section><section id="org.gradle.ide.visualstudio.tasks.GenerateSolutionFileTask:outputFile" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>outputFile</literal></title><para>The output file to write the final configuration to.</para></section></section></chapter><chapter id="org.gradle.ide.visualstudio.tasks.GenerateProjectFileTask"><title>GenerateProjectFileTask</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.ide.visualstudio.tasks.GenerateProjectFileTask" style="javadoc"/></seg></seglistitem></segmentedlist><caution><para>Note: This class is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Task for generating a Visual Studio project file (e.g. <literal>foo.vcxproj</literal>).</para><section><title>Properties</title><table><title>Properties - GenerateProjectFileTask</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.ide.visualstudio.tasks.GenerateProjectFileTask:inputFile"><literal>inputFile</literal></link></td><td><para>The input file to load the initial configuration from. Defaults to the output file. If the specified input file
does not exist, this task uses some default initial configuration.</para></td></tr><tr><td><link linkend="org.gradle.ide.visualstudio.tasks.GenerateProjectFileTask:outputFile"><literal>outputFile</literal></link></td><td><para>The output file to write the final configuration to.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.ide.visualstudio.tasks.GenerateProjectFileTask:inputFile" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>inputFile</literal></title><para>The input file to load the initial configuration from. Defaults to the output file. If the specified input file
does not exist, this task uses some default initial configuration.</para></section><section id="org.gradle.ide.visualstudio.tasks.GenerateProjectFileTask:outputFile" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>outputFile</literal></title><para>The output file to write the final configuration to.</para></section></section></chapter><chapter id="org.gradle.ide.visualstudio.tasks.GenerateFiltersFileTask"><title>GenerateFiltersFileTask</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.ide.visualstudio.tasks.GenerateFiltersFileTask" style="javadoc"/></seg></seglistitem></segmentedlist><caution><para>Note: This class is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Task for generating a Visual Studio filters file (e.g. <literal>foo.vcxproj.filters</literal>).</para><section><title>Properties</title><table><title>Properties - GenerateFiltersFileTask</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.ide.visualstudio.tasks.GenerateFiltersFileTask:inputFile"><literal>inputFile</literal></link></td><td><para>The input file to load the initial configuration from. Defaults to the output file. If the specified input file
does not exist, this task uses some default initial configuration.</para></td></tr><tr><td><link linkend="org.gradle.ide.visualstudio.tasks.GenerateFiltersFileTask:outputFile"><literal>outputFile</literal></link></td><td><para>The output file to write the final configuration to.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.ide.visualstudio.tasks.GenerateFiltersFileTask:inputFile" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>inputFile</literal></title><para>The input file to load the initial configuration from. Defaults to the output file. If the specified input file
does not exist, this task uses some default initial configuration.</para></section><section id="org.gradle.ide.visualstudio.tasks.GenerateFiltersFileTask:outputFile" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>outputFile</literal></title><para>The output file to write the final configuration to.</para></section></section></chapter><chapter id="org.gradle.api.artifacts.transform.TransformAction"><title>TransformAction</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.artifacts.transform.TransformAction" style="javadoc"/></seg></seglistitem></segmentedlist><para>Interface for artifact transform actions.

</para><para>
    A transform action implementation is an abstract class implementing the <apilink class="org.gradle.api.artifacts.transform.TransformAction" method="transform(org.gradle.api.artifacts.transform.TransformOutputs)"/> method.
    A minimal implementation may look like this:
</para><programlisting language="java">
import org.gradle.api.artifacts.transform.TransformParameters;

public abstract class MyTransform implements TransformAction&lt;TransformParameters.None&gt; {
    @InputArtifact
    public abstract Provider&lt;FileSystemLocation&gt; getInputArtifact();

    @Override
    public void transform(TransformOutputs outputs) {
        File input = getInputArtifact().get().getAsFile();
        File output = outputs.file(input.getName() + ".transformed");
        // Do something to generate output from input
    }
}
</programlisting><para>

Implementations of TransformAction are subject to the following constraints:
</para><itemizedlist><listitem>Do not implement <apilink class="org.gradle.api.artifacts.transform.TransformAction" method="getParameters()"/> in your class, the method will be implemented by Gradle.</listitem><listitem>Implementations may only have a default constructor.</listitem></itemizedlist><para>

 Implementations can receive parameters by using annotated abstract getter methods.
 </para><itemizedlist><listitem>An abstract getter annotated with <apilink class="org.gradle.api.artifacts.transform.InputArtifact"/> will receive the <emphasis>input artifact</emphasis> location, which is the file or directory that the transform should be applied to.</listitem><listitem>An abstract getter with <apilink class="org.gradle.api.artifacts.transform.InputArtifactDependencies"/> will receive the <emphasis>dependencies</emphasis> of its input artifact.</listitem></itemizedlist><section><title>Properties</title><table><title>Properties - TransformAction</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.artifacts.transform.TransformAction:parameters"><literal>parameters</literal></link></td><td><para>The object provided by <apilink class="org.gradle.api.artifacts.transform.TransformSpec" method="getParameters()"/> when registering the artifact transform.

</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - TransformAction</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.artifacts.transform.TransformAction:transform(org.gradle.api.artifacts.transform.TransformOutputs)">transform</link>(outputs)</literal></td><td><para>Executes the transform.

</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.artifacts.transform.TransformAction:parameters" role="detail"><title><classname>T</classname> <literal>parameters</literal> (read-only)</title><para>The object provided by <apilink class="org.gradle.api.artifacts.transform.TransformSpec" method="getParameters()"/> when registering the artifact transform.

</para><para>
    Do not implement this method in your subclass.
    Gradle provides the implementation when registering the transform action via <apilink class="org.gradle.api.artifacts.dsl.DependencyHandler" method="registerTransform(java.lang.Class, org.gradle.api.Action)"/>.
</para></section></section><section><title>Method details</title><section id="org.gradle.api.artifacts.transform.TransformAction:transform(org.gradle.api.artifacts.transform.TransformOutputs)" role="detail"><title><classname>void</classname> <literal>transform</literal>(<apilink class="org.gradle.api.artifacts.transform.TransformOutputs"/> outputs)</title><para>Executes the transform.

</para><para>This method must be implemented in the subclass.</para></section></section></chapter><chapter id="org.gradle.api.artifacts.transform.TransformOutputs"><title>TransformOutputs</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.artifacts.transform.TransformOutputs" style="javadoc"/></seg></seglistitem></segmentedlist><para>The outputs of the artifact transform.

</para><para>
    The registered output <ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink>s will appear in the transformed variant in the order they were registered.
</para><section><title>Properties</title><para>No properties</para></section><section><title>Methods</title><table><title>Methods - TransformOutputs</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.artifacts.transform.TransformOutputs:dir(java.lang.Object)">dir</link>(path)</literal></td><td><para>Registers an output directory.

</para></td></tr><tr><td><literal><link linkend="org.gradle.api.artifacts.transform.TransformOutputs:file(java.lang.Object)">file</link>(path)</literal></td><td><para>Registers an output file.

</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Method details</title><section id="org.gradle.api.artifacts.transform.TransformOutputs:dir(java.lang.Object)" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>dir</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> path)</title><para>Registers an output directory.

</para><para>
    For an <emphasis>absolute path</emphasis>, the location is registered as an output directory of the <apilink class="org.gradle.api.artifacts.transform.TransformAction"/>.
    The path must to point to the <apilink class="org.gradle.api.artifacts.transform.InputArtifact"/>, or point inside the input artifact if it is a directory.
    Example:
</para><programlisting language="java">
import org.gradle.api.artifacts.transform.TransformParameters;

public abstract class MyTransform implements TransformAction&lt;TransformParameters.None&gt; {
    @InputArtifact
    public abstract Provider&lt;FileSystemLocation&gt; getInputArtifact();
    @Override
    public void transform(TransformOutputs outputs) {
        outputs.dir(getInputArtifact().get().getAsFile());
        outputs.dir(new File(getInputArtifact().get().getAsFile(), "sub-dir"));
    }
}
</programlisting><para>
    For a <emphasis>relative path</emphasis>, Gradle creates an output directory into which the <apilink class="org.gradle.api.artifacts.transform.TransformAction"/> must place its output files.
    Example:
</para><programlisting language="java">
import org.gradle.api.artifacts.transform.TransformParameters;

public abstract class MyTransform implements TransformAction&lt;TransformParameters.None&gt; {
    @Override
    public void transform(TransformOutputs outputs) {
        File myOutput = outputs.dir("my-output");
        Files.write(myOutput.toPath().resolve("file.txt"), "Generated text");
    }
}
</programlisting><para>
    <emphasis>Note:</emphasis> it is an error if the registered directory does not exist when the <apilink class="org.gradle.api.artifacts.transform.TransformAction" method="transform(org.gradle.api.artifacts.transform.TransformOutputs)"/> method finishes.
</para></section><section id="org.gradle.api.artifacts.transform.TransformOutputs:file(java.lang.Object)" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>file</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> path)</title><para>Registers an output file.

</para><para>
    For an absolute path, the location is registered as an output file of the <apilink class="org.gradle.api.artifacts.transform.TransformAction"/>.
    The path is required to point to the <apilink class="org.gradle.api.artifacts.transform.InputArtifact"/> or be inside it if the input artifact is a directory.
    Example:
</para><programlisting language="java">
import org.gradle.api.artifacts.transform.TransformParameters;

public abstract class MyTransform implements TransformAction&lt;TransformParameters.None&gt; {
    @InputArtifact
    public abstract Provider&lt;FileSystemLocation&gt; getInputArtifact();
    @Override
    public void transform(TransformOutputs outputs) {
        File input = getInputArtifact().get().getAsFile();
        if (input.isFile()) {
            outputs.file(input);
        } else {
            outputs.file(new File(input, "file-in-input-artifact.txt"));
        }
    }
}
</programlisting><para>
    For a relative path, a location for the output file is provided by Gradle, so that the <apilink class="org.gradle.api.artifacts.transform.TransformAction"/> can produce its outputs at that location.
    The parent directory of the provided location is created automatically when calling the method.
    Example:
</para><programlisting language="java">
import org.gradle.api.artifacts.transform.TransformParameters;

public abstract class MyTransform implements TransformAction&lt;TransformParameters.None&gt; {
    @InputArtifact
    public abstract Provider&lt;FileSystemLocation&gt; getInputArtifact();
    @Override
    public void transform(TransformOutputs outputs) {
        File myOutput = outputs.file("my-output.transformed");
        Files.write(myOutput.toPath(), "Generated text");
    }
}
</programlisting><para>The registered file needs to exist when the <apilink class="org.gradle.api.artifacts.transform.TransformAction" method="transform(org.gradle.api.artifacts.transform.TransformOutputs)"/> method finishes.</para></section></section></chapter><chapter id="org.gradle.api.artifacts.transform.TransformSpec"><title>TransformSpec</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.api.artifacts.transform.TransformSpec" style="javadoc"/></seg></seglistitem></segmentedlist><para>Base configuration for artifact transform registrations.</para><section><title>Properties</title><table><title>Properties - TransformSpec</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.api.artifacts.transform.TransformSpec:from"><literal>from</literal></link></td><td><para>Attributes that match the variant that is consumed.</para></td></tr><tr><td><link linkend="org.gradle.api.artifacts.transform.TransformSpec:parameters"><literal>parameters</literal></link></td><td><para>The parameters for the transform action.</para></td></tr><tr><td><link linkend="org.gradle.api.artifacts.transform.TransformSpec:to"><literal>to</literal></link></td><td><para>Attributes that match the variant that is produced.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - TransformSpec</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.api.artifacts.transform.TransformSpec:parameters(org.gradle.api.Action)">parameters</link>(action)</literal></td><td><para>Configure the parameters for the transform action.</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.api.artifacts.transform.TransformSpec:from" role="detail"><title><apilink class="org.gradle.api.attributes.AttributeContainer"/> <literal>from</literal> (read-only)</title><para>Attributes that match the variant that is consumed.</para></section><section id="org.gradle.api.artifacts.transform.TransformSpec:parameters" role="detail"><title><classname>T</classname> <literal>parameters</literal> (read-only)</title><para>The parameters for the transform action.</para></section><section id="org.gradle.api.artifacts.transform.TransformSpec:to" role="detail"><title><apilink class="org.gradle.api.attributes.AttributeContainer"/> <literal>to</literal> (read-only)</title><para>Attributes that match the variant that is produced.</para></section></section><section><title>Method details</title><section id="org.gradle.api.artifacts.transform.TransformSpec:parameters(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>parameters</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <classname>T</classname>&gt;</classname> action)</title><para>Configure the parameters for the transform action.</para></section></section></chapter><chapter id="org.gradle.nativeplatform.toolchain.GccCompatibleToolChain"><title>GccCompatibleToolChain</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.nativeplatform.toolchain.GccCompatibleToolChain" style="javadoc"/></seg></seglistitem></segmentedlist><segmentedlist><segtitle>Known Subtypes</segtitle><seglistitem><seg><simplelist columns="1" type="vert"><member><apilink class="org.gradle.nativeplatform.toolchain.Gcc"/></member><member><apilink class="org.gradle.nativeplatform.toolchain.Clang"/></member></simplelist></seg></seglistitem></segmentedlist><caution><para>Note: This class is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>A ToolChain that can handle additional platforms simply by configuring the NativeBinary.</para><section><title>Properties</title><table><title>Properties - GccCompatibleToolChain</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.nativeplatform.toolchain.GccCompatibleToolChain:path"><literal>path</literal></link></td><td><caution>Incubating</caution><para>The paths setting required for executing the tool chain.
These are used to locate tools for this tool chain, and are prepended to the system PATH when executing these tools.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - GccCompatibleToolChain</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.nativeplatform.toolchain.GccCompatibleToolChain:path(java.lang.Object[])">path</link>(pathEntries)</literal></td><td><caution>Incubating</caution><para>Append an entry or entries to the tool chain path.</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.nativeplatform.toolchain.GccCompatibleToolChain:path" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/List.html"><classname>List</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink>&gt;</classname> <literal>path</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The paths setting required for executing the tool chain.
These are used to locate tools for this tool chain, and are prepended to the system PATH when executing these tools.</para></section></section><section><title>Method details</title><section id="org.gradle.nativeplatform.toolchain.GccCompatibleToolChain:path(java.lang.Object[])" role="detail"><title><classname>void</classname> <literal>path</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink>...</classname> pathEntries)</title><caution><para>Note: This method is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Append an entry or entries to the tool chain path.</para></section></section></chapter><chapter id="org.gradle.nativeplatform.toolchain.Gcc"><title>Gcc</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.nativeplatform.toolchain.Gcc" style="javadoc"/></seg></seglistitem></segmentedlist><caution><para>Note: This class is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The <ulink url="http://gcc.gnu.org/">GNU GCC</ulink> tool chain.</para><section><title>Properties</title><table><title>Properties - Gcc</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.nativeplatform.toolchain.Gcc:path"><literal>path</literal></link></td><td><caution>Incubating</caution><para>The paths setting required for executing the tool chain.
These are used to locate tools for this tool chain, and are prepended to the system PATH when executing these tools.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - Gcc</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.nativeplatform.toolchain.Gcc:path(java.lang.Object[])">path</link>(pathEntries)</literal></td><td><caution>Incubating</caution><para>Append an entry or entries to the tool chain path.</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.nativeplatform.toolchain.Gcc:path" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/List.html"><classname>List</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink>&gt;</classname> <literal>path</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The paths setting required for executing the tool chain.
These are used to locate tools for this tool chain, and are prepended to the system PATH when executing these tools.</para></section></section><section><title>Method details</title><section id="org.gradle.nativeplatform.toolchain.Gcc:path(java.lang.Object[])" role="detail"><title><classname>void</classname> <literal>path</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink>...</classname> pathEntries)</title><caution><para>Note: This method is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Append an entry or entries to the tool chain path.</para></section></section></chapter><chapter id="org.gradle.nativeplatform.toolchain.Clang"><title>Clang</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.nativeplatform.toolchain.Clang" style="javadoc"/></seg></seglistitem></segmentedlist><caution><para>Note: This class is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The <ulink url="http://clang.llvm.org">Clang</ulink> tool chain.</para><section><title>Properties</title><table><title>Properties - Clang</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.nativeplatform.toolchain.Clang:path"><literal>path</literal></link></td><td><caution>Incubating</caution><para>The paths setting required for executing the tool chain.
These are used to locate tools for this tool chain, and are prepended to the system PATH when executing these tools.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - Clang</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.nativeplatform.toolchain.Clang:path(java.lang.Object[])">path</link>(pathEntries)</literal></td><td><caution>Incubating</caution><para>Append an entry or entries to the tool chain path.</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.nativeplatform.toolchain.Clang:path" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/List.html"><classname>List</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink>&gt;</classname> <literal>path</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The paths setting required for executing the tool chain.
These are used to locate tools for this tool chain, and are prepended to the system PATH when executing these tools.</para></section></section><section><title>Method details</title><section id="org.gradle.nativeplatform.toolchain.Clang:path(java.lang.Object[])" role="detail"><title><classname>void</classname> <literal>path</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink>...</classname> pathEntries)</title><caution><para>Note: This method is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Append an entry or entries to the tool chain path.</para></section></section></chapter><chapter id="org.gradle.nativeplatform.toolchain.VisualCpp"><title>VisualCpp</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.nativeplatform.toolchain.VisualCpp" style="javadoc"/></seg></seglistitem></segmentedlist><caution><para>Note: This class is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The Visual C++ tool chain.</para><section><title>Properties</title><table><title>Properties - VisualCpp</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.nativeplatform.toolchain.VisualCpp:installDir"><literal>installDir</literal></link></td><td><caution>Incubating</caution><para>The directory where Visual Studio or Visual C++ is installed.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.toolchain.VisualCpp:windowsSdkDir"><literal>windowsSdkDir</literal></link></td><td><caution>Incubating</caution><para>The directory where Windows SDK is installed.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.nativeplatform.toolchain.VisualCpp:installDir" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>installDir</literal></title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The directory where Visual Studio or Visual C++ is installed.</para></section><section id="org.gradle.nativeplatform.toolchain.VisualCpp:windowsSdkDir" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>windowsSdkDir</literal></title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The directory where Windows SDK is installed.</para></section></section></chapter><chapter id="org.gradle.nativeplatform.toolchain.Swiftc"><title>Swiftc</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.nativeplatform.toolchain.Swiftc" style="javadoc"/></seg></seglistitem></segmentedlist><caution><para>Note: This class is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The <ulink url="https://swift.org/">Swift Compiler</ulink> tool chain.</para><section><title>Properties</title><para>No properties</para></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section></chapter><chapter id="org.gradle.platform.base.Library"><title>Library</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.platform.base.Library" style="javadoc"/></seg></seglistitem></segmentedlist><segmentedlist><segtitle>Known Subtypes</segtitle><seglistitem><seg><simplelist columns="1" type="vert"><member><apilink class="org.gradle.nativeplatform.NativeLibrary"/></member></simplelist></seg></seglistitem></segmentedlist><caution><para>Note: This class is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>A library that can be linked into or depended on by another software element.</para><section><title>Properties</title><para>No properties</para></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section></chapter><chapter id="org.gradle.nativeplatform.NativeLibrary"><title>NativeLibrary</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.nativeplatform.NativeLibrary" style="javadoc"/></seg></seglistitem></segmentedlist><segmentedlist><segtitle>Known Subtypes</segtitle><seglistitem><seg><simplelist columns="1" type="vert"><member><apilink class="org.gradle.nativeplatform.PrebuiltLibrary"/></member></simplelist></seg></seglistitem></segmentedlist><caution><para>Note: This class is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>A library component that is built by a gradle project.</para><section><title>Properties</title><para>No properties</para></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section></chapter><chapter id="org.gradle.nativeplatform.PrebuiltLibrary"><title>PrebuiltLibrary</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.nativeplatform.PrebuiltLibrary" style="javadoc"/></seg></seglistitem></segmentedlist><caution><para>Note: This class is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>A library component that is not built by gradle.</para><section><title>Properties</title><para>No properties</para></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section></chapter><chapter id="org.gradle.platform.base.Binary"><title>Binary</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.platform.base.Binary" style="javadoc"/></seg></seglistitem></segmentedlist><segmentedlist><segtitle>Known Subtypes</segtitle><seglistitem><seg><simplelist columns="1" type="vert"><member><apilink class="org.gradle.nativeplatform.NativeBinary"/></member><member><apilink class="org.gradle.platform.base.BinarySpec"/></member></simplelist></seg></seglistitem></segmentedlist><caution><para>Note: This class is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>A physical binary artifact, which can run on a particular platform or runtime.</para><section><title>Properties</title><para>No properties</para></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section></chapter><chapter id="org.gradle.nativeplatform.NativeBinary"><title>NativeBinary</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.nativeplatform.NativeBinary" style="javadoc"/></seg></seglistitem></segmentedlist><segmentedlist><segtitle>Known Subtypes</segtitle><seglistitem><seg><simplelist columns="1" type="vert"><member><apilink class="org.gradle.nativeplatform.NativeLibraryBinary"/></member><member><apilink class="org.gradle.nativeplatform.NativeExecutableBinary"/></member></simplelist></seg></seglistitem></segmentedlist><caution><para>Note: This class is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Represents a particular binary artifact.</para><section><title>Properties</title><table><title>Properties - NativeBinary</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.nativeplatform.NativeBinary:buildType"><literal>buildType</literal></link></td><td><caution>Incubating</caution><para>The <apilink class="org.gradle.nativeplatform.BuildType"/> used to construct this binary.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.NativeBinary:flavor"><literal>flavor</literal></link></td><td><caution>Incubating</caution><para>The <apilink class="org.gradle.nativeplatform.Flavor"/> that this binary was built with.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.NativeBinary:targetPlatform"><literal>targetPlatform</literal></link></td><td><caution>Incubating</caution><para>The <apilink class="org.gradle.nativeplatform.platform.NativePlatform"/> that this binary is targeted to run on.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.nativeplatform.NativeBinary:buildType" role="detail"><title><apilink class="org.gradle.nativeplatform.BuildType"/> <literal>buildType</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The <apilink class="org.gradle.nativeplatform.BuildType"/> used to construct this binary.</para></section><section id="org.gradle.nativeplatform.NativeBinary:flavor" role="detail"><title><apilink class="org.gradle.nativeplatform.Flavor"/> <literal>flavor</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The <apilink class="org.gradle.nativeplatform.Flavor"/> that this binary was built with.</para></section><section id="org.gradle.nativeplatform.NativeBinary:targetPlatform" role="detail"><title><apilink class="org.gradle.nativeplatform.platform.NativePlatform"/> <literal>targetPlatform</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The <apilink class="org.gradle.nativeplatform.platform.NativePlatform"/> that this binary is targeted to run on.</para></section></section></chapter><chapter id="org.gradle.nativeplatform.BuildType"><title>BuildType</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.nativeplatform.BuildType" style="javadoc"/></seg></seglistitem></segmentedlist><caution><para>Note: This class is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Specifies a build-type for a native binary. Common build types are 'debug' and 'release', but others may be defined.</para><section><title>Properties</title><para>No properties</para></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section></chapter><chapter id="org.gradle.nativeplatform.Flavor"><title>Flavor</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.nativeplatform.Flavor" style="javadoc"/></seg></seglistitem></segmentedlist><caution><para>Note: This class is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Defines a custom variant that differentiate a <apilink class="org.gradle.nativeplatform.NativeBinary"/>.</para><section><title>Properties</title><para>No properties</para></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section></chapter><chapter id="org.gradle.nativeplatform.platform.NativePlatform"><title>NativePlatform</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.nativeplatform.platform.NativePlatform" style="javadoc"/></seg></seglistitem></segmentedlist><para>A target platform for building native binaries. Each target platform is given a name, and may optionally be given
a specific <apilink class="org.gradle.nativeplatform.platform.Architecture"/> and/or <apilink class="org.gradle.nativeplatform.platform.OperatingSystem"/> to target.

</para><programlisting language="java">
    model {
        platforms {
            windows_x86 {
                architecture "i386"
                operatingSystem "windows"
            }
        }
    }
</programlisting><section><title>Properties</title><table><title>Properties - NativePlatform</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.nativeplatform.platform.NativePlatform:architecture"><literal>architecture</literal></link></td><td><para>The cpu architecture being targeted. Defaults to the default architecture produced by the tool chain.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.platform.NativePlatform:operatingSystem"><literal>operatingSystem</literal></link></td><td><para>The operating system being targeted.
Defaults to the default operating system targeted by the tool chain (normally the current operating system).</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.nativeplatform.platform.NativePlatform:architecture" role="detail"><title><apilink class="org.gradle.nativeplatform.platform.Architecture"/> <literal>architecture</literal> (read-only)</title><para>The cpu architecture being targeted. Defaults to the default architecture produced by the tool chain.</para></section><section id="org.gradle.nativeplatform.platform.NativePlatform:operatingSystem" role="detail"><title><apilink class="org.gradle.nativeplatform.platform.OperatingSystem"/> <literal>operatingSystem</literal> (read-only)</title><para>The operating system being targeted.
Defaults to the default operating system targeted by the tool chain (normally the current operating system).</para></section></section></chapter><chapter id="org.gradle.nativeplatform.NativeLibraryBinary"><title>NativeLibraryBinary</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.nativeplatform.NativeLibraryBinary" style="javadoc"/></seg></seglistitem></segmentedlist><segmentedlist><segtitle>Known Subtypes</segtitle><seglistitem><seg><simplelist columns="1" type="vert"><member><apilink class="org.gradle.nativeplatform.SharedLibraryBinary"/></member><member><apilink class="org.gradle.nativeplatform.StaticLibraryBinary"/></member></simplelist></seg></seglistitem></segmentedlist><caution><para>Note: This class is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>A physical representation of a <apilink class="org.gradle.nativeplatform.NativeLibrary"/> component.</para><section><title>Properties</title><table><title>Properties - NativeLibraryBinary</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.nativeplatform.NativeLibraryBinary:buildType"><literal>buildType</literal></link></td><td><caution>Incubating</caution><para>The <apilink class="org.gradle.nativeplatform.BuildType"/> used to construct this binary.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.NativeLibraryBinary:flavor"><literal>flavor</literal></link></td><td><caution>Incubating</caution><para>The <apilink class="org.gradle.nativeplatform.Flavor"/> that this binary was built with.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.NativeLibraryBinary:targetPlatform"><literal>targetPlatform</literal></link></td><td><caution>Incubating</caution><para>The <apilink class="org.gradle.nativeplatform.platform.NativePlatform"/> that this binary is targeted to run on.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.nativeplatform.NativeLibraryBinary:buildType" role="detail"><title><apilink class="org.gradle.nativeplatform.BuildType"/> <literal>buildType</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The <apilink class="org.gradle.nativeplatform.BuildType"/> used to construct this binary.</para></section><section id="org.gradle.nativeplatform.NativeLibraryBinary:flavor" role="detail"><title><apilink class="org.gradle.nativeplatform.Flavor"/> <literal>flavor</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The <apilink class="org.gradle.nativeplatform.Flavor"/> that this binary was built with.</para></section><section id="org.gradle.nativeplatform.NativeLibraryBinary:targetPlatform" role="detail"><title><apilink class="org.gradle.nativeplatform.platform.NativePlatform"/> <literal>targetPlatform</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The <apilink class="org.gradle.nativeplatform.platform.NativePlatform"/> that this binary is targeted to run on.</para></section></section></chapter><chapter id="org.gradle.nativeplatform.SharedLibraryBinary"><title>SharedLibraryBinary</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.nativeplatform.SharedLibraryBinary" style="javadoc"/></seg></seglistitem></segmentedlist><segmentedlist><segtitle>Known Subtypes</segtitle><seglistitem><seg><simplelist columns="1" type="vert"><member><apilink class="org.gradle.nativeplatform.PrebuiltSharedLibraryBinary"/></member></simplelist></seg></seglistitem></segmentedlist><caution><para>Note: This class is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>A <apilink class="org.gradle.nativeplatform.NativeLibrary"/> that has been compiled and linked as a shared library.</para><section><title>Properties</title><table><title>Properties - SharedLibraryBinary</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.nativeplatform.SharedLibraryBinary:buildType"><literal>buildType</literal></link></td><td><caution>Incubating</caution><para>The <apilink class="org.gradle.nativeplatform.BuildType"/> used to construct this binary.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.SharedLibraryBinary:flavor"><literal>flavor</literal></link></td><td><caution>Incubating</caution><para>The <apilink class="org.gradle.nativeplatform.Flavor"/> that this binary was built with.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.SharedLibraryBinary:sharedLibraryFile"><literal>sharedLibraryFile</literal></link></td><td><caution>Incubating</caution><para>The shared library file.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.SharedLibraryBinary:sharedLibraryLinkFile"><literal>sharedLibraryLinkFile</literal></link></td><td><caution>Incubating</caution><para>The shared library link file.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.SharedLibraryBinary:targetPlatform"><literal>targetPlatform</literal></link></td><td><caution>Incubating</caution><para>The <apilink class="org.gradle.nativeplatform.platform.NativePlatform"/> that this binary is targeted to run on.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.nativeplatform.SharedLibraryBinary:buildType" role="detail"><title><apilink class="org.gradle.nativeplatform.BuildType"/> <literal>buildType</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The <apilink class="org.gradle.nativeplatform.BuildType"/> used to construct this binary.</para></section><section id="org.gradle.nativeplatform.SharedLibraryBinary:flavor" role="detail"><title><apilink class="org.gradle.nativeplatform.Flavor"/> <literal>flavor</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The <apilink class="org.gradle.nativeplatform.Flavor"/> that this binary was built with.</para></section><section id="org.gradle.nativeplatform.SharedLibraryBinary:sharedLibraryFile" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>sharedLibraryFile</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The shared library file.</para></section><section id="org.gradle.nativeplatform.SharedLibraryBinary:sharedLibraryLinkFile" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>sharedLibraryLinkFile</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The shared library link file.</para></section><section id="org.gradle.nativeplatform.SharedLibraryBinary:targetPlatform" role="detail"><title><apilink class="org.gradle.nativeplatform.platform.NativePlatform"/> <literal>targetPlatform</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The <apilink class="org.gradle.nativeplatform.platform.NativePlatform"/> that this binary is targeted to run on.</para></section></section></chapter><chapter id="org.gradle.nativeplatform.PrebuiltSharedLibraryBinary"><title>PrebuiltSharedLibraryBinary</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.nativeplatform.PrebuiltSharedLibraryBinary" style="javadoc"/></seg></seglistitem></segmentedlist><caution><para>Note: This class is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>A shared library that exists at a known location on the filesystem.</para><section><title>Properties</title><table><title>Properties - PrebuiltSharedLibraryBinary</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.nativeplatform.PrebuiltSharedLibraryBinary:buildType"><literal>buildType</literal></link></td><td><caution>Incubating</caution><para>The <apilink class="org.gradle.nativeplatform.BuildType"/> used to construct this binary.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.PrebuiltSharedLibraryBinary:flavor"><literal>flavor</literal></link></td><td><caution>Incubating</caution><para>The <apilink class="org.gradle.nativeplatform.Flavor"/> that this binary was built with.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.PrebuiltSharedLibraryBinary:sharedLibraryFile"><literal>sharedLibraryFile</literal></link></td><td><caution>Incubating</caution><para>The shared library file.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.PrebuiltSharedLibraryBinary:sharedLibraryLinkFile"><literal>sharedLibraryLinkFile</literal></link></td><td><caution>Incubating</caution><para>The shared library link file.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.PrebuiltSharedLibraryBinary:targetPlatform"><literal>targetPlatform</literal></link></td><td><caution>Incubating</caution><para>The <apilink class="org.gradle.nativeplatform.platform.NativePlatform"/> that this binary is targeted to run on.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.nativeplatform.PrebuiltSharedLibraryBinary:buildType" role="detail"><title><apilink class="org.gradle.nativeplatform.BuildType"/> <literal>buildType</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The <apilink class="org.gradle.nativeplatform.BuildType"/> used to construct this binary.</para></section><section id="org.gradle.nativeplatform.PrebuiltSharedLibraryBinary:flavor" role="detail"><title><apilink class="org.gradle.nativeplatform.Flavor"/> <literal>flavor</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The <apilink class="org.gradle.nativeplatform.Flavor"/> that this binary was built with.</para></section><section id="org.gradle.nativeplatform.PrebuiltSharedLibraryBinary:sharedLibraryFile" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>sharedLibraryFile</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The shared library file.</para></section><section id="org.gradle.nativeplatform.PrebuiltSharedLibraryBinary:sharedLibraryLinkFile" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>sharedLibraryLinkFile</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The shared library link file.</para></section><section id="org.gradle.nativeplatform.PrebuiltSharedLibraryBinary:targetPlatform" role="detail"><title><apilink class="org.gradle.nativeplatform.platform.NativePlatform"/> <literal>targetPlatform</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The <apilink class="org.gradle.nativeplatform.platform.NativePlatform"/> that this binary is targeted to run on.</para></section></section></chapter><chapter id="org.gradle.nativeplatform.StaticLibraryBinary"><title>StaticLibraryBinary</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.nativeplatform.StaticLibraryBinary" style="javadoc"/></seg></seglistitem></segmentedlist><segmentedlist><segtitle>Known Subtypes</segtitle><seglistitem><seg><simplelist columns="1" type="vert"><member><apilink class="org.gradle.nativeplatform.PrebuiltStaticLibraryBinary"/></member></simplelist></seg></seglistitem></segmentedlist><caution><para>Note: This class is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>A <apilink class="org.gradle.nativeplatform.NativeLibrary"/> that has been compiled and archived into a static library.</para><section><title>Properties</title><table><title>Properties - StaticLibraryBinary</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.nativeplatform.StaticLibraryBinary:buildType"><literal>buildType</literal></link></td><td><caution>Incubating</caution><para>The <apilink class="org.gradle.nativeplatform.BuildType"/> used to construct this binary.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.StaticLibraryBinary:flavor"><literal>flavor</literal></link></td><td><caution>Incubating</caution><para>The <apilink class="org.gradle.nativeplatform.Flavor"/> that this binary was built with.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.StaticLibraryBinary:staticLibraryFile"><literal>staticLibraryFile</literal></link></td><td><caution>Incubating</caution><para>The static library file.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.StaticLibraryBinary:targetPlatform"><literal>targetPlatform</literal></link></td><td><caution>Incubating</caution><para>The <apilink class="org.gradle.nativeplatform.platform.NativePlatform"/> that this binary is targeted to run on.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.nativeplatform.StaticLibraryBinary:buildType" role="detail"><title><apilink class="org.gradle.nativeplatform.BuildType"/> <literal>buildType</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The <apilink class="org.gradle.nativeplatform.BuildType"/> used to construct this binary.</para></section><section id="org.gradle.nativeplatform.StaticLibraryBinary:flavor" role="detail"><title><apilink class="org.gradle.nativeplatform.Flavor"/> <literal>flavor</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The <apilink class="org.gradle.nativeplatform.Flavor"/> that this binary was built with.</para></section><section id="org.gradle.nativeplatform.StaticLibraryBinary:staticLibraryFile" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>staticLibraryFile</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The static library file.</para></section><section id="org.gradle.nativeplatform.StaticLibraryBinary:targetPlatform" role="detail"><title><apilink class="org.gradle.nativeplatform.platform.NativePlatform"/> <literal>targetPlatform</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The <apilink class="org.gradle.nativeplatform.platform.NativePlatform"/> that this binary is targeted to run on.</para></section></section></chapter><chapter id="org.gradle.nativeplatform.PrebuiltStaticLibraryBinary"><title>PrebuiltStaticLibraryBinary</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.nativeplatform.PrebuiltStaticLibraryBinary" style="javadoc"/></seg></seglistitem></segmentedlist><caution><para>Note: This class is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>A static library that exists at a known location on the filesystem.</para><section><title>Properties</title><table><title>Properties - PrebuiltStaticLibraryBinary</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.nativeplatform.PrebuiltStaticLibraryBinary:buildType"><literal>buildType</literal></link></td><td><caution>Incubating</caution><para>The <apilink class="org.gradle.nativeplatform.BuildType"/> used to construct this binary.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.PrebuiltStaticLibraryBinary:flavor"><literal>flavor</literal></link></td><td><caution>Incubating</caution><para>The <apilink class="org.gradle.nativeplatform.Flavor"/> that this binary was built with.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.PrebuiltStaticLibraryBinary:staticLibraryFile"><literal>staticLibraryFile</literal></link></td><td><caution>Incubating</caution><para>The static library file.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.PrebuiltStaticLibraryBinary:targetPlatform"><literal>targetPlatform</literal></link></td><td><caution>Incubating</caution><para>The <apilink class="org.gradle.nativeplatform.platform.NativePlatform"/> that this binary is targeted to run on.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.nativeplatform.PrebuiltStaticLibraryBinary:buildType" role="detail"><title><apilink class="org.gradle.nativeplatform.BuildType"/> <literal>buildType</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The <apilink class="org.gradle.nativeplatform.BuildType"/> used to construct this binary.</para></section><section id="org.gradle.nativeplatform.PrebuiltStaticLibraryBinary:flavor" role="detail"><title><apilink class="org.gradle.nativeplatform.Flavor"/> <literal>flavor</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The <apilink class="org.gradle.nativeplatform.Flavor"/> that this binary was built with.</para></section><section id="org.gradle.nativeplatform.PrebuiltStaticLibraryBinary:staticLibraryFile" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>staticLibraryFile</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The static library file.</para></section><section id="org.gradle.nativeplatform.PrebuiltStaticLibraryBinary:targetPlatform" role="detail"><title><apilink class="org.gradle.nativeplatform.platform.NativePlatform"/> <literal>targetPlatform</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The <apilink class="org.gradle.nativeplatform.platform.NativePlatform"/> that this binary is targeted to run on.</para></section></section></chapter><chapter id="org.gradle.model.ModelElement"><title>ModelElement</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.model.ModelElement" style="javadoc"/></seg></seglistitem></segmentedlist><segmentedlist><segtitle>Known Subtypes</segtitle><seglistitem><seg><simplelist columns="1" type="vert"><member><apilink class="org.gradle.platform.base.ComponentSpec"/></member></simplelist></seg></seglistitem></segmentedlist><caution><para>Note: This class is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Represents an element in a model. Elements are arranged in a hierarchy.</para><section><title>Properties</title><table><title>Properties - ModelElement</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.model.ModelElement:displayName"><literal>displayName</literal></link></td><td><caution>Incubating</caution><para>Returns a human-consumable display name for this element.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.model.ModelElement:displayName" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>displayName</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Returns a human-consumable display name for this element.</para></section></section></chapter><chapter id="org.gradle.platform.base.ComponentSpec"><title>ComponentSpec</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.platform.base.ComponentSpec" style="javadoc"/></seg></seglistitem></segmentedlist><segmentedlist><segtitle>Known Subtypes</segtitle><seglistitem><seg><simplelist columns="1" type="vert"><member><apilink class="org.gradle.nativeplatform.NativeComponentSpec"/></member><member><apilink class="org.gradle.platform.base.VariantComponentSpec"/></member></simplelist></seg></seglistitem></segmentedlist><caution><para>Note: This class is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>A software component that is built by Gradle.</para><section><title>Properties</title><table><title>Properties - ComponentSpec</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.platform.base.ComponentSpec:displayName"><literal>displayName</literal></link></td><td><caution>Incubating</caution><para>Returns a human-consumable display name for this element.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.platform.base.ComponentSpec:displayName" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>displayName</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Returns a human-consumable display name for this element.</para></section></section></chapter><chapter id="org.gradle.nativeplatform.NativeComponentSpec"><title>NativeComponentSpec</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.nativeplatform.NativeComponentSpec" style="javadoc"/></seg></seglistitem></segmentedlist><segmentedlist><segtitle>Known Subtypes</segtitle><seglistitem><seg><simplelist columns="3" type="vert"><member><apilink class="org.gradle.nativeplatform.NativeExecutableSpec"/></member><member><apilink class="org.gradle.nativeplatform.TargetedNativeComponent"/></member><member><apilink class="org.gradle.nativeplatform.NativeLibrarySpec"/></member><member><apilink class="org.gradle.nativeplatform.test.NativeTestSuiteSpec"/></member></simplelist></seg></seglistitem></segmentedlist><caution><para>Note: This class is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Definition of a software component that is to be built by Gradle to run a on JVM platform.</para><section><title>Properties</title><table><title>Properties - NativeComponentSpec</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.nativeplatform.NativeComponentSpec:baseName"><literal>baseName</literal></link></td><td><caution>Incubating</caution><para>The name that is used to construct the output file names when building this component.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.NativeComponentSpec:displayName"><literal>displayName</literal></link></td><td><caution>Incubating</caution><para>Returns a human-consumable display name for this element.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.nativeplatform.NativeComponentSpec:baseName" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>baseName</literal></title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The name that is used to construct the output file names when building this component.</para></section><section id="org.gradle.nativeplatform.NativeComponentSpec:displayName" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>displayName</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Returns a human-consumable display name for this element.</para></section></section></chapter><chapter id="org.gradle.platform.base.VariantComponentSpec"><title>VariantComponentSpec</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.platform.base.VariantComponentSpec" style="javadoc"/></seg></seglistitem></segmentedlist><segmentedlist><segtitle>Known Subtypes</segtitle><seglistitem><seg><simplelist columns="1" type="vert"><member><apilink class="org.gradle.platform.base.PlatformAwareComponentSpec"/></member></simplelist></seg></seglistitem></segmentedlist><caution><para>Note: This class is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Represents a component spec that is made up of one or more mutually exclusive variants.</para><section><title>Properties</title><table><title>Properties - VariantComponentSpec</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.platform.base.VariantComponentSpec:binaries"><literal>binaries</literal></link></td><td><caution>Incubating</caution><para>The variants produced for this component spec.</para></td></tr><tr><td><link linkend="org.gradle.platform.base.VariantComponentSpec:displayName"><literal>displayName</literal></link></td><td><caution>Incubating</caution><para>Returns a human-consumable display name for this element.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.platform.base.VariantComponentSpec:binaries" role="detail"><title><classname><apilink class="org.gradle.model.ModelMap"/>&lt;<apilink class="org.gradle.platform.base.BinarySpec"/>&gt;</classname> <literal>binaries</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The variants produced for this component spec.</para></section><section id="org.gradle.platform.base.VariantComponentSpec:displayName" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>displayName</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Returns a human-consumable display name for this element.</para></section></section></chapter><chapter id="org.gradle.platform.base.PlatformAwareComponentSpec"><title>PlatformAwareComponentSpec</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.platform.base.PlatformAwareComponentSpec" style="javadoc"/></seg></seglistitem></segmentedlist><segmentedlist><segtitle>Known Subtypes</segtitle><seglistitem><seg><simplelist columns="1" type="vert"><member><apilink class="org.gradle.nativeplatform.TargetedNativeComponent"/></member></simplelist></seg></seglistitem></segmentedlist><caution><para>Note: This class is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Defines Platform specific operations for ComponentSpecs</para><section><title>Properties</title><table><title>Properties - PlatformAwareComponentSpec</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.platform.base.PlatformAwareComponentSpec:binaries"><literal>binaries</literal></link></td><td><caution>Incubating</caution><para>The variants produced for this component spec.</para></td></tr><tr><td><link linkend="org.gradle.platform.base.PlatformAwareComponentSpec:displayName"><literal>displayName</literal></link></td><td><caution>Incubating</caution><para>Returns a human-consumable display name for this element.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - PlatformAwareComponentSpec</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.platform.base.PlatformAwareComponentSpec:targetPlatform(java.lang.String)">targetPlatform</link>(targetPlatform)</literal></td><td><caution>Incubating</caution><para>Specifies a platform that this component should be built be for.</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.platform.base.PlatformAwareComponentSpec:binaries" role="detail"><title><classname><apilink class="org.gradle.model.ModelMap"/>&lt;<apilink class="org.gradle.platform.base.BinarySpec"/>&gt;</classname> <literal>binaries</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The variants produced for this component spec.</para></section><section id="org.gradle.platform.base.PlatformAwareComponentSpec:displayName" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>displayName</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Returns a human-consumable display name for this element.</para></section></section><section><title>Method details</title><section id="org.gradle.platform.base.PlatformAwareComponentSpec:targetPlatform(java.lang.String)" role="detail"><title><classname>void</classname> <literal>targetPlatform</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> targetPlatform)</title><caution><para>Note: This method is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Specifies a platform that this component should be built be for.</para></section></section></chapter><chapter id="org.gradle.nativeplatform.TargetedNativeComponent"><title>TargetedNativeComponent</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.nativeplatform.TargetedNativeComponent" style="javadoc"/></seg></seglistitem></segmentedlist><segmentedlist><segtitle>Known Subtypes</segtitle><seglistitem><seg><simplelist columns="1" type="vert"><member><apilink class="org.gradle.nativeplatform.NativeExecutableSpec"/></member><member><apilink class="org.gradle.nativeplatform.NativeLibrarySpec"/></member></simplelist></seg></seglistitem></segmentedlist><caution><para>Note: This class is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>A native component that can be configured to target certain variant dimensions.
This functionality is a temporary workaround to eliminate configuration of unnecessary domain objects and tasks.</para><section><title>Properties</title><table><title>Properties - TargetedNativeComponent</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.nativeplatform.TargetedNativeComponent:baseName"><literal>baseName</literal></link></td><td><caution>Incubating</caution><para>The name that is used to construct the output file names when building this component.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.TargetedNativeComponent:binaries"><literal>binaries</literal></link></td><td><caution>Incubating</caution><para>The variants produced for this component spec.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.TargetedNativeComponent:displayName"><literal>displayName</literal></link></td><td><caution>Incubating</caution><para>Returns a human-consumable display name for this element.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - TargetedNativeComponent</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.nativeplatform.TargetedNativeComponent:targetBuildTypes(java.lang.String[])">targetBuildTypes</link>(buildTypeSelectors)</literal></td><td><caution>Incubating</caution><para>Specifies the names of one or more <apilink class="org.gradle.nativeplatform.BuildType"/>s that this component should be built for.</para></td></tr><tr><td><literal><link linkend="org.gradle.nativeplatform.TargetedNativeComponent:targetFlavors(java.lang.String[])">targetFlavors</link>(flavorSelectors)</literal></td><td><caution>Incubating</caution><para>Specifies the names of one or more <apilink class="org.gradle.nativeplatform.Flavor"/>s that this component should be built for.</para></td></tr><tr><td><literal><link linkend="org.gradle.nativeplatform.TargetedNativeComponent:targetPlatform(java.lang.String)">targetPlatform</link>(targetPlatform)</literal></td><td><caution>Incubating</caution><para>Specifies a platform that this component should be built be for.</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.nativeplatform.TargetedNativeComponent:baseName" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>baseName</literal></title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The name that is used to construct the output file names when building this component.</para></section><section id="org.gradle.nativeplatform.TargetedNativeComponent:binaries" role="detail"><title><classname><apilink class="org.gradle.model.ModelMap"/>&lt;<apilink class="org.gradle.platform.base.BinarySpec"/>&gt;</classname> <literal>binaries</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The variants produced for this component spec.</para></section><section id="org.gradle.nativeplatform.TargetedNativeComponent:displayName" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>displayName</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Returns a human-consumable display name for this element.</para></section></section><section><title>Method details</title><section id="org.gradle.nativeplatform.TargetedNativeComponent:targetBuildTypes(java.lang.String[])" role="detail"><title><classname>void</classname> <literal>targetBuildTypes</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>...</classname> buildTypeSelectors)</title><caution><para>Note: This method is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Specifies the names of one or more <apilink class="org.gradle.nativeplatform.BuildType"/>s that this component should be built for.</para></section><section id="org.gradle.nativeplatform.TargetedNativeComponent:targetFlavors(java.lang.String[])" role="detail"><title><classname>void</classname> <literal>targetFlavors</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>...</classname> flavorSelectors)</title><caution><para>Note: This method is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Specifies the names of one or more <apilink class="org.gradle.nativeplatform.Flavor"/>s that this component should be built for.</para></section><section id="org.gradle.nativeplatform.TargetedNativeComponent:targetPlatform(java.lang.String)" role="detail"><title><classname>void</classname> <literal>targetPlatform</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> targetPlatform)</title><caution><para>Note: This method is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Specifies a platform that this component should be built be for.</para></section></section></chapter><chapter id="org.gradle.nativeplatform.NativeExecutableSpec"><title>NativeExecutableSpec</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.nativeplatform.NativeExecutableSpec" style="javadoc"/></seg></seglistitem></segmentedlist><caution><para>Note: This class is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Definition of a native executable component that is to be built by Gradle.</para><section><title>Properties</title><table><title>Properties - NativeExecutableSpec</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.nativeplatform.NativeExecutableSpec:baseName"><literal>baseName</literal></link></td><td><caution>Incubating</caution><para>The name that is used to construct the output file names when building this component.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.NativeExecutableSpec:binaries"><literal>binaries</literal></link></td><td><caution>Incubating</caution><para>The variants produced for this component spec.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.NativeExecutableSpec:displayName"><literal>displayName</literal></link></td><td><caution>Incubating</caution><para>Returns a human-consumable display name for this element.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - NativeExecutableSpec</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.nativeplatform.NativeExecutableSpec:targetBuildTypes(java.lang.String[])">targetBuildTypes</link>(buildTypeSelectors)</literal></td><td><caution>Incubating</caution><para>Specifies the names of one or more <apilink class="org.gradle.nativeplatform.BuildType"/>s that this component should be built for.</para></td></tr><tr><td><literal><link linkend="org.gradle.nativeplatform.NativeExecutableSpec:targetFlavors(java.lang.String[])">targetFlavors</link>(flavorSelectors)</literal></td><td><caution>Incubating</caution><para>Specifies the names of one or more <apilink class="org.gradle.nativeplatform.Flavor"/>s that this component should be built for.</para></td></tr><tr><td><literal><link linkend="org.gradle.nativeplatform.NativeExecutableSpec:targetPlatform(java.lang.String)">targetPlatform</link>(targetPlatform)</literal></td><td><caution>Incubating</caution><para>Specifies a platform that this component should be built be for.</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.nativeplatform.NativeExecutableSpec:baseName" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>baseName</literal></title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The name that is used to construct the output file names when building this component.</para></section><section id="org.gradle.nativeplatform.NativeExecutableSpec:binaries" role="detail"><title><classname><apilink class="org.gradle.model.ModelMap"/>&lt;<apilink class="org.gradle.platform.base.BinarySpec"/>&gt;</classname> <literal>binaries</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The variants produced for this component spec.</para></section><section id="org.gradle.nativeplatform.NativeExecutableSpec:displayName" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>displayName</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Returns a human-consumable display name for this element.</para></section></section><section><title>Method details</title><section id="org.gradle.nativeplatform.NativeExecutableSpec:targetBuildTypes(java.lang.String[])" role="detail"><title><classname>void</classname> <literal>targetBuildTypes</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>...</classname> buildTypeSelectors)</title><caution><para>Note: This method is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Specifies the names of one or more <apilink class="org.gradle.nativeplatform.BuildType"/>s that this component should be built for.</para></section><section id="org.gradle.nativeplatform.NativeExecutableSpec:targetFlavors(java.lang.String[])" role="detail"><title><classname>void</classname> <literal>targetFlavors</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>...</classname> flavorSelectors)</title><caution><para>Note: This method is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Specifies the names of one or more <apilink class="org.gradle.nativeplatform.Flavor"/>s that this component should be built for.</para></section><section id="org.gradle.nativeplatform.NativeExecutableSpec:targetPlatform(java.lang.String)" role="detail"><title><classname>void</classname> <literal>targetPlatform</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> targetPlatform)</title><caution><para>Note: This method is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Specifies a platform that this component should be built be for.</para></section></section></chapter><chapter id="org.gradle.platform.base.LibrarySpec"><title>LibrarySpec</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.platform.base.LibrarySpec" style="javadoc"/></seg></seglistitem></segmentedlist><segmentedlist><segtitle>Known Subtypes</segtitle><seglistitem><seg><simplelist columns="1" type="vert"><member><apilink class="org.gradle.nativeplatform.NativeLibrarySpec"/></member></simplelist></seg></seglistitem></segmentedlist><caution><para>Note: This class is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>A specification of a <apilink class="org.gradle.platform.base.Library"/>.</para><section><title>Properties</title><para>No properties</para></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section></chapter><chapter id="org.gradle.nativeplatform.NativeLibrarySpec"><title>NativeLibrarySpec</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.nativeplatform.NativeLibrarySpec" style="javadoc"/></seg></seglistitem></segmentedlist><caution><para>Note: This class is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Definition of a native library component that is to be built by Gradle.</para><section><title>Properties</title><table><title>Properties - NativeLibrarySpec</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.nativeplatform.NativeLibrarySpec:api"><literal>api</literal></link></td><td><caution>Incubating</caution><para>Converts this library to a native library requirement that uses the api library linkage.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.NativeLibrarySpec:baseName"><literal>baseName</literal></link></td><td><caution>Incubating</caution><para>The name that is used to construct the output file names when building this component.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.NativeLibrarySpec:binaries"><literal>binaries</literal></link></td><td><caution>Incubating</caution><para>The variants produced for this component spec.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.NativeLibrarySpec:displayName"><literal>displayName</literal></link></td><td><caution>Incubating</caution><para>Returns a human-consumable display name for this element.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.NativeLibrarySpec:shared"><literal>shared</literal></link></td><td><caution>Incubating</caution><para>Converts this library to a native library requirement that uses the shared library variant. This is the default.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.NativeLibrarySpec:static"><literal>static</literal></link></td><td><caution>Incubating</caution><para>Converts this library to a native library requirement that uses the static library variant.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - NativeLibrarySpec</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.nativeplatform.NativeLibrarySpec:targetBuildTypes(java.lang.String[])">targetBuildTypes</link>(buildTypeSelectors)</literal></td><td><caution>Incubating</caution><para>Specifies the names of one or more <apilink class="org.gradle.nativeplatform.BuildType"/>s that this component should be built for.</para></td></tr><tr><td><literal><link linkend="org.gradle.nativeplatform.NativeLibrarySpec:targetFlavors(java.lang.String[])">targetFlavors</link>(flavorSelectors)</literal></td><td><caution>Incubating</caution><para>Specifies the names of one or more <apilink class="org.gradle.nativeplatform.Flavor"/>s that this component should be built for.</para></td></tr><tr><td><literal><link linkend="org.gradle.nativeplatform.NativeLibrarySpec:targetPlatform(java.lang.String)">targetPlatform</link>(targetPlatform)</literal></td><td><caution>Incubating</caution><para>Specifies a platform that this component should be built be for.</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.nativeplatform.NativeLibrarySpec:api" role="detail"><title><apilink class="org.gradle.nativeplatform.NativeLibraryRequirement"/> <literal>api</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Converts this library to a native library requirement that uses the api library linkage.</para></section><section id="org.gradle.nativeplatform.NativeLibrarySpec:baseName" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>baseName</literal></title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The name that is used to construct the output file names when building this component.</para></section><section id="org.gradle.nativeplatform.NativeLibrarySpec:binaries" role="detail"><title><classname><apilink class="org.gradle.model.ModelMap"/>&lt;<apilink class="org.gradle.platform.base.BinarySpec"/>&gt;</classname> <literal>binaries</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The variants produced for this component spec.</para></section><section id="org.gradle.nativeplatform.NativeLibrarySpec:displayName" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>displayName</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Returns a human-consumable display name for this element.</para></section><section id="org.gradle.nativeplatform.NativeLibrarySpec:shared" role="detail"><title><apilink class="org.gradle.nativeplatform.NativeLibraryRequirement"/> <literal>shared</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Converts this library to a native library requirement that uses the shared library variant. This is the default.</para></section><section id="org.gradle.nativeplatform.NativeLibrarySpec:static" role="detail"><title><apilink class="org.gradle.nativeplatform.NativeLibraryRequirement"/> <literal>static</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Converts this library to a native library requirement that uses the static library variant.</para></section></section><section><title>Method details</title><section id="org.gradle.nativeplatform.NativeLibrarySpec:targetBuildTypes(java.lang.String[])" role="detail"><title><classname>void</classname> <literal>targetBuildTypes</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>...</classname> buildTypeSelectors)</title><caution><para>Note: This method is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Specifies the names of one or more <apilink class="org.gradle.nativeplatform.BuildType"/>s that this component should be built for.</para></section><section id="org.gradle.nativeplatform.NativeLibrarySpec:targetFlavors(java.lang.String[])" role="detail"><title><classname>void</classname> <literal>targetFlavors</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>...</classname> flavorSelectors)</title><caution><para>Note: This method is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Specifies the names of one or more <apilink class="org.gradle.nativeplatform.Flavor"/>s that this component should be built for.</para></section><section id="org.gradle.nativeplatform.NativeLibrarySpec:targetPlatform(java.lang.String)" role="detail"><title><classname>void</classname> <literal>targetPlatform</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> targetPlatform)</title><caution><para>Note: This method is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Specifies a platform that this component should be built be for.</para></section></section></chapter><chapter id="org.gradle.nativeplatform.test.NativeTestSuiteSpec"><title>NativeTestSuiteSpec</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.nativeplatform.test.NativeTestSuiteSpec" style="javadoc"/></seg></seglistitem></segmentedlist><segmentedlist><segtitle>Known Subtypes</segtitle><seglistitem><seg><simplelist columns="1" type="vert"><member><apilink class="org.gradle.nativeplatform.test.cunit.CUnitTestSuiteSpec"/></member><member><apilink class="org.gradle.nativeplatform.test.googletest.GoogleTestTestSuiteSpec"/></member></simplelist></seg></seglistitem></segmentedlist><caution><para>Note: This class is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>A component representing a suite of tests that will be executed together.</para><section><title>Properties</title><table><title>Properties - NativeTestSuiteSpec</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.nativeplatform.test.NativeTestSuiteSpec:baseName"><literal>baseName</literal></link></td><td><caution>Incubating</caution><para>The name that is used to construct the output file names when building this component.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.test.NativeTestSuiteSpec:displayName"><literal>displayName</literal></link></td><td><caution>Incubating</caution><para>Returns a human-consumable display name for this element.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.nativeplatform.test.NativeTestSuiteSpec:baseName" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>baseName</literal></title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The name that is used to construct the output file names when building this component.</para></section><section id="org.gradle.nativeplatform.test.NativeTestSuiteSpec:displayName" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>displayName</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Returns a human-consumable display name for this element.</para></section></section></chapter><chapter id="org.gradle.nativeplatform.test.cunit.CUnitTestSuiteSpec"><title>CUnitTestSuiteSpec</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.nativeplatform.test.cunit.CUnitTestSuiteSpec" style="javadoc"/></seg></seglistitem></segmentedlist><caution><para>Note: This class is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Test suite of CUnit tests.</para><section><title>Properties</title><table><title>Properties - CUnitTestSuiteSpec</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.nativeplatform.test.cunit.CUnitTestSuiteSpec:baseName"><literal>baseName</literal></link></td><td><caution>Incubating</caution><para>The name that is used to construct the output file names when building this component.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.test.cunit.CUnitTestSuiteSpec:displayName"><literal>displayName</literal></link></td><td><caution>Incubating</caution><para>Returns a human-consumable display name for this element.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.nativeplatform.test.cunit.CUnitTestSuiteSpec:baseName" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>baseName</literal></title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The name that is used to construct the output file names when building this component.</para></section><section id="org.gradle.nativeplatform.test.cunit.CUnitTestSuiteSpec:displayName" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>displayName</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Returns a human-consumable display name for this element.</para></section></section></chapter><chapter id="org.gradle.nativeplatform.test.googletest.GoogleTestTestSuiteSpec"><title>GoogleTestTestSuiteSpec</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.nativeplatform.test.googletest.GoogleTestTestSuiteSpec" style="javadoc"/></seg></seglistitem></segmentedlist><caution><para>Note: This class is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Test suite of Google Test tests.</para><section><title>Properties</title><table><title>Properties - GoogleTestTestSuiteSpec</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.nativeplatform.test.googletest.GoogleTestTestSuiteSpec:baseName"><literal>baseName</literal></link></td><td><caution>Incubating</caution><para>The name that is used to construct the output file names when building this component.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.test.googletest.GoogleTestTestSuiteSpec:displayName"><literal>displayName</literal></link></td><td><caution>Incubating</caution><para>Returns a human-consumable display name for this element.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.nativeplatform.test.googletest.GoogleTestTestSuiteSpec:baseName" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>baseName</literal></title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The name that is used to construct the output file names when building this component.</para></section><section id="org.gradle.nativeplatform.test.googletest.GoogleTestTestSuiteSpec:displayName" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>displayName</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Returns a human-consumable display name for this element.</para></section></section></chapter><chapter id="org.gradle.platform.base.BinarySpec"><title>BinarySpec</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.platform.base.BinarySpec" style="javadoc"/></seg></seglistitem></segmentedlist><segmentedlist><segtitle>Known Subtypes</segtitle><seglistitem><seg><simplelist columns="1" type="vert"><member><apilink class="org.gradle.nativeplatform.NativeBinarySpec"/></member></simplelist></seg></seglistitem></segmentedlist><caution><para>Note: This class is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Represents a binary that is the result of building a component.</para><section><title>Properties</title><table><title>Properties - BinarySpec</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.platform.base.BinarySpec:buildable"><literal>buildable</literal></link></td><td><caution>Incubating</caution><para>Can this binary be built in the current environment?</para></td></tr><tr><td><link linkend="org.gradle.platform.base.BinarySpec:inputs"><literal>inputs</literal></link></td><td><caution>Incubating</caution><para>Returns all inputs of the binary. This includes source sets owned by the binary,
and other source sets created elsewhere (e.g. inherited from the binary's component).</para></td></tr><tr><td><link linkend="org.gradle.platform.base.BinarySpec:sources"><literal>sources</literal></link></td><td><caution>Incubating</caution><para>The sources owned by this binary.</para></td></tr><tr><td><link linkend="org.gradle.platform.base.BinarySpec:tasks"><literal>tasks</literal></link></td><td><caution>Incubating</caution><para>The set of tasks associated with this binary.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.platform.base.BinarySpec:buildable" role="detail"><title><classname>boolean</classname> <literal>buildable</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Can this binary be built in the current environment?</para></section><section id="org.gradle.platform.base.BinarySpec:inputs" role="detail"><title><classname><apilink class="org.gradle.api.DomainObjectSet"/>&lt;<apilink class="org.gradle.language.base.LanguageSourceSet"/>&gt;</classname> <literal>inputs</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Returns all inputs of the binary. This includes source sets owned by the binary,
and other source sets created elsewhere (e.g. inherited from the binary's component).</para></section><section id="org.gradle.platform.base.BinarySpec:sources" role="detail"><title><classname><apilink class="org.gradle.model.ModelMap"/>&lt;<apilink class="org.gradle.language.base.LanguageSourceSet"/>&gt;</classname> <literal>sources</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The sources owned by this binary.</para></section><section id="org.gradle.platform.base.BinarySpec:tasks" role="detail"><title><apilink class="org.gradle.platform.base.BinaryTasksCollection"/> <literal>tasks</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The set of tasks associated with this binary.</para></section></section></chapter><chapter id="org.gradle.nativeplatform.NativeBinarySpec"><title>NativeBinarySpec</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.nativeplatform.NativeBinarySpec" style="javadoc"/></seg></seglistitem></segmentedlist><segmentedlist><segtitle>Known Subtypes</segtitle><seglistitem><seg><simplelist columns="1" type="vert"><member><apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/></member><member><apilink class="org.gradle.nativeplatform.NativeLibraryBinarySpec"/></member><member><apilink class="org.gradle.nativeplatform.test.NativeTestSuiteBinarySpec"/></member></simplelist></seg></seglistitem></segmentedlist><caution><para>Note: This class is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Represents a binary artifact that is the result of building a native component.</para><section><title>Properties</title><table><title>Properties - NativeBinarySpec</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.nativeplatform.NativeBinarySpec:assembler"><literal>assembler</literal></link></td><td><caution>Incubating</caution><para>The configuration of the assembler used when compiling assembly sources this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/>, <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/> and
<apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/> when the 'assembler' plugin is applied.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.NativeBinarySpec:buildType"><literal>buildType</literal></link></td><td><caution>Incubating</caution><para>The <apilink class="org.gradle.nativeplatform.BuildType"/> used to construct this binary.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.NativeBinarySpec:buildable"><literal>buildable</literal></link></td><td><caution>Incubating</caution><para>Can this binary be built in the current environment?</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.NativeBinarySpec:cCompiler"><literal>cCompiler</literal></link></td><td><caution>Incubating</caution><para>The configuration of the C compiler used when compiling C sources for this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/>, <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/> and
<apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/> when the 'c' plugin is applied.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.NativeBinarySpec:component"><literal>component</literal></link></td><td><caution>Incubating</caution><para>The component that this binary was built from.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.NativeBinarySpec:cppCompiler"><literal>cppCompiler</literal></link></td><td><caution>Incubating</caution><para>The configuration of the C++ compiler used when compiling C++ sources for this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/>, <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/> and
<apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/> when the 'cpp' plugin is applied.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.NativeBinarySpec:flavor"><literal>flavor</literal></link></td><td><caution>Incubating</caution><para>The <apilink class="org.gradle.nativeplatform.Flavor"/> that this binary was built with.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.NativeBinarySpec:inputs"><literal>inputs</literal></link></td><td><caution>Incubating</caution><para>Returns all inputs of the binary. This includes source sets owned by the binary,
and other source sets created elsewhere (e.g. inherited from the binary's component).</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.NativeBinarySpec:libs"><literal>libs</literal></link></td><td><caution>Incubating</caution><para>The libraries that should be linked into this binary.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.NativeBinarySpec:linker"><literal>linker</literal></link></td><td><caution>Incubating</caution><para>The configuration of the linker used when linking this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/> and <apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/>.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.NativeBinarySpec:objcCompiler"><literal>objcCompiler</literal></link></td><td><caution>Incubating</caution><para>The configuration of the Objective-C compiler used when compiling Objective-C sources for this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/>, <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/> and
<apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/> when the 'objective-c' plugin is applied.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.NativeBinarySpec:objcppCompiler"><literal>objcppCompiler</literal></link></td><td><caution>Incubating</caution><para>The configuration of the Objective-C++ compiler used when compiling Objective-C++ sources for this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/>, <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/> and
<apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/> when the 'objective-cpp' plugin is applied.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.NativeBinarySpec:rcCompiler"><literal>rcCompiler</literal></link></td><td><caution>Incubating</caution><para>The configuration of the Resource compiler used when compiling resources for this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/>, <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/> and
<apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/> when the 'windows-resources' plugin is applied.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.NativeBinarySpec:sources"><literal>sources</literal></link></td><td><caution>Incubating</caution><para>The sources owned by this binary.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.NativeBinarySpec:staticLibArchiver"><literal>staticLibArchiver</literal></link></td><td><caution>Incubating</caution><para>The configuration of the static library archiver used when creating this binary.

Valid for <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/>.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.NativeBinarySpec:targetPlatform"><literal>targetPlatform</literal></link></td><td><caution>Incubating</caution><para>The <apilink class="org.gradle.nativeplatform.platform.NativePlatform"/> that this binary is targeted to run on.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.NativeBinarySpec:tasks"><literal>tasks</literal></link></td><td><caution>Incubating</caution><para>The set of tasks associated with this binary.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.NativeBinarySpec:toolChain"><literal>toolChain</literal></link></td><td><caution>Incubating</caution><para>The <apilink class="org.gradle.nativeplatform.toolchain.NativeToolChain"/> that will be used to build this binary.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - NativeBinarySpec</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.nativeplatform.NativeBinarySpec:lib(java.lang.Object)">lib</link>(library)</literal></td><td><caution>Incubating</caution><para>Adds a library as input to this binary.
</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.nativeplatform.NativeBinarySpec:assembler" role="detail"><title><apilink class="org.gradle.nativeplatform.Tool"/> <literal>assembler</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The configuration of the assembler used when compiling assembly sources this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/>, <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/> and
<apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/> when the 'assembler' plugin is applied.</para></section><section id="org.gradle.nativeplatform.NativeBinarySpec:buildType" role="detail"><title><apilink class="org.gradle.nativeplatform.BuildType"/> <literal>buildType</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The <apilink class="org.gradle.nativeplatform.BuildType"/> used to construct this binary.</para></section><section id="org.gradle.nativeplatform.NativeBinarySpec:buildable" role="detail"><title><classname>boolean</classname> <literal>buildable</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Can this binary be built in the current environment?</para></section><section id="org.gradle.nativeplatform.NativeBinarySpec:cCompiler" role="detail"><title><apilink class="org.gradle.nativeplatform.PreprocessingTool"/> <literal>cCompiler</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The configuration of the C compiler used when compiling C sources for this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/>, <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/> and
<apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/> when the 'c' plugin is applied.</para></section><section id="org.gradle.nativeplatform.NativeBinarySpec:component" role="detail"><title><apilink class="org.gradle.nativeplatform.NativeComponentSpec"/> <literal>component</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The component that this binary was built from.</para></section><section id="org.gradle.nativeplatform.NativeBinarySpec:cppCompiler" role="detail"><title><apilink class="org.gradle.nativeplatform.PreprocessingTool"/> <literal>cppCompiler</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The configuration of the C++ compiler used when compiling C++ sources for this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/>, <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/> and
<apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/> when the 'cpp' plugin is applied.</para></section><section id="org.gradle.nativeplatform.NativeBinarySpec:flavor" role="detail"><title><apilink class="org.gradle.nativeplatform.Flavor"/> <literal>flavor</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The <apilink class="org.gradle.nativeplatform.Flavor"/> that this binary was built with.</para></section><section id="org.gradle.nativeplatform.NativeBinarySpec:inputs" role="detail"><title><classname><apilink class="org.gradle.api.DomainObjectSet"/>&lt;<apilink class="org.gradle.language.base.LanguageSourceSet"/>&gt;</classname> <literal>inputs</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Returns all inputs of the binary. This includes source sets owned by the binary,
and other source sets created elsewhere (e.g. inherited from the binary's component).</para></section><section id="org.gradle.nativeplatform.NativeBinarySpec:libs" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Collection.html"><classname>Collection</classname></ulink>&lt;<apilink class="org.gradle.nativeplatform.NativeDependencySet"/>&gt;</classname> <literal>libs</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The libraries that should be linked into this binary.</para></section><section id="org.gradle.nativeplatform.NativeBinarySpec:linker" role="detail"><title><apilink class="org.gradle.nativeplatform.Tool"/> <literal>linker</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The configuration of the linker used when linking this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/> and <apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/>.</para></section><section id="org.gradle.nativeplatform.NativeBinarySpec:objcCompiler" role="detail"><title><apilink class="org.gradle.nativeplatform.PreprocessingTool"/> <literal>objcCompiler</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The configuration of the Objective-C compiler used when compiling Objective-C sources for this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/>, <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/> and
<apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/> when the 'objective-c' plugin is applied.</para></section><section id="org.gradle.nativeplatform.NativeBinarySpec:objcppCompiler" role="detail"><title><apilink class="org.gradle.nativeplatform.PreprocessingTool"/> <literal>objcppCompiler</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The configuration of the Objective-C++ compiler used when compiling Objective-C++ sources for this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/>, <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/> and
<apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/> when the 'objective-cpp' plugin is applied.</para></section><section id="org.gradle.nativeplatform.NativeBinarySpec:rcCompiler" role="detail"><title><apilink class="org.gradle.nativeplatform.PreprocessingTool"/> <literal>rcCompiler</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The configuration of the Resource compiler used when compiling resources for this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/>, <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/> and
<apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/> when the 'windows-resources' plugin is applied.</para></section><section id="org.gradle.nativeplatform.NativeBinarySpec:sources" role="detail"><title><classname><apilink class="org.gradle.model.ModelMap"/>&lt;<apilink class="org.gradle.language.base.LanguageSourceSet"/>&gt;</classname> <literal>sources</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The sources owned by this binary.</para></section><section id="org.gradle.nativeplatform.NativeBinarySpec:staticLibArchiver" role="detail"><title><apilink class="org.gradle.nativeplatform.Tool"/> <literal>staticLibArchiver</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The configuration of the static library archiver used when creating this binary.

Valid for <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/>.</para></section><section id="org.gradle.nativeplatform.NativeBinarySpec:targetPlatform" role="detail"><title><apilink class="org.gradle.nativeplatform.platform.NativePlatform"/> <literal>targetPlatform</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The <apilink class="org.gradle.nativeplatform.platform.NativePlatform"/> that this binary is targeted to run on.</para></section><section id="org.gradle.nativeplatform.NativeBinarySpec:tasks" role="detail"><title><apilink class="org.gradle.platform.base.BinaryTasksCollection"/> <literal>tasks</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The set of tasks associated with this binary.</para></section><section id="org.gradle.nativeplatform.NativeBinarySpec:toolChain" role="detail"><title><apilink class="org.gradle.nativeplatform.toolchain.NativeToolChain"/> <literal>toolChain</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The <apilink class="org.gradle.nativeplatform.toolchain.NativeToolChain"/> that will be used to build this binary.</para></section></section><section><title>Method details</title><section id="org.gradle.nativeplatform.NativeBinarySpec:lib(java.lang.Object)" role="detail"><title><classname>void</classname> <literal>lib</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> library)</title><caution><para>Note: This method is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Adds a library as input to this binary.
</para><para>
This method accepts the following types:

</para><itemizedlist><listitem>A <apilink class="org.gradle.nativeplatform.NativeLibrarySpec"/></listitem><listitem>A <apilink class="org.gradle.nativeplatform.NativeDependencySet"/></listitem><listitem>A <ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink> containing the library selector.</listitem></itemizedlist><para>

The Map notation supports the following String attributes:

</para><itemizedlist><listitem>project: the path to the project containing the library (optional, defaults to current project)</listitem><listitem>library: the name of the library (required)</listitem><listitem>linkage: the library linkage required ['shared'/'static'] (optional, defaults to 'shared')</listitem></itemizedlist></section></section></chapter><chapter id="org.gradle.nativeplatform.Tool"><title>Tool</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.nativeplatform.Tool" style="javadoc"/></seg></seglistitem></segmentedlist><segmentedlist><segtitle>Known Subtypes</segtitle><seglistitem><seg><simplelist columns="1" type="vert"><member><apilink class="org.gradle.nativeplatform.PreprocessingTool"/></member></simplelist></seg></seglistitem></segmentedlist><caution><para>Note: This class is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Configuration of the arguments of a ToolChain executable.</para><section><title>Properties</title><table><title>Properties - Tool</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.nativeplatform.Tool:args"><literal>args</literal></link></td><td><caution>Incubating</caution><para>The arguments passed when executing this tool.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - Tool</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.nativeplatform.Tool:args(java.lang.String[])">args</link>(args)</literal></td><td><caution>Incubating</caution><para>Adds a number of arguments to be passed to the tool.</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.nativeplatform.Tool:args" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/List.html"><classname>List</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>args</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The arguments passed when executing this tool.</para></section></section><section><title>Method details</title><section id="org.gradle.nativeplatform.Tool:args(java.lang.String[])" role="detail"><title><classname>void</classname> <literal>args</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>...</classname> args)</title><caution><para>Note: This method is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Adds a number of arguments to be passed to the tool.</para></section></section></chapter><chapter id="org.gradle.nativeplatform.PreprocessingTool"><title>PreprocessingTool</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.nativeplatform.PreprocessingTool" style="javadoc"/></seg></seglistitem></segmentedlist><caution><para>Note: This class is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><section><title>Properties</title><table><title>Properties - PreprocessingTool</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.nativeplatform.PreprocessingTool:args"><literal>args</literal></link></td><td><caution>Incubating</caution><para>The arguments passed when executing this tool.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.PreprocessingTool:macros"><literal>macros</literal></link></td><td><caution>Incubating</caution><para>The set of preprocessor macros to define when compiling this binary.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - PreprocessingTool</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.nativeplatform.PreprocessingTool:args(java.lang.String[])">args</link>(args)</literal></td><td><caution>Incubating</caution><para>Adds a number of arguments to be passed to the tool.</para></td></tr><tr><td><literal><link linkend="org.gradle.nativeplatform.PreprocessingTool:define(java.lang.String)">define</link>(name)</literal></td><td><caution>Incubating</caution><para>Defines a named preprocessor macros to use when compiling this binary.
The macro will be supplied to the compiler as '-D name'.</para></td></tr><tr><td><literal><link linkend="org.gradle.nativeplatform.PreprocessingTool:define(java.lang.String, java.lang.String)">define</link>(name, definition)</literal></td><td><caution>Incubating</caution><para>Defines a named preprocessor macro with a value, which will be used when compiling this binary.
The macro will be supplied to the compiler as '-D name=definition'.</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.nativeplatform.PreprocessingTool:args" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/List.html"><classname>List</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>args</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The arguments passed when executing this tool.</para></section><section id="org.gradle.nativeplatform.PreprocessingTool:macros" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>macros</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The set of preprocessor macros to define when compiling this binary.</para></section></section><section><title>Method details</title><section id="org.gradle.nativeplatform.PreprocessingTool:args(java.lang.String[])" role="detail"><title><classname>void</classname> <literal>args</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>...</classname> args)</title><caution><para>Note: This method is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Adds a number of arguments to be passed to the tool.</para></section><section id="org.gradle.nativeplatform.PreprocessingTool:define(java.lang.String)" role="detail"><title><classname>void</classname> <literal>define</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name)</title><caution><para>Note: This method is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Defines a named preprocessor macros to use when compiling this binary.
The macro will be supplied to the compiler as '-D name'.</para></section><section id="org.gradle.nativeplatform.PreprocessingTool:define(java.lang.String, java.lang.String)" role="detail"><title><classname>void</classname> <literal>define</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> definition)</title><caution><para>Note: This method is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Defines a named preprocessor macro with a value, which will be used when compiling this binary.
The macro will be supplied to the compiler as '-D name=definition'.</para></section></section></chapter><chapter id="org.gradle.nativeplatform.NativeExecutableBinarySpec"><title>NativeExecutableBinarySpec</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec" style="javadoc"/></seg></seglistitem></segmentedlist><caution><para>Note: This class is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>An binary built by Gradle for a native application.</para><section><title>Properties</title><table><title>Properties - NativeExecutableBinarySpec</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.nativeplatform.NativeExecutableBinarySpec:assembler"><literal>assembler</literal></link></td><td><caution>Incubating</caution><para>The configuration of the assembler used when compiling assembly sources this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/>, <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/> and
<apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/> when the 'assembler' plugin is applied.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.NativeExecutableBinarySpec:buildType"><literal>buildType</literal></link></td><td><caution>Incubating</caution><para>The <apilink class="org.gradle.nativeplatform.BuildType"/> used to construct this binary.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.NativeExecutableBinarySpec:buildable"><literal>buildable</literal></link></td><td><caution>Incubating</caution><para>Can this binary be built in the current environment?</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.NativeExecutableBinarySpec:cCompiler"><literal>cCompiler</literal></link></td><td><caution>Incubating</caution><para>The configuration of the C compiler used when compiling C sources for this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/>, <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/> and
<apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/> when the 'c' plugin is applied.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.NativeExecutableBinarySpec:component"><literal>component</literal></link></td><td><caution>Incubating</caution><para>The component that this binary was built from.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.NativeExecutableBinarySpec:cppCompiler"><literal>cppCompiler</literal></link></td><td><caution>Incubating</caution><para>The configuration of the C++ compiler used when compiling C++ sources for this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/>, <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/> and
<apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/> when the 'cpp' plugin is applied.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.NativeExecutableBinarySpec:flavor"><literal>flavor</literal></link></td><td><caution>Incubating</caution><para>The <apilink class="org.gradle.nativeplatform.Flavor"/> that this binary was built with.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.NativeExecutableBinarySpec:inputs"><literal>inputs</literal></link></td><td><caution>Incubating</caution><para>Returns all inputs of the binary. This includes source sets owned by the binary,
and other source sets created elsewhere (e.g. inherited from the binary's component).</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.NativeExecutableBinarySpec:libs"><literal>libs</literal></link></td><td><caution>Incubating</caution><para>The libraries that should be linked into this binary.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.NativeExecutableBinarySpec:linker"><literal>linker</literal></link></td><td><caution>Incubating</caution><para>The configuration of the linker used when linking this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/> and <apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/>.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.NativeExecutableBinarySpec:objcCompiler"><literal>objcCompiler</literal></link></td><td><caution>Incubating</caution><para>The configuration of the Objective-C compiler used when compiling Objective-C sources for this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/>, <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/> and
<apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/> when the 'objective-c' plugin is applied.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.NativeExecutableBinarySpec:objcppCompiler"><literal>objcppCompiler</literal></link></td><td><caution>Incubating</caution><para>The configuration of the Objective-C++ compiler used when compiling Objective-C++ sources for this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/>, <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/> and
<apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/> when the 'objective-cpp' plugin is applied.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.NativeExecutableBinarySpec:rcCompiler"><literal>rcCompiler</literal></link></td><td><caution>Incubating</caution><para>The configuration of the Resource compiler used when compiling resources for this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/>, <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/> and
<apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/> when the 'windows-resources' plugin is applied.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.NativeExecutableBinarySpec:sources"><literal>sources</literal></link></td><td><caution>Incubating</caution><para>The sources owned by this binary.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.NativeExecutableBinarySpec:staticLibArchiver"><literal>staticLibArchiver</literal></link></td><td><caution>Incubating</caution><para>The configuration of the static library archiver used when creating this binary.

Valid for <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/>.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.NativeExecutableBinarySpec:targetPlatform"><literal>targetPlatform</literal></link></td><td><caution>Incubating</caution><para>The <apilink class="org.gradle.nativeplatform.platform.NativePlatform"/> that this binary is targeted to run on.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.NativeExecutableBinarySpec:tasks"><literal>tasks</literal></link></td><td><caution>Incubating</caution><para>The set of tasks associated with this binary.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.NativeExecutableBinarySpec:toolChain"><literal>toolChain</literal></link></td><td><caution>Incubating</caution><para>The <apilink class="org.gradle.nativeplatform.toolchain.NativeToolChain"/> that will be used to build this binary.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - NativeExecutableBinarySpec</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.nativeplatform.NativeExecutableBinarySpec:lib(java.lang.Object)">lib</link>(library)</literal></td><td><caution>Incubating</caution><para>Adds a library as input to this binary.
</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.nativeplatform.NativeExecutableBinarySpec:assembler" role="detail"><title><apilink class="org.gradle.nativeplatform.Tool"/> <literal>assembler</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The configuration of the assembler used when compiling assembly sources this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/>, <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/> and
<apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/> when the 'assembler' plugin is applied.</para></section><section id="org.gradle.nativeplatform.NativeExecutableBinarySpec:buildType" role="detail"><title><apilink class="org.gradle.nativeplatform.BuildType"/> <literal>buildType</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The <apilink class="org.gradle.nativeplatform.BuildType"/> used to construct this binary.</para></section><section id="org.gradle.nativeplatform.NativeExecutableBinarySpec:buildable" role="detail"><title><classname>boolean</classname> <literal>buildable</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Can this binary be built in the current environment?</para></section><section id="org.gradle.nativeplatform.NativeExecutableBinarySpec:cCompiler" role="detail"><title><apilink class="org.gradle.nativeplatform.PreprocessingTool"/> <literal>cCompiler</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The configuration of the C compiler used when compiling C sources for this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/>, <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/> and
<apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/> when the 'c' plugin is applied.</para></section><section id="org.gradle.nativeplatform.NativeExecutableBinarySpec:component" role="detail"><title><apilink class="org.gradle.nativeplatform.NativeComponentSpec"/> <literal>component</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The component that this binary was built from.</para></section><section id="org.gradle.nativeplatform.NativeExecutableBinarySpec:cppCompiler" role="detail"><title><apilink class="org.gradle.nativeplatform.PreprocessingTool"/> <literal>cppCompiler</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The configuration of the C++ compiler used when compiling C++ sources for this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/>, <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/> and
<apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/> when the 'cpp' plugin is applied.</para></section><section id="org.gradle.nativeplatform.NativeExecutableBinarySpec:flavor" role="detail"><title><apilink class="org.gradle.nativeplatform.Flavor"/> <literal>flavor</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The <apilink class="org.gradle.nativeplatform.Flavor"/> that this binary was built with.</para></section><section id="org.gradle.nativeplatform.NativeExecutableBinarySpec:inputs" role="detail"><title><classname><apilink class="org.gradle.api.DomainObjectSet"/>&lt;<apilink class="org.gradle.language.base.LanguageSourceSet"/>&gt;</classname> <literal>inputs</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Returns all inputs of the binary. This includes source sets owned by the binary,
and other source sets created elsewhere (e.g. inherited from the binary's component).</para></section><section id="org.gradle.nativeplatform.NativeExecutableBinarySpec:libs" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Collection.html"><classname>Collection</classname></ulink>&lt;<apilink class="org.gradle.nativeplatform.NativeDependencySet"/>&gt;</classname> <literal>libs</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The libraries that should be linked into this binary.</para></section><section id="org.gradle.nativeplatform.NativeExecutableBinarySpec:linker" role="detail"><title><apilink class="org.gradle.nativeplatform.Tool"/> <literal>linker</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The configuration of the linker used when linking this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/> and <apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/>.</para></section><section id="org.gradle.nativeplatform.NativeExecutableBinarySpec:objcCompiler" role="detail"><title><apilink class="org.gradle.nativeplatform.PreprocessingTool"/> <literal>objcCompiler</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The configuration of the Objective-C compiler used when compiling Objective-C sources for this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/>, <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/> and
<apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/> when the 'objective-c' plugin is applied.</para></section><section id="org.gradle.nativeplatform.NativeExecutableBinarySpec:objcppCompiler" role="detail"><title><apilink class="org.gradle.nativeplatform.PreprocessingTool"/> <literal>objcppCompiler</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The configuration of the Objective-C++ compiler used when compiling Objective-C++ sources for this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/>, <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/> and
<apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/> when the 'objective-cpp' plugin is applied.</para></section><section id="org.gradle.nativeplatform.NativeExecutableBinarySpec:rcCompiler" role="detail"><title><apilink class="org.gradle.nativeplatform.PreprocessingTool"/> <literal>rcCompiler</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The configuration of the Resource compiler used when compiling resources for this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/>, <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/> and
<apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/> when the 'windows-resources' plugin is applied.</para></section><section id="org.gradle.nativeplatform.NativeExecutableBinarySpec:sources" role="detail"><title><classname><apilink class="org.gradle.model.ModelMap"/>&lt;<apilink class="org.gradle.language.base.LanguageSourceSet"/>&gt;</classname> <literal>sources</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The sources owned by this binary.</para></section><section id="org.gradle.nativeplatform.NativeExecutableBinarySpec:staticLibArchiver" role="detail"><title><apilink class="org.gradle.nativeplatform.Tool"/> <literal>staticLibArchiver</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The configuration of the static library archiver used when creating this binary.

Valid for <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/>.</para></section><section id="org.gradle.nativeplatform.NativeExecutableBinarySpec:targetPlatform" role="detail"><title><apilink class="org.gradle.nativeplatform.platform.NativePlatform"/> <literal>targetPlatform</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The <apilink class="org.gradle.nativeplatform.platform.NativePlatform"/> that this binary is targeted to run on.</para></section><section id="org.gradle.nativeplatform.NativeExecutableBinarySpec:tasks" role="detail"><title><apilink class="org.gradle.platform.base.BinaryTasksCollection"/> <literal>tasks</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The set of tasks associated with this binary.</para></section><section id="org.gradle.nativeplatform.NativeExecutableBinarySpec:toolChain" role="detail"><title><apilink class="org.gradle.nativeplatform.toolchain.NativeToolChain"/> <literal>toolChain</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The <apilink class="org.gradle.nativeplatform.toolchain.NativeToolChain"/> that will be used to build this binary.</para></section></section><section><title>Method details</title><section id="org.gradle.nativeplatform.NativeExecutableBinarySpec:lib(java.lang.Object)" role="detail"><title><classname>void</classname> <literal>lib</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> library)</title><caution><para>Note: This method is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Adds a library as input to this binary.
</para><para>
This method accepts the following types:

</para><itemizedlist><listitem>A <apilink class="org.gradle.nativeplatform.NativeLibrarySpec"/></listitem><listitem>A <apilink class="org.gradle.nativeplatform.NativeDependencySet"/></listitem><listitem>A <ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink> containing the library selector.</listitem></itemizedlist><para>

The Map notation supports the following String attributes:

</para><itemizedlist><listitem>project: the path to the project containing the library (optional, defaults to current project)</listitem><listitem>library: the name of the library (required)</listitem><listitem>linkage: the library linkage required ['shared'/'static'] (optional, defaults to 'shared')</listitem></itemizedlist></section></section></chapter><chapter id="org.gradle.nativeplatform.NativeLibraryBinarySpec"><title>NativeLibraryBinarySpec</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.nativeplatform.NativeLibraryBinarySpec" style="javadoc"/></seg></seglistitem></segmentedlist><segmentedlist><segtitle>Known Subtypes</segtitle><seglistitem><seg><simplelist columns="1" type="vert"><member><apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/></member><member><apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/></member></simplelist></seg></seglistitem></segmentedlist><caution><para>Note: This class is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Represents a binary artifact that is the result of building a native library component.</para><section><title>Properties</title><table><title>Properties - NativeLibraryBinarySpec</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.nativeplatform.NativeLibraryBinarySpec:assembler"><literal>assembler</literal></link></td><td><caution>Incubating</caution><para>The configuration of the assembler used when compiling assembly sources this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/>, <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/> and
<apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/> when the 'assembler' plugin is applied.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.NativeLibraryBinarySpec:buildType"><literal>buildType</literal></link></td><td><caution>Incubating</caution><para>The <apilink class="org.gradle.nativeplatform.BuildType"/> used to construct this binary.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.NativeLibraryBinarySpec:buildable"><literal>buildable</literal></link></td><td><caution>Incubating</caution><para>Can this binary be built in the current environment?</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.NativeLibraryBinarySpec:cCompiler"><literal>cCompiler</literal></link></td><td><caution>Incubating</caution><para>The configuration of the C compiler used when compiling C sources for this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/>, <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/> and
<apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/> when the 'c' plugin is applied.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.NativeLibraryBinarySpec:component"><literal>component</literal></link></td><td><caution>Incubating</caution><para>The component that this binary was built from.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.NativeLibraryBinarySpec:cppCompiler"><literal>cppCompiler</literal></link></td><td><caution>Incubating</caution><para>The configuration of the C++ compiler used when compiling C++ sources for this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/>, <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/> and
<apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/> when the 'cpp' plugin is applied.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.NativeLibraryBinarySpec:flavor"><literal>flavor</literal></link></td><td><caution>Incubating</caution><para>The <apilink class="org.gradle.nativeplatform.Flavor"/> that this binary was built with.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.NativeLibraryBinarySpec:inputs"><literal>inputs</literal></link></td><td><caution>Incubating</caution><para>Returns all inputs of the binary. This includes source sets owned by the binary,
and other source sets created elsewhere (e.g. inherited from the binary's component).</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.NativeLibraryBinarySpec:libs"><literal>libs</literal></link></td><td><caution>Incubating</caution><para>The libraries that should be linked into this binary.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.NativeLibraryBinarySpec:linker"><literal>linker</literal></link></td><td><caution>Incubating</caution><para>The configuration of the linker used when linking this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/> and <apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/>.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.NativeLibraryBinarySpec:objcCompiler"><literal>objcCompiler</literal></link></td><td><caution>Incubating</caution><para>The configuration of the Objective-C compiler used when compiling Objective-C sources for this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/>, <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/> and
<apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/> when the 'objective-c' plugin is applied.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.NativeLibraryBinarySpec:objcppCompiler"><literal>objcppCompiler</literal></link></td><td><caution>Incubating</caution><para>The configuration of the Objective-C++ compiler used when compiling Objective-C++ sources for this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/>, <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/> and
<apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/> when the 'objective-cpp' plugin is applied.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.NativeLibraryBinarySpec:rcCompiler"><literal>rcCompiler</literal></link></td><td><caution>Incubating</caution><para>The configuration of the Resource compiler used when compiling resources for this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/>, <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/> and
<apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/> when the 'windows-resources' plugin is applied.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.NativeLibraryBinarySpec:sources"><literal>sources</literal></link></td><td><caution>Incubating</caution><para>The sources owned by this binary.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.NativeLibraryBinarySpec:staticLibArchiver"><literal>staticLibArchiver</literal></link></td><td><caution>Incubating</caution><para>The configuration of the static library archiver used when creating this binary.

Valid for <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/>.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.NativeLibraryBinarySpec:targetPlatform"><literal>targetPlatform</literal></link></td><td><caution>Incubating</caution><para>The <apilink class="org.gradle.nativeplatform.platform.NativePlatform"/> that this binary is targeted to run on.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.NativeLibraryBinarySpec:tasks"><literal>tasks</literal></link></td><td><caution>Incubating</caution><para>The set of tasks associated with this binary.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.NativeLibraryBinarySpec:toolChain"><literal>toolChain</literal></link></td><td><caution>Incubating</caution><para>The <apilink class="org.gradle.nativeplatform.toolchain.NativeToolChain"/> that will be used to build this binary.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - NativeLibraryBinarySpec</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.nativeplatform.NativeLibraryBinarySpec:lib(java.lang.Object)">lib</link>(library)</literal></td><td><caution>Incubating</caution><para>Adds a library as input to this binary.
</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.nativeplatform.NativeLibraryBinarySpec:assembler" role="detail"><title><apilink class="org.gradle.nativeplatform.Tool"/> <literal>assembler</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The configuration of the assembler used when compiling assembly sources this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/>, <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/> and
<apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/> when the 'assembler' plugin is applied.</para></section><section id="org.gradle.nativeplatform.NativeLibraryBinarySpec:buildType" role="detail"><title><apilink class="org.gradle.nativeplatform.BuildType"/> <literal>buildType</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The <apilink class="org.gradle.nativeplatform.BuildType"/> used to construct this binary.</para></section><section id="org.gradle.nativeplatform.NativeLibraryBinarySpec:buildable" role="detail"><title><classname>boolean</classname> <literal>buildable</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Can this binary be built in the current environment?</para></section><section id="org.gradle.nativeplatform.NativeLibraryBinarySpec:cCompiler" role="detail"><title><apilink class="org.gradle.nativeplatform.PreprocessingTool"/> <literal>cCompiler</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The configuration of the C compiler used when compiling C sources for this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/>, <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/> and
<apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/> when the 'c' plugin is applied.</para></section><section id="org.gradle.nativeplatform.NativeLibraryBinarySpec:component" role="detail"><title><apilink class="org.gradle.nativeplatform.NativeComponentSpec"/> <literal>component</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The component that this binary was built from.</para></section><section id="org.gradle.nativeplatform.NativeLibraryBinarySpec:cppCompiler" role="detail"><title><apilink class="org.gradle.nativeplatform.PreprocessingTool"/> <literal>cppCompiler</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The configuration of the C++ compiler used when compiling C++ sources for this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/>, <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/> and
<apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/> when the 'cpp' plugin is applied.</para></section><section id="org.gradle.nativeplatform.NativeLibraryBinarySpec:flavor" role="detail"><title><apilink class="org.gradle.nativeplatform.Flavor"/> <literal>flavor</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The <apilink class="org.gradle.nativeplatform.Flavor"/> that this binary was built with.</para></section><section id="org.gradle.nativeplatform.NativeLibraryBinarySpec:inputs" role="detail"><title><classname><apilink class="org.gradle.api.DomainObjectSet"/>&lt;<apilink class="org.gradle.language.base.LanguageSourceSet"/>&gt;</classname> <literal>inputs</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Returns all inputs of the binary. This includes source sets owned by the binary,
and other source sets created elsewhere (e.g. inherited from the binary's component).</para></section><section id="org.gradle.nativeplatform.NativeLibraryBinarySpec:libs" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Collection.html"><classname>Collection</classname></ulink>&lt;<apilink class="org.gradle.nativeplatform.NativeDependencySet"/>&gt;</classname> <literal>libs</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The libraries that should be linked into this binary.</para></section><section id="org.gradle.nativeplatform.NativeLibraryBinarySpec:linker" role="detail"><title><apilink class="org.gradle.nativeplatform.Tool"/> <literal>linker</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The configuration of the linker used when linking this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/> and <apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/>.</para></section><section id="org.gradle.nativeplatform.NativeLibraryBinarySpec:objcCompiler" role="detail"><title><apilink class="org.gradle.nativeplatform.PreprocessingTool"/> <literal>objcCompiler</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The configuration of the Objective-C compiler used when compiling Objective-C sources for this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/>, <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/> and
<apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/> when the 'objective-c' plugin is applied.</para></section><section id="org.gradle.nativeplatform.NativeLibraryBinarySpec:objcppCompiler" role="detail"><title><apilink class="org.gradle.nativeplatform.PreprocessingTool"/> <literal>objcppCompiler</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The configuration of the Objective-C++ compiler used when compiling Objective-C++ sources for this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/>, <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/> and
<apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/> when the 'objective-cpp' plugin is applied.</para></section><section id="org.gradle.nativeplatform.NativeLibraryBinarySpec:rcCompiler" role="detail"><title><apilink class="org.gradle.nativeplatform.PreprocessingTool"/> <literal>rcCompiler</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The configuration of the Resource compiler used when compiling resources for this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/>, <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/> and
<apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/> when the 'windows-resources' plugin is applied.</para></section><section id="org.gradle.nativeplatform.NativeLibraryBinarySpec:sources" role="detail"><title><classname><apilink class="org.gradle.model.ModelMap"/>&lt;<apilink class="org.gradle.language.base.LanguageSourceSet"/>&gt;</classname> <literal>sources</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The sources owned by this binary.</para></section><section id="org.gradle.nativeplatform.NativeLibraryBinarySpec:staticLibArchiver" role="detail"><title><apilink class="org.gradle.nativeplatform.Tool"/> <literal>staticLibArchiver</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The configuration of the static library archiver used when creating this binary.

Valid for <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/>.</para></section><section id="org.gradle.nativeplatform.NativeLibraryBinarySpec:targetPlatform" role="detail"><title><apilink class="org.gradle.nativeplatform.platform.NativePlatform"/> <literal>targetPlatform</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The <apilink class="org.gradle.nativeplatform.platform.NativePlatform"/> that this binary is targeted to run on.</para></section><section id="org.gradle.nativeplatform.NativeLibraryBinarySpec:tasks" role="detail"><title><apilink class="org.gradle.platform.base.BinaryTasksCollection"/> <literal>tasks</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The set of tasks associated with this binary.</para></section><section id="org.gradle.nativeplatform.NativeLibraryBinarySpec:toolChain" role="detail"><title><apilink class="org.gradle.nativeplatform.toolchain.NativeToolChain"/> <literal>toolChain</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The <apilink class="org.gradle.nativeplatform.toolchain.NativeToolChain"/> that will be used to build this binary.</para></section></section><section><title>Method details</title><section id="org.gradle.nativeplatform.NativeLibraryBinarySpec:lib(java.lang.Object)" role="detail"><title><classname>void</classname> <literal>lib</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> library)</title><caution><para>Note: This method is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Adds a library as input to this binary.
</para><para>
This method accepts the following types:

</para><itemizedlist><listitem>A <apilink class="org.gradle.nativeplatform.NativeLibrarySpec"/></listitem><listitem>A <apilink class="org.gradle.nativeplatform.NativeDependencySet"/></listitem><listitem>A <ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink> containing the library selector.</listitem></itemizedlist><para>

The Map notation supports the following String attributes:

</para><itemizedlist><listitem>project: the path to the project containing the library (optional, defaults to current project)</listitem><listitem>library: the name of the library (required)</listitem><listitem>linkage: the library linkage required ['shared'/'static'] (optional, defaults to 'shared')</listitem></itemizedlist></section></section></chapter><chapter id="org.gradle.nativeplatform.SharedLibraryBinarySpec"><title>SharedLibraryBinarySpec</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec" style="javadoc"/></seg></seglistitem></segmentedlist><caution><para>Note: This class is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>A shared library binary built by Gradle for a native library.</para><section><title>Properties</title><table><title>Properties - SharedLibraryBinarySpec</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.nativeplatform.SharedLibraryBinarySpec:assembler"><literal>assembler</literal></link></td><td><caution>Incubating</caution><para>The configuration of the assembler used when compiling assembly sources this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/>, <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/> and
<apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/> when the 'assembler' plugin is applied.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.SharedLibraryBinarySpec:buildType"><literal>buildType</literal></link></td><td><caution>Incubating</caution><para>The <apilink class="org.gradle.nativeplatform.BuildType"/> used to construct this binary.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.SharedLibraryBinarySpec:buildable"><literal>buildable</literal></link></td><td><caution>Incubating</caution><para>Can this binary be built in the current environment?</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.SharedLibraryBinarySpec:cCompiler"><literal>cCompiler</literal></link></td><td><caution>Incubating</caution><para>The configuration of the C compiler used when compiling C sources for this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/>, <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/> and
<apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/> when the 'c' plugin is applied.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.SharedLibraryBinarySpec:component"><literal>component</literal></link></td><td><caution>Incubating</caution><para>The component that this binary was built from.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.SharedLibraryBinarySpec:cppCompiler"><literal>cppCompiler</literal></link></td><td><caution>Incubating</caution><para>The configuration of the C++ compiler used when compiling C++ sources for this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/>, <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/> and
<apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/> when the 'cpp' plugin is applied.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.SharedLibraryBinarySpec:flavor"><literal>flavor</literal></link></td><td><caution>Incubating</caution><para>The <apilink class="org.gradle.nativeplatform.Flavor"/> that this binary was built with.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.SharedLibraryBinarySpec:inputs"><literal>inputs</literal></link></td><td><caution>Incubating</caution><para>Returns all inputs of the binary. This includes source sets owned by the binary,
and other source sets created elsewhere (e.g. inherited from the binary's component).</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.SharedLibraryBinarySpec:libs"><literal>libs</literal></link></td><td><caution>Incubating</caution><para>The libraries that should be linked into this binary.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.SharedLibraryBinarySpec:linker"><literal>linker</literal></link></td><td><caution>Incubating</caution><para>The configuration of the linker used when linking this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/> and <apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/>.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.SharedLibraryBinarySpec:objcCompiler"><literal>objcCompiler</literal></link></td><td><caution>Incubating</caution><para>The configuration of the Objective-C compiler used when compiling Objective-C sources for this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/>, <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/> and
<apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/> when the 'objective-c' plugin is applied.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.SharedLibraryBinarySpec:objcppCompiler"><literal>objcppCompiler</literal></link></td><td><caution>Incubating</caution><para>The configuration of the Objective-C++ compiler used when compiling Objective-C++ sources for this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/>, <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/> and
<apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/> when the 'objective-cpp' plugin is applied.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.SharedLibraryBinarySpec:rcCompiler"><literal>rcCompiler</literal></link></td><td><caution>Incubating</caution><para>The configuration of the Resource compiler used when compiling resources for this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/>, <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/> and
<apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/> when the 'windows-resources' plugin is applied.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.SharedLibraryBinarySpec:sharedLibraryFile"><literal>sharedLibraryFile</literal></link></td><td><caution>Incubating</caution><para>The shared library file.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.SharedLibraryBinarySpec:sharedLibraryLinkFile"><literal>sharedLibraryLinkFile</literal></link></td><td><caution>Incubating</caution><para>The shared library link file.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.SharedLibraryBinarySpec:sources"><literal>sources</literal></link></td><td><caution>Incubating</caution><para>The sources owned by this binary.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.SharedLibraryBinarySpec:staticLibArchiver"><literal>staticLibArchiver</literal></link></td><td><caution>Incubating</caution><para>The configuration of the static library archiver used when creating this binary.

Valid for <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/>.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.SharedLibraryBinarySpec:targetPlatform"><literal>targetPlatform</literal></link></td><td><caution>Incubating</caution><para>The <apilink class="org.gradle.nativeplatform.platform.NativePlatform"/> that this binary is targeted to run on.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.SharedLibraryBinarySpec:tasks"><literal>tasks</literal></link></td><td><caution>Incubating</caution><para>The set of tasks associated with this binary.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.SharedLibraryBinarySpec:toolChain"><literal>toolChain</literal></link></td><td><caution>Incubating</caution><para>The <apilink class="org.gradle.nativeplatform.toolchain.NativeToolChain"/> that will be used to build this binary.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - SharedLibraryBinarySpec</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.nativeplatform.SharedLibraryBinarySpec:lib(java.lang.Object)">lib</link>(library)</literal></td><td><caution>Incubating</caution><para>Adds a library as input to this binary.
</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.nativeplatform.SharedLibraryBinarySpec:assembler" role="detail"><title><apilink class="org.gradle.nativeplatform.Tool"/> <literal>assembler</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The configuration of the assembler used when compiling assembly sources this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/>, <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/> and
<apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/> when the 'assembler' plugin is applied.</para></section><section id="org.gradle.nativeplatform.SharedLibraryBinarySpec:buildType" role="detail"><title><apilink class="org.gradle.nativeplatform.BuildType"/> <literal>buildType</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The <apilink class="org.gradle.nativeplatform.BuildType"/> used to construct this binary.</para></section><section id="org.gradle.nativeplatform.SharedLibraryBinarySpec:buildable" role="detail"><title><classname>boolean</classname> <literal>buildable</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Can this binary be built in the current environment?</para></section><section id="org.gradle.nativeplatform.SharedLibraryBinarySpec:cCompiler" role="detail"><title><apilink class="org.gradle.nativeplatform.PreprocessingTool"/> <literal>cCompiler</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The configuration of the C compiler used when compiling C sources for this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/>, <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/> and
<apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/> when the 'c' plugin is applied.</para></section><section id="org.gradle.nativeplatform.SharedLibraryBinarySpec:component" role="detail"><title><apilink class="org.gradle.nativeplatform.NativeComponentSpec"/> <literal>component</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The component that this binary was built from.</para></section><section id="org.gradle.nativeplatform.SharedLibraryBinarySpec:cppCompiler" role="detail"><title><apilink class="org.gradle.nativeplatform.PreprocessingTool"/> <literal>cppCompiler</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The configuration of the C++ compiler used when compiling C++ sources for this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/>, <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/> and
<apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/> when the 'cpp' plugin is applied.</para></section><section id="org.gradle.nativeplatform.SharedLibraryBinarySpec:flavor" role="detail"><title><apilink class="org.gradle.nativeplatform.Flavor"/> <literal>flavor</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The <apilink class="org.gradle.nativeplatform.Flavor"/> that this binary was built with.</para></section><section id="org.gradle.nativeplatform.SharedLibraryBinarySpec:inputs" role="detail"><title><classname><apilink class="org.gradle.api.DomainObjectSet"/>&lt;<apilink class="org.gradle.language.base.LanguageSourceSet"/>&gt;</classname> <literal>inputs</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Returns all inputs of the binary. This includes source sets owned by the binary,
and other source sets created elsewhere (e.g. inherited from the binary's component).</para></section><section id="org.gradle.nativeplatform.SharedLibraryBinarySpec:libs" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Collection.html"><classname>Collection</classname></ulink>&lt;<apilink class="org.gradle.nativeplatform.NativeDependencySet"/>&gt;</classname> <literal>libs</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The libraries that should be linked into this binary.</para></section><section id="org.gradle.nativeplatform.SharedLibraryBinarySpec:linker" role="detail"><title><apilink class="org.gradle.nativeplatform.Tool"/> <literal>linker</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The configuration of the linker used when linking this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/> and <apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/>.</para></section><section id="org.gradle.nativeplatform.SharedLibraryBinarySpec:objcCompiler" role="detail"><title><apilink class="org.gradle.nativeplatform.PreprocessingTool"/> <literal>objcCompiler</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The configuration of the Objective-C compiler used when compiling Objective-C sources for this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/>, <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/> and
<apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/> when the 'objective-c' plugin is applied.</para></section><section id="org.gradle.nativeplatform.SharedLibraryBinarySpec:objcppCompiler" role="detail"><title><apilink class="org.gradle.nativeplatform.PreprocessingTool"/> <literal>objcppCompiler</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The configuration of the Objective-C++ compiler used when compiling Objective-C++ sources for this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/>, <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/> and
<apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/> when the 'objective-cpp' plugin is applied.</para></section><section id="org.gradle.nativeplatform.SharedLibraryBinarySpec:rcCompiler" role="detail"><title><apilink class="org.gradle.nativeplatform.PreprocessingTool"/> <literal>rcCompiler</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The configuration of the Resource compiler used when compiling resources for this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/>, <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/> and
<apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/> when the 'windows-resources' plugin is applied.</para></section><section id="org.gradle.nativeplatform.SharedLibraryBinarySpec:sharedLibraryFile" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>sharedLibraryFile</literal></title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The shared library file.</para></section><section id="org.gradle.nativeplatform.SharedLibraryBinarySpec:sharedLibraryLinkFile" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>sharedLibraryLinkFile</literal></title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The shared library link file.</para></section><section id="org.gradle.nativeplatform.SharedLibraryBinarySpec:sources" role="detail"><title><classname><apilink class="org.gradle.model.ModelMap"/>&lt;<apilink class="org.gradle.language.base.LanguageSourceSet"/>&gt;</classname> <literal>sources</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The sources owned by this binary.</para></section><section id="org.gradle.nativeplatform.SharedLibraryBinarySpec:staticLibArchiver" role="detail"><title><apilink class="org.gradle.nativeplatform.Tool"/> <literal>staticLibArchiver</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The configuration of the static library archiver used when creating this binary.

Valid for <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/>.</para></section><section id="org.gradle.nativeplatform.SharedLibraryBinarySpec:targetPlatform" role="detail"><title><apilink class="org.gradle.nativeplatform.platform.NativePlatform"/> <literal>targetPlatform</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The <apilink class="org.gradle.nativeplatform.platform.NativePlatform"/> that this binary is targeted to run on.</para></section><section id="org.gradle.nativeplatform.SharedLibraryBinarySpec:tasks" role="detail"><title><apilink class="org.gradle.platform.base.BinaryTasksCollection"/> <literal>tasks</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The set of tasks associated with this binary.</para></section><section id="org.gradle.nativeplatform.SharedLibraryBinarySpec:toolChain" role="detail"><title><apilink class="org.gradle.nativeplatform.toolchain.NativeToolChain"/> <literal>toolChain</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The <apilink class="org.gradle.nativeplatform.toolchain.NativeToolChain"/> that will be used to build this binary.</para></section></section><section><title>Method details</title><section id="org.gradle.nativeplatform.SharedLibraryBinarySpec:lib(java.lang.Object)" role="detail"><title><classname>void</classname> <literal>lib</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> library)</title><caution><para>Note: This method is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Adds a library as input to this binary.
</para><para>
This method accepts the following types:

</para><itemizedlist><listitem>A <apilink class="org.gradle.nativeplatform.NativeLibrarySpec"/></listitem><listitem>A <apilink class="org.gradle.nativeplatform.NativeDependencySet"/></listitem><listitem>A <ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink> containing the library selector.</listitem></itemizedlist><para>

The Map notation supports the following String attributes:

</para><itemizedlist><listitem>project: the path to the project containing the library (optional, defaults to current project)</listitem><listitem>library: the name of the library (required)</listitem><listitem>linkage: the library linkage required ['shared'/'static'] (optional, defaults to 'shared')</listitem></itemizedlist></section></section></chapter><chapter id="org.gradle.nativeplatform.StaticLibraryBinarySpec"><title>StaticLibraryBinarySpec</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec" style="javadoc"/></seg></seglistitem></segmentedlist><caution><para>Note: This class is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>A static library binary built by Gradle for a native library.</para><section><title>Properties</title><table><title>Properties - StaticLibraryBinarySpec</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.nativeplatform.StaticLibraryBinarySpec:assembler"><literal>assembler</literal></link></td><td><caution>Incubating</caution><para>The configuration of the assembler used when compiling assembly sources this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/>, <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/> and
<apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/> when the 'assembler' plugin is applied.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.StaticLibraryBinarySpec:buildType"><literal>buildType</literal></link></td><td><caution>Incubating</caution><para>The <apilink class="org.gradle.nativeplatform.BuildType"/> used to construct this binary.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.StaticLibraryBinarySpec:buildable"><literal>buildable</literal></link></td><td><caution>Incubating</caution><para>Can this binary be built in the current environment?</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.StaticLibraryBinarySpec:cCompiler"><literal>cCompiler</literal></link></td><td><caution>Incubating</caution><para>The configuration of the C compiler used when compiling C sources for this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/>, <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/> and
<apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/> when the 'c' plugin is applied.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.StaticLibraryBinarySpec:component"><literal>component</literal></link></td><td><caution>Incubating</caution><para>The component that this binary was built from.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.StaticLibraryBinarySpec:cppCompiler"><literal>cppCompiler</literal></link></td><td><caution>Incubating</caution><para>The configuration of the C++ compiler used when compiling C++ sources for this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/>, <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/> and
<apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/> when the 'cpp' plugin is applied.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.StaticLibraryBinarySpec:flavor"><literal>flavor</literal></link></td><td><caution>Incubating</caution><para>The <apilink class="org.gradle.nativeplatform.Flavor"/> that this binary was built with.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.StaticLibraryBinarySpec:inputs"><literal>inputs</literal></link></td><td><caution>Incubating</caution><para>Returns all inputs of the binary. This includes source sets owned by the binary,
and other source sets created elsewhere (e.g. inherited from the binary's component).</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.StaticLibraryBinarySpec:libs"><literal>libs</literal></link></td><td><caution>Incubating</caution><para>The libraries that should be linked into this binary.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.StaticLibraryBinarySpec:linker"><literal>linker</literal></link></td><td><caution>Incubating</caution><para>The configuration of the linker used when linking this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/> and <apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/>.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.StaticLibraryBinarySpec:objcCompiler"><literal>objcCompiler</literal></link></td><td><caution>Incubating</caution><para>The configuration of the Objective-C compiler used when compiling Objective-C sources for this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/>, <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/> and
<apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/> when the 'objective-c' plugin is applied.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.StaticLibraryBinarySpec:objcppCompiler"><literal>objcppCompiler</literal></link></td><td><caution>Incubating</caution><para>The configuration of the Objective-C++ compiler used when compiling Objective-C++ sources for this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/>, <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/> and
<apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/> when the 'objective-cpp' plugin is applied.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.StaticLibraryBinarySpec:rcCompiler"><literal>rcCompiler</literal></link></td><td><caution>Incubating</caution><para>The configuration of the Resource compiler used when compiling resources for this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/>, <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/> and
<apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/> when the 'windows-resources' plugin is applied.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.StaticLibraryBinarySpec:sources"><literal>sources</literal></link></td><td><caution>Incubating</caution><para>The sources owned by this binary.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.StaticLibraryBinarySpec:staticLibArchiver"><literal>staticLibArchiver</literal></link></td><td><caution>Incubating</caution><para>The configuration of the static library archiver used when creating this binary.

Valid for <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/>.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.StaticLibraryBinarySpec:staticLibraryFile"><literal>staticLibraryFile</literal></link></td><td><caution>Incubating</caution><para>The static library file.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.StaticLibraryBinarySpec:targetPlatform"><literal>targetPlatform</literal></link></td><td><caution>Incubating</caution><para>The <apilink class="org.gradle.nativeplatform.platform.NativePlatform"/> that this binary is targeted to run on.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.StaticLibraryBinarySpec:tasks"><literal>tasks</literal></link></td><td><caution>Incubating</caution><para>The set of tasks associated with this binary.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.StaticLibraryBinarySpec:toolChain"><literal>toolChain</literal></link></td><td><caution>Incubating</caution><para>The <apilink class="org.gradle.nativeplatform.toolchain.NativeToolChain"/> that will be used to build this binary.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - StaticLibraryBinarySpec</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.nativeplatform.StaticLibraryBinarySpec:lib(java.lang.Object)">lib</link>(library)</literal></td><td><caution>Incubating</caution><para>Adds a library as input to this binary.
</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.nativeplatform.StaticLibraryBinarySpec:assembler" role="detail"><title><apilink class="org.gradle.nativeplatform.Tool"/> <literal>assembler</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The configuration of the assembler used when compiling assembly sources this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/>, <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/> and
<apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/> when the 'assembler' plugin is applied.</para></section><section id="org.gradle.nativeplatform.StaticLibraryBinarySpec:buildType" role="detail"><title><apilink class="org.gradle.nativeplatform.BuildType"/> <literal>buildType</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The <apilink class="org.gradle.nativeplatform.BuildType"/> used to construct this binary.</para></section><section id="org.gradle.nativeplatform.StaticLibraryBinarySpec:buildable" role="detail"><title><classname>boolean</classname> <literal>buildable</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Can this binary be built in the current environment?</para></section><section id="org.gradle.nativeplatform.StaticLibraryBinarySpec:cCompiler" role="detail"><title><apilink class="org.gradle.nativeplatform.PreprocessingTool"/> <literal>cCompiler</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The configuration of the C compiler used when compiling C sources for this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/>, <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/> and
<apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/> when the 'c' plugin is applied.</para></section><section id="org.gradle.nativeplatform.StaticLibraryBinarySpec:component" role="detail"><title><apilink class="org.gradle.nativeplatform.NativeComponentSpec"/> <literal>component</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The component that this binary was built from.</para></section><section id="org.gradle.nativeplatform.StaticLibraryBinarySpec:cppCompiler" role="detail"><title><apilink class="org.gradle.nativeplatform.PreprocessingTool"/> <literal>cppCompiler</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The configuration of the C++ compiler used when compiling C++ sources for this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/>, <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/> and
<apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/> when the 'cpp' plugin is applied.</para></section><section id="org.gradle.nativeplatform.StaticLibraryBinarySpec:flavor" role="detail"><title><apilink class="org.gradle.nativeplatform.Flavor"/> <literal>flavor</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The <apilink class="org.gradle.nativeplatform.Flavor"/> that this binary was built with.</para></section><section id="org.gradle.nativeplatform.StaticLibraryBinarySpec:inputs" role="detail"><title><classname><apilink class="org.gradle.api.DomainObjectSet"/>&lt;<apilink class="org.gradle.language.base.LanguageSourceSet"/>&gt;</classname> <literal>inputs</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Returns all inputs of the binary. This includes source sets owned by the binary,
and other source sets created elsewhere (e.g. inherited from the binary's component).</para></section><section id="org.gradle.nativeplatform.StaticLibraryBinarySpec:libs" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Collection.html"><classname>Collection</classname></ulink>&lt;<apilink class="org.gradle.nativeplatform.NativeDependencySet"/>&gt;</classname> <literal>libs</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The libraries that should be linked into this binary.</para></section><section id="org.gradle.nativeplatform.StaticLibraryBinarySpec:linker" role="detail"><title><apilink class="org.gradle.nativeplatform.Tool"/> <literal>linker</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The configuration of the linker used when linking this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/> and <apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/>.</para></section><section id="org.gradle.nativeplatform.StaticLibraryBinarySpec:objcCompiler" role="detail"><title><apilink class="org.gradle.nativeplatform.PreprocessingTool"/> <literal>objcCompiler</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The configuration of the Objective-C compiler used when compiling Objective-C sources for this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/>, <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/> and
<apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/> when the 'objective-c' plugin is applied.</para></section><section id="org.gradle.nativeplatform.StaticLibraryBinarySpec:objcppCompiler" role="detail"><title><apilink class="org.gradle.nativeplatform.PreprocessingTool"/> <literal>objcppCompiler</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The configuration of the Objective-C++ compiler used when compiling Objective-C++ sources for this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/>, <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/> and
<apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/> when the 'objective-cpp' plugin is applied.</para></section><section id="org.gradle.nativeplatform.StaticLibraryBinarySpec:rcCompiler" role="detail"><title><apilink class="org.gradle.nativeplatform.PreprocessingTool"/> <literal>rcCompiler</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The configuration of the Resource compiler used when compiling resources for this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/>, <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/> and
<apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/> when the 'windows-resources' plugin is applied.</para></section><section id="org.gradle.nativeplatform.StaticLibraryBinarySpec:sources" role="detail"><title><classname><apilink class="org.gradle.model.ModelMap"/>&lt;<apilink class="org.gradle.language.base.LanguageSourceSet"/>&gt;</classname> <literal>sources</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The sources owned by this binary.</para></section><section id="org.gradle.nativeplatform.StaticLibraryBinarySpec:staticLibArchiver" role="detail"><title><apilink class="org.gradle.nativeplatform.Tool"/> <literal>staticLibArchiver</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The configuration of the static library archiver used when creating this binary.

Valid for <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/>.</para></section><section id="org.gradle.nativeplatform.StaticLibraryBinarySpec:staticLibraryFile" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>staticLibraryFile</literal></title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The static library file.</para></section><section id="org.gradle.nativeplatform.StaticLibraryBinarySpec:targetPlatform" role="detail"><title><apilink class="org.gradle.nativeplatform.platform.NativePlatform"/> <literal>targetPlatform</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The <apilink class="org.gradle.nativeplatform.platform.NativePlatform"/> that this binary is targeted to run on.</para></section><section id="org.gradle.nativeplatform.StaticLibraryBinarySpec:tasks" role="detail"><title><apilink class="org.gradle.platform.base.BinaryTasksCollection"/> <literal>tasks</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The set of tasks associated with this binary.</para></section><section id="org.gradle.nativeplatform.StaticLibraryBinarySpec:toolChain" role="detail"><title><apilink class="org.gradle.nativeplatform.toolchain.NativeToolChain"/> <literal>toolChain</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The <apilink class="org.gradle.nativeplatform.toolchain.NativeToolChain"/> that will be used to build this binary.</para></section></section><section><title>Method details</title><section id="org.gradle.nativeplatform.StaticLibraryBinarySpec:lib(java.lang.Object)" role="detail"><title><classname>void</classname> <literal>lib</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> library)</title><caution><para>Note: This method is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Adds a library as input to this binary.
</para><para>
This method accepts the following types:

</para><itemizedlist><listitem>A <apilink class="org.gradle.nativeplatform.NativeLibrarySpec"/></listitem><listitem>A <apilink class="org.gradle.nativeplatform.NativeDependencySet"/></listitem><listitem>A <ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink> containing the library selector.</listitem></itemizedlist><para>

The Map notation supports the following String attributes:

</para><itemizedlist><listitem>project: the path to the project containing the library (optional, defaults to current project)</listitem><listitem>library: the name of the library (required)</listitem><listitem>linkage: the library linkage required ['shared'/'static'] (optional, defaults to 'shared')</listitem></itemizedlist></section></section></chapter><chapter id="org.gradle.nativeplatform.test.NativeTestSuiteBinarySpec"><title>NativeTestSuiteBinarySpec</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.nativeplatform.test.NativeTestSuiteBinarySpec" style="javadoc"/></seg></seglistitem></segmentedlist><segmentedlist><segtitle>Known Subtypes</segtitle><seglistitem><seg><simplelist columns="1" type="vert"><member><apilink class="org.gradle.nativeplatform.test.cunit.CUnitTestSuiteBinarySpec"/></member><member><apilink class="org.gradle.nativeplatform.test.googletest.GoogleTestTestSuiteBinarySpec"/></member></simplelist></seg></seglistitem></segmentedlist><caution><para>Note: This class is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>An executable which runs a suite of tests.</para><section><title>Properties</title><table><title>Properties - NativeTestSuiteBinarySpec</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.nativeplatform.test.NativeTestSuiteBinarySpec:assembler"><literal>assembler</literal></link></td><td><caution>Incubating</caution><para>The configuration of the assembler used when compiling assembly sources this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/>, <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/> and
<apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/> when the 'assembler' plugin is applied.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.test.NativeTestSuiteBinarySpec:buildType"><literal>buildType</literal></link></td><td><caution>Incubating</caution><para>The <apilink class="org.gradle.nativeplatform.BuildType"/> used to construct this binary.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.test.NativeTestSuiteBinarySpec:buildable"><literal>buildable</literal></link></td><td><caution>Incubating</caution><para>Can this binary be built in the current environment?</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.test.NativeTestSuiteBinarySpec:cCompiler"><literal>cCompiler</literal></link></td><td><caution>Incubating</caution><para>The configuration of the C compiler used when compiling C sources for this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/>, <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/> and
<apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/> when the 'c' plugin is applied.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.test.NativeTestSuiteBinarySpec:component"><literal>component</literal></link></td><td><caution>Incubating</caution><para>The component that this binary was built from.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.test.NativeTestSuiteBinarySpec:cppCompiler"><literal>cppCompiler</literal></link></td><td><caution>Incubating</caution><para>The configuration of the C++ compiler used when compiling C++ sources for this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/>, <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/> and
<apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/> when the 'cpp' plugin is applied.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.test.NativeTestSuiteBinarySpec:flavor"><literal>flavor</literal></link></td><td><caution>Incubating</caution><para>The <apilink class="org.gradle.nativeplatform.Flavor"/> that this binary was built with.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.test.NativeTestSuiteBinarySpec:inputs"><literal>inputs</literal></link></td><td><caution>Incubating</caution><para>Returns all inputs of the binary. This includes source sets owned by the binary,
and other source sets created elsewhere (e.g. inherited from the binary's component).</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.test.NativeTestSuiteBinarySpec:libs"><literal>libs</literal></link></td><td><caution>Incubating</caution><para>The libraries that should be linked into this binary.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.test.NativeTestSuiteBinarySpec:linker"><literal>linker</literal></link></td><td><caution>Incubating</caution><para>The configuration of the linker used when linking this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/> and <apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/>.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.test.NativeTestSuiteBinarySpec:objcCompiler"><literal>objcCompiler</literal></link></td><td><caution>Incubating</caution><para>The configuration of the Objective-C compiler used when compiling Objective-C sources for this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/>, <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/> and
<apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/> when the 'objective-c' plugin is applied.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.test.NativeTestSuiteBinarySpec:objcppCompiler"><literal>objcppCompiler</literal></link></td><td><caution>Incubating</caution><para>The configuration of the Objective-C++ compiler used when compiling Objective-C++ sources for this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/>, <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/> and
<apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/> when the 'objective-cpp' plugin is applied.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.test.NativeTestSuiteBinarySpec:rcCompiler"><literal>rcCompiler</literal></link></td><td><caution>Incubating</caution><para>The configuration of the Resource compiler used when compiling resources for this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/>, <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/> and
<apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/> when the 'windows-resources' plugin is applied.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.test.NativeTestSuiteBinarySpec:sources"><literal>sources</literal></link></td><td><caution>Incubating</caution><para>The sources owned by this binary.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.test.NativeTestSuiteBinarySpec:staticLibArchiver"><literal>staticLibArchiver</literal></link></td><td><caution>Incubating</caution><para>The configuration of the static library archiver used when creating this binary.

Valid for <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/>.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.test.NativeTestSuiteBinarySpec:targetPlatform"><literal>targetPlatform</literal></link></td><td><caution>Incubating</caution><para>The <apilink class="org.gradle.nativeplatform.platform.NativePlatform"/> that this binary is targeted to run on.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.test.NativeTestSuiteBinarySpec:tasks"><literal>tasks</literal></link></td><td><caution>Incubating</caution><para>The set of tasks associated with this binary.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.test.NativeTestSuiteBinarySpec:toolChain"><literal>toolChain</literal></link></td><td><caution>Incubating</caution><para>The <apilink class="org.gradle.nativeplatform.toolchain.NativeToolChain"/> that will be used to build this binary.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - NativeTestSuiteBinarySpec</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.nativeplatform.test.NativeTestSuiteBinarySpec:lib(java.lang.Object)">lib</link>(library)</literal></td><td><caution>Incubating</caution><para>Adds a library as input to this binary.
</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.nativeplatform.test.NativeTestSuiteBinarySpec:assembler" role="detail"><title><apilink class="org.gradle.nativeplatform.Tool"/> <literal>assembler</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The configuration of the assembler used when compiling assembly sources this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/>, <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/> and
<apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/> when the 'assembler' plugin is applied.</para></section><section id="org.gradle.nativeplatform.test.NativeTestSuiteBinarySpec:buildType" role="detail"><title><apilink class="org.gradle.nativeplatform.BuildType"/> <literal>buildType</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The <apilink class="org.gradle.nativeplatform.BuildType"/> used to construct this binary.</para></section><section id="org.gradle.nativeplatform.test.NativeTestSuiteBinarySpec:buildable" role="detail"><title><classname>boolean</classname> <literal>buildable</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Can this binary be built in the current environment?</para></section><section id="org.gradle.nativeplatform.test.NativeTestSuiteBinarySpec:cCompiler" role="detail"><title><apilink class="org.gradle.nativeplatform.PreprocessingTool"/> <literal>cCompiler</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The configuration of the C compiler used when compiling C sources for this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/>, <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/> and
<apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/> when the 'c' plugin is applied.</para></section><section id="org.gradle.nativeplatform.test.NativeTestSuiteBinarySpec:component" role="detail"><title><apilink class="org.gradle.nativeplatform.NativeComponentSpec"/> <literal>component</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The component that this binary was built from.</para></section><section id="org.gradle.nativeplatform.test.NativeTestSuiteBinarySpec:cppCompiler" role="detail"><title><apilink class="org.gradle.nativeplatform.PreprocessingTool"/> <literal>cppCompiler</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The configuration of the C++ compiler used when compiling C++ sources for this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/>, <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/> and
<apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/> when the 'cpp' plugin is applied.</para></section><section id="org.gradle.nativeplatform.test.NativeTestSuiteBinarySpec:flavor" role="detail"><title><apilink class="org.gradle.nativeplatform.Flavor"/> <literal>flavor</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The <apilink class="org.gradle.nativeplatform.Flavor"/> that this binary was built with.</para></section><section id="org.gradle.nativeplatform.test.NativeTestSuiteBinarySpec:inputs" role="detail"><title><classname><apilink class="org.gradle.api.DomainObjectSet"/>&lt;<apilink class="org.gradle.language.base.LanguageSourceSet"/>&gt;</classname> <literal>inputs</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Returns all inputs of the binary. This includes source sets owned by the binary,
and other source sets created elsewhere (e.g. inherited from the binary's component).</para></section><section id="org.gradle.nativeplatform.test.NativeTestSuiteBinarySpec:libs" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Collection.html"><classname>Collection</classname></ulink>&lt;<apilink class="org.gradle.nativeplatform.NativeDependencySet"/>&gt;</classname> <literal>libs</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The libraries that should be linked into this binary.</para></section><section id="org.gradle.nativeplatform.test.NativeTestSuiteBinarySpec:linker" role="detail"><title><apilink class="org.gradle.nativeplatform.Tool"/> <literal>linker</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The configuration of the linker used when linking this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/> and <apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/>.</para></section><section id="org.gradle.nativeplatform.test.NativeTestSuiteBinarySpec:objcCompiler" role="detail"><title><apilink class="org.gradle.nativeplatform.PreprocessingTool"/> <literal>objcCompiler</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The configuration of the Objective-C compiler used when compiling Objective-C sources for this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/>, <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/> and
<apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/> when the 'objective-c' plugin is applied.</para></section><section id="org.gradle.nativeplatform.test.NativeTestSuiteBinarySpec:objcppCompiler" role="detail"><title><apilink class="org.gradle.nativeplatform.PreprocessingTool"/> <literal>objcppCompiler</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The configuration of the Objective-C++ compiler used when compiling Objective-C++ sources for this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/>, <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/> and
<apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/> when the 'objective-cpp' plugin is applied.</para></section><section id="org.gradle.nativeplatform.test.NativeTestSuiteBinarySpec:rcCompiler" role="detail"><title><apilink class="org.gradle.nativeplatform.PreprocessingTool"/> <literal>rcCompiler</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The configuration of the Resource compiler used when compiling resources for this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/>, <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/> and
<apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/> when the 'windows-resources' plugin is applied.</para></section><section id="org.gradle.nativeplatform.test.NativeTestSuiteBinarySpec:sources" role="detail"><title><classname><apilink class="org.gradle.model.ModelMap"/>&lt;<apilink class="org.gradle.language.base.LanguageSourceSet"/>&gt;</classname> <literal>sources</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The sources owned by this binary.</para></section><section id="org.gradle.nativeplatform.test.NativeTestSuiteBinarySpec:staticLibArchiver" role="detail"><title><apilink class="org.gradle.nativeplatform.Tool"/> <literal>staticLibArchiver</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The configuration of the static library archiver used when creating this binary.

Valid for <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/>.</para></section><section id="org.gradle.nativeplatform.test.NativeTestSuiteBinarySpec:targetPlatform" role="detail"><title><apilink class="org.gradle.nativeplatform.platform.NativePlatform"/> <literal>targetPlatform</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The <apilink class="org.gradle.nativeplatform.platform.NativePlatform"/> that this binary is targeted to run on.</para></section><section id="org.gradle.nativeplatform.test.NativeTestSuiteBinarySpec:tasks" role="detail"><title><apilink class="org.gradle.platform.base.BinaryTasksCollection"/> <literal>tasks</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The set of tasks associated with this binary.</para></section><section id="org.gradle.nativeplatform.test.NativeTestSuiteBinarySpec:toolChain" role="detail"><title><apilink class="org.gradle.nativeplatform.toolchain.NativeToolChain"/> <literal>toolChain</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The <apilink class="org.gradle.nativeplatform.toolchain.NativeToolChain"/> that will be used to build this binary.</para></section></section><section><title>Method details</title><section id="org.gradle.nativeplatform.test.NativeTestSuiteBinarySpec:lib(java.lang.Object)" role="detail"><title><classname>void</classname> <literal>lib</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> library)</title><caution><para>Note: This method is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Adds a library as input to this binary.
</para><para>
This method accepts the following types:

</para><itemizedlist><listitem>A <apilink class="org.gradle.nativeplatform.NativeLibrarySpec"/></listitem><listitem>A <apilink class="org.gradle.nativeplatform.NativeDependencySet"/></listitem><listitem>A <ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink> containing the library selector.</listitem></itemizedlist><para>

The Map notation supports the following String attributes:

</para><itemizedlist><listitem>project: the path to the project containing the library (optional, defaults to current project)</listitem><listitem>library: the name of the library (required)</listitem><listitem>linkage: the library linkage required ['shared'/'static'] (optional, defaults to 'shared')</listitem></itemizedlist></section></section></chapter><chapter id="org.gradle.nativeplatform.test.cunit.CUnitTestSuiteBinarySpec"><title>CUnitTestSuiteBinarySpec</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.nativeplatform.test.cunit.CUnitTestSuiteBinarySpec" style="javadoc"/></seg></seglistitem></segmentedlist><caution><para>Note: This class is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>An executable which run a CUnit test suite.</para><section><title>Properties</title><table><title>Properties - CUnitTestSuiteBinarySpec</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.nativeplatform.test.cunit.CUnitTestSuiteBinarySpec:assembler"><literal>assembler</literal></link></td><td><caution>Incubating</caution><para>The configuration of the assembler used when compiling assembly sources this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/>, <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/> and
<apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/> when the 'assembler' plugin is applied.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.test.cunit.CUnitTestSuiteBinarySpec:buildType"><literal>buildType</literal></link></td><td><caution>Incubating</caution><para>The <apilink class="org.gradle.nativeplatform.BuildType"/> used to construct this binary.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.test.cunit.CUnitTestSuiteBinarySpec:buildable"><literal>buildable</literal></link></td><td><caution>Incubating</caution><para>Can this binary be built in the current environment?</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.test.cunit.CUnitTestSuiteBinarySpec:cCompiler"><literal>cCompiler</literal></link></td><td><caution>Incubating</caution><para>The configuration of the C compiler used when compiling C sources for this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/>, <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/> and
<apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/> when the 'c' plugin is applied.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.test.cunit.CUnitTestSuiteBinarySpec:component"><literal>component</literal></link></td><td><caution>Incubating</caution><para>The component that this binary was built from.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.test.cunit.CUnitTestSuiteBinarySpec:cppCompiler"><literal>cppCompiler</literal></link></td><td><caution>Incubating</caution><para>The configuration of the C++ compiler used when compiling C++ sources for this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/>, <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/> and
<apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/> when the 'cpp' plugin is applied.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.test.cunit.CUnitTestSuiteBinarySpec:flavor"><literal>flavor</literal></link></td><td><caution>Incubating</caution><para>The <apilink class="org.gradle.nativeplatform.Flavor"/> that this binary was built with.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.test.cunit.CUnitTestSuiteBinarySpec:inputs"><literal>inputs</literal></link></td><td><caution>Incubating</caution><para>Returns all inputs of the binary. This includes source sets owned by the binary,
and other source sets created elsewhere (e.g. inherited from the binary's component).</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.test.cunit.CUnitTestSuiteBinarySpec:libs"><literal>libs</literal></link></td><td><caution>Incubating</caution><para>The libraries that should be linked into this binary.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.test.cunit.CUnitTestSuiteBinarySpec:linker"><literal>linker</literal></link></td><td><caution>Incubating</caution><para>The configuration of the linker used when linking this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/> and <apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/>.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.test.cunit.CUnitTestSuiteBinarySpec:objcCompiler"><literal>objcCompiler</literal></link></td><td><caution>Incubating</caution><para>The configuration of the Objective-C compiler used when compiling Objective-C sources for this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/>, <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/> and
<apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/> when the 'objective-c' plugin is applied.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.test.cunit.CUnitTestSuiteBinarySpec:objcppCompiler"><literal>objcppCompiler</literal></link></td><td><caution>Incubating</caution><para>The configuration of the Objective-C++ compiler used when compiling Objective-C++ sources for this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/>, <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/> and
<apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/> when the 'objective-cpp' plugin is applied.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.test.cunit.CUnitTestSuiteBinarySpec:rcCompiler"><literal>rcCompiler</literal></link></td><td><caution>Incubating</caution><para>The configuration of the Resource compiler used when compiling resources for this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/>, <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/> and
<apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/> when the 'windows-resources' plugin is applied.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.test.cunit.CUnitTestSuiteBinarySpec:sources"><literal>sources</literal></link></td><td><caution>Incubating</caution><para>The sources owned by this binary.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.test.cunit.CUnitTestSuiteBinarySpec:staticLibArchiver"><literal>staticLibArchiver</literal></link></td><td><caution>Incubating</caution><para>The configuration of the static library archiver used when creating this binary.

Valid for <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/>.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.test.cunit.CUnitTestSuiteBinarySpec:targetPlatform"><literal>targetPlatform</literal></link></td><td><caution>Incubating</caution><para>The <apilink class="org.gradle.nativeplatform.platform.NativePlatform"/> that this binary is targeted to run on.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.test.cunit.CUnitTestSuiteBinarySpec:tasks"><literal>tasks</literal></link></td><td><caution>Incubating</caution><para>The set of tasks associated with this binary.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.test.cunit.CUnitTestSuiteBinarySpec:toolChain"><literal>toolChain</literal></link></td><td><caution>Incubating</caution><para>The <apilink class="org.gradle.nativeplatform.toolchain.NativeToolChain"/> that will be used to build this binary.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - CUnitTestSuiteBinarySpec</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.nativeplatform.test.cunit.CUnitTestSuiteBinarySpec:lib(java.lang.Object)">lib</link>(library)</literal></td><td><caution>Incubating</caution><para>Adds a library as input to this binary.
</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.nativeplatform.test.cunit.CUnitTestSuiteBinarySpec:assembler" role="detail"><title><apilink class="org.gradle.nativeplatform.Tool"/> <literal>assembler</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The configuration of the assembler used when compiling assembly sources this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/>, <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/> and
<apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/> when the 'assembler' plugin is applied.</para></section><section id="org.gradle.nativeplatform.test.cunit.CUnitTestSuiteBinarySpec:buildType" role="detail"><title><apilink class="org.gradle.nativeplatform.BuildType"/> <literal>buildType</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The <apilink class="org.gradle.nativeplatform.BuildType"/> used to construct this binary.</para></section><section id="org.gradle.nativeplatform.test.cunit.CUnitTestSuiteBinarySpec:buildable" role="detail"><title><classname>boolean</classname> <literal>buildable</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Can this binary be built in the current environment?</para></section><section id="org.gradle.nativeplatform.test.cunit.CUnitTestSuiteBinarySpec:cCompiler" role="detail"><title><apilink class="org.gradle.nativeplatform.PreprocessingTool"/> <literal>cCompiler</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The configuration of the C compiler used when compiling C sources for this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/>, <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/> and
<apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/> when the 'c' plugin is applied.</para></section><section id="org.gradle.nativeplatform.test.cunit.CUnitTestSuiteBinarySpec:component" role="detail"><title><apilink class="org.gradle.nativeplatform.NativeComponentSpec"/> <literal>component</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The component that this binary was built from.</para></section><section id="org.gradle.nativeplatform.test.cunit.CUnitTestSuiteBinarySpec:cppCompiler" role="detail"><title><apilink class="org.gradle.nativeplatform.PreprocessingTool"/> <literal>cppCompiler</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The configuration of the C++ compiler used when compiling C++ sources for this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/>, <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/> and
<apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/> when the 'cpp' plugin is applied.</para></section><section id="org.gradle.nativeplatform.test.cunit.CUnitTestSuiteBinarySpec:flavor" role="detail"><title><apilink class="org.gradle.nativeplatform.Flavor"/> <literal>flavor</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The <apilink class="org.gradle.nativeplatform.Flavor"/> that this binary was built with.</para></section><section id="org.gradle.nativeplatform.test.cunit.CUnitTestSuiteBinarySpec:inputs" role="detail"><title><classname><apilink class="org.gradle.api.DomainObjectSet"/>&lt;<apilink class="org.gradle.language.base.LanguageSourceSet"/>&gt;</classname> <literal>inputs</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Returns all inputs of the binary. This includes source sets owned by the binary,
and other source sets created elsewhere (e.g. inherited from the binary's component).</para></section><section id="org.gradle.nativeplatform.test.cunit.CUnitTestSuiteBinarySpec:libs" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Collection.html"><classname>Collection</classname></ulink>&lt;<apilink class="org.gradle.nativeplatform.NativeDependencySet"/>&gt;</classname> <literal>libs</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The libraries that should be linked into this binary.</para></section><section id="org.gradle.nativeplatform.test.cunit.CUnitTestSuiteBinarySpec:linker" role="detail"><title><apilink class="org.gradle.nativeplatform.Tool"/> <literal>linker</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The configuration of the linker used when linking this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/> and <apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/>.</para></section><section id="org.gradle.nativeplatform.test.cunit.CUnitTestSuiteBinarySpec:objcCompiler" role="detail"><title><apilink class="org.gradle.nativeplatform.PreprocessingTool"/> <literal>objcCompiler</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The configuration of the Objective-C compiler used when compiling Objective-C sources for this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/>, <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/> and
<apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/> when the 'objective-c' plugin is applied.</para></section><section id="org.gradle.nativeplatform.test.cunit.CUnitTestSuiteBinarySpec:objcppCompiler" role="detail"><title><apilink class="org.gradle.nativeplatform.PreprocessingTool"/> <literal>objcppCompiler</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The configuration of the Objective-C++ compiler used when compiling Objective-C++ sources for this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/>, <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/> and
<apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/> when the 'objective-cpp' plugin is applied.</para></section><section id="org.gradle.nativeplatform.test.cunit.CUnitTestSuiteBinarySpec:rcCompiler" role="detail"><title><apilink class="org.gradle.nativeplatform.PreprocessingTool"/> <literal>rcCompiler</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The configuration of the Resource compiler used when compiling resources for this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/>, <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/> and
<apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/> when the 'windows-resources' plugin is applied.</para></section><section id="org.gradle.nativeplatform.test.cunit.CUnitTestSuiteBinarySpec:sources" role="detail"><title><classname><apilink class="org.gradle.model.ModelMap"/>&lt;<apilink class="org.gradle.language.base.LanguageSourceSet"/>&gt;</classname> <literal>sources</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The sources owned by this binary.</para></section><section id="org.gradle.nativeplatform.test.cunit.CUnitTestSuiteBinarySpec:staticLibArchiver" role="detail"><title><apilink class="org.gradle.nativeplatform.Tool"/> <literal>staticLibArchiver</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The configuration of the static library archiver used when creating this binary.

Valid for <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/>.</para></section><section id="org.gradle.nativeplatform.test.cunit.CUnitTestSuiteBinarySpec:targetPlatform" role="detail"><title><apilink class="org.gradle.nativeplatform.platform.NativePlatform"/> <literal>targetPlatform</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The <apilink class="org.gradle.nativeplatform.platform.NativePlatform"/> that this binary is targeted to run on.</para></section><section id="org.gradle.nativeplatform.test.cunit.CUnitTestSuiteBinarySpec:tasks" role="detail"><title><apilink class="org.gradle.platform.base.BinaryTasksCollection"/> <literal>tasks</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The set of tasks associated with this binary.</para></section><section id="org.gradle.nativeplatform.test.cunit.CUnitTestSuiteBinarySpec:toolChain" role="detail"><title><apilink class="org.gradle.nativeplatform.toolchain.NativeToolChain"/> <literal>toolChain</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The <apilink class="org.gradle.nativeplatform.toolchain.NativeToolChain"/> that will be used to build this binary.</para></section></section><section><title>Method details</title><section id="org.gradle.nativeplatform.test.cunit.CUnitTestSuiteBinarySpec:lib(java.lang.Object)" role="detail"><title><classname>void</classname> <literal>lib</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> library)</title><caution><para>Note: This method is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Adds a library as input to this binary.
</para><para>
This method accepts the following types:

</para><itemizedlist><listitem>A <apilink class="org.gradle.nativeplatform.NativeLibrarySpec"/></listitem><listitem>A <apilink class="org.gradle.nativeplatform.NativeDependencySet"/></listitem><listitem>A <ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink> containing the library selector.</listitem></itemizedlist><para>

The Map notation supports the following String attributes:

</para><itemizedlist><listitem>project: the path to the project containing the library (optional, defaults to current project)</listitem><listitem>library: the name of the library (required)</listitem><listitem>linkage: the library linkage required ['shared'/'static'] (optional, defaults to 'shared')</listitem></itemizedlist></section></section></chapter><chapter id="org.gradle.nativeplatform.test.googletest.GoogleTestTestSuiteBinarySpec"><title>GoogleTestTestSuiteBinarySpec</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.nativeplatform.test.googletest.GoogleTestTestSuiteBinarySpec" style="javadoc"/></seg></seglistitem></segmentedlist><caution><para>Note: This class is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>An executable which run a Google Test test suite.</para><section><title>Properties</title><table><title>Properties - GoogleTestTestSuiteBinarySpec</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.nativeplatform.test.googletest.GoogleTestTestSuiteBinarySpec:assembler"><literal>assembler</literal></link></td><td><caution>Incubating</caution><para>The configuration of the assembler used when compiling assembly sources this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/>, <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/> and
<apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/> when the 'assembler' plugin is applied.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.test.googletest.GoogleTestTestSuiteBinarySpec:buildType"><literal>buildType</literal></link></td><td><caution>Incubating</caution><para>The <apilink class="org.gradle.nativeplatform.BuildType"/> used to construct this binary.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.test.googletest.GoogleTestTestSuiteBinarySpec:buildable"><literal>buildable</literal></link></td><td><caution>Incubating</caution><para>Can this binary be built in the current environment?</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.test.googletest.GoogleTestTestSuiteBinarySpec:cCompiler"><literal>cCompiler</literal></link></td><td><caution>Incubating</caution><para>The configuration of the C compiler used when compiling C sources for this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/>, <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/> and
<apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/> when the 'c' plugin is applied.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.test.googletest.GoogleTestTestSuiteBinarySpec:component"><literal>component</literal></link></td><td><caution>Incubating</caution><para>The component that this binary was built from.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.test.googletest.GoogleTestTestSuiteBinarySpec:cppCompiler"><literal>cppCompiler</literal></link></td><td><caution>Incubating</caution><para>The configuration of the C++ compiler used when compiling C++ sources for this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/>, <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/> and
<apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/> when the 'cpp' plugin is applied.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.test.googletest.GoogleTestTestSuiteBinarySpec:flavor"><literal>flavor</literal></link></td><td><caution>Incubating</caution><para>The <apilink class="org.gradle.nativeplatform.Flavor"/> that this binary was built with.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.test.googletest.GoogleTestTestSuiteBinarySpec:inputs"><literal>inputs</literal></link></td><td><caution>Incubating</caution><para>Returns all inputs of the binary. This includes source sets owned by the binary,
and other source sets created elsewhere (e.g. inherited from the binary's component).</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.test.googletest.GoogleTestTestSuiteBinarySpec:libs"><literal>libs</literal></link></td><td><caution>Incubating</caution><para>The libraries that should be linked into this binary.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.test.googletest.GoogleTestTestSuiteBinarySpec:linker"><literal>linker</literal></link></td><td><caution>Incubating</caution><para>The configuration of the linker used when linking this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/> and <apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/>.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.test.googletest.GoogleTestTestSuiteBinarySpec:objcCompiler"><literal>objcCompiler</literal></link></td><td><caution>Incubating</caution><para>The configuration of the Objective-C compiler used when compiling Objective-C sources for this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/>, <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/> and
<apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/> when the 'objective-c' plugin is applied.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.test.googletest.GoogleTestTestSuiteBinarySpec:objcppCompiler"><literal>objcppCompiler</literal></link></td><td><caution>Incubating</caution><para>The configuration of the Objective-C++ compiler used when compiling Objective-C++ sources for this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/>, <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/> and
<apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/> when the 'objective-cpp' plugin is applied.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.test.googletest.GoogleTestTestSuiteBinarySpec:rcCompiler"><literal>rcCompiler</literal></link></td><td><caution>Incubating</caution><para>The configuration of the Resource compiler used when compiling resources for this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/>, <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/> and
<apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/> when the 'windows-resources' plugin is applied.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.test.googletest.GoogleTestTestSuiteBinarySpec:sources"><literal>sources</literal></link></td><td><caution>Incubating</caution><para>The sources owned by this binary.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.test.googletest.GoogleTestTestSuiteBinarySpec:staticLibArchiver"><literal>staticLibArchiver</literal></link></td><td><caution>Incubating</caution><para>The configuration of the static library archiver used when creating this binary.

Valid for <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/>.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.test.googletest.GoogleTestTestSuiteBinarySpec:targetPlatform"><literal>targetPlatform</literal></link></td><td><caution>Incubating</caution><para>The <apilink class="org.gradle.nativeplatform.platform.NativePlatform"/> that this binary is targeted to run on.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.test.googletest.GoogleTestTestSuiteBinarySpec:tasks"><literal>tasks</literal></link></td><td><caution>Incubating</caution><para>The set of tasks associated with this binary.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.test.googletest.GoogleTestTestSuiteBinarySpec:toolChain"><literal>toolChain</literal></link></td><td><caution>Incubating</caution><para>The <apilink class="org.gradle.nativeplatform.toolchain.NativeToolChain"/> that will be used to build this binary.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - GoogleTestTestSuiteBinarySpec</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.nativeplatform.test.googletest.GoogleTestTestSuiteBinarySpec:lib(java.lang.Object)">lib</link>(library)</literal></td><td><caution>Incubating</caution><para>Adds a library as input to this binary.
</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.nativeplatform.test.googletest.GoogleTestTestSuiteBinarySpec:assembler" role="detail"><title><apilink class="org.gradle.nativeplatform.Tool"/> <literal>assembler</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The configuration of the assembler used when compiling assembly sources this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/>, <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/> and
<apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/> when the 'assembler' plugin is applied.</para></section><section id="org.gradle.nativeplatform.test.googletest.GoogleTestTestSuiteBinarySpec:buildType" role="detail"><title><apilink class="org.gradle.nativeplatform.BuildType"/> <literal>buildType</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The <apilink class="org.gradle.nativeplatform.BuildType"/> used to construct this binary.</para></section><section id="org.gradle.nativeplatform.test.googletest.GoogleTestTestSuiteBinarySpec:buildable" role="detail"><title><classname>boolean</classname> <literal>buildable</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Can this binary be built in the current environment?</para></section><section id="org.gradle.nativeplatform.test.googletest.GoogleTestTestSuiteBinarySpec:cCompiler" role="detail"><title><apilink class="org.gradle.nativeplatform.PreprocessingTool"/> <literal>cCompiler</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The configuration of the C compiler used when compiling C sources for this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/>, <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/> and
<apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/> when the 'c' plugin is applied.</para></section><section id="org.gradle.nativeplatform.test.googletest.GoogleTestTestSuiteBinarySpec:component" role="detail"><title><apilink class="org.gradle.nativeplatform.NativeComponentSpec"/> <literal>component</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The component that this binary was built from.</para></section><section id="org.gradle.nativeplatform.test.googletest.GoogleTestTestSuiteBinarySpec:cppCompiler" role="detail"><title><apilink class="org.gradle.nativeplatform.PreprocessingTool"/> <literal>cppCompiler</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The configuration of the C++ compiler used when compiling C++ sources for this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/>, <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/> and
<apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/> when the 'cpp' plugin is applied.</para></section><section id="org.gradle.nativeplatform.test.googletest.GoogleTestTestSuiteBinarySpec:flavor" role="detail"><title><apilink class="org.gradle.nativeplatform.Flavor"/> <literal>flavor</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The <apilink class="org.gradle.nativeplatform.Flavor"/> that this binary was built with.</para></section><section id="org.gradle.nativeplatform.test.googletest.GoogleTestTestSuiteBinarySpec:inputs" role="detail"><title><classname><apilink class="org.gradle.api.DomainObjectSet"/>&lt;<apilink class="org.gradle.language.base.LanguageSourceSet"/>&gt;</classname> <literal>inputs</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Returns all inputs of the binary. This includes source sets owned by the binary,
and other source sets created elsewhere (e.g. inherited from the binary's component).</para></section><section id="org.gradle.nativeplatform.test.googletest.GoogleTestTestSuiteBinarySpec:libs" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Collection.html"><classname>Collection</classname></ulink>&lt;<apilink class="org.gradle.nativeplatform.NativeDependencySet"/>&gt;</classname> <literal>libs</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The libraries that should be linked into this binary.</para></section><section id="org.gradle.nativeplatform.test.googletest.GoogleTestTestSuiteBinarySpec:linker" role="detail"><title><apilink class="org.gradle.nativeplatform.Tool"/> <literal>linker</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The configuration of the linker used when linking this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/> and <apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/>.</para></section><section id="org.gradle.nativeplatform.test.googletest.GoogleTestTestSuiteBinarySpec:objcCompiler" role="detail"><title><apilink class="org.gradle.nativeplatform.PreprocessingTool"/> <literal>objcCompiler</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The configuration of the Objective-C compiler used when compiling Objective-C sources for this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/>, <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/> and
<apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/> when the 'objective-c' plugin is applied.</para></section><section id="org.gradle.nativeplatform.test.googletest.GoogleTestTestSuiteBinarySpec:objcppCompiler" role="detail"><title><apilink class="org.gradle.nativeplatform.PreprocessingTool"/> <literal>objcppCompiler</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The configuration of the Objective-C++ compiler used when compiling Objective-C++ sources for this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/>, <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/> and
<apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/> when the 'objective-cpp' plugin is applied.</para></section><section id="org.gradle.nativeplatform.test.googletest.GoogleTestTestSuiteBinarySpec:rcCompiler" role="detail"><title><apilink class="org.gradle.nativeplatform.PreprocessingTool"/> <literal>rcCompiler</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The configuration of the Resource compiler used when compiling resources for this binary.

Valid for <apilink class="org.gradle.nativeplatform.SharedLibraryBinarySpec"/>, <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/> and
<apilink class="org.gradle.nativeplatform.NativeExecutableBinarySpec"/> when the 'windows-resources' plugin is applied.</para></section><section id="org.gradle.nativeplatform.test.googletest.GoogleTestTestSuiteBinarySpec:sources" role="detail"><title><classname><apilink class="org.gradle.model.ModelMap"/>&lt;<apilink class="org.gradle.language.base.LanguageSourceSet"/>&gt;</classname> <literal>sources</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The sources owned by this binary.</para></section><section id="org.gradle.nativeplatform.test.googletest.GoogleTestTestSuiteBinarySpec:staticLibArchiver" role="detail"><title><apilink class="org.gradle.nativeplatform.Tool"/> <literal>staticLibArchiver</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The configuration of the static library archiver used when creating this binary.

Valid for <apilink class="org.gradle.nativeplatform.StaticLibraryBinarySpec"/>.</para></section><section id="org.gradle.nativeplatform.test.googletest.GoogleTestTestSuiteBinarySpec:targetPlatform" role="detail"><title><apilink class="org.gradle.nativeplatform.platform.NativePlatform"/> <literal>targetPlatform</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The <apilink class="org.gradle.nativeplatform.platform.NativePlatform"/> that this binary is targeted to run on.</para></section><section id="org.gradle.nativeplatform.test.googletest.GoogleTestTestSuiteBinarySpec:tasks" role="detail"><title><apilink class="org.gradle.platform.base.BinaryTasksCollection"/> <literal>tasks</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The set of tasks associated with this binary.</para></section><section id="org.gradle.nativeplatform.test.googletest.GoogleTestTestSuiteBinarySpec:toolChain" role="detail"><title><apilink class="org.gradle.nativeplatform.toolchain.NativeToolChain"/> <literal>toolChain</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The <apilink class="org.gradle.nativeplatform.toolchain.NativeToolChain"/> that will be used to build this binary.</para></section></section><section><title>Method details</title><section id="org.gradle.nativeplatform.test.googletest.GoogleTestTestSuiteBinarySpec:lib(java.lang.Object)" role="detail"><title><classname>void</classname> <literal>lib</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> library)</title><caution><para>Note: This method is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Adds a library as input to this binary.
</para><para>
This method accepts the following types:

</para><itemizedlist><listitem>A <apilink class="org.gradle.nativeplatform.NativeLibrarySpec"/></listitem><listitem>A <apilink class="org.gradle.nativeplatform.NativeDependencySet"/></listitem><listitem>A <ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink> containing the library selector.</listitem></itemizedlist><para>

The Map notation supports the following String attributes:

</para><itemizedlist><listitem>project: the path to the project containing the library (optional, defaults to current project)</listitem><listitem>library: the name of the library (required)</listitem><listitem>linkage: the library linkage required ['shared'/'static'] (optional, defaults to 'shared')</listitem></itemizedlist></section></section></chapter><chapter id="org.gradle.language.base.LanguageSourceSet"><title>LanguageSourceSet</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.language.base.LanguageSourceSet" style="javadoc"/></seg></seglistitem></segmentedlist><segmentedlist><segtitle>Known Subtypes</segtitle><seglistitem><seg><simplelist columns="3" type="vert"><member><apilink class="org.gradle.language.assembler.AssemblerSourceSet"/></member><member><apilink class="org.gradle.language.nativeplatform.HeaderExportingSourceSet"/></member><member><apilink class="org.gradle.language.c.CSourceSet"/></member><member><apilink class="org.gradle.language.nativeplatform.DependentSourceSet"/></member><member><apilink class="org.gradle.language.cpp.CppSourceSet"/></member><member><apilink class="org.gradle.language.objectivec.ObjectiveCSourceSet"/></member><member><apilink class="org.gradle.language.objectivecpp.ObjectiveCppSourceSet"/></member><member><apilink class="org.gradle.language.rc.WindowsResourceSet"/></member></simplelist></seg></seglistitem></segmentedlist><caution><para>Note: This class is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>A set of sources for a programming language.</para><section><title>Properties</title><table><title>Properties - LanguageSourceSet</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.language.base.LanguageSourceSet:source"><literal>source</literal></link></td><td><caution>Incubating</caution><para>The source files.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.language.base.LanguageSourceSet:source" role="detail"><title><apilink class="org.gradle.api.file.SourceDirectorySet"/> <literal>source</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The source files.</para></section></section></chapter><chapter id="org.gradle.language.assembler.AssemblerSourceSet"><title>AssemblerSourceSet</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.language.assembler.AssemblerSourceSet" style="javadoc"/></seg></seglistitem></segmentedlist><caution><para>Note: This class is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>A set of assembly language sources.

</para><programlisting language="java">
plugins {
    id 'assembler'
}

model {
    components {
        main(NativeLibrarySpec) {
            sources {
                asm {
                    source {
                        srcDirs "src/main/i386", "src/shared/asm"
                        include "**/*.s"
                    }
                }
            }
        }
    }
}
</programlisting><section><title>Properties</title><table><title>Properties - AssemblerSourceSet</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.language.assembler.AssemblerSourceSet:source"><literal>source</literal></link></td><td><caution>Incubating</caution><para>The source files.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.language.assembler.AssemblerSourceSet:source" role="detail"><title><apilink class="org.gradle.api.file.SourceDirectorySet"/> <literal>source</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The source files.</para></section></section></chapter><chapter id="org.gradle.language.nativeplatform.HeaderExportingSourceSet"><title>HeaderExportingSourceSet</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.language.nativeplatform.HeaderExportingSourceSet" style="javadoc"/></seg></seglistitem></segmentedlist><segmentedlist><segtitle>Known Subtypes</segtitle><seglistitem><seg><simplelist columns="3" type="vert"><member><apilink class="org.gradle.language.c.CSourceSet"/></member><member><apilink class="org.gradle.language.cpp.CppSourceSet"/></member><member><apilink class="org.gradle.language.objectivec.ObjectiveCSourceSet"/></member><member><apilink class="org.gradle.language.objectivecpp.ObjectiveCppSourceSet"/></member><member><apilink class="org.gradle.language.rc.WindowsResourceSet"/></member></simplelist></seg></seglistitem></segmentedlist><caution><para>Note: This class is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>A source set that exposes headers</para><section><title>Properties</title><table><title>Properties - HeaderExportingSourceSet</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.language.nativeplatform.HeaderExportingSourceSet:exportedHeaders"><literal>exportedHeaders</literal></link></td><td><caution>Incubating</caution><para>The headers as a directory set.</para></td></tr><tr><td><link linkend="org.gradle.language.nativeplatform.HeaderExportingSourceSet:source"><literal>source</literal></link></td><td><caution>Incubating</caution><para>The source files.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.language.nativeplatform.HeaderExportingSourceSet:exportedHeaders" role="detail"><title><apilink class="org.gradle.api.file.SourceDirectorySet"/> <literal>exportedHeaders</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The headers as a directory set.</para></section><section id="org.gradle.language.nativeplatform.HeaderExportingSourceSet:source" role="detail"><title><apilink class="org.gradle.api.file.SourceDirectorySet"/> <literal>source</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The source files.</para></section></section></chapter><chapter id="org.gradle.language.nativeplatform.DependentSourceSet"><title>DependentSourceSet</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.language.nativeplatform.DependentSourceSet" style="javadoc"/></seg></seglistitem></segmentedlist><segmentedlist><segtitle>Known Subtypes</segtitle><seglistitem><seg><simplelist columns="3" type="vert"><member><apilink class="org.gradle.language.c.CSourceSet"/></member><member><apilink class="org.gradle.language.cpp.CppSourceSet"/></member><member><apilink class="org.gradle.language.objectivec.ObjectiveCSourceSet"/></member><member><apilink class="org.gradle.language.objectivecpp.ObjectiveCppSourceSet"/></member></simplelist></seg></seglistitem></segmentedlist><caution><para>Note: This class is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>A source set that depends on one or more <apilink class="org.gradle.nativeplatform.NativeDependencySet"/>s to be built.</para><section><title>Properties</title><table><title>Properties - DependentSourceSet</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.language.nativeplatform.DependentSourceSet:libs"><literal>libs</literal></link></td><td><caution>Incubating</caution><para>The libraries that this source set requires.</para></td></tr><tr><td><link linkend="org.gradle.language.nativeplatform.DependentSourceSet:preCompiledHeader"><literal>preCompiledHeader</literal></link></td><td><caution>Incubating</caution><para>The pre-compiled header configured for this source set.</para></td></tr><tr><td><link linkend="org.gradle.language.nativeplatform.DependentSourceSet:source"><literal>source</literal></link></td><td><caution>Incubating</caution><para>The source files.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - DependentSourceSet</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.language.nativeplatform.DependentSourceSet:lib(java.lang.Object)">lib</link>(library)</literal></td><td><caution>Incubating</caution><para>Adds a library that this source set requires. This method accepts the following types:

</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.language.nativeplatform.DependentSourceSet:libs" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Collection.html"><classname>Collection</classname></ulink>&lt;?&gt;</classname> <literal>libs</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The libraries that this source set requires.</para></section><section id="org.gradle.language.nativeplatform.DependentSourceSet:preCompiledHeader" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>preCompiledHeader</literal></title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The pre-compiled header configured for this source set.</para></section><section id="org.gradle.language.nativeplatform.DependentSourceSet:source" role="detail"><title><apilink class="org.gradle.api.file.SourceDirectorySet"/> <literal>source</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The source files.</para></section></section><section><title>Method details</title><section id="org.gradle.language.nativeplatform.DependentSourceSet:lib(java.lang.Object)" role="detail"><title><classname>void</classname> <literal>lib</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> library)</title><caution><para>Note: This method is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Adds a library that this source set requires. This method accepts the following types:

</para><itemizedlist><listitem>A <apilink class="org.gradle.nativeplatform.NativeLibrarySpec"/></listitem><listitem>A <apilink class="org.gradle.nativeplatform.NativeDependencySet"/></listitem><listitem>A <apilink class="org.gradle.language.base.LanguageSourceSet"/></listitem><listitem>A <ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink> containing the library selector.</listitem></itemizedlist><para>

The Map notation supports the following String attributes:

</para><itemizedlist><listitem>project: the path to the project containing the library (optional, defaults to current project)</listitem><listitem>library: the name of the library (required)</listitem><listitem>linkage: the library linkage required ['shared'/'static'] (optional, defaults to 'shared')</listitem></itemizedlist></section></section></chapter><chapter id="org.gradle.language.c.CSourceSet"><title>CSourceSet</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.language.c.CSourceSet" style="javadoc"/></seg></seglistitem></segmentedlist><caution><para>Note: This class is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>A set of C source files.

</para><para>A C source set contains a set of source files, together with an optional set of exported header files.</para><programlisting language="java">
plugins {
    id 'c'
}

model {
    components {
        main(NativeLibrarySpec) {
            sources {
                c {
                    source {
                        srcDirs "src/main/cpp", "src/shared/c++"
                        include "**/*.c"
                    }
                    exportedHeaders {
                        srcDirs "src/main/include"
                    }
                }
            }
        }
    }
}
</programlisting><section><title>Properties</title><table><title>Properties - CSourceSet</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.language.c.CSourceSet:exportedHeaders"><literal>exportedHeaders</literal></link></td><td><caution>Incubating</caution><para>The headers as a directory set.</para></td></tr><tr><td><link linkend="org.gradle.language.c.CSourceSet:libs"><literal>libs</literal></link></td><td><caution>Incubating</caution><para>The libraries that this source set requires.</para></td></tr><tr><td><link linkend="org.gradle.language.c.CSourceSet:preCompiledHeader"><literal>preCompiledHeader</literal></link></td><td><caution>Incubating</caution><para>The pre-compiled header configured for this source set.</para></td></tr><tr><td><link linkend="org.gradle.language.c.CSourceSet:source"><literal>source</literal></link></td><td><caution>Incubating</caution><para>The source files.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - CSourceSet</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.language.c.CSourceSet:lib(java.lang.Object)">lib</link>(library)</literal></td><td><caution>Incubating</caution><para>Adds a library that this source set requires. This method accepts the following types:

</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.language.c.CSourceSet:exportedHeaders" role="detail"><title><apilink class="org.gradle.api.file.SourceDirectorySet"/> <literal>exportedHeaders</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The headers as a directory set.</para></section><section id="org.gradle.language.c.CSourceSet:libs" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Collection.html"><classname>Collection</classname></ulink>&lt;?&gt;</classname> <literal>libs</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The libraries that this source set requires.</para></section><section id="org.gradle.language.c.CSourceSet:preCompiledHeader" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>preCompiledHeader</literal></title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The pre-compiled header configured for this source set.</para></section><section id="org.gradle.language.c.CSourceSet:source" role="detail"><title><apilink class="org.gradle.api.file.SourceDirectorySet"/> <literal>source</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The source files.</para></section></section><section><title>Method details</title><section id="org.gradle.language.c.CSourceSet:lib(java.lang.Object)" role="detail"><title><classname>void</classname> <literal>lib</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> library)</title><caution><para>Note: This method is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Adds a library that this source set requires. This method accepts the following types:

</para><itemizedlist><listitem>A <apilink class="org.gradle.nativeplatform.NativeLibrarySpec"/></listitem><listitem>A <apilink class="org.gradle.nativeplatform.NativeDependencySet"/></listitem><listitem>A <apilink class="org.gradle.language.base.LanguageSourceSet"/></listitem><listitem>A <ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink> containing the library selector.</listitem></itemizedlist><para>

The Map notation supports the following String attributes:

</para><itemizedlist><listitem>project: the path to the project containing the library (optional, defaults to current project)</listitem><listitem>library: the name of the library (required)</listitem><listitem>linkage: the library linkage required ['shared'/'static'] (optional, defaults to 'shared')</listitem></itemizedlist></section></section></chapter><chapter id="org.gradle.language.cpp.CppSourceSet"><title>CppSourceSet</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.language.cpp.CppSourceSet" style="javadoc"/></seg></seglistitem></segmentedlist><caution><para>Note: This class is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>A set of C++ source files.

</para><para>A C++ source set contains a set of source files, together with an optional set of exported header files.</para><programlisting language="java">
plugins {
    id 'cpp'
}

model {
    components {
        main(NativeLibrarySpec) {
            sources {
                cpp {
                    source {
                        srcDirs "src/main/cpp", "src/shared/c++"
                        include "**/*.cpp"
                    }
                    exportedHeaders {
                        srcDirs "src/main/include", "src/shared/include"
                    }
                }
            }
        }
    }
}
</programlisting><section><title>Properties</title><table><title>Properties - CppSourceSet</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.language.cpp.CppSourceSet:exportedHeaders"><literal>exportedHeaders</literal></link></td><td><caution>Incubating</caution><para>The headers as a directory set.</para></td></tr><tr><td><link linkend="org.gradle.language.cpp.CppSourceSet:libs"><literal>libs</literal></link></td><td><caution>Incubating</caution><para>The libraries that this source set requires.</para></td></tr><tr><td><link linkend="org.gradle.language.cpp.CppSourceSet:preCompiledHeader"><literal>preCompiledHeader</literal></link></td><td><caution>Incubating</caution><para>The pre-compiled header configured for this source set.</para></td></tr><tr><td><link linkend="org.gradle.language.cpp.CppSourceSet:source"><literal>source</literal></link></td><td><caution>Incubating</caution><para>The source files.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - CppSourceSet</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.language.cpp.CppSourceSet:lib(java.lang.Object)">lib</link>(library)</literal></td><td><caution>Incubating</caution><para>Adds a library that this source set requires. This method accepts the following types:

</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.language.cpp.CppSourceSet:exportedHeaders" role="detail"><title><apilink class="org.gradle.api.file.SourceDirectorySet"/> <literal>exportedHeaders</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The headers as a directory set.</para></section><section id="org.gradle.language.cpp.CppSourceSet:libs" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Collection.html"><classname>Collection</classname></ulink>&lt;?&gt;</classname> <literal>libs</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The libraries that this source set requires.</para></section><section id="org.gradle.language.cpp.CppSourceSet:preCompiledHeader" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>preCompiledHeader</literal></title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The pre-compiled header configured for this source set.</para></section><section id="org.gradle.language.cpp.CppSourceSet:source" role="detail"><title><apilink class="org.gradle.api.file.SourceDirectorySet"/> <literal>source</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The source files.</para></section></section><section><title>Method details</title><section id="org.gradle.language.cpp.CppSourceSet:lib(java.lang.Object)" role="detail"><title><classname>void</classname> <literal>lib</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> library)</title><caution><para>Note: This method is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Adds a library that this source set requires. This method accepts the following types:

</para><itemizedlist><listitem>A <apilink class="org.gradle.nativeplatform.NativeLibrarySpec"/></listitem><listitem>A <apilink class="org.gradle.nativeplatform.NativeDependencySet"/></listitem><listitem>A <apilink class="org.gradle.language.base.LanguageSourceSet"/></listitem><listitem>A <ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink> containing the library selector.</listitem></itemizedlist><para>

The Map notation supports the following String attributes:

</para><itemizedlist><listitem>project: the path to the project containing the library (optional, defaults to current project)</listitem><listitem>library: the name of the library (required)</listitem><listitem>linkage: the library linkage required ['shared'/'static'] (optional, defaults to 'shared')</listitem></itemizedlist></section></section></chapter><chapter id="org.gradle.language.objectivec.ObjectiveCSourceSet"><title>ObjectiveCSourceSet</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.language.objectivec.ObjectiveCSourceSet" style="javadoc"/></seg></seglistitem></segmentedlist><caution><para>Note: This class is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>A set of Objective-C source files.

</para><para>An ObjectiveC source set contains a set of source files, together with an optional set of exported header files.</para><programlisting language="java">
plugins {
    id 'objective-c'
}

model {
    components {
        main(NativeLibrarySpec) {
            sources {
                objc {
                    source {
                        srcDirs "src/main/objectiveC", "src/shared/objectiveC"
                        include "**/*.m"
                    }
                    exportedHeaders {
                        srcDirs "src/main/include"
                    }
                }
            }
        }
    }
}
</programlisting><section><title>Properties</title><table><title>Properties - ObjectiveCSourceSet</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.language.objectivec.ObjectiveCSourceSet:exportedHeaders"><literal>exportedHeaders</literal></link></td><td><caution>Incubating</caution><para>The headers as a directory set.</para></td></tr><tr><td><link linkend="org.gradle.language.objectivec.ObjectiveCSourceSet:libs"><literal>libs</literal></link></td><td><caution>Incubating</caution><para>The libraries that this source set requires.</para></td></tr><tr><td><link linkend="org.gradle.language.objectivec.ObjectiveCSourceSet:preCompiledHeader"><literal>preCompiledHeader</literal></link></td><td><caution>Incubating</caution><para>The pre-compiled header configured for this source set.</para></td></tr><tr><td><link linkend="org.gradle.language.objectivec.ObjectiveCSourceSet:source"><literal>source</literal></link></td><td><caution>Incubating</caution><para>The source files.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - ObjectiveCSourceSet</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.language.objectivec.ObjectiveCSourceSet:lib(java.lang.Object)">lib</link>(library)</literal></td><td><caution>Incubating</caution><para>Adds a library that this source set requires. This method accepts the following types:

</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.language.objectivec.ObjectiveCSourceSet:exportedHeaders" role="detail"><title><apilink class="org.gradle.api.file.SourceDirectorySet"/> <literal>exportedHeaders</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The headers as a directory set.</para></section><section id="org.gradle.language.objectivec.ObjectiveCSourceSet:libs" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Collection.html"><classname>Collection</classname></ulink>&lt;?&gt;</classname> <literal>libs</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The libraries that this source set requires.</para></section><section id="org.gradle.language.objectivec.ObjectiveCSourceSet:preCompiledHeader" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>preCompiledHeader</literal></title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The pre-compiled header configured for this source set.</para></section><section id="org.gradle.language.objectivec.ObjectiveCSourceSet:source" role="detail"><title><apilink class="org.gradle.api.file.SourceDirectorySet"/> <literal>source</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The source files.</para></section></section><section><title>Method details</title><section id="org.gradle.language.objectivec.ObjectiveCSourceSet:lib(java.lang.Object)" role="detail"><title><classname>void</classname> <literal>lib</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> library)</title><caution><para>Note: This method is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Adds a library that this source set requires. This method accepts the following types:

</para><itemizedlist><listitem>A <apilink class="org.gradle.nativeplatform.NativeLibrarySpec"/></listitem><listitem>A <apilink class="org.gradle.nativeplatform.NativeDependencySet"/></listitem><listitem>A <apilink class="org.gradle.language.base.LanguageSourceSet"/></listitem><listitem>A <ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink> containing the library selector.</listitem></itemizedlist><para>

The Map notation supports the following String attributes:

</para><itemizedlist><listitem>project: the path to the project containing the library (optional, defaults to current project)</listitem><listitem>library: the name of the library (required)</listitem><listitem>linkage: the library linkage required ['shared'/'static'] (optional, defaults to 'shared')</listitem></itemizedlist></section></section></chapter><chapter id="org.gradle.language.objectivecpp.ObjectiveCppSourceSet"><title>ObjectiveCppSourceSet</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.language.objectivecpp.ObjectiveCppSourceSet" style="javadoc"/></seg></seglistitem></segmentedlist><caution><para>Note: This class is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>A set of Objective-C++ source files.

</para><para>An Objective-C++ source set contains a set of source files, together with an optional set of exported header files.</para><programlisting language="java">
plugins {
    id 'objective-cpp'
}

model {
    components {
        main(NativeLibrarySpec) {
            sources {
                objcpp {
                    source {
                        srcDirs "src/main/objectiveCpp", "src/shared/objectiveCpp"
                        include "**/*.mm"
                    }
                    exportedHeaders {
                        srcDirs "src/main/include"
                    }
                }
            }
        }
    }
}
</programlisting><section><title>Properties</title><table><title>Properties - ObjectiveCppSourceSet</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.language.objectivecpp.ObjectiveCppSourceSet:exportedHeaders"><literal>exportedHeaders</literal></link></td><td><caution>Incubating</caution><para>The headers as a directory set.</para></td></tr><tr><td><link linkend="org.gradle.language.objectivecpp.ObjectiveCppSourceSet:libs"><literal>libs</literal></link></td><td><caution>Incubating</caution><para>The libraries that this source set requires.</para></td></tr><tr><td><link linkend="org.gradle.language.objectivecpp.ObjectiveCppSourceSet:preCompiledHeader"><literal>preCompiledHeader</literal></link></td><td><caution>Incubating</caution><para>The pre-compiled header configured for this source set.</para></td></tr><tr><td><link linkend="org.gradle.language.objectivecpp.ObjectiveCppSourceSet:source"><literal>source</literal></link></td><td><caution>Incubating</caution><para>The source files.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - ObjectiveCppSourceSet</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.language.objectivecpp.ObjectiveCppSourceSet:lib(java.lang.Object)">lib</link>(library)</literal></td><td><caution>Incubating</caution><para>Adds a library that this source set requires. This method accepts the following types:

</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.language.objectivecpp.ObjectiveCppSourceSet:exportedHeaders" role="detail"><title><apilink class="org.gradle.api.file.SourceDirectorySet"/> <literal>exportedHeaders</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The headers as a directory set.</para></section><section id="org.gradle.language.objectivecpp.ObjectiveCppSourceSet:libs" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Collection.html"><classname>Collection</classname></ulink>&lt;?&gt;</classname> <literal>libs</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The libraries that this source set requires.</para></section><section id="org.gradle.language.objectivecpp.ObjectiveCppSourceSet:preCompiledHeader" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>preCompiledHeader</literal></title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The pre-compiled header configured for this source set.</para></section><section id="org.gradle.language.objectivecpp.ObjectiveCppSourceSet:source" role="detail"><title><apilink class="org.gradle.api.file.SourceDirectorySet"/> <literal>source</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The source files.</para></section></section><section><title>Method details</title><section id="org.gradle.language.objectivecpp.ObjectiveCppSourceSet:lib(java.lang.Object)" role="detail"><title><classname>void</classname> <literal>lib</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> library)</title><caution><para>Note: This method is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Adds a library that this source set requires. This method accepts the following types:

</para><itemizedlist><listitem>A <apilink class="org.gradle.nativeplatform.NativeLibrarySpec"/></listitem><listitem>A <apilink class="org.gradle.nativeplatform.NativeDependencySet"/></listitem><listitem>A <apilink class="org.gradle.language.base.LanguageSourceSet"/></listitem><listitem>A <ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink> containing the library selector.</listitem></itemizedlist><para>

The Map notation supports the following String attributes:

</para><itemizedlist><listitem>project: the path to the project containing the library (optional, defaults to current project)</listitem><listitem>library: the name of the library (required)</listitem><listitem>linkage: the library linkage required ['shared'/'static'] (optional, defaults to 'shared')</listitem></itemizedlist></section></section></chapter><chapter id="org.gradle.language.rc.WindowsResourceSet"><title>WindowsResourceSet</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.language.rc.WindowsResourceSet" style="javadoc"/></seg></seglistitem></segmentedlist><caution><para>Note: This class is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>A set of Windows Resource definition files.

</para><para>A Windows Resource set contains a set of script files, together with an optional set of header files.</para><programlisting language="java">
plugins {
    id 'windows-resources'
}

model {
    components {
        main(NativeLibrarySpec) {
            sources {
                rc {
                    source {
                        srcDirs "src/main/rc"
                        include "**/*.rc"
                    }
                    exportedHeaders {
                        srcDirs "src/main/include"
                    }
                }
            }
        }
    }
}
</programlisting><section><title>Properties</title><table><title>Properties - WindowsResourceSet</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.language.rc.WindowsResourceSet:exportedHeaders"><literal>exportedHeaders</literal></link></td><td><caution>Incubating</caution><para>The headers as a directory set.</para></td></tr><tr><td><link linkend="org.gradle.language.rc.WindowsResourceSet:source"><literal>source</literal></link></td><td><caution>Incubating</caution><para>The source files.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.language.rc.WindowsResourceSet:exportedHeaders" role="detail"><title><apilink class="org.gradle.api.file.SourceDirectorySet"/> <literal>exportedHeaders</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The headers as a directory set.</para></section><section id="org.gradle.language.rc.WindowsResourceSet:source" role="detail"><title><apilink class="org.gradle.api.file.SourceDirectorySet"/> <literal>source</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The source files.</para></section></section></chapter><chapter id="org.gradle.ide.visualstudio.VisualStudioProject"><title>VisualStudioProject</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.ide.visualstudio.VisualStudioProject" style="javadoc"/></seg></seglistitem></segmentedlist><para>A visual studio project, created from one or more native binaries.

</para><para>

The content and location of the generate project file can be modified by the supplied methods:

</para><programlisting language="java">
 plugins {
     id 'cpp'
     id 'visual-studio'
 }

 model {
     visualStudio {
         projects.all {
             projectFile.location = "vs/${name}.vcxproj"
             projectFile.withXml {
                 asNode().appendNode('PropertyGroup', [Label: 'Custom'])
                         .appendNode('ProjectDetails', "Project is named ${project.name}")
             }
         }
     }
 }
</programlisting><section><title>Properties</title><table><title>Properties - VisualStudioProject</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.ide.visualstudio.VisualStudioProject:buildDependencies"><literal>buildDependencies</literal></link></td><td><para>Returns a dependency which contains the tasks which build this artifact. All <literal>Buildable</literal> implementations
must ensure that the returned dependency object is live, so that it tracks changes to the dependencies of this
buildable.</para></td></tr><tr><td><link linkend="org.gradle.ide.visualstudio.VisualStudioProject:filtersFile"><literal>filtersFile</literal></link></td><td><caution>Incubating</caution><para>Configuration for the generated filters file.</para></td></tr><tr><td><link linkend="org.gradle.ide.visualstudio.VisualStudioProject:projectFile"><literal>projectFile</literal></link></td><td><caution>Incubating</caution><para>Configuration for the generated project file.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.ide.visualstudio.VisualStudioProject:buildDependencies" role="detail"><title><apilink class="org.gradle.api.tasks.TaskDependency"/> <literal>buildDependencies</literal> (read-only)</title><para>Returns a dependency which contains the tasks which build this artifact. All <literal>Buildable</literal> implementations
must ensure that the returned dependency object is live, so that it tracks changes to the dependencies of this
buildable.</para></section><section id="org.gradle.ide.visualstudio.VisualStudioProject:filtersFile" role="detail"><title><apilink class="org.gradle.ide.visualstudio.XmlConfigFile"/> <literal>filtersFile</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Configuration for the generated filters file.</para></section><section id="org.gradle.ide.visualstudio.VisualStudioProject:projectFile" role="detail"><title><apilink class="org.gradle.ide.visualstudio.XmlConfigFile"/> <literal>projectFile</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Configuration for the generated project file.</para></section></section></chapter><chapter id="org.gradle.platform.base.Application"><title>Application</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.platform.base.Application" style="javadoc"/></seg></seglistitem></segmentedlist><segmentedlist><segtitle>Known Subtypes</segtitle><seglistitem><seg><simplelist columns="1" type="vert"><member><apilink class="org.gradle.nativeplatform.NativeExecutable"/></member></simplelist></seg></seglistitem></segmentedlist><caution><para>Note: This class is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>A software application.</para><section><title>Properties</title><para>No properties</para></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section></chapter><chapter id="org.gradle.nativeplatform.NativeExecutable"><title>NativeExecutable</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.nativeplatform.NativeExecutable" style="javadoc"/></seg></seglistitem></segmentedlist><caution><para>Note: This class is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>An executable native component that is built by Gradle.</para><section><title>Properties</title><para>No properties</para></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section></chapter><chapter id="org.gradle.nativeplatform.NativeExecutableBinary"><title>NativeExecutableBinary</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.nativeplatform.NativeExecutableBinary" style="javadoc"/></seg></seglistitem></segmentedlist><caution><para>Note: This class is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>A binary artifact for a <apilink class="org.gradle.nativeplatform.NativeExecutable"/>, targeted at a particular platform with specific configuration.</para><section><title>Properties</title><table><title>Properties - NativeExecutableBinary</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.nativeplatform.NativeExecutableBinary:buildType"><literal>buildType</literal></link></td><td><caution>Incubating</caution><para>The <apilink class="org.gradle.nativeplatform.BuildType"/> used to construct this binary.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.NativeExecutableBinary:flavor"><literal>flavor</literal></link></td><td><caution>Incubating</caution><para>The <apilink class="org.gradle.nativeplatform.Flavor"/> that this binary was built with.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.NativeExecutableBinary:targetPlatform"><literal>targetPlatform</literal></link></td><td><caution>Incubating</caution><para>The <apilink class="org.gradle.nativeplatform.platform.NativePlatform"/> that this binary is targeted to run on.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.nativeplatform.NativeExecutableBinary:buildType" role="detail"><title><apilink class="org.gradle.nativeplatform.BuildType"/> <literal>buildType</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The <apilink class="org.gradle.nativeplatform.BuildType"/> used to construct this binary.</para></section><section id="org.gradle.nativeplatform.NativeExecutableBinary:flavor" role="detail"><title><apilink class="org.gradle.nativeplatform.Flavor"/> <literal>flavor</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The <apilink class="org.gradle.nativeplatform.Flavor"/> that this binary was built with.</para></section><section id="org.gradle.nativeplatform.NativeExecutableBinary:targetPlatform" role="detail"><title><apilink class="org.gradle.nativeplatform.platform.NativePlatform"/> <literal>targetPlatform</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The <apilink class="org.gradle.nativeplatform.platform.NativePlatform"/> that this binary is targeted to run on.</para></section></section></chapter><chapter id="org.gradle.language.ComponentWithBinaries"><title>ComponentWithBinaries</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.language.ComponentWithBinaries" style="javadoc"/></seg></seglistitem></segmentedlist><segmentedlist><segtitle>Known Subtypes</segtitle><seglistitem><seg><simplelist columns="1" type="vert"><member><apilink class="org.gradle.language.cpp.CppComponent"/></member><member><apilink class="org.gradle.language.swift.SwiftComponent"/></member></simplelist></seg></seglistitem></segmentedlist><para>Represents a component that is composed of one or more binaries.</para><section><title>Properties</title><table><title>Properties - ComponentWithBinaries</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.language.ComponentWithBinaries:binaries"><literal>binaries</literal></link></td><td><para>The binaries of this component.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.language.ComponentWithBinaries:binaries" role="detail"><title><classname><apilink class="org.gradle.language.BinaryCollection"/>&lt;? extends <apilink class="org.gradle.api.component.SoftwareComponent"/>&gt;</classname> <literal>binaries</literal> (read-only)</title><para>The binaries of this component.</para></section></section></chapter><chapter id="org.gradle.language.ComponentWithTargetMachines"><title>ComponentWithTargetMachines</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.language.ComponentWithTargetMachines" style="javadoc"/></seg></seglistitem></segmentedlist><segmentedlist><segtitle>Known Subtypes</segtitle><seglistitem><seg><simplelist columns="1" type="vert"><member><apilink class="org.gradle.language.cpp.CppComponent"/></member><member><apilink class="org.gradle.language.swift.SwiftComponent"/></member></simplelist></seg></seglistitem></segmentedlist><para>Represents a component that targets multiple target machines.</para><section><title>Properties</title><table><title>Properties - ComponentWithTargetMachines</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.language.ComponentWithTargetMachines:targetMachines"><literal>targetMachines</literal></link></td><td><para>Specifies the target machines this component should be built for.  The "machines" extension property (see <apilink class="org.gradle.nativeplatform.TargetMachineFactory"/>) can be used to construct common operating system and architecture combinations.

</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.language.ComponentWithTargetMachines:targetMachines" role="detail"><title><classname><apilink class="org.gradle.api.provider.SetProperty"/>&lt;<apilink class="org.gradle.nativeplatform.TargetMachine"/>&gt;</classname> <literal>targetMachines</literal></title><para>Specifies the target machines this component should be built for.  The "machines" extension property (see <apilink class="org.gradle.nativeplatform.TargetMachineFactory"/>) can be used to construct common operating system and architecture combinations.

</para><para>For example:</para><programlisting language="java">
targetMachines = [machines.linux.x86_64, machines.windows.x86_64]
</programlisting></section></section></chapter><chapter id="org.gradle.language.cpp.CppComponent"><title>CppComponent</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.language.cpp.CppComponent" style="javadoc"/></seg></seglistitem></segmentedlist><segmentedlist><segtitle>Known Subtypes</segtitle><seglistitem><seg><simplelist columns="1" type="vert"><member><apilink class="org.gradle.language.cpp.ProductionCppComponent"/></member><member><apilink class="org.gradle.nativeplatform.test.cpp.CppTestSuite"/></member></simplelist></seg></seglistitem></segmentedlist><para>Configuration for a C++ component, such as a library or executable, defining the source files and private header directories that make up the component. Private headers are those that are visible only to the source files of the component.

</para><para>A C++ component is composed of some C++ source files that are compiled and then linked into some binary.</para><para>An instance of this type is added as a project extension by the C++ plugins.</para><section><title>Properties</title><table><title>Properties - CppComponent</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.language.cpp.CppComponent:baseName"><literal>baseName</literal></link></td><td><para>Specifies the base name for this component. This name is used to calculate various output file names. The default value is calculated from the project name.</para></td></tr><tr><td><link linkend="org.gradle.language.cpp.CppComponent:binaries"><literal>binaries</literal></link></td><td><para>The binaries of this component.</para></td></tr><tr><td><link linkend="org.gradle.language.cpp.CppComponent:privateHeaders"><literal>privateHeaders</literal></link></td><td><para>Defines the private header file directories of this library.

</para></td></tr><tr><td><link linkend="org.gradle.language.cpp.CppComponent:source"><literal>source</literal></link></td><td><para>Defines the source files or directories of this component. You can add files or directories to this collection. When a directory is added, all source files are included for compilation.

</para></td></tr><tr><td><link linkend="org.gradle.language.cpp.CppComponent:targetMachines"><literal>targetMachines</literal></link></td><td><para>Specifies the target machines this component should be built for.  The "machines" extension property (see <apilink class="org.gradle.nativeplatform.TargetMachineFactory"/>) can be used to construct common operating system and architecture combinations.

</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - CppComponent</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.language.cpp.CppComponent:privateHeaders(org.gradle.api.Action)">privateHeaders</link>(action)</literal></td><td><para>Configures the private header directories for this component.</para></td></tr><tr><td><literal><link linkend="org.gradle.language.cpp.CppComponent:source(org.gradle.api.Action)">source</link>(action)</literal></td><td><para>Configures the source files or directories for this component.</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.language.cpp.CppComponent:baseName" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>baseName</literal></title><para>Specifies the base name for this component. This name is used to calculate various output file names. The default value is calculated from the project name.</para></section><section id="org.gradle.language.cpp.CppComponent:binaries" role="detail"><title><classname><apilink class="org.gradle.language.BinaryCollection"/>&lt;? extends <apilink class="org.gradle.api.component.SoftwareComponent"/>&gt;</classname> <literal>binaries</literal> (read-only)</title><para>The binaries of this component.</para></section><section id="org.gradle.language.cpp.CppComponent:privateHeaders" role="detail"><title><apilink class="org.gradle.api.file.ConfigurableFileCollection"/> <literal>privateHeaders</literal> (read-only)</title><para>Defines the private header file directories of this library.

</para><para>When this collection is empty, the directory <literal>src/main/headers</literal> is used by default.</para></section><section id="org.gradle.language.cpp.CppComponent:source" role="detail"><title><apilink class="org.gradle.api.file.ConfigurableFileCollection"/> <literal>source</literal> (read-only)</title><para>Defines the source files or directories of this component. You can add files or directories to this collection. When a directory is added, all source files are included for compilation.

</para><para>When this collection is empty, the directory <literal>src/main/cpp</literal> is used by default.</para></section><section id="org.gradle.language.cpp.CppComponent:targetMachines" role="detail"><title><classname><apilink class="org.gradle.api.provider.SetProperty"/>&lt;<apilink class="org.gradle.nativeplatform.TargetMachine"/>&gt;</classname> <literal>targetMachines</literal></title><para>Specifies the target machines this component should be built for.  The "machines" extension property (see <apilink class="org.gradle.nativeplatform.TargetMachineFactory"/>) can be used to construct common operating system and architecture combinations.

</para><para>For example:</para><programlisting language="java">
targetMachines = [machines.linux.x86_64, machines.windows.x86_64]
</programlisting></section></section><section><title>Method details</title><section id="org.gradle.language.cpp.CppComponent:privateHeaders(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>privateHeaders</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.ConfigurableFileCollection"/>&gt;</classname> action)</title><para>Configures the private header directories for this component.</para></section><section id="org.gradle.language.cpp.CppComponent:source(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>source</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.ConfigurableFileCollection"/>&gt;</classname> action)</title><para>Configures the source files or directories for this component.</para></section></section></chapter><chapter id="org.gradle.language.cpp.ProductionCppComponent"><title>ProductionCppComponent</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.language.cpp.ProductionCppComponent" style="javadoc"/></seg></seglistitem></segmentedlist><segmentedlist><segtitle>Known Subtypes</segtitle><seglistitem><seg><simplelist columns="1" type="vert"><member><apilink class="org.gradle.language.cpp.CppApplication"/></member><member><apilink class="org.gradle.language.cpp.CppLibrary"/></member></simplelist></seg></seglistitem></segmentedlist><para>Represents a C++ component that is the main product of a project.</para><section><title>Properties</title><table><title>Properties - ProductionCppComponent</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.language.cpp.ProductionCppComponent:baseName"><literal>baseName</literal></link></td><td><para>Specifies the base name for this component. This name is used to calculate various output file names. The default value is calculated from the project name.</para></td></tr><tr><td><link linkend="org.gradle.language.cpp.ProductionCppComponent:binaries"><literal>binaries</literal></link></td><td><para>The binaries of this component.</para></td></tr><tr><td><link linkend="org.gradle.language.cpp.ProductionCppComponent:developmentBinary"><literal>developmentBinary</literal></link></td><td><para>The binary of the component to use as the default for development.</para></td></tr><tr><td><link linkend="org.gradle.language.cpp.ProductionCppComponent:privateHeaders"><literal>privateHeaders</literal></link></td><td><para>Defines the private header file directories of this library.

</para></td></tr><tr><td><link linkend="org.gradle.language.cpp.ProductionCppComponent:source"><literal>source</literal></link></td><td><para>Defines the source files or directories of this component. You can add files or directories to this collection. When a directory is added, all source files are included for compilation.

</para></td></tr><tr><td><link linkend="org.gradle.language.cpp.ProductionCppComponent:targetMachines"><literal>targetMachines</literal></link></td><td><para>Specifies the target machines this component should be built for.  The "machines" extension property (see <apilink class="org.gradle.nativeplatform.TargetMachineFactory"/>) can be used to construct common operating system and architecture combinations.

</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - ProductionCppComponent</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.language.cpp.ProductionCppComponent:privateHeaders(org.gradle.api.Action)">privateHeaders</link>(action)</literal></td><td><para>Configures the private header directories for this component.</para></td></tr><tr><td><literal><link linkend="org.gradle.language.cpp.ProductionCppComponent:source(org.gradle.api.Action)">source</link>(action)</literal></td><td><para>Configures the source files or directories for this component.</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.language.cpp.ProductionCppComponent:baseName" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>baseName</literal></title><para>Specifies the base name for this component. This name is used to calculate various output file names. The default value is calculated from the project name.</para></section><section id="org.gradle.language.cpp.ProductionCppComponent:binaries" role="detail"><title><classname><apilink class="org.gradle.language.BinaryCollection"/>&lt;? extends <apilink class="org.gradle.api.component.SoftwareComponent"/>&gt;</classname> <literal>binaries</literal> (read-only)</title><para>The binaries of this component.</para></section><section id="org.gradle.language.cpp.ProductionCppComponent:developmentBinary" role="detail"><title><classname><apilink class="org.gradle.api.provider.Provider"/>&lt;? extends <apilink class="org.gradle.language.cpp.CppBinary"/>&gt;</classname> <literal>developmentBinary</literal></title><para>The binary of the component to use as the default for development.</para></section><section id="org.gradle.language.cpp.ProductionCppComponent:privateHeaders" role="detail"><title><apilink class="org.gradle.api.file.ConfigurableFileCollection"/> <literal>privateHeaders</literal> (read-only)</title><para>Defines the private header file directories of this library.

</para><para>When this collection is empty, the directory <literal>src/main/headers</literal> is used by default.</para></section><section id="org.gradle.language.cpp.ProductionCppComponent:source" role="detail"><title><apilink class="org.gradle.api.file.ConfigurableFileCollection"/> <literal>source</literal> (read-only)</title><para>Defines the source files or directories of this component. You can add files or directories to this collection. When a directory is added, all source files are included for compilation.

</para><para>When this collection is empty, the directory <literal>src/main/cpp</literal> is used by default.</para></section><section id="org.gradle.language.cpp.ProductionCppComponent:targetMachines" role="detail"><title><classname><apilink class="org.gradle.api.provider.SetProperty"/>&lt;<apilink class="org.gradle.nativeplatform.TargetMachine"/>&gt;</classname> <literal>targetMachines</literal></title><para>Specifies the target machines this component should be built for.  The "machines" extension property (see <apilink class="org.gradle.nativeplatform.TargetMachineFactory"/>) can be used to construct common operating system and architecture combinations.

</para><para>For example:</para><programlisting language="java">
targetMachines = [machines.linux.x86_64, machines.windows.x86_64]
</programlisting></section></section><section><title>Method details</title><section id="org.gradle.language.cpp.ProductionCppComponent:privateHeaders(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>privateHeaders</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.ConfigurableFileCollection"/>&gt;</classname> action)</title><para>Configures the private header directories for this component.</para></section><section id="org.gradle.language.cpp.ProductionCppComponent:source(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>source</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.ConfigurableFileCollection"/>&gt;</classname> action)</title><para>Configures the source files or directories for this component.</para></section></section></chapter><chapter id="org.gradle.language.cpp.CppApplication"><title>CppApplication</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.language.cpp.CppApplication" style="javadoc"/></seg></seglistitem></segmentedlist><para>Configuration for a C++ application, defining the source files that make up the application plus other settings.

</para><para>An instance of this type is added as a project extension by the C++ Application Plugin.</para><section><title>Properties</title><table><title>Properties - CppApplication</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.language.cpp.CppApplication:baseName"><literal>baseName</literal></link></td><td><para>Specifies the base name for this component. This name is used to calculate various output file names. The default value is calculated from the project name.</para></td></tr><tr><td><link linkend="org.gradle.language.cpp.CppApplication:binaries"><literal>binaries</literal></link></td><td><para>The binaries of this component.</para></td></tr><tr><td><link linkend="org.gradle.language.cpp.CppApplication:developmentBinary"><literal>developmentBinary</literal></link></td><td><para>The binary of the component to use as the default for development.</para></td></tr><tr><td><link linkend="org.gradle.language.cpp.CppApplication:privateHeaders"><literal>privateHeaders</literal></link></td><td><para>Defines the private header file directories of this library.

</para></td></tr><tr><td><link linkend="org.gradle.language.cpp.CppApplication:source"><literal>source</literal></link></td><td><para>Defines the source files or directories of this component. You can add files or directories to this collection. When a directory is added, all source files are included for compilation.

</para></td></tr><tr><td><link linkend="org.gradle.language.cpp.CppApplication:targetMachines"><literal>targetMachines</literal></link></td><td><para>Specifies the target machines this component should be built for.  The "machines" extension property (see <apilink class="org.gradle.nativeplatform.TargetMachineFactory"/>) can be used to construct common operating system and architecture combinations.

</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - CppApplication</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.language.cpp.CppApplication:privateHeaders(org.gradle.api.Action)">privateHeaders</link>(action)</literal></td><td><para>Configures the private header directories for this component.</para></td></tr><tr><td><literal><link linkend="org.gradle.language.cpp.CppApplication:source(org.gradle.api.Action)">source</link>(action)</literal></td><td><para>Configures the source files or directories for this component.</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.language.cpp.CppApplication:baseName" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>baseName</literal></title><para>Specifies the base name for this component. This name is used to calculate various output file names. The default value is calculated from the project name.</para></section><section id="org.gradle.language.cpp.CppApplication:binaries" role="detail"><title><classname><apilink class="org.gradle.language.BinaryCollection"/>&lt;? extends <apilink class="org.gradle.api.component.SoftwareComponent"/>&gt;</classname> <literal>binaries</literal> (read-only)</title><para>The binaries of this component.</para></section><section id="org.gradle.language.cpp.CppApplication:developmentBinary" role="detail"><title><classname><apilink class="org.gradle.api.provider.Provider"/>&lt;? extends <apilink class="org.gradle.language.cpp.CppBinary"/>&gt;</classname> <literal>developmentBinary</literal></title><para>The binary of the component to use as the default for development.</para></section><section id="org.gradle.language.cpp.CppApplication:privateHeaders" role="detail"><title><apilink class="org.gradle.api.file.ConfigurableFileCollection"/> <literal>privateHeaders</literal> (read-only)</title><para>Defines the private header file directories of this library.

</para><para>When this collection is empty, the directory <literal>src/main/headers</literal> is used by default.</para></section><section id="org.gradle.language.cpp.CppApplication:source" role="detail"><title><apilink class="org.gradle.api.file.ConfigurableFileCollection"/> <literal>source</literal> (read-only)</title><para>Defines the source files or directories of this component. You can add files or directories to this collection. When a directory is added, all source files are included for compilation.

</para><para>When this collection is empty, the directory <literal>src/main/cpp</literal> is used by default.</para></section><section id="org.gradle.language.cpp.CppApplication:targetMachines" role="detail"><title><classname><apilink class="org.gradle.api.provider.SetProperty"/>&lt;<apilink class="org.gradle.nativeplatform.TargetMachine"/>&gt;</classname> <literal>targetMachines</literal></title><para>Specifies the target machines this component should be built for.  The "machines" extension property (see <apilink class="org.gradle.nativeplatform.TargetMachineFactory"/>) can be used to construct common operating system and architecture combinations.

</para><para>For example:</para><programlisting language="java">
targetMachines = [machines.linux.x86_64, machines.windows.x86_64]
</programlisting></section></section><section><title>Method details</title><section id="org.gradle.language.cpp.CppApplication:privateHeaders(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>privateHeaders</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.ConfigurableFileCollection"/>&gt;</classname> action)</title><para>Configures the private header directories for this component.</para></section><section id="org.gradle.language.cpp.CppApplication:source(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>source</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.ConfigurableFileCollection"/>&gt;</classname> action)</title><para>Configures the source files or directories for this component.</para></section></section></chapter><chapter id="org.gradle.language.cpp.CppLibrary"><title>CppLibrary</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.language.cpp.CppLibrary" style="javadoc"/></seg></seglistitem></segmentedlist><para>Configuration for a C++ library, defining the source files and header directories that make up the library plus other settings.

</para><para>An instance of this type is added as a project extension by the C++ library plugin.</para><section><title>Properties</title><table><title>Properties - CppLibrary</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.language.cpp.CppLibrary:baseName"><literal>baseName</literal></link></td><td><para>Specifies the base name for this component. This name is used to calculate various output file names. The default value is calculated from the project name.</para></td></tr><tr><td><link linkend="org.gradle.language.cpp.CppLibrary:binaries"><literal>binaries</literal></link></td><td><para>The binaries of this component.</para></td></tr><tr><td><link linkend="org.gradle.language.cpp.CppLibrary:developmentBinary"><literal>developmentBinary</literal></link></td><td><para>The binary of the component to use as the default for development.</para></td></tr><tr><td><link linkend="org.gradle.language.cpp.CppLibrary:linkage"><literal>linkage</literal></link></td><td><para>The list of linkage of this library.</para></td></tr><tr><td><link linkend="org.gradle.language.cpp.CppLibrary:privateHeaders"><literal>privateHeaders</literal></link></td><td><para>Defines the private header file directories of this library.

</para></td></tr><tr><td><link linkend="org.gradle.language.cpp.CppLibrary:publicHeaders"><literal>publicHeaders</literal></link></td><td><para>Defines the public header file directories of this library.

</para></td></tr><tr><td><link linkend="org.gradle.language.cpp.CppLibrary:source"><literal>source</literal></link></td><td><para>Defines the source files or directories of this component. You can add files or directories to this collection. When a directory is added, all source files are included for compilation.

</para></td></tr><tr><td><link linkend="org.gradle.language.cpp.CppLibrary:targetMachines"><literal>targetMachines</literal></link></td><td><para>Specifies the target machines this component should be built for.  The "machines" extension property (see <apilink class="org.gradle.nativeplatform.TargetMachineFactory"/>) can be used to construct common operating system and architecture combinations.

</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - CppLibrary</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.language.cpp.CppLibrary:privateHeaders(org.gradle.api.Action)">privateHeaders</link>(action)</literal></td><td><para>Configures the private header directories for this component.</para></td></tr><tr><td><literal><link linkend="org.gradle.language.cpp.CppLibrary:publicHeaders(org.gradle.api.Action)">publicHeaders</link>(action)</literal></td><td><para>Configures the public header directories for this component.</para></td></tr><tr><td><literal><link linkend="org.gradle.language.cpp.CppLibrary:source(org.gradle.api.Action)">source</link>(action)</literal></td><td><para>Configures the source files or directories for this component.</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.language.cpp.CppLibrary:baseName" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>baseName</literal></title><para>Specifies the base name for this component. This name is used to calculate various output file names. The default value is calculated from the project name.</para></section><section id="org.gradle.language.cpp.CppLibrary:binaries" role="detail"><title><classname><apilink class="org.gradle.language.BinaryCollection"/>&lt;? extends <apilink class="org.gradle.api.component.SoftwareComponent"/>&gt;</classname> <literal>binaries</literal> (read-only)</title><para>The binaries of this component.</para></section><section id="org.gradle.language.cpp.CppLibrary:developmentBinary" role="detail"><title><classname><apilink class="org.gradle.api.provider.Provider"/>&lt;? extends <apilink class="org.gradle.language.cpp.CppBinary"/>&gt;</classname> <literal>developmentBinary</literal></title><para>The binary of the component to use as the default for development.</para></section><section id="org.gradle.language.cpp.CppLibrary:linkage" role="detail"><title><classname><apilink class="org.gradle.api.provider.SetProperty"/>&lt;<apilink class="org.gradle.nativeplatform.Linkage"/>&gt;</classname> <literal>linkage</literal></title><para>The list of linkage of this library.</para></section><section id="org.gradle.language.cpp.CppLibrary:privateHeaders" role="detail"><title><apilink class="org.gradle.api.file.ConfigurableFileCollection"/> <literal>privateHeaders</literal> (read-only)</title><para>Defines the private header file directories of this library.

</para><para>When this collection is empty, the directory <literal>src/main/headers</literal> is used by default.</para></section><section id="org.gradle.language.cpp.CppLibrary:publicHeaders" role="detail"><title><apilink class="org.gradle.api.file.ConfigurableFileCollection"/> <literal>publicHeaders</literal> (read-only)</title><para>Defines the public header file directories of this library.

</para><para>When this collection is empty, the directory <literal>src/main/public</literal> is used by default.</para></section><section id="org.gradle.language.cpp.CppLibrary:source" role="detail"><title><apilink class="org.gradle.api.file.ConfigurableFileCollection"/> <literal>source</literal> (read-only)</title><para>Defines the source files or directories of this component. You can add files or directories to this collection. When a directory is added, all source files are included for compilation.

</para><para>When this collection is empty, the directory <literal>src/main/cpp</literal> is used by default.</para></section><section id="org.gradle.language.cpp.CppLibrary:targetMachines" role="detail"><title><classname><apilink class="org.gradle.api.provider.SetProperty"/>&lt;<apilink class="org.gradle.nativeplatform.TargetMachine"/>&gt;</classname> <literal>targetMachines</literal></title><para>Specifies the target machines this component should be built for.  The "machines" extension property (see <apilink class="org.gradle.nativeplatform.TargetMachineFactory"/>) can be used to construct common operating system and architecture combinations.

</para><para>For example:</para><programlisting language="java">
targetMachines = [machines.linux.x86_64, machines.windows.x86_64]
</programlisting></section></section><section><title>Method details</title><section id="org.gradle.language.cpp.CppLibrary:privateHeaders(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>privateHeaders</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.ConfigurableFileCollection"/>&gt;</classname> action)</title><para>Configures the private header directories for this component.</para></section><section id="org.gradle.language.cpp.CppLibrary:publicHeaders(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>publicHeaders</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.ConfigurableFileCollection"/>&gt;</classname> action)</title><para>Configures the public header directories for this component.</para></section><section id="org.gradle.language.cpp.CppLibrary:source(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>source</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.ConfigurableFileCollection"/>&gt;</classname> action)</title><para>Configures the source files or directories for this component.</para></section></section></chapter><chapter id="org.gradle.nativeplatform.test.TestSuiteComponent"><title>TestSuiteComponent</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.nativeplatform.test.TestSuiteComponent" style="javadoc"/></seg></seglistitem></segmentedlist><segmentedlist><segtitle>Known Subtypes</segtitle><seglistitem><seg><simplelist columns="1" type="vert"><member><apilink class="org.gradle.nativeplatform.test.cpp.CppTestSuite"/></member><member><apilink class="org.gradle.nativeplatform.test.xctest.SwiftXCTestSuite"/></member></simplelist></seg></seglistitem></segmentedlist><para>Represents a component that defines a test suite.</para><section><title>Properties</title><table><title>Properties - TestSuiteComponent</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.nativeplatform.test.TestSuiteComponent:testBinary"><literal>testBinary</literal></link></td><td><para>The binary to use as the default to run this test suite.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.nativeplatform.test.TestSuiteComponent:testBinary" role="detail"><title><classname><apilink class="org.gradle.api.provider.Provider"/>&lt;? extends <apilink class="org.gradle.nativeplatform.test.TestComponent"/>&gt;</classname> <literal>testBinary</literal></title><para>The binary to use as the default to run this test suite.</para></section></section></chapter><chapter id="org.gradle.nativeplatform.test.cpp.CppTestSuite"><title>CppTestSuite</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.nativeplatform.test.cpp.CppTestSuite" style="javadoc"/></seg></seglistitem></segmentedlist><para>A C++ test suite.</para><section><title>Properties</title><table><title>Properties - CppTestSuite</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.nativeplatform.test.cpp.CppTestSuite:baseName"><literal>baseName</literal></link></td><td><para>Specifies the base name for this component. This name is used to calculate various output file names. The default value is calculated from the project name.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.test.cpp.CppTestSuite:binaries"><literal>binaries</literal></link></td><td><para>The binaries of this component.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.test.cpp.CppTestSuite:privateHeaders"><literal>privateHeaders</literal></link></td><td><para>Defines the private header file directories of this library.

</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.test.cpp.CppTestSuite:source"><literal>source</literal></link></td><td><para>Defines the source files or directories of this component. You can add files or directories to this collection. When a directory is added, all source files are included for compilation.

</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.test.cpp.CppTestSuite:targetMachines"><literal>targetMachines</literal></link></td><td><para>Specifies the target machines this component should be built for.  The "machines" extension property (see <apilink class="org.gradle.nativeplatform.TargetMachineFactory"/>) can be used to construct common operating system and architecture combinations.

</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.test.cpp.CppTestSuite:testBinary"><literal>testBinary</literal></link></td><td><para>The binary to use as the default to run this test suite.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - CppTestSuite</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.nativeplatform.test.cpp.CppTestSuite:privateHeaders(org.gradle.api.Action)">privateHeaders</link>(action)</literal></td><td><para>Configures the private header directories for this component.</para></td></tr><tr><td><literal><link linkend="org.gradle.nativeplatform.test.cpp.CppTestSuite:source(org.gradle.api.Action)">source</link>(action)</literal></td><td><para>Configures the source files or directories for this component.</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.nativeplatform.test.cpp.CppTestSuite:baseName" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>baseName</literal></title><para>Specifies the base name for this component. This name is used to calculate various output file names. The default value is calculated from the project name.</para></section><section id="org.gradle.nativeplatform.test.cpp.CppTestSuite:binaries" role="detail"><title><classname><apilink class="org.gradle.language.BinaryCollection"/>&lt;? extends <apilink class="org.gradle.api.component.SoftwareComponent"/>&gt;</classname> <literal>binaries</literal> (read-only)</title><para>The binaries of this component.</para></section><section id="org.gradle.nativeplatform.test.cpp.CppTestSuite:privateHeaders" role="detail"><title><apilink class="org.gradle.api.file.ConfigurableFileCollection"/> <literal>privateHeaders</literal> (read-only)</title><para>Defines the private header file directories of this library.

</para><para>When this collection is empty, the directory <literal>src/main/headers</literal> is used by default.</para></section><section id="org.gradle.nativeplatform.test.cpp.CppTestSuite:source" role="detail"><title><apilink class="org.gradle.api.file.ConfigurableFileCollection"/> <literal>source</literal> (read-only)</title><para>Defines the source files or directories of this component. You can add files or directories to this collection. When a directory is added, all source files are included for compilation.

</para><para>When this collection is empty, the directory <literal>src/main/cpp</literal> is used by default.</para></section><section id="org.gradle.nativeplatform.test.cpp.CppTestSuite:targetMachines" role="detail"><title><classname><apilink class="org.gradle.api.provider.SetProperty"/>&lt;<apilink class="org.gradle.nativeplatform.TargetMachine"/>&gt;</classname> <literal>targetMachines</literal></title><para>Specifies the target machines this component should be built for.  The "machines" extension property (see <apilink class="org.gradle.nativeplatform.TargetMachineFactory"/>) can be used to construct common operating system and architecture combinations.

</para><para>For example:</para><programlisting language="java">
targetMachines = [machines.linux.x86_64, machines.windows.x86_64]
</programlisting></section><section id="org.gradle.nativeplatform.test.cpp.CppTestSuite:testBinary" role="detail"><title><classname><apilink class="org.gradle.api.provider.Provider"/>&lt;? extends <apilink class="org.gradle.nativeplatform.test.TestComponent"/>&gt;</classname> <literal>testBinary</literal></title><para>The binary to use as the default to run this test suite.</para></section></section><section><title>Method details</title><section id="org.gradle.nativeplatform.test.cpp.CppTestSuite:privateHeaders(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>privateHeaders</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.ConfigurableFileCollection"/>&gt;</classname> action)</title><para>Configures the private header directories for this component.</para></section><section id="org.gradle.nativeplatform.test.cpp.CppTestSuite:source(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>source</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.ConfigurableFileCollection"/>&gt;</classname> action)</title><para>Configures the source files or directories for this component.</para></section></section></chapter><chapter id="org.gradle.language.swift.SwiftComponent"><title>SwiftComponent</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.language.swift.SwiftComponent" style="javadoc"/></seg></seglistitem></segmentedlist><segmentedlist><segtitle>Known Subtypes</segtitle><seglistitem><seg><simplelist columns="1" type="vert"><member><apilink class="org.gradle.language.swift.ProductionSwiftComponent"/></member><member><apilink class="org.gradle.nativeplatform.test.xctest.SwiftXCTestSuite"/></member></simplelist></seg></seglistitem></segmentedlist><para>Configuration for a Swift component, such as a library or executable, defining the source files that make up the component plus other settings.

</para><para>Swift component is composed of some Swift source files that are compiled and then linked into some binary.</para><para>An instance of this type is added as a project extension by the Swift plugins.</para><section><title>Properties</title><table><title>Properties - SwiftComponent</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.language.swift.SwiftComponent:binaries"><literal>binaries</literal></link></td><td><para>The binaries of this component.</para></td></tr><tr><td><link linkend="org.gradle.language.swift.SwiftComponent:module"><literal>module</literal></link></td><td><para>Defines the Swift module for this component. The default value is calculated from the project name.</para></td></tr><tr><td><link linkend="org.gradle.language.swift.SwiftComponent:source"><literal>source</literal></link></td><td><para>Defines the source files or directories of this component. You can add files or directories to this collection. When a directory is added, all source files are included for compilation.

</para></td></tr><tr><td><link linkend="org.gradle.language.swift.SwiftComponent:targetMachines"><literal>targetMachines</literal></link></td><td><para>Specifies the target machines this component should be built for.  The "machines" extension property (see <apilink class="org.gradle.nativeplatform.TargetMachineFactory"/>) can be used to construct common operating system and architecture combinations.

</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - SwiftComponent</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.language.swift.SwiftComponent:source(org.gradle.api.Action)">source</link>(action)</literal></td><td><para>Configures the source files or directories for this component.</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.language.swift.SwiftComponent:binaries" role="detail"><title><classname><apilink class="org.gradle.language.BinaryCollection"/>&lt;? extends <apilink class="org.gradle.api.component.SoftwareComponent"/>&gt;</classname> <literal>binaries</literal> (read-only)</title><para>The binaries of this component.</para></section><section id="org.gradle.language.swift.SwiftComponent:module" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>module</literal></title><para>Defines the Swift module for this component. The default value is calculated from the project name.</para></section><section id="org.gradle.language.swift.SwiftComponent:source" role="detail"><title><apilink class="org.gradle.api.file.ConfigurableFileCollection"/> <literal>source</literal> (read-only)</title><para>Defines the source files or directories of this component. You can add files or directories to this collection. When a directory is added, all source files are included for compilation.

</para><para>When this collection is empty, the directory <literal>src/main/swift</literal> is used by default.</para></section><section id="org.gradle.language.swift.SwiftComponent:targetMachines" role="detail"><title><classname><apilink class="org.gradle.api.provider.SetProperty"/>&lt;<apilink class="org.gradle.nativeplatform.TargetMachine"/>&gt;</classname> <literal>targetMachines</literal></title><para>Specifies the target machines this component should be built for.  The "machines" extension property (see <apilink class="org.gradle.nativeplatform.TargetMachineFactory"/>) can be used to construct common operating system and architecture combinations.

</para><para>For example:</para><programlisting language="java">
targetMachines = [machines.linux.x86_64, machines.windows.x86_64]
</programlisting></section></section><section><title>Method details</title><section id="org.gradle.language.swift.SwiftComponent:source(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>source</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.ConfigurableFileCollection"/>&gt;</classname> action)</title><para>Configures the source files or directories for this component.</para></section></section></chapter><chapter id="org.gradle.language.swift.ProductionSwiftComponent"><title>ProductionSwiftComponent</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.language.swift.ProductionSwiftComponent" style="javadoc"/></seg></seglistitem></segmentedlist><segmentedlist><segtitle>Known Subtypes</segtitle><seglistitem><seg><simplelist columns="1" type="vert"><member><apilink class="org.gradle.language.swift.SwiftApplication"/></member><member><apilink class="org.gradle.language.swift.SwiftLibrary"/></member></simplelist></seg></seglistitem></segmentedlist><para>Represents a Swift component that is the main product of a project.</para><section><title>Properties</title><table><title>Properties - ProductionSwiftComponent</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.language.swift.ProductionSwiftComponent:binaries"><literal>binaries</literal></link></td><td><para>The binaries of this component.</para></td></tr><tr><td><link linkend="org.gradle.language.swift.ProductionSwiftComponent:developmentBinary"><literal>developmentBinary</literal></link></td><td><para>The binary of the component to use as the default for development.</para></td></tr><tr><td><link linkend="org.gradle.language.swift.ProductionSwiftComponent:module"><literal>module</literal></link></td><td><para>Defines the Swift module for this component. The default value is calculated from the project name.</para></td></tr><tr><td><link linkend="org.gradle.language.swift.ProductionSwiftComponent:source"><literal>source</literal></link></td><td><para>Defines the source files or directories of this component. You can add files or directories to this collection. When a directory is added, all source files are included for compilation.

</para></td></tr><tr><td><link linkend="org.gradle.language.swift.ProductionSwiftComponent:targetMachines"><literal>targetMachines</literal></link></td><td><para>Specifies the target machines this component should be built for.  The "machines" extension property (see <apilink class="org.gradle.nativeplatform.TargetMachineFactory"/>) can be used to construct common operating system and architecture combinations.

</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - ProductionSwiftComponent</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.language.swift.ProductionSwiftComponent:source(org.gradle.api.Action)">source</link>(action)</literal></td><td><para>Configures the source files or directories for this component.</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.language.swift.ProductionSwiftComponent:binaries" role="detail"><title><classname><apilink class="org.gradle.language.BinaryCollection"/>&lt;? extends <apilink class="org.gradle.api.component.SoftwareComponent"/>&gt;</classname> <literal>binaries</literal> (read-only)</title><para>The binaries of this component.</para></section><section id="org.gradle.language.swift.ProductionSwiftComponent:developmentBinary" role="detail"><title><classname><apilink class="org.gradle.api.provider.Provider"/>&lt;? extends <apilink class="org.gradle.language.swift.SwiftBinary"/>&gt;</classname> <literal>developmentBinary</literal></title><para>The binary of the component to use as the default for development.</para></section><section id="org.gradle.language.swift.ProductionSwiftComponent:module" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>module</literal></title><para>Defines the Swift module for this component. The default value is calculated from the project name.</para></section><section id="org.gradle.language.swift.ProductionSwiftComponent:source" role="detail"><title><apilink class="org.gradle.api.file.ConfigurableFileCollection"/> <literal>source</literal> (read-only)</title><para>Defines the source files or directories of this component. You can add files or directories to this collection. When a directory is added, all source files are included for compilation.

</para><para>When this collection is empty, the directory <literal>src/main/swift</literal> is used by default.</para></section><section id="org.gradle.language.swift.ProductionSwiftComponent:targetMachines" role="detail"><title><classname><apilink class="org.gradle.api.provider.SetProperty"/>&lt;<apilink class="org.gradle.nativeplatform.TargetMachine"/>&gt;</classname> <literal>targetMachines</literal></title><para>Specifies the target machines this component should be built for.  The "machines" extension property (see <apilink class="org.gradle.nativeplatform.TargetMachineFactory"/>) can be used to construct common operating system and architecture combinations.

</para><para>For example:</para><programlisting language="java">
targetMachines = [machines.linux.x86_64, machines.windows.x86_64]
</programlisting></section></section><section><title>Method details</title><section id="org.gradle.language.swift.ProductionSwiftComponent:source(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>source</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.ConfigurableFileCollection"/>&gt;</classname> action)</title><para>Configures the source files or directories for this component.</para></section></section></chapter><chapter id="org.gradle.language.swift.SwiftApplication"><title>SwiftApplication</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.language.swift.SwiftApplication" style="javadoc"/></seg></seglistitem></segmentedlist><para>Configuration for a Swift application, defining the source files that make up the application plus other settings.

</para><para>An instance of this type is added as a project extension by the Swift application plugin.</para><section><title>Properties</title><table><title>Properties - SwiftApplication</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.language.swift.SwiftApplication:binaries"><literal>binaries</literal></link></td><td><para>The binaries of this component.</para></td></tr><tr><td><link linkend="org.gradle.language.swift.SwiftApplication:developmentBinary"><literal>developmentBinary</literal></link></td><td><para>The binary of the component to use as the default for development.</para></td></tr><tr><td><link linkend="org.gradle.language.swift.SwiftApplication:module"><literal>module</literal></link></td><td><para>Defines the Swift module for this component. The default value is calculated from the project name.</para></td></tr><tr><td><link linkend="org.gradle.language.swift.SwiftApplication:source"><literal>source</literal></link></td><td><para>Defines the source files or directories of this component. You can add files or directories to this collection. When a directory is added, all source files are included for compilation.

</para></td></tr><tr><td><link linkend="org.gradle.language.swift.SwiftApplication:targetMachines"><literal>targetMachines</literal></link></td><td><para>Specifies the target machines this component should be built for.  The "machines" extension property (see <apilink class="org.gradle.nativeplatform.TargetMachineFactory"/>) can be used to construct common operating system and architecture combinations.

</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - SwiftApplication</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.language.swift.SwiftApplication:source(org.gradle.api.Action)">source</link>(action)</literal></td><td><para>Configures the source files or directories for this component.</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.language.swift.SwiftApplication:binaries" role="detail"><title><classname><apilink class="org.gradle.language.BinaryCollection"/>&lt;? extends <apilink class="org.gradle.api.component.SoftwareComponent"/>&gt;</classname> <literal>binaries</literal> (read-only)</title><para>The binaries of this component.</para></section><section id="org.gradle.language.swift.SwiftApplication:developmentBinary" role="detail"><title><classname><apilink class="org.gradle.api.provider.Provider"/>&lt;? extends <apilink class="org.gradle.language.swift.SwiftBinary"/>&gt;</classname> <literal>developmentBinary</literal></title><para>The binary of the component to use as the default for development.</para></section><section id="org.gradle.language.swift.SwiftApplication:module" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>module</literal></title><para>Defines the Swift module for this component. The default value is calculated from the project name.</para></section><section id="org.gradle.language.swift.SwiftApplication:source" role="detail"><title><apilink class="org.gradle.api.file.ConfigurableFileCollection"/> <literal>source</literal> (read-only)</title><para>Defines the source files or directories of this component. You can add files or directories to this collection. When a directory is added, all source files are included for compilation.

</para><para>When this collection is empty, the directory <literal>src/main/swift</literal> is used by default.</para></section><section id="org.gradle.language.swift.SwiftApplication:targetMachines" role="detail"><title><classname><apilink class="org.gradle.api.provider.SetProperty"/>&lt;<apilink class="org.gradle.nativeplatform.TargetMachine"/>&gt;</classname> <literal>targetMachines</literal></title><para>Specifies the target machines this component should be built for.  The "machines" extension property (see <apilink class="org.gradle.nativeplatform.TargetMachineFactory"/>) can be used to construct common operating system and architecture combinations.

</para><para>For example:</para><programlisting language="java">
targetMachines = [machines.linux.x86_64, machines.windows.x86_64]
</programlisting></section></section><section><title>Method details</title><section id="org.gradle.language.swift.SwiftApplication:source(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>source</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.ConfigurableFileCollection"/>&gt;</classname> action)</title><para>Configures the source files or directories for this component.</para></section></section></chapter><chapter id="org.gradle.language.swift.SwiftLibrary"><title>SwiftLibrary</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.language.swift.SwiftLibrary" style="javadoc"/></seg></seglistitem></segmentedlist><para>Configuration for a Swift library, defining the source files that make up the library plus other settings.

</para><para>An instance of this type is added as a project extension by the Swift library plugin.</para><section><title>Properties</title><table><title>Properties - SwiftLibrary</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.language.swift.SwiftLibrary:binaries"><literal>binaries</literal></link></td><td><para>The binaries of this component.</para></td></tr><tr><td><link linkend="org.gradle.language.swift.SwiftLibrary:developmentBinary"><literal>developmentBinary</literal></link></td><td><para>The binary of the component to use as the default for development.</para></td></tr><tr><td><link linkend="org.gradle.language.swift.SwiftLibrary:linkage"><literal>linkage</literal></link></td><td><para>The list of linkage of this library.</para></td></tr><tr><td><link linkend="org.gradle.language.swift.SwiftLibrary:module"><literal>module</literal></link></td><td><para>Defines the Swift module for this component. The default value is calculated from the project name.</para></td></tr><tr><td><link linkend="org.gradle.language.swift.SwiftLibrary:source"><literal>source</literal></link></td><td><para>Defines the source files or directories of this component. You can add files or directories to this collection. When a directory is added, all source files are included for compilation.

</para></td></tr><tr><td><link linkend="org.gradle.language.swift.SwiftLibrary:targetMachines"><literal>targetMachines</literal></link></td><td><para>Specifies the target machines this component should be built for.  The "machines" extension property (see <apilink class="org.gradle.nativeplatform.TargetMachineFactory"/>) can be used to construct common operating system and architecture combinations.

</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - SwiftLibrary</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.language.swift.SwiftLibrary:source(org.gradle.api.Action)">source</link>(action)</literal></td><td><para>Configures the source files or directories for this component.</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.language.swift.SwiftLibrary:binaries" role="detail"><title><classname><apilink class="org.gradle.language.BinaryCollection"/>&lt;? extends <apilink class="org.gradle.api.component.SoftwareComponent"/>&gt;</classname> <literal>binaries</literal> (read-only)</title><para>The binaries of this component.</para></section><section id="org.gradle.language.swift.SwiftLibrary:developmentBinary" role="detail"><title><classname><apilink class="org.gradle.api.provider.Provider"/>&lt;? extends <apilink class="org.gradle.language.swift.SwiftBinary"/>&gt;</classname> <literal>developmentBinary</literal></title><para>The binary of the component to use as the default for development.</para></section><section id="org.gradle.language.swift.SwiftLibrary:linkage" role="detail"><title><classname><apilink class="org.gradle.api.provider.SetProperty"/>&lt;<apilink class="org.gradle.nativeplatform.Linkage"/>&gt;</classname> <literal>linkage</literal></title><para>The list of linkage of this library.</para></section><section id="org.gradle.language.swift.SwiftLibrary:module" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>module</literal></title><para>Defines the Swift module for this component. The default value is calculated from the project name.</para></section><section id="org.gradle.language.swift.SwiftLibrary:source" role="detail"><title><apilink class="org.gradle.api.file.ConfigurableFileCollection"/> <literal>source</literal> (read-only)</title><para>Defines the source files or directories of this component. You can add files or directories to this collection. When a directory is added, all source files are included for compilation.

</para><para>When this collection is empty, the directory <literal>src/main/swift</literal> is used by default.</para></section><section id="org.gradle.language.swift.SwiftLibrary:targetMachines" role="detail"><title><classname><apilink class="org.gradle.api.provider.SetProperty"/>&lt;<apilink class="org.gradle.nativeplatform.TargetMachine"/>&gt;</classname> <literal>targetMachines</literal></title><para>Specifies the target machines this component should be built for.  The "machines" extension property (see <apilink class="org.gradle.nativeplatform.TargetMachineFactory"/>) can be used to construct common operating system and architecture combinations.

</para><para>For example:</para><programlisting language="java">
targetMachines = [machines.linux.x86_64, machines.windows.x86_64]
</programlisting></section></section><section><title>Method details</title><section id="org.gradle.language.swift.SwiftLibrary:source(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>source</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.ConfigurableFileCollection"/>&gt;</classname> action)</title><para>Configures the source files or directories for this component.</para></section></section></chapter><chapter id="org.gradle.nativeplatform.test.xctest.SwiftXCTestSuite"><title>SwiftXCTestSuite</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.nativeplatform.test.xctest.SwiftXCTestSuite" style="javadoc"/></seg></seglistitem></segmentedlist><para>A XCTest suite, implemented in Swift.</para><section><title>Properties</title><table><title>Properties - SwiftXCTestSuite</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.nativeplatform.test.xctest.SwiftXCTestSuite:binaries"><literal>binaries</literal></link></td><td><para>The binaries of this component.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.test.xctest.SwiftXCTestSuite:module"><literal>module</literal></link></td><td><para>Defines the Swift module for this component. The default value is calculated from the project name.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.test.xctest.SwiftXCTestSuite:source"><literal>source</literal></link></td><td><para>Defines the source files or directories of this component. You can add files or directories to this collection. When a directory is added, all source files are included for compilation.

</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.test.xctest.SwiftXCTestSuite:targetMachines"><literal>targetMachines</literal></link></td><td><para>Specifies the target machines this component should be built for.  The "machines" extension property (see <apilink class="org.gradle.nativeplatform.TargetMachineFactory"/>) can be used to construct common operating system and architecture combinations.

</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.test.xctest.SwiftXCTestSuite:testBinary"><literal>testBinary</literal></link></td><td><para>The binary to use as the default to run this test suite.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - SwiftXCTestSuite</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.nativeplatform.test.xctest.SwiftXCTestSuite:source(org.gradle.api.Action)">source</link>(action)</literal></td><td><para>Configures the source files or directories for this component.</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.nativeplatform.test.xctest.SwiftXCTestSuite:binaries" role="detail"><title><classname><apilink class="org.gradle.language.BinaryCollection"/>&lt;? extends <apilink class="org.gradle.api.component.SoftwareComponent"/>&gt;</classname> <literal>binaries</literal> (read-only)</title><para>The binaries of this component.</para></section><section id="org.gradle.nativeplatform.test.xctest.SwiftXCTestSuite:module" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>module</literal></title><para>Defines the Swift module for this component. The default value is calculated from the project name.</para></section><section id="org.gradle.nativeplatform.test.xctest.SwiftXCTestSuite:source" role="detail"><title><apilink class="org.gradle.api.file.ConfigurableFileCollection"/> <literal>source</literal> (read-only)</title><para>Defines the source files or directories of this component. You can add files or directories to this collection. When a directory is added, all source files are included for compilation.

</para><para>When this collection is empty, the directory <literal>src/main/swift</literal> is used by default.</para></section><section id="org.gradle.nativeplatform.test.xctest.SwiftXCTestSuite:targetMachines" role="detail"><title><classname><apilink class="org.gradle.api.provider.SetProperty"/>&lt;<apilink class="org.gradle.nativeplatform.TargetMachine"/>&gt;</classname> <literal>targetMachines</literal></title><para>Specifies the target machines this component should be built for.  The "machines" extension property (see <apilink class="org.gradle.nativeplatform.TargetMachineFactory"/>) can be used to construct common operating system and architecture combinations.

</para><para>For example:</para><programlisting language="java">
targetMachines = [machines.linux.x86_64, machines.windows.x86_64]
</programlisting></section><section id="org.gradle.nativeplatform.test.xctest.SwiftXCTestSuite:testBinary" role="detail"><title><classname><apilink class="org.gradle.api.provider.Provider"/>&lt;? extends <apilink class="org.gradle.nativeplatform.test.TestComponent"/>&gt;</classname> <literal>testBinary</literal></title><para>The binary to use as the default to run this test suite.</para></section></section><section><title>Method details</title><section id="org.gradle.nativeplatform.test.xctest.SwiftXCTestSuite:source(org.gradle.api.Action)" role="detail"><title><classname>void</classname> <literal>source</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.file.ConfigurableFileCollection"/>&gt;</classname> action)</title><para>Configures the source files or directories for this component.</para></section></section></chapter><chapter id="org.gradle.language.nativeplatform.tasks.AbstractNativeCompileTask"><title>AbstractNativeCompileTask</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.language.nativeplatform.tasks.AbstractNativeCompileTask" style="javadoc"/></seg></seglistitem></segmentedlist><segmentedlist><segtitle>Known Subtypes</segtitle><seglistitem><seg><simplelist columns="1" type="vert"><member><apilink class="org.gradle.language.nativeplatform.tasks.AbstractNativeSourceCompileTask"/></member></simplelist></seg></seglistitem></segmentedlist><para>Compiles native source files into object files.</para><section><title>Properties</title><table><title>Properties - AbstractNativeCompileTask</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.language.nativeplatform.tasks.AbstractNativeCompileTask:compilerArgs"><literal>compilerArgs</literal></link></td><td><para><emphasis>Additional</emphasis> arguments to provide to the compiler.</para></td></tr><tr><td><link linkend="org.gradle.language.nativeplatform.tasks.AbstractNativeCompileTask:debuggable"><literal>debuggable</literal></link></td><td><para>Should the compiler generate debuggable code?</para></td></tr><tr><td><link linkend="org.gradle.language.nativeplatform.tasks.AbstractNativeCompileTask:includes"><literal>includes</literal></link></td><td><para>The header directories to be used for compilation.</para></td></tr><tr><td><link linkend="org.gradle.language.nativeplatform.tasks.AbstractNativeCompileTask:macros"><literal>macros</literal></link></td><td><para>Macros that should be defined for the compiler.</para></td></tr><tr><td><link linkend="org.gradle.language.nativeplatform.tasks.AbstractNativeCompileTask:objectFileDir"><literal>objectFileDir</literal></link></td><td><para>The directory where object files will be generated.</para></td></tr><tr><td><link linkend="org.gradle.language.nativeplatform.tasks.AbstractNativeCompileTask:optimized"><literal>optimized</literal></link></td><td><para>Should the compiler generate optimized code?</para></td></tr><tr><td><link linkend="org.gradle.language.nativeplatform.tasks.AbstractNativeCompileTask:positionIndependentCode"><literal>positionIndependentCode</literal></link></td><td><para>Should the compiler generate position independent code?</para></td></tr><tr><td><link linkend="org.gradle.language.nativeplatform.tasks.AbstractNativeCompileTask:source"><literal>source</literal></link></td><td><para>The source files to be compiled.</para></td></tr><tr><td><link linkend="org.gradle.language.nativeplatform.tasks.AbstractNativeCompileTask:systemIncludes"><literal>systemIncludes</literal></link></td><td><para>The system include directories to be used for compilation.</para></td></tr><tr><td><link linkend="org.gradle.language.nativeplatform.tasks.AbstractNativeCompileTask:targetPlatform"><literal>targetPlatform</literal></link></td><td><para>The platform being compiled for.</para></td></tr><tr><td><link linkend="org.gradle.language.nativeplatform.tasks.AbstractNativeCompileTask:toolChain"><literal>toolChain</literal></link></td><td><para>The tool chain used for compilation.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - AbstractNativeCompileTask</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.language.nativeplatform.tasks.AbstractNativeCompileTask:includes(java.lang.Object)">includes</link>(includeRoots)</literal></td><td><para>Add directories where the compiler should search for header files.</para></td></tr><tr><td><literal><link linkend="org.gradle.language.nativeplatform.tasks.AbstractNativeCompileTask:source(java.lang.Object)">source</link>(sourceFiles)</literal></td><td><para>Adds a set of source files to be compiled. The provided sourceFiles object is evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/>.</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.language.nativeplatform.tasks.AbstractNativeCompileTask:compilerArgs" role="detail"><title><classname><apilink class="org.gradle.api.provider.ListProperty"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>compilerArgs</literal></title><para><emphasis>Additional</emphasis> arguments to provide to the compiler.</para></section><section id="org.gradle.language.nativeplatform.tasks.AbstractNativeCompileTask:debuggable" role="detail"><title><classname>boolean</classname> <literal>debuggable</literal></title><para>Should the compiler generate debuggable code?</para></section><section id="org.gradle.language.nativeplatform.tasks.AbstractNativeCompileTask:includes" role="detail"><title><apilink class="org.gradle.api.file.ConfigurableFileCollection"/> <literal>includes</literal> (read-only)</title><para>The header directories to be used for compilation.</para></section><section id="org.gradle.language.nativeplatform.tasks.AbstractNativeCompileTask:macros" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>macros</literal></title><para>Macros that should be defined for the compiler.</para></section><section id="org.gradle.language.nativeplatform.tasks.AbstractNativeCompileTask:objectFileDir" role="detail"><title><apilink class="org.gradle.api.file.DirectoryProperty"/> <literal>objectFileDir</literal></title><para>The directory where object files will be generated.</para></section><section id="org.gradle.language.nativeplatform.tasks.AbstractNativeCompileTask:optimized" role="detail"><title><classname>boolean</classname> <literal>optimized</literal></title><para>Should the compiler generate optimized code?</para></section><section id="org.gradle.language.nativeplatform.tasks.AbstractNativeCompileTask:positionIndependentCode" role="detail"><title><classname>boolean</classname> <literal>positionIndependentCode</literal></title><para>Should the compiler generate position independent code?</para></section><section id="org.gradle.language.nativeplatform.tasks.AbstractNativeCompileTask:source" role="detail"><title><apilink class="org.gradle.api.file.ConfigurableFileCollection"/> <literal>source</literal> (read-only)</title><para>The source files to be compiled.</para></section><section id="org.gradle.language.nativeplatform.tasks.AbstractNativeCompileTask:systemIncludes" role="detail"><title><apilink class="org.gradle.api.file.ConfigurableFileCollection"/> <literal>systemIncludes</literal> (read-only)</title><para>The system include directories to be used for compilation.</para></section><section id="org.gradle.language.nativeplatform.tasks.AbstractNativeCompileTask:targetPlatform" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<apilink class="org.gradle.nativeplatform.platform.NativePlatform"/>&gt;</classname> <literal>targetPlatform</literal></title><para>The platform being compiled for.</para></section><section id="org.gradle.language.nativeplatform.tasks.AbstractNativeCompileTask:toolChain" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<apilink class="org.gradle.nativeplatform.toolchain.NativeToolChain"/>&gt;</classname> <literal>toolChain</literal></title><para>The tool chain used for compilation.</para></section></section><section><title>Method details</title><section id="org.gradle.language.nativeplatform.tasks.AbstractNativeCompileTask:includes(java.lang.Object)" role="detail"><title><classname>void</classname> <literal>includes</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> includeRoots)</title><para>Add directories where the compiler should search for header files.</para></section><section id="org.gradle.language.nativeplatform.tasks.AbstractNativeCompileTask:source(java.lang.Object)" role="detail"><title><classname>void</classname> <literal>source</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> sourceFiles)</title><para>Adds a set of source files to be compiled. The provided sourceFiles object is evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/>.</para></section></section></chapter><chapter id="org.gradle.language.nativeplatform.tasks.AbstractNativeSourceCompileTask"><title>AbstractNativeSourceCompileTask</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.language.nativeplatform.tasks.AbstractNativeSourceCompileTask" style="javadoc"/></seg></seglistitem></segmentedlist><segmentedlist><segtitle>Known Subtypes</segtitle><seglistitem><seg><simplelist columns="3" type="vert"><member><apilink class="org.gradle.language.cpp.tasks.CppCompile"/></member><member><apilink class="org.gradle.language.c.tasks.CCompile"/></member><member><apilink class="org.gradle.language.objectivec.tasks.ObjectiveCCompile"/></member><member><apilink class="org.gradle.language.objectivecpp.tasks.ObjectiveCppCompile"/></member></simplelist></seg></seglistitem></segmentedlist><para>Compiles native source files into object files.</para><section><title>Properties</title><table><title>Properties - AbstractNativeSourceCompileTask</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.language.nativeplatform.tasks.AbstractNativeCompileTask:compilerArgs"><literal>compilerArgs</literal></link></td><td><para><emphasis>Additional</emphasis> arguments to provide to the compiler.</para></td></tr><tr><td><link linkend="org.gradle.language.nativeplatform.tasks.AbstractNativeCompileTask:debuggable"><literal>debuggable</literal></link></td><td><para>Should the compiler generate debuggable code?</para></td></tr><tr><td><link linkend="org.gradle.language.nativeplatform.tasks.AbstractNativeCompileTask:includes"><literal>includes</literal></link></td><td><para>The header directories to be used for compilation.</para></td></tr><tr><td><link linkend="org.gradle.language.nativeplatform.tasks.AbstractNativeCompileTask:macros"><literal>macros</literal></link></td><td><para>Macros that should be defined for the compiler.</para></td></tr><tr><td><link linkend="org.gradle.language.nativeplatform.tasks.AbstractNativeCompileTask:objectFileDir"><literal>objectFileDir</literal></link></td><td><para>The directory where object files will be generated.</para></td></tr><tr><td><link linkend="org.gradle.language.nativeplatform.tasks.AbstractNativeCompileTask:optimized"><literal>optimized</literal></link></td><td><para>Should the compiler generate optimized code?</para></td></tr><tr><td><link linkend="org.gradle.language.nativeplatform.tasks.AbstractNativeCompileTask:positionIndependentCode"><literal>positionIndependentCode</literal></link></td><td><para>Should the compiler generate position independent code?</para></td></tr><tr><td><link linkend="org.gradle.language.nativeplatform.tasks.AbstractNativeCompileTask:source"><literal>source</literal></link></td><td><para>The source files to be compiled.</para></td></tr><tr><td><link linkend="org.gradle.language.nativeplatform.tasks.AbstractNativeCompileTask:systemIncludes"><literal>systemIncludes</literal></link></td><td><para>The system include directories to be used for compilation.</para></td></tr><tr><td><link linkend="org.gradle.language.nativeplatform.tasks.AbstractNativeCompileTask:targetPlatform"><literal>targetPlatform</literal></link></td><td><para>The platform being compiled for.</para></td></tr><tr><td><link linkend="org.gradle.language.nativeplatform.tasks.AbstractNativeCompileTask:toolChain"><literal>toolChain</literal></link></td><td><para>The tool chain used for compilation.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - AbstractNativeSourceCompileTask</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.language.nativeplatform.tasks.AbstractNativeCompileTask:includes(java.lang.Object)">includes</link>(includeRoots)</literal></td><td><para>Add directories where the compiler should search for header files.</para></td></tr><tr><td><literal><link linkend="org.gradle.language.nativeplatform.tasks.AbstractNativeCompileTask:source(java.lang.Object)">source</link>(sourceFiles)</literal></td><td><para>Adds a set of source files to be compiled. The provided sourceFiles object is evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/>.</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.language.nativeplatform.tasks.AbstractNativeCompileTask:compilerArgs" role="detail"><title><classname><apilink class="org.gradle.api.provider.ListProperty"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>compilerArgs</literal></title><para><emphasis>Additional</emphasis> arguments to provide to the compiler.</para></section><section id="org.gradle.language.nativeplatform.tasks.AbstractNativeCompileTask:debuggable" role="detail"><title><classname>boolean</classname> <literal>debuggable</literal></title><para>Should the compiler generate debuggable code?</para></section><section id="org.gradle.language.nativeplatform.tasks.AbstractNativeCompileTask:includes" role="detail"><title><apilink class="org.gradle.api.file.ConfigurableFileCollection"/> <literal>includes</literal> (read-only)</title><para>The header directories to be used for compilation.</para></section><section id="org.gradle.language.nativeplatform.tasks.AbstractNativeCompileTask:macros" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>macros</literal></title><para>Macros that should be defined for the compiler.</para></section><section id="org.gradle.language.nativeplatform.tasks.AbstractNativeCompileTask:objectFileDir" role="detail"><title><apilink class="org.gradle.api.file.DirectoryProperty"/> <literal>objectFileDir</literal></title><para>The directory where object files will be generated.</para></section><section id="org.gradle.language.nativeplatform.tasks.AbstractNativeCompileTask:optimized" role="detail"><title><classname>boolean</classname> <literal>optimized</literal></title><para>Should the compiler generate optimized code?</para></section><section id="org.gradle.language.nativeplatform.tasks.AbstractNativeCompileTask:positionIndependentCode" role="detail"><title><classname>boolean</classname> <literal>positionIndependentCode</literal></title><para>Should the compiler generate position independent code?</para></section><section id="org.gradle.language.nativeplatform.tasks.AbstractNativeCompileTask:source" role="detail"><title><apilink class="org.gradle.api.file.ConfigurableFileCollection"/> <literal>source</literal> (read-only)</title><para>The source files to be compiled.</para></section><section id="org.gradle.language.nativeplatform.tasks.AbstractNativeCompileTask:systemIncludes" role="detail"><title><apilink class="org.gradle.api.file.ConfigurableFileCollection"/> <literal>systemIncludes</literal> (read-only)</title><para>The system include directories to be used for compilation.</para></section><section id="org.gradle.language.nativeplatform.tasks.AbstractNativeCompileTask:targetPlatform" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<apilink class="org.gradle.nativeplatform.platform.NativePlatform"/>&gt;</classname> <literal>targetPlatform</literal></title><para>The platform being compiled for.</para></section><section id="org.gradle.language.nativeplatform.tasks.AbstractNativeCompileTask:toolChain" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<apilink class="org.gradle.nativeplatform.toolchain.NativeToolChain"/>&gt;</classname> <literal>toolChain</literal></title><para>The tool chain used for compilation.</para></section></section><section><title>Method details</title><section id="org.gradle.language.nativeplatform.tasks.AbstractNativeCompileTask:includes(java.lang.Object)" role="detail"><title><classname>void</classname> <literal>includes</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> includeRoots)</title><para>Add directories where the compiler should search for header files.</para></section><section id="org.gradle.language.nativeplatform.tasks.AbstractNativeCompileTask:source(java.lang.Object)" role="detail"><title><classname>void</classname> <literal>source</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> sourceFiles)</title><para>Adds a set of source files to be compiled. The provided sourceFiles object is evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/>.</para></section></section></chapter><chapter id="org.gradle.language.cpp.tasks.CppCompile"><title>CppCompile</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.language.cpp.tasks.CppCompile" style="javadoc"/></seg></seglistitem></segmentedlist><para>Compiles C++ source files into object files.</para><section><title>Properties</title><table><title>Properties - CppCompile</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.language.cpp.tasks.CppCompile:compilerArgs"><literal>compilerArgs</literal></link></td><td><para><emphasis>Additional</emphasis> arguments to provide to the compiler.</para></td></tr><tr><td><link linkend="org.gradle.language.cpp.tasks.CppCompile:debuggable"><literal>debuggable</literal></link></td><td><para>Should the compiler generate debuggable code?</para></td></tr><tr><td><link linkend="org.gradle.language.cpp.tasks.CppCompile:includes"><literal>includes</literal></link></td><td><para>The header directories to be used for compilation.</para></td></tr><tr><td><link linkend="org.gradle.language.cpp.tasks.CppCompile:macros"><literal>macros</literal></link></td><td><para>Macros that should be defined for the compiler.</para></td></tr><tr><td><link linkend="org.gradle.language.cpp.tasks.CppCompile:objectFileDir"><literal>objectFileDir</literal></link></td><td><para>The directory where object files will be generated.</para></td></tr><tr><td><link linkend="org.gradle.language.cpp.tasks.CppCompile:optimized"><literal>optimized</literal></link></td><td><para>Should the compiler generate optimized code?</para></td></tr><tr><td><link linkend="org.gradle.language.cpp.tasks.CppCompile:positionIndependentCode"><literal>positionIndependentCode</literal></link></td><td><para>Should the compiler generate position independent code?</para></td></tr><tr><td><link linkend="org.gradle.language.cpp.tasks.CppCompile:source"><literal>source</literal></link></td><td><para>The source files to be compiled.</para></td></tr><tr><td><link linkend="org.gradle.language.cpp.tasks.CppCompile:systemIncludes"><literal>systemIncludes</literal></link></td><td><para>The system include directories to be used for compilation.</para></td></tr><tr><td><link linkend="org.gradle.language.cpp.tasks.CppCompile:targetPlatform"><literal>targetPlatform</literal></link></td><td><para>The platform being compiled for.</para></td></tr><tr><td><link linkend="org.gradle.language.cpp.tasks.CppCompile:toolChain"><literal>toolChain</literal></link></td><td><para>The tool chain used for compilation.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - CppCompile</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.language.cpp.tasks.CppCompile:includes(java.lang.Object)">includes</link>(includeRoots)</literal></td><td><para>Add directories where the compiler should search for header files.</para></td></tr><tr><td><literal><link linkend="org.gradle.language.cpp.tasks.CppCompile:source(java.lang.Object)">source</link>(sourceFiles)</literal></td><td><para>Adds a set of source files to be compiled. The provided sourceFiles object is evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/>.</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.language.cpp.tasks.CppCompile:compilerArgs" role="detail"><title><classname><apilink class="org.gradle.api.provider.ListProperty"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>compilerArgs</literal></title><para><emphasis>Additional</emphasis> arguments to provide to the compiler.</para></section><section id="org.gradle.language.cpp.tasks.CppCompile:debuggable" role="detail"><title><classname>boolean</classname> <literal>debuggable</literal></title><para>Should the compiler generate debuggable code?</para></section><section id="org.gradle.language.cpp.tasks.CppCompile:includes" role="detail"><title><apilink class="org.gradle.api.file.ConfigurableFileCollection"/> <literal>includes</literal> (read-only)</title><para>The header directories to be used for compilation.</para></section><section id="org.gradle.language.cpp.tasks.CppCompile:macros" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>macros</literal></title><para>Macros that should be defined for the compiler.</para></section><section id="org.gradle.language.cpp.tasks.CppCompile:objectFileDir" role="detail"><title><apilink class="org.gradle.api.file.DirectoryProperty"/> <literal>objectFileDir</literal></title><para>The directory where object files will be generated.</para></section><section id="org.gradle.language.cpp.tasks.CppCompile:optimized" role="detail"><title><classname>boolean</classname> <literal>optimized</literal></title><para>Should the compiler generate optimized code?</para></section><section id="org.gradle.language.cpp.tasks.CppCompile:positionIndependentCode" role="detail"><title><classname>boolean</classname> <literal>positionIndependentCode</literal></title><para>Should the compiler generate position independent code?</para></section><section id="org.gradle.language.cpp.tasks.CppCompile:source" role="detail"><title><apilink class="org.gradle.api.file.ConfigurableFileCollection"/> <literal>source</literal> (read-only)</title><para>The source files to be compiled.</para></section><section id="org.gradle.language.cpp.tasks.CppCompile:systemIncludes" role="detail"><title><apilink class="org.gradle.api.file.ConfigurableFileCollection"/> <literal>systemIncludes</literal> (read-only)</title><para>The system include directories to be used for compilation.</para></section><section id="org.gradle.language.cpp.tasks.CppCompile:targetPlatform" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<apilink class="org.gradle.nativeplatform.platform.NativePlatform"/>&gt;</classname> <literal>targetPlatform</literal></title><para>The platform being compiled for.</para></section><section id="org.gradle.language.cpp.tasks.CppCompile:toolChain" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<apilink class="org.gradle.nativeplatform.toolchain.NativeToolChain"/>&gt;</classname> <literal>toolChain</literal></title><para>The tool chain used for compilation.</para></section></section><section><title>Method details</title><section id="org.gradle.language.cpp.tasks.CppCompile:includes(java.lang.Object)" role="detail"><title><classname>void</classname> <literal>includes</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> includeRoots)</title><para>Add directories where the compiler should search for header files.</para></section><section id="org.gradle.language.cpp.tasks.CppCompile:source(java.lang.Object)" role="detail"><title><classname>void</classname> <literal>source</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> sourceFiles)</title><para>Adds a set of source files to be compiled. The provided sourceFiles object is evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/>.</para></section></section></chapter><chapter id="org.gradle.language.swift.tasks.SwiftCompile"><title>SwiftCompile</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.language.swift.tasks.SwiftCompile" style="javadoc"/></seg></seglistitem></segmentedlist><para>Compiles Swift source files into object files.</para><section><title>Properties</title><table><title>Properties - SwiftCompile</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.language.swift.tasks.SwiftCompile:compilerArgs"><literal>compilerArgs</literal></link></td><td><para><emphasis>Additional</emphasis> arguments to provide to the compiler.</para></td></tr><tr><td><link linkend="org.gradle.language.swift.tasks.SwiftCompile:debuggable"><literal>debuggable</literal></link></td><td><para>Should the compiler generate debuggable code?</para></td></tr><tr><td><link linkend="org.gradle.language.swift.tasks.SwiftCompile:macros"><literal>macros</literal></link></td><td><para>Macros that should be defined for the compiler.

</para></td></tr><tr><td><link linkend="org.gradle.language.swift.tasks.SwiftCompile:moduleFile"><literal>moduleFile</literal></link></td><td><para>The location to write the Swift module file to.</para></td></tr><tr><td><link linkend="org.gradle.language.swift.tasks.SwiftCompile:moduleName"><literal>moduleName</literal></link></td><td><para>The name of the module to produce.</para></td></tr><tr><td><link linkend="org.gradle.language.swift.tasks.SwiftCompile:modules"><literal>modules</literal></link></td><td><para>The modules required to compile the source.</para></td></tr><tr><td><link linkend="org.gradle.language.swift.tasks.SwiftCompile:objectFileDir"><literal>objectFileDir</literal></link></td><td><para>The directory where object files will be generated.</para></td></tr><tr><td><link linkend="org.gradle.language.swift.tasks.SwiftCompile:optimized"><literal>optimized</literal></link></td><td><para>Should the compiler generate optimized code?</para></td></tr><tr><td><link linkend="org.gradle.language.swift.tasks.SwiftCompile:source"><literal>source</literal></link></td><td><para>The source files to be compiled.</para></td></tr><tr><td><link linkend="org.gradle.language.swift.tasks.SwiftCompile:sourceCompatibility"><literal>sourceCompatibility</literal></link></td><td><para>The Swift language level to use to compile the source files.</para></td></tr><tr><td><link linkend="org.gradle.language.swift.tasks.SwiftCompile:targetPlatform"><literal>targetPlatform</literal></link></td><td><para>The platform being compiled for.</para></td></tr><tr><td><link linkend="org.gradle.language.swift.tasks.SwiftCompile:toolChain"><literal>toolChain</literal></link></td><td><para>The tool chain used for compilation.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.language.swift.tasks.SwiftCompile:compilerArgs" role="detail"><title><classname><apilink class="org.gradle.api.provider.ListProperty"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>compilerArgs</literal></title><para><emphasis>Additional</emphasis> arguments to provide to the compiler.</para></section><section id="org.gradle.language.swift.tasks.SwiftCompile:debuggable" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html"><classname>Boolean</classname></ulink>&gt;</classname> <literal>debuggable</literal></title><para>Should the compiler generate debuggable code?</para></section><section id="org.gradle.language.swift.tasks.SwiftCompile:macros" role="detail"><title><classname><apilink class="org.gradle.api.provider.ListProperty"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>macros</literal></title><para>Macros that should be defined for the compiler.

</para><para>Macros do not have values in Swift; they are either present or absent.</para></section><section id="org.gradle.language.swift.tasks.SwiftCompile:moduleFile" role="detail"><title><apilink class="org.gradle.api.file.RegularFileProperty"/> <literal>moduleFile</literal></title><para>The location to write the Swift module file to.</para></section><section id="org.gradle.language.swift.tasks.SwiftCompile:moduleName" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>moduleName</literal></title><para>The name of the module to produce.</para></section><section id="org.gradle.language.swift.tasks.SwiftCompile:modules" role="detail"><title><apilink class="org.gradle.api.file.ConfigurableFileCollection"/> <literal>modules</literal> (read-only)</title><para>The modules required to compile the source.</para></section><section id="org.gradle.language.swift.tasks.SwiftCompile:objectFileDir" role="detail"><title><apilink class="org.gradle.api.file.DirectoryProperty"/> <literal>objectFileDir</literal></title><para>The directory where object files will be generated.</para></section><section id="org.gradle.language.swift.tasks.SwiftCompile:optimized" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html"><classname>Boolean</classname></ulink>&gt;</classname> <literal>optimized</literal></title><para>Should the compiler generate optimized code?</para></section><section id="org.gradle.language.swift.tasks.SwiftCompile:source" role="detail"><title><apilink class="org.gradle.api.file.ConfigurableFileCollection"/> <literal>source</literal> (read-only)</title><para>The source files to be compiled.</para></section><section id="org.gradle.language.swift.tasks.SwiftCompile:sourceCompatibility" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<apilink class="org.gradle.language.swift.SwiftVersion"/>&gt;</classname> <literal>sourceCompatibility</literal></title><para>The Swift language level to use to compile the source files.</para></section><section id="org.gradle.language.swift.tasks.SwiftCompile:targetPlatform" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<apilink class="org.gradle.nativeplatform.platform.NativePlatform"/>&gt;</classname> <literal>targetPlatform</literal></title><para>The platform being compiled for.</para></section><section id="org.gradle.language.swift.tasks.SwiftCompile:toolChain" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<apilink class="org.gradle.nativeplatform.toolchain.NativeToolChain"/>&gt;</classname> <literal>toolChain</literal></title><para>The tool chain used for compilation.</para></section></section></chapter><chapter id="org.gradle.nativeplatform.tasks.AbstractLinkTask"><title>AbstractLinkTask</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.nativeplatform.tasks.AbstractLinkTask" style="javadoc"/></seg></seglistitem></segmentedlist><segmentedlist><segtitle>Known Subtypes</segtitle><seglistitem><seg><simplelist columns="1" type="vert"><member><apilink class="org.gradle.nativeplatform.tasks.LinkExecutable"/></member><member><apilink class="org.gradle.nativeplatform.tasks.LinkSharedLibrary"/></member><member><apilink class="org.gradle.nativeplatform.tasks.LinkMachOBundle"/></member></simplelist></seg></seglistitem></segmentedlist><para>Base task for linking a native binary from object files and libraries.</para><section><title>Properties</title><table><title>Properties - AbstractLinkTask</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.nativeplatform.tasks.AbstractLinkTask:debuggable"><literal>debuggable</literal></link></td><td><para>Create a debuggable binary?</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.tasks.AbstractLinkTask:libs"><literal>libs</literal></link></td><td><para>The library files to be passed to the linker.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.tasks.AbstractLinkTask:linkedFile"><literal>linkedFile</literal></link></td><td><para>The file where the linked binary will be located.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.tasks.AbstractLinkTask:linkerArgs"><literal>linkerArgs</literal></link></td><td><para><emphasis>Additional</emphasis> arguments passed to the linker.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.tasks.AbstractLinkTask:source"><literal>source</literal></link></td><td><para>The source object files to be passed to the linker.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.tasks.AbstractLinkTask:targetPlatform"><literal>targetPlatform</literal></link></td><td><para>The platform being linked for.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.tasks.AbstractLinkTask:toolChain"><literal>toolChain</literal></link></td><td><para>The tool chain used for linking.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - AbstractLinkTask</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.nativeplatform.tasks.AbstractLinkTask:lib(java.lang.Object)">lib</link>(libs)</literal></td><td><para>Adds a set of library files to be linked. The provided libs object is evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/>.</para></td></tr><tr><td><literal><link linkend="org.gradle.nativeplatform.tasks.AbstractLinkTask:source(java.lang.Object)">source</link>(source)</literal></td><td><para>Adds a set of object files to be linked. The provided source object is evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/>.</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.nativeplatform.tasks.AbstractLinkTask:debuggable" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html"><classname>Boolean</classname></ulink>&gt;</classname> <literal>debuggable</literal></title><para>Create a debuggable binary?</para></section><section id="org.gradle.nativeplatform.tasks.AbstractLinkTask:libs" role="detail"><title><apilink class="org.gradle.api.file.ConfigurableFileCollection"/> <literal>libs</literal></title><para>The library files to be passed to the linker.</para></section><section id="org.gradle.nativeplatform.tasks.AbstractLinkTask:linkedFile" role="detail"><title><apilink class="org.gradle.api.file.RegularFileProperty"/> <literal>linkedFile</literal></title><para>The file where the linked binary will be located.</para></section><section id="org.gradle.nativeplatform.tasks.AbstractLinkTask:linkerArgs" role="detail"><title><classname><apilink class="org.gradle.api.provider.ListProperty"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>linkerArgs</literal></title><para><emphasis>Additional</emphasis> arguments passed to the linker.</para></section><section id="org.gradle.nativeplatform.tasks.AbstractLinkTask:source" role="detail"><title><apilink class="org.gradle.api.file.ConfigurableFileCollection"/> <literal>source</literal></title><para>The source object files to be passed to the linker.</para></section><section id="org.gradle.nativeplatform.tasks.AbstractLinkTask:targetPlatform" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<apilink class="org.gradle.nativeplatform.platform.NativePlatform"/>&gt;</classname> <literal>targetPlatform</literal></title><para>The platform being linked for.</para></section><section id="org.gradle.nativeplatform.tasks.AbstractLinkTask:toolChain" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<apilink class="org.gradle.nativeplatform.toolchain.NativeToolChain"/>&gt;</classname> <literal>toolChain</literal></title><para>The tool chain used for linking.</para></section></section><section><title>Method details</title><section id="org.gradle.nativeplatform.tasks.AbstractLinkTask:lib(java.lang.Object)" role="detail"><title><classname>void</classname> <literal>lib</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> libs)</title><para>Adds a set of library files to be linked. The provided libs object is evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/>.</para></section><section id="org.gradle.nativeplatform.tasks.AbstractLinkTask:source(java.lang.Object)" role="detail"><title><classname>void</classname> <literal>source</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> source)</title><para>Adds a set of object files to be linked. The provided source object is evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/>.</para></section></section></chapter><chapter id="org.gradle.nativeplatform.tasks.LinkExecutable"><title>LinkExecutable</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.nativeplatform.tasks.LinkExecutable" style="javadoc"/></seg></seglistitem></segmentedlist><para>Links a binary executable from object files and libraries.</para><section><title>Properties</title><table><title>Properties - LinkExecutable</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.nativeplatform.tasks.LinkExecutable:debuggable"><literal>debuggable</literal></link></td><td><para>Create a debuggable binary?</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.tasks.LinkExecutable:libs"><literal>libs</literal></link></td><td><para>The library files to be passed to the linker.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.tasks.LinkExecutable:linkedFile"><literal>linkedFile</literal></link></td><td><para>The file where the linked binary will be located.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.tasks.LinkExecutable:linkerArgs"><literal>linkerArgs</literal></link></td><td><para><emphasis>Additional</emphasis> arguments passed to the linker.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.tasks.LinkExecutable:source"><literal>source</literal></link></td><td><para>The source object files to be passed to the linker.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.tasks.LinkExecutable:targetPlatform"><literal>targetPlatform</literal></link></td><td><para>The platform being linked for.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.tasks.LinkExecutable:toolChain"><literal>toolChain</literal></link></td><td><para>The tool chain used for linking.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - LinkExecutable</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.nativeplatform.tasks.LinkExecutable:lib(java.lang.Object)">lib</link>(libs)</literal></td><td><para>Adds a set of library files to be linked. The provided libs object is evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/>.</para></td></tr><tr><td><literal><link linkend="org.gradle.nativeplatform.tasks.LinkExecutable:source(java.lang.Object)">source</link>(source)</literal></td><td><para>Adds a set of object files to be linked. The provided source object is evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/>.</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.nativeplatform.tasks.LinkExecutable:debuggable" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html"><classname>Boolean</classname></ulink>&gt;</classname> <literal>debuggable</literal></title><para>Create a debuggable binary?</para></section><section id="org.gradle.nativeplatform.tasks.LinkExecutable:libs" role="detail"><title><apilink class="org.gradle.api.file.ConfigurableFileCollection"/> <literal>libs</literal></title><para>The library files to be passed to the linker.</para></section><section id="org.gradle.nativeplatform.tasks.LinkExecutable:linkedFile" role="detail"><title><apilink class="org.gradle.api.file.RegularFileProperty"/> <literal>linkedFile</literal></title><para>The file where the linked binary will be located.</para></section><section id="org.gradle.nativeplatform.tasks.LinkExecutable:linkerArgs" role="detail"><title><classname><apilink class="org.gradle.api.provider.ListProperty"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>linkerArgs</literal></title><para><emphasis>Additional</emphasis> arguments passed to the linker.</para></section><section id="org.gradle.nativeplatform.tasks.LinkExecutable:source" role="detail"><title><apilink class="org.gradle.api.file.ConfigurableFileCollection"/> <literal>source</literal></title><para>The source object files to be passed to the linker.</para></section><section id="org.gradle.nativeplatform.tasks.LinkExecutable:targetPlatform" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<apilink class="org.gradle.nativeplatform.platform.NativePlatform"/>&gt;</classname> <literal>targetPlatform</literal></title><para>The platform being linked for.</para></section><section id="org.gradle.nativeplatform.tasks.LinkExecutable:toolChain" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<apilink class="org.gradle.nativeplatform.toolchain.NativeToolChain"/>&gt;</classname> <literal>toolChain</literal></title><para>The tool chain used for linking.</para></section></section><section><title>Method details</title><section id="org.gradle.nativeplatform.tasks.LinkExecutable:lib(java.lang.Object)" role="detail"><title><classname>void</classname> <literal>lib</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> libs)</title><para>Adds a set of library files to be linked. The provided libs object is evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/>.</para></section><section id="org.gradle.nativeplatform.tasks.LinkExecutable:source(java.lang.Object)" role="detail"><title><classname>void</classname> <literal>source</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> source)</title><para>Adds a set of object files to be linked. The provided source object is evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/>.</para></section></section></chapter><chapter id="org.gradle.nativeplatform.tasks.LinkSharedLibrary"><title>LinkSharedLibrary</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.nativeplatform.tasks.LinkSharedLibrary" style="javadoc"/></seg></seglistitem></segmentedlist><para>Links a binary shared library from object files and imported libraries.</para><section><title>Properties</title><table><title>Properties - LinkSharedLibrary</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.nativeplatform.tasks.LinkSharedLibrary:debuggable"><literal>debuggable</literal></link></td><td><para>Create a debuggable binary?</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.tasks.LinkSharedLibrary:libs"><literal>libs</literal></link></td><td><para>The library files to be passed to the linker.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.tasks.LinkSharedLibrary:linkedFile"><literal>linkedFile</literal></link></td><td><para>The file where the linked binary will be located.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.tasks.LinkSharedLibrary:linkerArgs"><literal>linkerArgs</literal></link></td><td><para><emphasis>Additional</emphasis> arguments passed to the linker.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.tasks.LinkSharedLibrary:source"><literal>source</literal></link></td><td><para>The source object files to be passed to the linker.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.tasks.LinkSharedLibrary:targetPlatform"><literal>targetPlatform</literal></link></td><td><para>The platform being linked for.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.tasks.LinkSharedLibrary:toolChain"><literal>toolChain</literal></link></td><td><para>The tool chain used for linking.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - LinkSharedLibrary</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.nativeplatform.tasks.LinkSharedLibrary:lib(java.lang.Object)">lib</link>(libs)</literal></td><td><para>Adds a set of library files to be linked. The provided libs object is evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/>.</para></td></tr><tr><td><literal><link linkend="org.gradle.nativeplatform.tasks.LinkSharedLibrary:source(java.lang.Object)">source</link>(source)</literal></td><td><para>Adds a set of object files to be linked. The provided source object is evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/>.</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.nativeplatform.tasks.LinkSharedLibrary:debuggable" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html"><classname>Boolean</classname></ulink>&gt;</classname> <literal>debuggable</literal></title><para>Create a debuggable binary?</para></section><section id="org.gradle.nativeplatform.tasks.LinkSharedLibrary:libs" role="detail"><title><apilink class="org.gradle.api.file.ConfigurableFileCollection"/> <literal>libs</literal></title><para>The library files to be passed to the linker.</para></section><section id="org.gradle.nativeplatform.tasks.LinkSharedLibrary:linkedFile" role="detail"><title><apilink class="org.gradle.api.file.RegularFileProperty"/> <literal>linkedFile</literal></title><para>The file where the linked binary will be located.</para></section><section id="org.gradle.nativeplatform.tasks.LinkSharedLibrary:linkerArgs" role="detail"><title><classname><apilink class="org.gradle.api.provider.ListProperty"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>linkerArgs</literal></title><para><emphasis>Additional</emphasis> arguments passed to the linker.</para></section><section id="org.gradle.nativeplatform.tasks.LinkSharedLibrary:source" role="detail"><title><apilink class="org.gradle.api.file.ConfigurableFileCollection"/> <literal>source</literal></title><para>The source object files to be passed to the linker.</para></section><section id="org.gradle.nativeplatform.tasks.LinkSharedLibrary:targetPlatform" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<apilink class="org.gradle.nativeplatform.platform.NativePlatform"/>&gt;</classname> <literal>targetPlatform</literal></title><para>The platform being linked for.</para></section><section id="org.gradle.nativeplatform.tasks.LinkSharedLibrary:toolChain" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<apilink class="org.gradle.nativeplatform.toolchain.NativeToolChain"/>&gt;</classname> <literal>toolChain</literal></title><para>The tool chain used for linking.</para></section></section><section><title>Method details</title><section id="org.gradle.nativeplatform.tasks.LinkSharedLibrary:lib(java.lang.Object)" role="detail"><title><classname>void</classname> <literal>lib</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> libs)</title><para>Adds a set of library files to be linked. The provided libs object is evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/>.</para></section><section id="org.gradle.nativeplatform.tasks.LinkSharedLibrary:source(java.lang.Object)" role="detail"><title><classname>void</classname> <literal>source</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> source)</title><para>Adds a set of object files to be linked. The provided source object is evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/>.</para></section></section></chapter><chapter id="org.gradle.nativeplatform.tasks.CreateStaticLibrary"><title>CreateStaticLibrary</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.nativeplatform.tasks.CreateStaticLibrary" style="javadoc"/></seg></seglistitem></segmentedlist><para>Assembles a static library from object files.</para><section><title>Properties</title><table><title>Properties - CreateStaticLibrary</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.nativeplatform.tasks.CreateStaticLibrary:outputFile"><literal>outputFile</literal></link></td><td><para>The file where the output binary will be located.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.tasks.CreateStaticLibrary:source"><literal>source</literal></link></td><td><para>The source object files to be passed to the archiver.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.tasks.CreateStaticLibrary:staticLibArgs"><literal>staticLibArgs</literal></link></td><td><para><emphasis>Additional</emphasis> arguments passed to the archiver.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.tasks.CreateStaticLibrary:targetPlatform"><literal>targetPlatform</literal></link></td><td><para>The platform being linked for.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.tasks.CreateStaticLibrary:toolChain"><literal>toolChain</literal></link></td><td><para>The tool chain used for linking.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - CreateStaticLibrary</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.nativeplatform.tasks.CreateStaticLibrary:source(java.lang.Object)">source</link>(source)</literal></td><td><para>Adds a set of object files to be linked. </para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.nativeplatform.tasks.CreateStaticLibrary:outputFile" role="detail"><title><apilink class="org.gradle.api.file.RegularFileProperty"/> <literal>outputFile</literal></title><para>The file where the output binary will be located.</para></section><section id="org.gradle.nativeplatform.tasks.CreateStaticLibrary:source" role="detail"><title><apilink class="org.gradle.api.file.FileCollection"/> <literal>source</literal> (read-only)</title><para>The source object files to be passed to the archiver.</para></section><section id="org.gradle.nativeplatform.tasks.CreateStaticLibrary:staticLibArgs" role="detail"><title><classname><apilink class="org.gradle.api.provider.ListProperty"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>staticLibArgs</literal></title><para><emphasis>Additional</emphasis> arguments passed to the archiver.</para></section><section id="org.gradle.nativeplatform.tasks.CreateStaticLibrary:targetPlatform" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<apilink class="org.gradle.nativeplatform.platform.NativePlatform"/>&gt;</classname> <literal>targetPlatform</literal></title><para>The platform being linked for.</para></section><section id="org.gradle.nativeplatform.tasks.CreateStaticLibrary:toolChain" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<apilink class="org.gradle.nativeplatform.toolchain.NativeToolChain"/>&gt;</classname> <literal>toolChain</literal></title><para>The tool chain used for linking.</para></section></section><section><title>Method details</title><section id="org.gradle.nativeplatform.tasks.CreateStaticLibrary:source(java.lang.Object)" role="detail"><title><classname>void</classname> <literal>source</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> source)</title><para>Adds a set of object files to be linked. </para><para> The provided source object is evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/>.</para></section></section></chapter><chapter id="org.gradle.nativeplatform.tasks.LinkMachOBundle"><title>LinkMachOBundle</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.nativeplatform.tasks.LinkMachOBundle" style="javadoc"/></seg></seglistitem></segmentedlist><para>Links a binary bundle from object files and imported libraries.</para><section><title>Properties</title><table><title>Properties - LinkMachOBundle</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.nativeplatform.tasks.LinkMachOBundle:debuggable"><literal>debuggable</literal></link></td><td><para>Create a debuggable binary?</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.tasks.LinkMachOBundle:libs"><literal>libs</literal></link></td><td><para>The library files to be passed to the linker.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.tasks.LinkMachOBundle:linkedFile"><literal>linkedFile</literal></link></td><td><para>The file where the linked binary will be located.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.tasks.LinkMachOBundle:linkerArgs"><literal>linkerArgs</literal></link></td><td><para><emphasis>Additional</emphasis> arguments passed to the linker.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.tasks.LinkMachOBundle:source"><literal>source</literal></link></td><td><para>The source object files to be passed to the linker.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.tasks.LinkMachOBundle:targetPlatform"><literal>targetPlatform</literal></link></td><td><para>The platform being linked for.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.tasks.LinkMachOBundle:toolChain"><literal>toolChain</literal></link></td><td><para>The tool chain used for linking.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - LinkMachOBundle</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.nativeplatform.tasks.LinkMachOBundle:lib(java.lang.Object)">lib</link>(libs)</literal></td><td><para>Adds a set of library files to be linked. The provided libs object is evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/>.</para></td></tr><tr><td><literal><link linkend="org.gradle.nativeplatform.tasks.LinkMachOBundle:source(java.lang.Object)">source</link>(source)</literal></td><td><para>Adds a set of object files to be linked. The provided source object is evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/>.</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.nativeplatform.tasks.LinkMachOBundle:debuggable" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html"><classname>Boolean</classname></ulink>&gt;</classname> <literal>debuggable</literal></title><para>Create a debuggable binary?</para></section><section id="org.gradle.nativeplatform.tasks.LinkMachOBundle:libs" role="detail"><title><apilink class="org.gradle.api.file.ConfigurableFileCollection"/> <literal>libs</literal></title><para>The library files to be passed to the linker.</para></section><section id="org.gradle.nativeplatform.tasks.LinkMachOBundle:linkedFile" role="detail"><title><apilink class="org.gradle.api.file.RegularFileProperty"/> <literal>linkedFile</literal></title><para>The file where the linked binary will be located.</para></section><section id="org.gradle.nativeplatform.tasks.LinkMachOBundle:linkerArgs" role="detail"><title><classname><apilink class="org.gradle.api.provider.ListProperty"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>linkerArgs</literal></title><para><emphasis>Additional</emphasis> arguments passed to the linker.</para></section><section id="org.gradle.nativeplatform.tasks.LinkMachOBundle:source" role="detail"><title><apilink class="org.gradle.api.file.ConfigurableFileCollection"/> <literal>source</literal></title><para>The source object files to be passed to the linker.</para></section><section id="org.gradle.nativeplatform.tasks.LinkMachOBundle:targetPlatform" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<apilink class="org.gradle.nativeplatform.platform.NativePlatform"/>&gt;</classname> <literal>targetPlatform</literal></title><para>The platform being linked for.</para></section><section id="org.gradle.nativeplatform.tasks.LinkMachOBundle:toolChain" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<apilink class="org.gradle.nativeplatform.toolchain.NativeToolChain"/>&gt;</classname> <literal>toolChain</literal></title><para>The tool chain used for linking.</para></section></section><section><title>Method details</title><section id="org.gradle.nativeplatform.tasks.LinkMachOBundle:lib(java.lang.Object)" role="detail"><title><classname>void</classname> <literal>lib</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> libs)</title><para>Adds a set of library files to be linked. The provided libs object is evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/>.</para></section><section id="org.gradle.nativeplatform.tasks.LinkMachOBundle:source(java.lang.Object)" role="detail"><title><classname>void</classname> <literal>source</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> source)</title><para>Adds a set of object files to be linked. The provided source object is evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/>.</para></section></section></chapter><chapter id="org.gradle.nativeplatform.tasks.InstallExecutable"><title>InstallExecutable</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.nativeplatform.tasks.InstallExecutable" style="javadoc"/></seg></seglistitem></segmentedlist><para>Installs an executable with it's dependent libraries so it can be easily executed.</para><section><title>Properties</title><table><title>Properties - InstallExecutable</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.nativeplatform.tasks.InstallExecutable:executableFile"><literal>executableFile</literal></link></td><td><para>The executable file to install.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.tasks.InstallExecutable:installDirectory"><literal>installDirectory</literal></link></td><td><para>The directory to install files into.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.tasks.InstallExecutable:libs"><literal>libs</literal></link></td><td><para>The library files that should be installed.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.tasks.InstallExecutable:runScriptFile"><literal>runScriptFile</literal></link></td><td><para>The script file that can be used to run the install image.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.tasks.InstallExecutable:targetPlatform"><literal>targetPlatform</literal></link></td><td><para>The platform being linked for.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.tasks.InstallExecutable:toolChain"><literal>toolChain</literal></link></td><td><para>The tool chain used for linking.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - InstallExecutable</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.nativeplatform.tasks.InstallExecutable:lib(java.lang.Object)">lib</link>(libs)</literal></td><td><para>Adds a set of library files to be installed. The provided libs object is evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/>.</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.nativeplatform.tasks.InstallExecutable:executableFile" role="detail"><title><apilink class="org.gradle.api.file.RegularFileProperty"/> <literal>executableFile</literal></title><para>The executable file to install.</para></section><section id="org.gradle.nativeplatform.tasks.InstallExecutable:installDirectory" role="detail"><title><apilink class="org.gradle.api.file.DirectoryProperty"/> <literal>installDirectory</literal></title><para>The directory to install files into.</para></section><section id="org.gradle.nativeplatform.tasks.InstallExecutable:libs" role="detail"><title><apilink class="org.gradle.api.file.FileCollection"/> <literal>libs</literal></title><para>The library files that should be installed.</para></section><section id="org.gradle.nativeplatform.tasks.InstallExecutable:runScriptFile" role="detail"><title><classname><apilink class="org.gradle.api.provider.Provider"/>&lt;<apilink class="org.gradle.api.file.RegularFile"/>&gt;</classname> <literal>runScriptFile</literal></title><para>The script file that can be used to run the install image.</para></section><section id="org.gradle.nativeplatform.tasks.InstallExecutable:targetPlatform" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<apilink class="org.gradle.nativeplatform.platform.NativePlatform"/>&gt;</classname> <literal>targetPlatform</literal></title><para>The platform being linked for.</para></section><section id="org.gradle.nativeplatform.tasks.InstallExecutable:toolChain" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<apilink class="org.gradle.nativeplatform.toolchain.NativeToolChain"/>&gt;</classname> <literal>toolChain</literal></title><para>The tool chain used for linking.</para></section></section><section><title>Method details</title><section id="org.gradle.nativeplatform.tasks.InstallExecutable:lib(java.lang.Object)" role="detail"><title><classname>void</classname> <literal>lib</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> libs)</title><para>Adds a set of library files to be installed. The provided libs object is evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/>.</para></section></section></chapter><chapter id="org.gradle.nativeplatform.test.xctest.tasks.InstallXCTestBundle"><title>InstallXCTestBundle</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.nativeplatform.test.xctest.tasks.InstallXCTestBundle" style="javadoc"/></seg></seglistitem></segmentedlist><para>Creates a XCTest bundle with a run script so it can be easily executed.</para><section><title>Properties</title><table><title>Properties - InstallXCTestBundle</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.nativeplatform.test.xctest.tasks.InstallXCTestBundle:bundleBinaryFile"><literal>bundleBinaryFile</literal></link></td><td><para>The bundle binary file property.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.test.xctest.tasks.InstallXCTestBundle:installDirectory"><literal>installDirectory</literal></link></td><td><para>The install directory property.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.test.xctest.tasks.InstallXCTestBundle:runScriptFile"><literal>runScriptFile</literal></link></td><td><para>The script file that can be used to run the install image.</para></td></tr></table></section><section><title>Methods</title><para>No methods</para></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.nativeplatform.test.xctest.tasks.InstallXCTestBundle:bundleBinaryFile" role="detail"><title><apilink class="org.gradle.api.file.RegularFileProperty"/> <literal>bundleBinaryFile</literal></title><para>The bundle binary file property.</para></section><section id="org.gradle.nativeplatform.test.xctest.tasks.InstallXCTestBundle:installDirectory" role="detail"><title><apilink class="org.gradle.api.file.DirectoryProperty"/> <literal>installDirectory</literal></title><para>The install directory property.</para></section><section id="org.gradle.nativeplatform.test.xctest.tasks.InstallXCTestBundle:runScriptFile" role="detail"><title><classname><apilink class="org.gradle.api.provider.Provider"/>&lt;<apilink class="org.gradle.api.file.RegularFile"/>&gt;</classname> <literal>runScriptFile</literal></title><para>The script file that can be used to run the install image.</para></section></section></chapter><chapter id="org.gradle.nativeplatform.test.tasks.RunTestExecutable"><title>RunTestExecutable</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.nativeplatform.test.tasks.RunTestExecutable" style="javadoc"/></seg></seglistitem></segmentedlist><para>Runs a compiled and installed test executable.</para><section><title>Properties</title><table><title>Properties - RunTestExecutable</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.nativeplatform.test.tasks.RunTestExecutable:args"><literal>args</literal></link></td><td><para>The arguments for the command to be executed. Defaults to an empty list.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.test.tasks.RunTestExecutable:argumentProviders"><literal>argumentProviders</literal></link></td><td><para>Argument providers for the application.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.test.tasks.RunTestExecutable:commandLine"><literal>commandLine</literal></link></td><td><para>The full command line, including the executable plus its arguments.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.test.tasks.RunTestExecutable:environment"><literal>environment</literal></link></td><td><para>The environment variables to use for the process. Defaults to the environment of this process.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.test.tasks.RunTestExecutable:errorOutput"><literal>errorOutput</literal></link></td><td><para>The output stream to consume standard error from the process executing the command. Default to <literal>System.err</literal>.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.test.tasks.RunTestExecutable:executable"><literal>executable</literal></link></td><td><para>The name of the executable to use.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.test.tasks.RunTestExecutable:executionResult"><literal>executionResult</literal></link></td><td><para>The result for the command run by this task. The provider has no value if this task has not been executed yet.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.test.tasks.RunTestExecutable:ignoreExitValue"><literal>ignoreExitValue</literal></link></td><td><para>Tells whether a non-zero exit value is ignored, or an exception thrown. Defaults to <literal>false</literal>.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.test.tasks.RunTestExecutable:ignoreFailures"><literal>ignoreFailures</literal></link></td><td><para>Specifies whether the build should break when the verifications performed by this task fail.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.test.tasks.RunTestExecutable:standardInput"><literal>standardInput</literal></link></td><td><para>The standard input stream for the process executing the command. The stream is closed after the process
completes. Defaults to an empty stream.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.test.tasks.RunTestExecutable:standardOutput"><literal>standardOutput</literal></link></td><td><para>The output stream to consume standard output from the process executing the command. Defaults to <literal>System.out</literal>.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.test.tasks.RunTestExecutable:workingDir"><literal>workingDir</literal></link></td><td><para>The working directory for the process. Defaults to the project directory.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - RunTestExecutable</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.nativeplatform.test.tasks.RunTestExecutable:args(java.lang.Iterable)">args</link>(args)</literal></td><td><para>Adds arguments for the command to be executed.</para></td></tr><tr><td><literal><link linkend="org.gradle.nativeplatform.test.tasks.RunTestExecutable:args(java.lang.Object[])">args</link>(args)</literal></td><td><para>Adds arguments for the command to be executed.</para></td></tr><tr><td><literal><link linkend="org.gradle.nativeplatform.test.tasks.RunTestExecutable:commandLine(java.lang.Iterable)">commandLine</link>(args)</literal></td><td><para>Sets the full command line, including the executable to be executed plus its arguments.</para></td></tr><tr><td><literal><link linkend="org.gradle.nativeplatform.test.tasks.RunTestExecutable:commandLine(java.lang.Object[])">commandLine</link>(arguments)</literal></td><td><para>Sets the full command line, including the executable to be executed plus its arguments.</para></td></tr><tr><td><literal><link linkend="org.gradle.nativeplatform.test.tasks.RunTestExecutable:environment(java.lang.String, java.lang.Object)">environment</link>(name, value)</literal></td><td><para>Adds an environment variable to the environment for this process.</para></td></tr><tr><td><literal><link linkend="org.gradle.nativeplatform.test.tasks.RunTestExecutable:environment(java.util.Map)">environment</link>(environmentVariables)</literal></td><td><para>Adds some environment variables to the environment for this process.</para></td></tr><tr><td><literal><link linkend="org.gradle.nativeplatform.test.tasks.RunTestExecutable:executable(java.lang.Object)">executable</link>(executable)</literal></td><td><para>Sets the name of the executable to use.</para></td></tr><tr><td><literal><link linkend="org.gradle.nativeplatform.test.tasks.RunTestExecutable:workingDir(java.lang.Object)">workingDir</link>(dir)</literal></td><td><para>Sets the working directory for the process. The supplied argument is evaluated as per <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/>.</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.nativeplatform.test.tasks.RunTestExecutable:args" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/List.html"><classname>List</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>args</literal></title><para>The arguments for the command to be executed. Defaults to an empty list.</para></section><section id="org.gradle.nativeplatform.test.tasks.RunTestExecutable:argumentProviders" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/List.html"><classname>List</classname></ulink>&lt;<apilink class="org.gradle.process.CommandLineArgumentProvider"/>&gt;</classname> <literal>argumentProviders</literal> (read-only)</title><para>Argument providers for the application.</para></section><section id="org.gradle.nativeplatform.test.tasks.RunTestExecutable:commandLine" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/List.html"><classname>List</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>commandLine</literal></title><para>The full command line, including the executable plus its arguments.</para></section><section id="org.gradle.nativeplatform.test.tasks.RunTestExecutable:environment" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink>&gt;</classname> <literal>environment</literal></title><para>The environment variables to use for the process. Defaults to the environment of this process.</para></section><section id="org.gradle.nativeplatform.test.tasks.RunTestExecutable:errorOutput" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/OutputStream.html"><classname>OutputStream</classname></ulink> <literal>errorOutput</literal></title><para>The output stream to consume standard error from the process executing the command. Default to <literal>System.err</literal>.</para></section><section id="org.gradle.nativeplatform.test.tasks.RunTestExecutable:executable" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> <literal>executable</literal></title><para>The name of the executable to use.</para></section><section id="org.gradle.nativeplatform.test.tasks.RunTestExecutable:executionResult" role="detail"><title><classname><apilink class="org.gradle.api.provider.Provider"/>&lt;<apilink class="org.gradle.process.ExecResult"/>&gt;</classname> <literal>executionResult</literal></title><para>The result for the command run by this task. The provider has no value if this task has not been executed yet.</para></section><section id="org.gradle.nativeplatform.test.tasks.RunTestExecutable:ignoreExitValue" role="detail"><title><classname>boolean</classname> <literal>ignoreExitValue</literal></title><para>Tells whether a non-zero exit value is ignored, or an exception thrown. Defaults to <literal>false</literal>.</para></section><section id="org.gradle.nativeplatform.test.tasks.RunTestExecutable:ignoreFailures" role="detail"><title><classname>boolean</classname> <literal>ignoreFailures</literal></title><para>Specifies whether the build should break when the verifications performed by this task fail.</para></section><section id="org.gradle.nativeplatform.test.tasks.RunTestExecutable:standardInput" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/InputStream.html"><classname>InputStream</classname></ulink> <literal>standardInput</literal></title><para>The standard input stream for the process executing the command. The stream is closed after the process
completes. Defaults to an empty stream.</para></section><section id="org.gradle.nativeplatform.test.tasks.RunTestExecutable:standardOutput" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/OutputStream.html"><classname>OutputStream</classname></ulink> <literal>standardOutput</literal></title><para>The output stream to consume standard output from the process executing the command. Defaults to <literal>System.out</literal>.</para></section><section id="org.gradle.nativeplatform.test.tasks.RunTestExecutable:workingDir" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>workingDir</literal></title><para>The working directory for the process. Defaults to the project directory.</para></section></section><section><title>Method details</title><section id="org.gradle.nativeplatform.test.tasks.RunTestExecutable:args(java.lang.Iterable)" role="detail"><title><classname>T</classname> <literal>args</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;?&gt;</classname> args)</title><para>Adds arguments for the command to be executed.</para></section><section id="org.gradle.nativeplatform.test.tasks.RunTestExecutable:args(java.lang.Object[])" role="detail"><title><classname>T</classname> <literal>args</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink>...</classname> args)</title><para>Adds arguments for the command to be executed.</para></section><section id="org.gradle.nativeplatform.test.tasks.RunTestExecutable:commandLine(java.lang.Iterable)" role="detail"><title><classname>T</classname> <literal>commandLine</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html"><classname>Iterable</classname></ulink>&lt;?&gt;</classname> args)</title><para>Sets the full command line, including the executable to be executed plus its arguments.</para></section><section id="org.gradle.nativeplatform.test.tasks.RunTestExecutable:commandLine(java.lang.Object[])" role="detail"><title><classname>T</classname> <literal>commandLine</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink>...</classname> arguments)</title><para>Sets the full command line, including the executable to be executed plus its arguments.</para></section><section id="org.gradle.nativeplatform.test.tasks.RunTestExecutable:environment(java.lang.String, java.lang.Object)" role="detail"><title><classname>T</classname> <literal>environment</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink> name, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> value)</title><para>Adds an environment variable to the environment for this process.</para></section><section id="org.gradle.nativeplatform.test.tasks.RunTestExecutable:environment(java.util.Map)" role="detail"><title><classname>T</classname> <literal>environment</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, ?&gt;</classname> environmentVariables)</title><para>Adds some environment variables to the environment for this process.</para></section><section id="org.gradle.nativeplatform.test.tasks.RunTestExecutable:executable(java.lang.Object)" role="detail"><title><classname>T</classname> <literal>executable</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> executable)</title><para>Sets the name of the executable to use.</para></section><section id="org.gradle.nativeplatform.test.tasks.RunTestExecutable:workingDir(java.lang.Object)" role="detail"><title><classname>T</classname> <literal>workingDir</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> dir)</title><para>Sets the working directory for the process. The supplied argument is evaluated as per <apilink class="org.gradle.api.Project" method="file(java.lang.Object)"/>.</para></section></section></chapter><chapter id="org.gradle.nativeplatform.test.xctest.tasks.XCTest"><title>XCTest</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.nativeplatform.test.xctest.tasks.XCTest" style="javadoc"/></seg></seglistitem></segmentedlist><para>Executes XCTest tests. Test are always run in a single execution.</para><section><title>Properties</title><table><title>Properties - XCTest</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.nativeplatform.test.xctest.tasks.XCTest:binaryResultsDirectory"><literal>binaryResultsDirectory</literal></link></td><td><para>The root directory property for the test results in internal binary format.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.test.xctest.tasks.XCTest:failOnNoDiscoveredTests"><literal>failOnNoDiscoveredTests</literal></link></td><td><para>Whether the task should fail if test sources are present, but no tests are discovered during test execution.  Defaults to true.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.test.xctest.tasks.XCTest:ignoreFailures"><literal>ignoreFailures</literal></link></td><td><para>Specifies whether the build should break when the verifications performed by this task fail.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.test.xctest.tasks.XCTest:reports"><literal>reports</literal></link></td><td><para>The reports that this task potentially produces.</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.test.xctest.tasks.XCTest:runScriptFile"><literal>runScriptFile</literal></link></td><td><para>Returns test suite bundle or executable location</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.test.xctest.tasks.XCTest:testInstallDirectory"><literal>testInstallDirectory</literal></link></td><td><para>The test suite bundle or executable location</para></td></tr><tr><td><link linkend="org.gradle.nativeplatform.test.xctest.tasks.XCTest:workingDirectory"><literal>workingDirectory</literal></link></td><td><para>The working directory property for this test.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - XCTest</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.nativeplatform.test.xctest.tasks.XCTest:addTestListener(org.gradle.api.tasks.testing.TestListener)">addTestListener</link>(listener)</literal></td><td><para>Registers a test listener with this task. Consider also the following handy methods for quicker hooking into test execution: <apilink class="org.gradle.api.tasks.testing.AbstractTestTask" method="beforeTest(groovy.lang.Closure)"/>, <apilink class="org.gradle.api.tasks.testing.AbstractTestTask" method="afterTest(groovy.lang.Closure)"/>, <apilink class="org.gradle.api.tasks.testing.AbstractTestTask" method="beforeSuite(groovy.lang.Closure)"/>, <apilink class="org.gradle.api.tasks.testing.AbstractTestTask" method="afterSuite(groovy.lang.Closure)"/> </para></td></tr><tr><td><literal><link linkend="org.gradle.nativeplatform.test.xctest.tasks.XCTest:addTestOutputListener(org.gradle.api.tasks.testing.TestOutputListener)">addTestOutputListener</link>(listener)</literal></td><td><para>Registers a output listener with this task. Quicker way of hooking into output events is using the <apilink class="org.gradle.api.tasks.testing.AbstractTestTask" method="onOutput(groovy.lang.Closure)"/> method.</para></td></tr><tr><td><literal><link linkend="org.gradle.nativeplatform.test.xctest.tasks.XCTest:afterSuite(groovy.lang.Closure)">afterSuite</link>(closure)</literal></td><td><para>Adds a closure to be notified after a test suite has executed. A <apilink class="org.gradle.api.tasks.testing.TestDescriptor"/> and <apilink class="org.gradle.api.tasks.testing.TestResult"/> instance are passed to the closure as a
parameter.</para></td></tr><tr><td><literal><link linkend="org.gradle.nativeplatform.test.xctest.tasks.XCTest:afterTest(groovy.lang.Closure)">afterTest</link>(closure)</literal></td><td><para>Adds a closure to be notified after a test has executed. A <apilink class="org.gradle.api.tasks.testing.TestDescriptor"/> and <apilink class="org.gradle.api.tasks.testing.TestResult"/> instance are passed to the closure as a parameter.</para></td></tr><tr><td><literal><link linkend="org.gradle.nativeplatform.test.xctest.tasks.XCTest:beforeSuite(groovy.lang.Closure)">beforeSuite</link>(closure)</literal></td><td><para>Adds a closure to be notified before a test suite is executed. A <apilink class="org.gradle.api.tasks.testing.TestDescriptor"/> instance is passed to the closure as a parameter.</para></td></tr><tr><td><literal><link linkend="org.gradle.nativeplatform.test.xctest.tasks.XCTest:beforeTest(groovy.lang.Closure)">beforeTest</link>(closure)</literal></td><td><para>Adds a closure to be notified before a test is executed. A <apilink class="org.gradle.api.tasks.testing.TestDescriptor"/> instance is passed to the closure as a parameter.</para></td></tr><tr><td><literal><link linkend="org.gradle.nativeplatform.test.xctest.tasks.XCTest:onOutput(groovy.lang.Closure)">onOutput</link>(closure)</literal></td><td><para>Adds a closure to be notified when output from the test received. A <apilink class="org.gradle.api.tasks.testing.TestDescriptor"/> and <apilink class="org.gradle.api.tasks.testing.TestOutputEvent"/> instance are
passed to the closure as a parameter.

</para></td></tr><tr><td><literal><link linkend="org.gradle.nativeplatform.test.xctest.tasks.XCTest:removeTestListener(org.gradle.api.tasks.testing.TestListener)">removeTestListener</link>(listener)</literal></td><td><para>Unregisters a test listener with this task.  This method will only remove listeners that were added by calling <apilink class="org.gradle.api.tasks.testing.AbstractTestTask" method="addTestListener(org.gradle.api.tasks.testing.TestListener)"/> on this task. If the listener was
registered with Gradle using <apilink class="org.gradle.api.invocation.Gradle" method="addListener(java.lang.Object)"/> this method will not do anything. Instead, use <apilink class="org.gradle.api.invocation.Gradle" method="removeListener(java.lang.Object)"/>.</para></td></tr><tr><td><literal><link linkend="org.gradle.nativeplatform.test.xctest.tasks.XCTest:removeTestOutputListener(org.gradle.api.tasks.testing.TestOutputListener)">removeTestOutputListener</link>(listener)</literal></td><td><para>Unregisters a test output listener with this task.  This method will only remove listeners that were added by calling <apilink class="org.gradle.api.tasks.testing.AbstractTestTask" method="addTestOutputListener(org.gradle.api.tasks.testing.TestOutputListener)"/> on this task.  If the
listener was registered with Gradle using <apilink class="org.gradle.api.invocation.Gradle" method="addListener(java.lang.Object)"/> this method will not do anything. Instead, use <apilink class="org.gradle.api.invocation.Gradle" method="removeListener(java.lang.Object)"/>.</para></td></tr><tr><td><literal><link linkend="org.gradle.nativeplatform.test.xctest.tasks.XCTest:reports(org.gradle.api.Action)">reports</link>(configureAction)</literal></td><td><para>Configures the reports that this task potentially produces.</para></td></tr><tr><td><literal><link linkend="org.gradle.nativeplatform.test.xctest.tasks.XCTest:setTestNameIncludePatterns(java.util.List)">setTestNameIncludePatterns</link>(testNamePattern)</literal></td><td><para>Sets the test name patterns to be included in execution.
Classes or method names are supported, wildcard '*' is supported.
For more information see the user guide chapter on testing.

For more information on supported patterns see <apilink class="org.gradle.api.tasks.testing.TestFilter"/></para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.nativeplatform.test.xctest.tasks.XCTest:binaryResultsDirectory" role="detail"><title><apilink class="org.gradle.api.file.DirectoryProperty"/> <literal>binaryResultsDirectory</literal></title><para>The root directory property for the test results in internal binary format.</para><segmentedlist><segtitle>Default</segtitle><seglistitem><seg><literal><replaceable>project.testResultsDir</replaceable>/binary/<replaceable>task.name</replaceable></literal></seg></seglistitem></segmentedlist></section><section id="org.gradle.nativeplatform.test.xctest.tasks.XCTest:failOnNoDiscoveredTests" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html"><classname>Boolean</classname></ulink>&gt;</classname> <literal>failOnNoDiscoveredTests</literal></title><para>Whether the task should fail if test sources are present, but no tests are discovered during test execution.  Defaults to true.</para></section><section id="org.gradle.nativeplatform.test.xctest.tasks.XCTest:ignoreFailures" role="detail"><title><classname>boolean</classname> <literal>ignoreFailures</literal></title><para>Specifies whether the build should break when the verifications performed by this task fail.</para></section><section id="org.gradle.nativeplatform.test.xctest.tasks.XCTest:reports" role="detail"><title><apilink class="org.gradle.api.tasks.testing.TestTaskReports"/> <literal>reports</literal> (read-only)</title><para>The reports that this task potentially produces.</para></section><section id="org.gradle.nativeplatform.test.xctest.tasks.XCTest:runScriptFile" role="detail"><title><apilink class="org.gradle.api.file.RegularFileProperty"/> <literal>runScriptFile</literal></title><para>Returns test suite bundle or executable location</para></section><section id="org.gradle.nativeplatform.test.xctest.tasks.XCTest:testInstallDirectory" role="detail"><title><apilink class="org.gradle.api.file.DirectoryProperty"/> <literal>testInstallDirectory</literal></title><para>The test suite bundle or executable location</para></section><section id="org.gradle.nativeplatform.test.xctest.tasks.XCTest:workingDirectory" role="detail"><title><apilink class="org.gradle.api.file.DirectoryProperty"/> <literal>workingDirectory</literal></title><para>The working directory property for this test.</para></section></section><section><title>Method details</title><section id="org.gradle.nativeplatform.test.xctest.tasks.XCTest:addTestListener(org.gradle.api.tasks.testing.TestListener)" role="detail"><title><classname>void</classname> <literal>addTestListener</literal>(<apilink class="org.gradle.api.tasks.testing.TestListener"/> listener)</title><para>Registers a test listener with this task. Consider also the following handy methods for quicker hooking into test execution: <apilink class="org.gradle.api.tasks.testing.AbstractTestTask" method="beforeTest(groovy.lang.Closure)"/>, <apilink class="org.gradle.api.tasks.testing.AbstractTestTask" method="afterTest(groovy.lang.Closure)"/>, <apilink class="org.gradle.api.tasks.testing.AbstractTestTask" method="beforeSuite(groovy.lang.Closure)"/>, <apilink class="org.gradle.api.tasks.testing.AbstractTestTask" method="afterSuite(groovy.lang.Closure)"/> </para><para> This listener will NOT be notified of tests executed by other tasks. To
get that behavior, use <apilink class="org.gradle.api.invocation.Gradle" method="addListener(java.lang.Object)"/>.</para></section><section id="org.gradle.nativeplatform.test.xctest.tasks.XCTest:addTestOutputListener(org.gradle.api.tasks.testing.TestOutputListener)" role="detail"><title><classname>void</classname> <literal>addTestOutputListener</literal>(<apilink class="org.gradle.api.tasks.testing.TestOutputListener"/> listener)</title><para>Registers a output listener with this task. Quicker way of hooking into output events is using the <apilink class="org.gradle.api.tasks.testing.AbstractTestTask" method="onOutput(groovy.lang.Closure)"/> method.</para></section><section id="org.gradle.nativeplatform.test.xctest.tasks.XCTest:afterSuite(groovy.lang.Closure)" role="detail"><title><classname>void</classname> <literal>afterSuite</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> closure)</title><para>Adds a closure to be notified after a test suite has executed. A <apilink class="org.gradle.api.tasks.testing.TestDescriptor"/> and <apilink class="org.gradle.api.tasks.testing.TestResult"/> instance are passed to the closure as a
parameter.</para><para>This method is also called after all test suites are executed. The provided descriptor will have a null parent suite.</para></section><section id="org.gradle.nativeplatform.test.xctest.tasks.XCTest:afterTest(groovy.lang.Closure)" role="detail"><title><classname>void</classname> <literal>afterTest</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> closure)</title><para>Adds a closure to be notified after a test has executed. A <apilink class="org.gradle.api.tasks.testing.TestDescriptor"/> and <apilink class="org.gradle.api.tasks.testing.TestResult"/> instance are passed to the closure as a parameter.</para></section><section id="org.gradle.nativeplatform.test.xctest.tasks.XCTest:beforeSuite(groovy.lang.Closure)" role="detail"><title><classname>void</classname> <literal>beforeSuite</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> closure)</title><para>Adds a closure to be notified before a test suite is executed. A <apilink class="org.gradle.api.tasks.testing.TestDescriptor"/> instance is passed to the closure as a parameter.</para><para>This method is also called before any test suites are executed. The provided descriptor will have a null parent suite.</para></section><section id="org.gradle.nativeplatform.test.xctest.tasks.XCTest:beforeTest(groovy.lang.Closure)" role="detail"><title><classname>void</classname> <literal>beforeTest</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> closure)</title><para>Adds a closure to be notified before a test is executed. A <apilink class="org.gradle.api.tasks.testing.TestDescriptor"/> instance is passed to the closure as a parameter.</para></section><section id="org.gradle.nativeplatform.test.xctest.tasks.XCTest:onOutput(groovy.lang.Closure)" role="detail"><title><classname>void</classname> <literal>onOutput</literal>(<ulink url="https://docs.groovy-lang.org/4.0.27/html/gapi/groovy/lang/Closure.html"><classname>Closure</classname></ulink> closure)</title><para>Adds a closure to be notified when output from the test received. A <apilink class="org.gradle.api.tasks.testing.TestDescriptor"/> and <apilink class="org.gradle.api.tasks.testing.TestOutputEvent"/> instance are
passed to the closure as a parameter.

</para><programlisting language="java">
apply plugin: 'java'

test {
   onOutput { descriptor, event -&gt;
       if (event.destination == TestOutputEvent.Destination.StdErr) {
           logger.error("Test: " + descriptor + ", error: " + event.message)
       }
   }
}
</programlisting></section><section id="org.gradle.nativeplatform.test.xctest.tasks.XCTest:removeTestListener(org.gradle.api.tasks.testing.TestListener)" role="detail"><title><classname>void</classname> <literal>removeTestListener</literal>(<apilink class="org.gradle.api.tasks.testing.TestListener"/> listener)</title><para>Unregisters a test listener with this task.  This method will only remove listeners that were added by calling <apilink class="org.gradle.api.tasks.testing.AbstractTestTask" method="addTestListener(org.gradle.api.tasks.testing.TestListener)"/> on this task. If the listener was
registered with Gradle using <apilink class="org.gradle.api.invocation.Gradle" method="addListener(java.lang.Object)"/> this method will not do anything. Instead, use <apilink class="org.gradle.api.invocation.Gradle" method="removeListener(java.lang.Object)"/>.</para></section><section id="org.gradle.nativeplatform.test.xctest.tasks.XCTest:removeTestOutputListener(org.gradle.api.tasks.testing.TestOutputListener)" role="detail"><title><classname>void</classname> <literal>removeTestOutputListener</literal>(<apilink class="org.gradle.api.tasks.testing.TestOutputListener"/> listener)</title><para>Unregisters a test output listener with this task.  This method will only remove listeners that were added by calling <apilink class="org.gradle.api.tasks.testing.AbstractTestTask" method="addTestOutputListener(org.gradle.api.tasks.testing.TestOutputListener)"/> on this task.  If the
listener was registered with Gradle using <apilink class="org.gradle.api.invocation.Gradle" method="addListener(java.lang.Object)"/> this method will not do anything. Instead, use <apilink class="org.gradle.api.invocation.Gradle" method="removeListener(java.lang.Object)"/>.</para></section><section id="org.gradle.nativeplatform.test.xctest.tasks.XCTest:reports(org.gradle.api.Action)" role="detail"><title><apilink class="org.gradle.api.tasks.testing.TestTaskReports"/> <literal>reports</literal>(<classname><apilink class="org.gradle.api.Action"/>&lt;? super <apilink class="org.gradle.api.tasks.testing.TestTaskReports"/>&gt;</classname> configureAction)</title><para>Configures the reports that this task potentially produces.</para></section><section id="org.gradle.nativeplatform.test.xctest.tasks.XCTest:setTestNameIncludePatterns(java.util.List)" role="detail"><title><apilink class="org.gradle.api.tasks.testing.AbstractTestTask"/> <literal>setTestNameIncludePatterns</literal>(<classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/List.html"><classname>List</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> testNamePattern)</title><para>Sets the test name patterns to be included in execution.
Classes or method names are supported, wildcard '*' is supported.
For more information see the user guide chapter on testing.

For more information on supported patterns see <apilink class="org.gradle.api.tasks.testing.TestFilter"/></para></section></section></chapter><chapter id="org.gradle.language.c.tasks.CCompile"><title>CCompile</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.language.c.tasks.CCompile" style="javadoc"/></seg></seglistitem></segmentedlist><caution><para>Note: This class is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Compiles C source files into object files.</para><section><title>Properties</title><table><title>Properties - CCompile</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.language.c.tasks.CCompile:compilerArgs"><literal>compilerArgs</literal></link></td><td><para><emphasis>Additional</emphasis> arguments to provide to the compiler.</para></td></tr><tr><td><link linkend="org.gradle.language.c.tasks.CCompile:debuggable"><literal>debuggable</literal></link></td><td><para>Should the compiler generate debuggable code?</para></td></tr><tr><td><link linkend="org.gradle.language.c.tasks.CCompile:includes"><literal>includes</literal></link></td><td><para>The header directories to be used for compilation.</para></td></tr><tr><td><link linkend="org.gradle.language.c.tasks.CCompile:macros"><literal>macros</literal></link></td><td><para>Macros that should be defined for the compiler.</para></td></tr><tr><td><link linkend="org.gradle.language.c.tasks.CCompile:objectFileDir"><literal>objectFileDir</literal></link></td><td><para>The directory where object files will be generated.</para></td></tr><tr><td><link linkend="org.gradle.language.c.tasks.CCompile:optimized"><literal>optimized</literal></link></td><td><para>Should the compiler generate optimized code?</para></td></tr><tr><td><link linkend="org.gradle.language.c.tasks.CCompile:positionIndependentCode"><literal>positionIndependentCode</literal></link></td><td><para>Should the compiler generate position independent code?</para></td></tr><tr><td><link linkend="org.gradle.language.c.tasks.CCompile:source"><literal>source</literal></link></td><td><para>The source files to be compiled.</para></td></tr><tr><td><link linkend="org.gradle.language.c.tasks.CCompile:systemIncludes"><literal>systemIncludes</literal></link></td><td><para>The system include directories to be used for compilation.</para></td></tr><tr><td><link linkend="org.gradle.language.c.tasks.CCompile:targetPlatform"><literal>targetPlatform</literal></link></td><td><para>The platform being compiled for.</para></td></tr><tr><td><link linkend="org.gradle.language.c.tasks.CCompile:toolChain"><literal>toolChain</literal></link></td><td><para>The tool chain used for compilation.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - CCompile</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.language.c.tasks.CCompile:includes(java.lang.Object)">includes</link>(includeRoots)</literal></td><td><para>Add directories where the compiler should search for header files.</para></td></tr><tr><td><literal><link linkend="org.gradle.language.c.tasks.CCompile:source(java.lang.Object)">source</link>(sourceFiles)</literal></td><td><para>Adds a set of source files to be compiled. The provided sourceFiles object is evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/>.</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.language.c.tasks.CCompile:compilerArgs" role="detail"><title><classname><apilink class="org.gradle.api.provider.ListProperty"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>compilerArgs</literal></title><para><emphasis>Additional</emphasis> arguments to provide to the compiler.</para></section><section id="org.gradle.language.c.tasks.CCompile:debuggable" role="detail"><title><classname>boolean</classname> <literal>debuggable</literal></title><para>Should the compiler generate debuggable code?</para></section><section id="org.gradle.language.c.tasks.CCompile:includes" role="detail"><title><apilink class="org.gradle.api.file.ConfigurableFileCollection"/> <literal>includes</literal> (read-only)</title><para>The header directories to be used for compilation.</para></section><section id="org.gradle.language.c.tasks.CCompile:macros" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>macros</literal></title><para>Macros that should be defined for the compiler.</para></section><section id="org.gradle.language.c.tasks.CCompile:objectFileDir" role="detail"><title><apilink class="org.gradle.api.file.DirectoryProperty"/> <literal>objectFileDir</literal></title><para>The directory where object files will be generated.</para></section><section id="org.gradle.language.c.tasks.CCompile:optimized" role="detail"><title><classname>boolean</classname> <literal>optimized</literal></title><para>Should the compiler generate optimized code?</para></section><section id="org.gradle.language.c.tasks.CCompile:positionIndependentCode" role="detail"><title><classname>boolean</classname> <literal>positionIndependentCode</literal></title><para>Should the compiler generate position independent code?</para></section><section id="org.gradle.language.c.tasks.CCompile:source" role="detail"><title><apilink class="org.gradle.api.file.ConfigurableFileCollection"/> <literal>source</literal> (read-only)</title><para>The source files to be compiled.</para></section><section id="org.gradle.language.c.tasks.CCompile:systemIncludes" role="detail"><title><apilink class="org.gradle.api.file.ConfigurableFileCollection"/> <literal>systemIncludes</literal> (read-only)</title><para>The system include directories to be used for compilation.</para></section><section id="org.gradle.language.c.tasks.CCompile:targetPlatform" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<apilink class="org.gradle.nativeplatform.platform.NativePlatform"/>&gt;</classname> <literal>targetPlatform</literal></title><para>The platform being compiled for.</para></section><section id="org.gradle.language.c.tasks.CCompile:toolChain" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<apilink class="org.gradle.nativeplatform.toolchain.NativeToolChain"/>&gt;</classname> <literal>toolChain</literal></title><para>The tool chain used for compilation.</para></section></section><section><title>Method details</title><section id="org.gradle.language.c.tasks.CCompile:includes(java.lang.Object)" role="detail"><title><classname>void</classname> <literal>includes</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> includeRoots)</title><para>Add directories where the compiler should search for header files.</para></section><section id="org.gradle.language.c.tasks.CCompile:source(java.lang.Object)" role="detail"><title><classname>void</classname> <literal>source</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> sourceFiles)</title><para>Adds a set of source files to be compiled. The provided sourceFiles object is evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/>.</para></section></section></chapter><chapter id="org.gradle.language.assembler.tasks.Assemble"><title>Assemble</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.language.assembler.tasks.Assemble" style="javadoc"/></seg></seglistitem></segmentedlist><caution><para>Note: This class is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Translates Assembly language source files into object files.</para><section><title>Properties</title><table><title>Properties - Assemble</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.language.assembler.tasks.Assemble:assemblerArgs"><literal>assemblerArgs</literal></link></td><td><caution>Incubating</caution><para>Additional arguments to provide to the assembler.</para></td></tr><tr><td><link linkend="org.gradle.language.assembler.tasks.Assemble:objectFileDir"><literal>objectFileDir</literal></link></td><td><caution>Incubating</caution><para>The directory where object files will be generated.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - Assemble</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.language.assembler.tasks.Assemble:source(java.lang.Object)">source</link>(sourceFiles)</literal></td><td><caution>Incubating</caution><para>Adds a set of assembler sources files to be translated. The provided sourceFiles object is evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/>.</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.language.assembler.tasks.Assemble:assemblerArgs" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/List.html"><classname>List</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>assemblerArgs</literal></title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Additional arguments to provide to the assembler.</para></section><section id="org.gradle.language.assembler.tasks.Assemble:objectFileDir" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>objectFileDir</literal></title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The directory where object files will be generated.</para></section></section><section><title>Method details</title><section id="org.gradle.language.assembler.tasks.Assemble:source(java.lang.Object)" role="detail"><title><classname>void</classname> <literal>source</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> sourceFiles)</title><caution><para>Note: This method is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Adds a set of assembler sources files to be translated. The provided sourceFiles object is evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/>.</para></section></section></chapter><chapter id="org.gradle.language.objectivec.tasks.ObjectiveCCompile"><title>ObjectiveCCompile</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.language.objectivec.tasks.ObjectiveCCompile" style="javadoc"/></seg></seglistitem></segmentedlist><caution><para>Note: This class is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Compiles Objective-C source files into object files.</para><section><title>Properties</title><table><title>Properties - ObjectiveCCompile</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.language.objectivec.tasks.ObjectiveCCompile:compilerArgs"><literal>compilerArgs</literal></link></td><td><para><emphasis>Additional</emphasis> arguments to provide to the compiler.</para></td></tr><tr><td><link linkend="org.gradle.language.objectivec.tasks.ObjectiveCCompile:debuggable"><literal>debuggable</literal></link></td><td><para>Should the compiler generate debuggable code?</para></td></tr><tr><td><link linkend="org.gradle.language.objectivec.tasks.ObjectiveCCompile:includes"><literal>includes</literal></link></td><td><para>The header directories to be used for compilation.</para></td></tr><tr><td><link linkend="org.gradle.language.objectivec.tasks.ObjectiveCCompile:macros"><literal>macros</literal></link></td><td><para>Macros that should be defined for the compiler.</para></td></tr><tr><td><link linkend="org.gradle.language.objectivec.tasks.ObjectiveCCompile:objectFileDir"><literal>objectFileDir</literal></link></td><td><para>The directory where object files will be generated.</para></td></tr><tr><td><link linkend="org.gradle.language.objectivec.tasks.ObjectiveCCompile:optimized"><literal>optimized</literal></link></td><td><para>Should the compiler generate optimized code?</para></td></tr><tr><td><link linkend="org.gradle.language.objectivec.tasks.ObjectiveCCompile:positionIndependentCode"><literal>positionIndependentCode</literal></link></td><td><para>Should the compiler generate position independent code?</para></td></tr><tr><td><link linkend="org.gradle.language.objectivec.tasks.ObjectiveCCompile:source"><literal>source</literal></link></td><td><para>The source files to be compiled.</para></td></tr><tr><td><link linkend="org.gradle.language.objectivec.tasks.ObjectiveCCompile:systemIncludes"><literal>systemIncludes</literal></link></td><td><para>The system include directories to be used for compilation.</para></td></tr><tr><td><link linkend="org.gradle.language.objectivec.tasks.ObjectiveCCompile:targetPlatform"><literal>targetPlatform</literal></link></td><td><para>The platform being compiled for.</para></td></tr><tr><td><link linkend="org.gradle.language.objectivec.tasks.ObjectiveCCompile:toolChain"><literal>toolChain</literal></link></td><td><para>The tool chain used for compilation.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - ObjectiveCCompile</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.language.objectivec.tasks.ObjectiveCCompile:includes(java.lang.Object)">includes</link>(includeRoots)</literal></td><td><para>Add directories where the compiler should search for header files.</para></td></tr><tr><td><literal><link linkend="org.gradle.language.objectivec.tasks.ObjectiveCCompile:source(java.lang.Object)">source</link>(sourceFiles)</literal></td><td><para>Adds a set of source files to be compiled. The provided sourceFiles object is evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/>.</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.language.objectivec.tasks.ObjectiveCCompile:compilerArgs" role="detail"><title><classname><apilink class="org.gradle.api.provider.ListProperty"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>compilerArgs</literal></title><para><emphasis>Additional</emphasis> arguments to provide to the compiler.</para></section><section id="org.gradle.language.objectivec.tasks.ObjectiveCCompile:debuggable" role="detail"><title><classname>boolean</classname> <literal>debuggable</literal></title><para>Should the compiler generate debuggable code?</para></section><section id="org.gradle.language.objectivec.tasks.ObjectiveCCompile:includes" role="detail"><title><apilink class="org.gradle.api.file.ConfigurableFileCollection"/> <literal>includes</literal> (read-only)</title><para>The header directories to be used for compilation.</para></section><section id="org.gradle.language.objectivec.tasks.ObjectiveCCompile:macros" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>macros</literal></title><para>Macros that should be defined for the compiler.</para></section><section id="org.gradle.language.objectivec.tasks.ObjectiveCCompile:objectFileDir" role="detail"><title><apilink class="org.gradle.api.file.DirectoryProperty"/> <literal>objectFileDir</literal></title><para>The directory where object files will be generated.</para></section><section id="org.gradle.language.objectivec.tasks.ObjectiveCCompile:optimized" role="detail"><title><classname>boolean</classname> <literal>optimized</literal></title><para>Should the compiler generate optimized code?</para></section><section id="org.gradle.language.objectivec.tasks.ObjectiveCCompile:positionIndependentCode" role="detail"><title><classname>boolean</classname> <literal>positionIndependentCode</literal></title><para>Should the compiler generate position independent code?</para></section><section id="org.gradle.language.objectivec.tasks.ObjectiveCCompile:source" role="detail"><title><apilink class="org.gradle.api.file.ConfigurableFileCollection"/> <literal>source</literal> (read-only)</title><para>The source files to be compiled.</para></section><section id="org.gradle.language.objectivec.tasks.ObjectiveCCompile:systemIncludes" role="detail"><title><apilink class="org.gradle.api.file.ConfigurableFileCollection"/> <literal>systemIncludes</literal> (read-only)</title><para>The system include directories to be used for compilation.</para></section><section id="org.gradle.language.objectivec.tasks.ObjectiveCCompile:targetPlatform" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<apilink class="org.gradle.nativeplatform.platform.NativePlatform"/>&gt;</classname> <literal>targetPlatform</literal></title><para>The platform being compiled for.</para></section><section id="org.gradle.language.objectivec.tasks.ObjectiveCCompile:toolChain" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<apilink class="org.gradle.nativeplatform.toolchain.NativeToolChain"/>&gt;</classname> <literal>toolChain</literal></title><para>The tool chain used for compilation.</para></section></section><section><title>Method details</title><section id="org.gradle.language.objectivec.tasks.ObjectiveCCompile:includes(java.lang.Object)" role="detail"><title><classname>void</classname> <literal>includes</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> includeRoots)</title><para>Add directories where the compiler should search for header files.</para></section><section id="org.gradle.language.objectivec.tasks.ObjectiveCCompile:source(java.lang.Object)" role="detail"><title><classname>void</classname> <literal>source</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> sourceFiles)</title><para>Adds a set of source files to be compiled. The provided sourceFiles object is evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/>.</para></section></section></chapter><chapter id="org.gradle.language.objectivecpp.tasks.ObjectiveCppCompile"><title>ObjectiveCppCompile</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.language.objectivecpp.tasks.ObjectiveCppCompile" style="javadoc"/></seg></seglistitem></segmentedlist><caution><para>Note: This class is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Compiles Objective-C++ source files into object files.</para><section><title>Properties</title><table><title>Properties - ObjectiveCppCompile</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.language.objectivecpp.tasks.ObjectiveCppCompile:compilerArgs"><literal>compilerArgs</literal></link></td><td><para><emphasis>Additional</emphasis> arguments to provide to the compiler.</para></td></tr><tr><td><link linkend="org.gradle.language.objectivecpp.tasks.ObjectiveCppCompile:debuggable"><literal>debuggable</literal></link></td><td><para>Should the compiler generate debuggable code?</para></td></tr><tr><td><link linkend="org.gradle.language.objectivecpp.tasks.ObjectiveCppCompile:includes"><literal>includes</literal></link></td><td><para>The header directories to be used for compilation.</para></td></tr><tr><td><link linkend="org.gradle.language.objectivecpp.tasks.ObjectiveCppCompile:macros"><literal>macros</literal></link></td><td><para>Macros that should be defined for the compiler.</para></td></tr><tr><td><link linkend="org.gradle.language.objectivecpp.tasks.ObjectiveCppCompile:objectFileDir"><literal>objectFileDir</literal></link></td><td><para>The directory where object files will be generated.</para></td></tr><tr><td><link linkend="org.gradle.language.objectivecpp.tasks.ObjectiveCppCompile:optimized"><literal>optimized</literal></link></td><td><para>Should the compiler generate optimized code?</para></td></tr><tr><td><link linkend="org.gradle.language.objectivecpp.tasks.ObjectiveCppCompile:positionIndependentCode"><literal>positionIndependentCode</literal></link></td><td><para>Should the compiler generate position independent code?</para></td></tr><tr><td><link linkend="org.gradle.language.objectivecpp.tasks.ObjectiveCppCompile:source"><literal>source</literal></link></td><td><para>The source files to be compiled.</para></td></tr><tr><td><link linkend="org.gradle.language.objectivecpp.tasks.ObjectiveCppCompile:systemIncludes"><literal>systemIncludes</literal></link></td><td><para>The system include directories to be used for compilation.</para></td></tr><tr><td><link linkend="org.gradle.language.objectivecpp.tasks.ObjectiveCppCompile:targetPlatform"><literal>targetPlatform</literal></link></td><td><para>The platform being compiled for.</para></td></tr><tr><td><link linkend="org.gradle.language.objectivecpp.tasks.ObjectiveCppCompile:toolChain"><literal>toolChain</literal></link></td><td><para>The tool chain used for compilation.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - ObjectiveCppCompile</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.language.objectivecpp.tasks.ObjectiveCppCompile:includes(java.lang.Object)">includes</link>(includeRoots)</literal></td><td><para>Add directories where the compiler should search for header files.</para></td></tr><tr><td><literal><link linkend="org.gradle.language.objectivecpp.tasks.ObjectiveCppCompile:source(java.lang.Object)">source</link>(sourceFiles)</literal></td><td><para>Adds a set of source files to be compiled. The provided sourceFiles object is evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/>.</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.language.objectivecpp.tasks.ObjectiveCppCompile:compilerArgs" role="detail"><title><classname><apilink class="org.gradle.api.provider.ListProperty"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>compilerArgs</literal></title><para><emphasis>Additional</emphasis> arguments to provide to the compiler.</para></section><section id="org.gradle.language.objectivecpp.tasks.ObjectiveCppCompile:debuggable" role="detail"><title><classname>boolean</classname> <literal>debuggable</literal></title><para>Should the compiler generate debuggable code?</para></section><section id="org.gradle.language.objectivecpp.tasks.ObjectiveCppCompile:includes" role="detail"><title><apilink class="org.gradle.api.file.ConfigurableFileCollection"/> <literal>includes</literal> (read-only)</title><para>The header directories to be used for compilation.</para></section><section id="org.gradle.language.objectivecpp.tasks.ObjectiveCppCompile:macros" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>macros</literal></title><para>Macros that should be defined for the compiler.</para></section><section id="org.gradle.language.objectivecpp.tasks.ObjectiveCppCompile:objectFileDir" role="detail"><title><apilink class="org.gradle.api.file.DirectoryProperty"/> <literal>objectFileDir</literal></title><para>The directory where object files will be generated.</para></section><section id="org.gradle.language.objectivecpp.tasks.ObjectiveCppCompile:optimized" role="detail"><title><classname>boolean</classname> <literal>optimized</literal></title><para>Should the compiler generate optimized code?</para></section><section id="org.gradle.language.objectivecpp.tasks.ObjectiveCppCompile:positionIndependentCode" role="detail"><title><classname>boolean</classname> <literal>positionIndependentCode</literal></title><para>Should the compiler generate position independent code?</para></section><section id="org.gradle.language.objectivecpp.tasks.ObjectiveCppCompile:source" role="detail"><title><apilink class="org.gradle.api.file.ConfigurableFileCollection"/> <literal>source</literal> (read-only)</title><para>The source files to be compiled.</para></section><section id="org.gradle.language.objectivecpp.tasks.ObjectiveCppCompile:systemIncludes" role="detail"><title><apilink class="org.gradle.api.file.ConfigurableFileCollection"/> <literal>systemIncludes</literal> (read-only)</title><para>The system include directories to be used for compilation.</para></section><section id="org.gradle.language.objectivecpp.tasks.ObjectiveCppCompile:targetPlatform" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<apilink class="org.gradle.nativeplatform.platform.NativePlatform"/>&gt;</classname> <literal>targetPlatform</literal></title><para>The platform being compiled for.</para></section><section id="org.gradle.language.objectivecpp.tasks.ObjectiveCppCompile:toolChain" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<apilink class="org.gradle.nativeplatform.toolchain.NativeToolChain"/>&gt;</classname> <literal>toolChain</literal></title><para>The tool chain used for compilation.</para></section></section><section><title>Method details</title><section id="org.gradle.language.objectivecpp.tasks.ObjectiveCppCompile:includes(java.lang.Object)" role="detail"><title><classname>void</classname> <literal>includes</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> includeRoots)</title><para>Add directories where the compiler should search for header files.</para></section><section id="org.gradle.language.objectivecpp.tasks.ObjectiveCppCompile:source(java.lang.Object)" role="detail"><title><classname>void</classname> <literal>source</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> sourceFiles)</title><para>Adds a set of source files to be compiled. The provided sourceFiles object is evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/>.</para></section></section></chapter><chapter id="org.gradle.language.rc.tasks.WindowsResourceCompile"><title>WindowsResourceCompile</title><segmentedlist><segtitle>API Documentation</segtitle><seglistitem><seg><apilink class="org.gradle.language.rc.tasks.WindowsResourceCompile" style="javadoc"/></seg></seglistitem></segmentedlist><caution><para>Note: This class is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Compiles Windows Resource scripts into .res files.</para><section><title>Properties</title><table><title>Properties - WindowsResourceCompile</title><thead><tr><td>Property</td><td>Description</td></tr></thead><tr><td><link linkend="org.gradle.language.rc.tasks.WindowsResourceCompile:compilerArgs"><literal>compilerArgs</literal></link></td><td><caution>Incubating</caution><para><emphasis>Additional</emphasis> arguments to provide to the compiler.</para></td></tr><tr><td><link linkend="org.gradle.language.rc.tasks.WindowsResourceCompile:includes"><literal>includes</literal></link></td><td><caution>Incubating</caution><para>The header directories to be used for compilation.</para></td></tr><tr><td><link linkend="org.gradle.language.rc.tasks.WindowsResourceCompile:macros"><literal>macros</literal></link></td><td><caution>Incubating</caution><para>Macros that should be defined for the compiler.</para></td></tr><tr><td><link linkend="org.gradle.language.rc.tasks.WindowsResourceCompile:outputDir"><literal>outputDir</literal></link></td><td><caution>Incubating</caution><para>The directory where object files will be generated.</para></td></tr><tr><td><link linkend="org.gradle.language.rc.tasks.WindowsResourceCompile:source"><literal>source</literal></link></td><td><caution>Incubating</caution><para>The source files to be compiled.</para></td></tr><tr><td><link linkend="org.gradle.language.rc.tasks.WindowsResourceCompile:targetPlatform"><literal>targetPlatform</literal></link></td><td><caution>Incubating</caution><para>The platform being compiled for.</para></td></tr><tr><td><link linkend="org.gradle.language.rc.tasks.WindowsResourceCompile:toolChain"><literal>toolChain</literal></link></td><td><caution>Incubating</caution><para>The tool chain used for compilation.</para></td></tr></table></section><section><title>Methods</title><table><title>Methods - WindowsResourceCompile</title><thead><tr><td>Method</td><td>Description</td></tr></thead><tr><td><literal><link linkend="org.gradle.language.rc.tasks.WindowsResourceCompile:includes(java.lang.Object)">includes</link>(includeRoots)</literal></td><td><caution>Incubating</caution><para>Add directories where the compiler should search for header files.</para></td></tr><tr><td><literal><link linkend="org.gradle.language.rc.tasks.WindowsResourceCompile:source(java.lang.Object)">source</link>(sourceFiles)</literal></td><td><caution>Incubating</caution><para>Adds a set of source files to be compiled. The provided sourceFiles object is evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/>.</para></td></tr></table></section><section><title>Script blocks</title><para>No script blocks</para></section><section><title>Property details</title><section id="org.gradle.language.rc.tasks.WindowsResourceCompile:compilerArgs" role="detail"><title><classname><apilink class="org.gradle.api.provider.ListProperty"/>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>compilerArgs</literal></title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para><emphasis>Additional</emphasis> arguments to provide to the compiler.</para></section><section id="org.gradle.language.rc.tasks.WindowsResourceCompile:includes" role="detail"><title><apilink class="org.gradle.api.file.ConfigurableFileCollection"/> <literal>includes</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The header directories to be used for compilation.</para></section><section id="org.gradle.language.rc.tasks.WindowsResourceCompile:macros" role="detail"><title><classname><ulink url="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html"><classname>Map</classname></ulink>&lt;<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>, <ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html"><classname>String</classname></ulink>&gt;</classname> <literal>macros</literal></title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Macros that should be defined for the compiler.</para></section><section id="org.gradle.language.rc.tasks.WindowsResourceCompile:outputDir" role="detail"><title><ulink url="https://docs.oracle.com/javase/8/docs/api/java/io/File.html"><classname>File</classname></ulink> <literal>outputDir</literal></title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The directory where object files will be generated.</para></section><section id="org.gradle.language.rc.tasks.WindowsResourceCompile:source" role="detail"><title><apilink class="org.gradle.api.file.ConfigurableFileCollection"/> <literal>source</literal> (read-only)</title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The source files to be compiled.</para></section><section id="org.gradle.language.rc.tasks.WindowsResourceCompile:targetPlatform" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<apilink class="org.gradle.nativeplatform.platform.NativePlatform"/>&gt;</classname> <literal>targetPlatform</literal></title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The platform being compiled for.</para></section><section id="org.gradle.language.rc.tasks.WindowsResourceCompile:toolChain" role="detail"><title><classname><apilink class="org.gradle.api.provider.Property"/>&lt;<apilink class="org.gradle.nativeplatform.toolchain.NativeToolChain"/>&gt;</classname> <literal>toolChain</literal></title><caution><para>Note: This property is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>The tool chain used for compilation.</para></section></section><section><title>Method details</title><section id="org.gradle.language.rc.tasks.WindowsResourceCompile:includes(java.lang.Object)" role="detail"><title><classname>void</classname> <literal>includes</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> includeRoots)</title><caution><para>Note: This method is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Add directories where the compiler should search for header files.</para></section><section id="org.gradle.language.rc.tasks.WindowsResourceCompile:source(java.lang.Object)" role="detail"><title><classname>void</classname> <literal>source</literal>(<ulink url="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><classname>Object</classname></ulink> sourceFiles)</title><caution><para>Note: This method is <ulink url="../userguide/feature_lifecycle.html">incubating</ulink> and may change in a future version of Gradle.</para></caution><para>Adds a set of source files to be compiled. The provided sourceFiles object is evaluated as per <apilink class="org.gradle.api.Project" method="files(java.lang.Object[])"/>.</para></section></section></chapter></book>